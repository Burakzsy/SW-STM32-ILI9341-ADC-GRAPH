
ILI9341_STEMWIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010e80  08000188  08000188  00010188  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003924  08011008  08011008  00021008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801492c  0801492c  00030200  2**0
                  CONTENTS
  4 .ARM          00000008  0801492c  0801492c  0002492c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08014934  08014934  00030200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08014934  08014934  00024934  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08014938  08014938  00024938  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  0801493c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00030200  2**0
                  CONTENTS
 10 .bss          00002c38  20000200  20000200  00030200  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20002e38  20002e38  00030200  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  00030200  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000a121  00000000  00000000  0003022e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001d86  00000000  00000000  0003a34f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000830  00000000  00000000  0003c0d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000738  00000000  00000000  0003c908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024696  00000000  00000000  0003d040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a2e3  00000000  00000000  000616d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000da5e4  00000000  00000000  0006b9b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000d2  00000000  00000000  00145f9d  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002238  00000000  00000000  00146070  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000200 	.word	0x20000200
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08010ff0 	.word	0x08010ff0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000204 	.word	0x20000204
 80001c4:	08010ff0 	.word	0x08010ff0

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__gedf2>:
 8000550:	f04f 3cff 	mov.w	ip, #4294967295
 8000554:	e006      	b.n	8000564 <__cmpdf2+0x4>
 8000556:	bf00      	nop

08000558 <__ledf2>:
 8000558:	f04f 0c01 	mov.w	ip, #1
 800055c:	e002      	b.n	8000564 <__cmpdf2+0x4>
 800055e:	bf00      	nop

08000560 <__cmpdf2>:
 8000560:	f04f 0c01 	mov.w	ip, #1
 8000564:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000568:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800056c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000570:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000574:	bf18      	it	ne
 8000576:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800057a:	d01b      	beq.n	80005b4 <__cmpdf2+0x54>
 800057c:	b001      	add	sp, #4
 800057e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000582:	bf0c      	ite	eq
 8000584:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000588:	ea91 0f03 	teqne	r1, r3
 800058c:	bf02      	ittt	eq
 800058e:	ea90 0f02 	teqeq	r0, r2
 8000592:	2000      	moveq	r0, #0
 8000594:	4770      	bxeq	lr
 8000596:	f110 0f00 	cmn.w	r0, #0
 800059a:	ea91 0f03 	teq	r1, r3
 800059e:	bf58      	it	pl
 80005a0:	4299      	cmppl	r1, r3
 80005a2:	bf08      	it	eq
 80005a4:	4290      	cmpeq	r0, r2
 80005a6:	bf2c      	ite	cs
 80005a8:	17d8      	asrcs	r0, r3, #31
 80005aa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80005ae:	f040 0001 	orr.w	r0, r0, #1
 80005b2:	4770      	bx	lr
 80005b4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80005b8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80005bc:	d102      	bne.n	80005c4 <__cmpdf2+0x64>
 80005be:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80005c2:	d107      	bne.n	80005d4 <__cmpdf2+0x74>
 80005c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80005c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80005cc:	d1d6      	bne.n	800057c <__cmpdf2+0x1c>
 80005ce:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80005d2:	d0d3      	beq.n	800057c <__cmpdf2+0x1c>
 80005d4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80005d8:	4770      	bx	lr
 80005da:	bf00      	nop

080005dc <__aeabi_cdrcmple>:
 80005dc:	4684      	mov	ip, r0
 80005de:	4610      	mov	r0, r2
 80005e0:	4662      	mov	r2, ip
 80005e2:	468c      	mov	ip, r1
 80005e4:	4619      	mov	r1, r3
 80005e6:	4663      	mov	r3, ip
 80005e8:	e000      	b.n	80005ec <__aeabi_cdcmpeq>
 80005ea:	bf00      	nop

080005ec <__aeabi_cdcmpeq>:
 80005ec:	b501      	push	{r0, lr}
 80005ee:	f7ff ffb7 	bl	8000560 <__cmpdf2>
 80005f2:	2800      	cmp	r0, #0
 80005f4:	bf48      	it	mi
 80005f6:	f110 0f00 	cmnmi.w	r0, #0
 80005fa:	bd01      	pop	{r0, pc}

080005fc <__aeabi_dcmpeq>:
 80005fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000600:	f7ff fff4 	bl	80005ec <__aeabi_cdcmpeq>
 8000604:	bf0c      	ite	eq
 8000606:	2001      	moveq	r0, #1
 8000608:	2000      	movne	r0, #0
 800060a:	f85d fb08 	ldr.w	pc, [sp], #8
 800060e:	bf00      	nop

08000610 <__aeabi_dcmplt>:
 8000610:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000614:	f7ff ffea 	bl	80005ec <__aeabi_cdcmpeq>
 8000618:	bf34      	ite	cc
 800061a:	2001      	movcc	r0, #1
 800061c:	2000      	movcs	r0, #0
 800061e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000622:	bf00      	nop

08000624 <__aeabi_dcmple>:
 8000624:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000628:	f7ff ffe0 	bl	80005ec <__aeabi_cdcmpeq>
 800062c:	bf94      	ite	ls
 800062e:	2001      	movls	r0, #1
 8000630:	2000      	movhi	r0, #0
 8000632:	f85d fb08 	ldr.w	pc, [sp], #8
 8000636:	bf00      	nop

08000638 <__aeabi_dcmpge>:
 8000638:	f84d ed08 	str.w	lr, [sp, #-8]!
 800063c:	f7ff ffce 	bl	80005dc <__aeabi_cdrcmple>
 8000640:	bf94      	ite	ls
 8000642:	2001      	movls	r0, #1
 8000644:	2000      	movhi	r0, #0
 8000646:	f85d fb08 	ldr.w	pc, [sp], #8
 800064a:	bf00      	nop

0800064c <__aeabi_dcmpgt>:
 800064c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000650:	f7ff ffc4 	bl	80005dc <__aeabi_cdrcmple>
 8000654:	bf34      	ite	cc
 8000656:	2001      	movcc	r0, #1
 8000658:	2000      	movcs	r0, #0
 800065a:	f85d fb08 	ldr.w	pc, [sp], #8
 800065e:	bf00      	nop

08000660 <__aeabi_d2f>:
 8000660:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000664:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000668:	bf24      	itt	cs
 800066a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800066e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000672:	d90d      	bls.n	8000690 <__aeabi_d2f+0x30>
 8000674:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000678:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 800067c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000680:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000684:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000688:	bf08      	it	eq
 800068a:	f020 0001 	biceq.w	r0, r0, #1
 800068e:	4770      	bx	lr
 8000690:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000694:	d121      	bne.n	80006da <__aeabi_d2f+0x7a>
 8000696:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800069a:	bfbc      	itt	lt
 800069c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80006a0:	4770      	bxlt	lr
 80006a2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006a6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80006aa:	f1c2 0218 	rsb	r2, r2, #24
 80006ae:	f1c2 0c20 	rsb	ip, r2, #32
 80006b2:	fa10 f30c 	lsls.w	r3, r0, ip
 80006b6:	fa20 f002 	lsr.w	r0, r0, r2
 80006ba:	bf18      	it	ne
 80006bc:	f040 0001 	orrne.w	r0, r0, #1
 80006c0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80006c4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80006c8:	fa03 fc0c 	lsl.w	ip, r3, ip
 80006cc:	ea40 000c 	orr.w	r0, r0, ip
 80006d0:	fa23 f302 	lsr.w	r3, r3, r2
 80006d4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80006d8:	e7cc      	b.n	8000674 <__aeabi_d2f+0x14>
 80006da:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80006de:	d107      	bne.n	80006f0 <__aeabi_d2f+0x90>
 80006e0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80006e4:	bf1e      	ittt	ne
 80006e6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80006ea:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80006ee:	4770      	bxne	lr
 80006f0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80006f4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80006f8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80006fc:	4770      	bx	lr
 80006fe:	bf00      	nop

08000700 <__aeabi_uldivmod>:
 8000700:	b953      	cbnz	r3, 8000718 <__aeabi_uldivmod+0x18>
 8000702:	b94a      	cbnz	r2, 8000718 <__aeabi_uldivmod+0x18>
 8000704:	2900      	cmp	r1, #0
 8000706:	bf08      	it	eq
 8000708:	2800      	cmpeq	r0, #0
 800070a:	bf1c      	itt	ne
 800070c:	f04f 31ff 	movne.w	r1, #4294967295
 8000710:	f04f 30ff 	movne.w	r0, #4294967295
 8000714:	f000 b974 	b.w	8000a00 <__aeabi_idiv0>
 8000718:	f1ad 0c08 	sub.w	ip, sp, #8
 800071c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000720:	f000 f806 	bl	8000730 <__udivmoddi4>
 8000724:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000728:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800072c:	b004      	add	sp, #16
 800072e:	4770      	bx	lr

08000730 <__udivmoddi4>:
 8000730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000734:	9d08      	ldr	r5, [sp, #32]
 8000736:	4604      	mov	r4, r0
 8000738:	468e      	mov	lr, r1
 800073a:	2b00      	cmp	r3, #0
 800073c:	d14d      	bne.n	80007da <__udivmoddi4+0xaa>
 800073e:	428a      	cmp	r2, r1
 8000740:	4694      	mov	ip, r2
 8000742:	d969      	bls.n	8000818 <__udivmoddi4+0xe8>
 8000744:	fab2 f282 	clz	r2, r2
 8000748:	b152      	cbz	r2, 8000760 <__udivmoddi4+0x30>
 800074a:	fa01 f302 	lsl.w	r3, r1, r2
 800074e:	f1c2 0120 	rsb	r1, r2, #32
 8000752:	fa20 f101 	lsr.w	r1, r0, r1
 8000756:	fa0c fc02 	lsl.w	ip, ip, r2
 800075a:	ea41 0e03 	orr.w	lr, r1, r3
 800075e:	4094      	lsls	r4, r2
 8000760:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000764:	0c21      	lsrs	r1, r4, #16
 8000766:	fbbe f6f8 	udiv	r6, lr, r8
 800076a:	fa1f f78c 	uxth.w	r7, ip
 800076e:	fb08 e316 	mls	r3, r8, r6, lr
 8000772:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000776:	fb06 f107 	mul.w	r1, r6, r7
 800077a:	4299      	cmp	r1, r3
 800077c:	d90a      	bls.n	8000794 <__udivmoddi4+0x64>
 800077e:	eb1c 0303 	adds.w	r3, ip, r3
 8000782:	f106 30ff 	add.w	r0, r6, #4294967295
 8000786:	f080 811f 	bcs.w	80009c8 <__udivmoddi4+0x298>
 800078a:	4299      	cmp	r1, r3
 800078c:	f240 811c 	bls.w	80009c8 <__udivmoddi4+0x298>
 8000790:	3e02      	subs	r6, #2
 8000792:	4463      	add	r3, ip
 8000794:	1a5b      	subs	r3, r3, r1
 8000796:	b2a4      	uxth	r4, r4
 8000798:	fbb3 f0f8 	udiv	r0, r3, r8
 800079c:	fb08 3310 	mls	r3, r8, r0, r3
 80007a0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80007a4:	fb00 f707 	mul.w	r7, r0, r7
 80007a8:	42a7      	cmp	r7, r4
 80007aa:	d90a      	bls.n	80007c2 <__udivmoddi4+0x92>
 80007ac:	eb1c 0404 	adds.w	r4, ip, r4
 80007b0:	f100 33ff 	add.w	r3, r0, #4294967295
 80007b4:	f080 810a 	bcs.w	80009cc <__udivmoddi4+0x29c>
 80007b8:	42a7      	cmp	r7, r4
 80007ba:	f240 8107 	bls.w	80009cc <__udivmoddi4+0x29c>
 80007be:	4464      	add	r4, ip
 80007c0:	3802      	subs	r0, #2
 80007c2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80007c6:	1be4      	subs	r4, r4, r7
 80007c8:	2600      	movs	r6, #0
 80007ca:	b11d      	cbz	r5, 80007d4 <__udivmoddi4+0xa4>
 80007cc:	40d4      	lsrs	r4, r2
 80007ce:	2300      	movs	r3, #0
 80007d0:	e9c5 4300 	strd	r4, r3, [r5]
 80007d4:	4631      	mov	r1, r6
 80007d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007da:	428b      	cmp	r3, r1
 80007dc:	d909      	bls.n	80007f2 <__udivmoddi4+0xc2>
 80007de:	2d00      	cmp	r5, #0
 80007e0:	f000 80ef 	beq.w	80009c2 <__udivmoddi4+0x292>
 80007e4:	2600      	movs	r6, #0
 80007e6:	e9c5 0100 	strd	r0, r1, [r5]
 80007ea:	4630      	mov	r0, r6
 80007ec:	4631      	mov	r1, r6
 80007ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007f2:	fab3 f683 	clz	r6, r3
 80007f6:	2e00      	cmp	r6, #0
 80007f8:	d14a      	bne.n	8000890 <__udivmoddi4+0x160>
 80007fa:	428b      	cmp	r3, r1
 80007fc:	d302      	bcc.n	8000804 <__udivmoddi4+0xd4>
 80007fe:	4282      	cmp	r2, r0
 8000800:	f200 80f9 	bhi.w	80009f6 <__udivmoddi4+0x2c6>
 8000804:	1a84      	subs	r4, r0, r2
 8000806:	eb61 0303 	sbc.w	r3, r1, r3
 800080a:	2001      	movs	r0, #1
 800080c:	469e      	mov	lr, r3
 800080e:	2d00      	cmp	r5, #0
 8000810:	d0e0      	beq.n	80007d4 <__udivmoddi4+0xa4>
 8000812:	e9c5 4e00 	strd	r4, lr, [r5]
 8000816:	e7dd      	b.n	80007d4 <__udivmoddi4+0xa4>
 8000818:	b902      	cbnz	r2, 800081c <__udivmoddi4+0xec>
 800081a:	deff      	udf	#255	; 0xff
 800081c:	fab2 f282 	clz	r2, r2
 8000820:	2a00      	cmp	r2, #0
 8000822:	f040 8092 	bne.w	800094a <__udivmoddi4+0x21a>
 8000826:	eba1 010c 	sub.w	r1, r1, ip
 800082a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800082e:	fa1f fe8c 	uxth.w	lr, ip
 8000832:	2601      	movs	r6, #1
 8000834:	0c20      	lsrs	r0, r4, #16
 8000836:	fbb1 f3f7 	udiv	r3, r1, r7
 800083a:	fb07 1113 	mls	r1, r7, r3, r1
 800083e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000842:	fb0e f003 	mul.w	r0, lr, r3
 8000846:	4288      	cmp	r0, r1
 8000848:	d908      	bls.n	800085c <__udivmoddi4+0x12c>
 800084a:	eb1c 0101 	adds.w	r1, ip, r1
 800084e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000852:	d202      	bcs.n	800085a <__udivmoddi4+0x12a>
 8000854:	4288      	cmp	r0, r1
 8000856:	f200 80cb 	bhi.w	80009f0 <__udivmoddi4+0x2c0>
 800085a:	4643      	mov	r3, r8
 800085c:	1a09      	subs	r1, r1, r0
 800085e:	b2a4      	uxth	r4, r4
 8000860:	fbb1 f0f7 	udiv	r0, r1, r7
 8000864:	fb07 1110 	mls	r1, r7, r0, r1
 8000868:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800086c:	fb0e fe00 	mul.w	lr, lr, r0
 8000870:	45a6      	cmp	lr, r4
 8000872:	d908      	bls.n	8000886 <__udivmoddi4+0x156>
 8000874:	eb1c 0404 	adds.w	r4, ip, r4
 8000878:	f100 31ff 	add.w	r1, r0, #4294967295
 800087c:	d202      	bcs.n	8000884 <__udivmoddi4+0x154>
 800087e:	45a6      	cmp	lr, r4
 8000880:	f200 80bb 	bhi.w	80009fa <__udivmoddi4+0x2ca>
 8000884:	4608      	mov	r0, r1
 8000886:	eba4 040e 	sub.w	r4, r4, lr
 800088a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800088e:	e79c      	b.n	80007ca <__udivmoddi4+0x9a>
 8000890:	f1c6 0720 	rsb	r7, r6, #32
 8000894:	40b3      	lsls	r3, r6
 8000896:	fa22 fc07 	lsr.w	ip, r2, r7
 800089a:	ea4c 0c03 	orr.w	ip, ip, r3
 800089e:	fa20 f407 	lsr.w	r4, r0, r7
 80008a2:	fa01 f306 	lsl.w	r3, r1, r6
 80008a6:	431c      	orrs	r4, r3
 80008a8:	40f9      	lsrs	r1, r7
 80008aa:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80008ae:	fa00 f306 	lsl.w	r3, r0, r6
 80008b2:	fbb1 f8f9 	udiv	r8, r1, r9
 80008b6:	0c20      	lsrs	r0, r4, #16
 80008b8:	fa1f fe8c 	uxth.w	lr, ip
 80008bc:	fb09 1118 	mls	r1, r9, r8, r1
 80008c0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80008c4:	fb08 f00e 	mul.w	r0, r8, lr
 80008c8:	4288      	cmp	r0, r1
 80008ca:	fa02 f206 	lsl.w	r2, r2, r6
 80008ce:	d90b      	bls.n	80008e8 <__udivmoddi4+0x1b8>
 80008d0:	eb1c 0101 	adds.w	r1, ip, r1
 80008d4:	f108 3aff 	add.w	sl, r8, #4294967295
 80008d8:	f080 8088 	bcs.w	80009ec <__udivmoddi4+0x2bc>
 80008dc:	4288      	cmp	r0, r1
 80008de:	f240 8085 	bls.w	80009ec <__udivmoddi4+0x2bc>
 80008e2:	f1a8 0802 	sub.w	r8, r8, #2
 80008e6:	4461      	add	r1, ip
 80008e8:	1a09      	subs	r1, r1, r0
 80008ea:	b2a4      	uxth	r4, r4
 80008ec:	fbb1 f0f9 	udiv	r0, r1, r9
 80008f0:	fb09 1110 	mls	r1, r9, r0, r1
 80008f4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80008f8:	fb00 fe0e 	mul.w	lr, r0, lr
 80008fc:	458e      	cmp	lr, r1
 80008fe:	d908      	bls.n	8000912 <__udivmoddi4+0x1e2>
 8000900:	eb1c 0101 	adds.w	r1, ip, r1
 8000904:	f100 34ff 	add.w	r4, r0, #4294967295
 8000908:	d26c      	bcs.n	80009e4 <__udivmoddi4+0x2b4>
 800090a:	458e      	cmp	lr, r1
 800090c:	d96a      	bls.n	80009e4 <__udivmoddi4+0x2b4>
 800090e:	3802      	subs	r0, #2
 8000910:	4461      	add	r1, ip
 8000912:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000916:	fba0 9402 	umull	r9, r4, r0, r2
 800091a:	eba1 010e 	sub.w	r1, r1, lr
 800091e:	42a1      	cmp	r1, r4
 8000920:	46c8      	mov	r8, r9
 8000922:	46a6      	mov	lr, r4
 8000924:	d356      	bcc.n	80009d4 <__udivmoddi4+0x2a4>
 8000926:	d053      	beq.n	80009d0 <__udivmoddi4+0x2a0>
 8000928:	b15d      	cbz	r5, 8000942 <__udivmoddi4+0x212>
 800092a:	ebb3 0208 	subs.w	r2, r3, r8
 800092e:	eb61 010e 	sbc.w	r1, r1, lr
 8000932:	fa01 f707 	lsl.w	r7, r1, r7
 8000936:	fa22 f306 	lsr.w	r3, r2, r6
 800093a:	40f1      	lsrs	r1, r6
 800093c:	431f      	orrs	r7, r3
 800093e:	e9c5 7100 	strd	r7, r1, [r5]
 8000942:	2600      	movs	r6, #0
 8000944:	4631      	mov	r1, r6
 8000946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800094a:	f1c2 0320 	rsb	r3, r2, #32
 800094e:	40d8      	lsrs	r0, r3
 8000950:	fa0c fc02 	lsl.w	ip, ip, r2
 8000954:	fa21 f303 	lsr.w	r3, r1, r3
 8000958:	4091      	lsls	r1, r2
 800095a:	4301      	orrs	r1, r0
 800095c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000960:	fa1f fe8c 	uxth.w	lr, ip
 8000964:	fbb3 f0f7 	udiv	r0, r3, r7
 8000968:	fb07 3610 	mls	r6, r7, r0, r3
 800096c:	0c0b      	lsrs	r3, r1, #16
 800096e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000972:	fb00 f60e 	mul.w	r6, r0, lr
 8000976:	429e      	cmp	r6, r3
 8000978:	fa04 f402 	lsl.w	r4, r4, r2
 800097c:	d908      	bls.n	8000990 <__udivmoddi4+0x260>
 800097e:	eb1c 0303 	adds.w	r3, ip, r3
 8000982:	f100 38ff 	add.w	r8, r0, #4294967295
 8000986:	d22f      	bcs.n	80009e8 <__udivmoddi4+0x2b8>
 8000988:	429e      	cmp	r6, r3
 800098a:	d92d      	bls.n	80009e8 <__udivmoddi4+0x2b8>
 800098c:	3802      	subs	r0, #2
 800098e:	4463      	add	r3, ip
 8000990:	1b9b      	subs	r3, r3, r6
 8000992:	b289      	uxth	r1, r1
 8000994:	fbb3 f6f7 	udiv	r6, r3, r7
 8000998:	fb07 3316 	mls	r3, r7, r6, r3
 800099c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80009a0:	fb06 f30e 	mul.w	r3, r6, lr
 80009a4:	428b      	cmp	r3, r1
 80009a6:	d908      	bls.n	80009ba <__udivmoddi4+0x28a>
 80009a8:	eb1c 0101 	adds.w	r1, ip, r1
 80009ac:	f106 38ff 	add.w	r8, r6, #4294967295
 80009b0:	d216      	bcs.n	80009e0 <__udivmoddi4+0x2b0>
 80009b2:	428b      	cmp	r3, r1
 80009b4:	d914      	bls.n	80009e0 <__udivmoddi4+0x2b0>
 80009b6:	3e02      	subs	r6, #2
 80009b8:	4461      	add	r1, ip
 80009ba:	1ac9      	subs	r1, r1, r3
 80009bc:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80009c0:	e738      	b.n	8000834 <__udivmoddi4+0x104>
 80009c2:	462e      	mov	r6, r5
 80009c4:	4628      	mov	r0, r5
 80009c6:	e705      	b.n	80007d4 <__udivmoddi4+0xa4>
 80009c8:	4606      	mov	r6, r0
 80009ca:	e6e3      	b.n	8000794 <__udivmoddi4+0x64>
 80009cc:	4618      	mov	r0, r3
 80009ce:	e6f8      	b.n	80007c2 <__udivmoddi4+0x92>
 80009d0:	454b      	cmp	r3, r9
 80009d2:	d2a9      	bcs.n	8000928 <__udivmoddi4+0x1f8>
 80009d4:	ebb9 0802 	subs.w	r8, r9, r2
 80009d8:	eb64 0e0c 	sbc.w	lr, r4, ip
 80009dc:	3801      	subs	r0, #1
 80009de:	e7a3      	b.n	8000928 <__udivmoddi4+0x1f8>
 80009e0:	4646      	mov	r6, r8
 80009e2:	e7ea      	b.n	80009ba <__udivmoddi4+0x28a>
 80009e4:	4620      	mov	r0, r4
 80009e6:	e794      	b.n	8000912 <__udivmoddi4+0x1e2>
 80009e8:	4640      	mov	r0, r8
 80009ea:	e7d1      	b.n	8000990 <__udivmoddi4+0x260>
 80009ec:	46d0      	mov	r8, sl
 80009ee:	e77b      	b.n	80008e8 <__udivmoddi4+0x1b8>
 80009f0:	3b02      	subs	r3, #2
 80009f2:	4461      	add	r1, ip
 80009f4:	e732      	b.n	800085c <__udivmoddi4+0x12c>
 80009f6:	4630      	mov	r0, r6
 80009f8:	e709      	b.n	800080e <__udivmoddi4+0xde>
 80009fa:	4464      	add	r4, ip
 80009fc:	3802      	subs	r0, #2
 80009fe:	e742      	b.n	8000886 <__udivmoddi4+0x156>

08000a00 <__aeabi_idiv0>:
 8000a00:	4770      	bx	lr
 8000a02:	bf00      	nop

08000a04 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 8000a04:	b580      	push	{r7, lr}
 8000a06:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 8000a08:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 8000a0c:	4803      	ldr	r0, [pc, #12]	; (8000a1c <GUI_X_Config+0x18>)
 8000a0e:	f00b fd81 	bl	800c514 <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 8000a12:	4803      	ldr	r0, [pc, #12]	; (8000a20 <GUI_X_Config+0x1c>)
 8000a14:	f00a fea0 	bl	800b758 <GUI_SetDefaultFont>
}
 8000a18:	bf00      	nop
 8000a1a:	bd80      	pop	{r7, pc}
 8000a1c:	2000021c 	.word	0x2000021c
 8000a20:	080111ec 	.word	0x080111ec

08000a24 <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 8000a24:	b480      	push	{r7}
 8000a26:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 8000a28:	4b03      	ldr	r3, [pc, #12]	; (8000a38 <GUI_X_GetTime+0x14>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
}
 8000a2c:	4618      	mov	r0, r3
 8000a2e:	46bd      	mov	sp, r7
 8000a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a34:	4770      	bx	lr
 8000a36:	bf00      	nop
 8000a38:	20002a1c 	.word	0x20002a1c

08000a3c <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8000a3c:	b480      	push	{r7}
 8000a3e:	af00      	add	r7, sp, #0
 8000a40:	bf00      	nop
 8000a42:	46bd      	mov	sp, r7
 8000a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a48:	4770      	bx	lr
	...

08000a4c <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U8 Data)
{
 8000a4c:	b580      	push	{r7, lr}
 8000a4e:	b082      	sub	sp, #8
 8000a50:	af00      	add	r7, sp, #0
 8000a52:	4603      	mov	r3, r0
 8000a54:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000a56:	2200      	movs	r2, #0
 8000a58:	2102      	movs	r1, #2
 8000a5a:	480b      	ldr	r0, [pc, #44]	; (8000a88 <LcdWriteReg+0x3c>)
 8000a5c:	f001 fd18 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000a60:	2200      	movs	r2, #0
 8000a62:	2104      	movs	r1, #4
 8000a64:	4808      	ldr	r0, [pc, #32]	; (8000a88 <LcdWriteReg+0x3c>)
 8000a66:	f001 fd13 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000a6a:	1df9      	adds	r1, r7, #7
 8000a6c:	2301      	movs	r3, #1
 8000a6e:	2201      	movs	r2, #1
 8000a70:	4806      	ldr	r0, [pc, #24]	; (8000a8c <LcdWriteReg+0x40>)
 8000a72:	f002 fa14 	bl	8002e9e <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000a76:	2201      	movs	r2, #1
 8000a78:	2102      	movs	r1, #2
 8000a7a:	4803      	ldr	r0, [pc, #12]	; (8000a88 <LcdWriteReg+0x3c>)
 8000a7c:	f001 fd08 	bl	8002490 <HAL_GPIO_WritePin>
}
 8000a80:	bf00      	nop
 8000a82:	3708      	adds	r7, #8
 8000a84:	46bd      	mov	sp, r7
 8000a86:	bd80      	pop	{r7, pc}
 8000a88:	40020800 	.word	0x40020800
 8000a8c:	20002a70 	.word	0x20002a70

08000a90 <LcdReadReg>:
*       LcdWriteReg
*
* Function description:
*   Sets display register
*/
static U8 LcdReadReg(void) {
 8000a90:	b480      	push	{r7}
 8000a92:	af00      	add	r7, sp, #0
  // ... TBD by user
	return 0;
 8000a94:	2300      	movs	r3, #0
}
 8000a96:	4618      	mov	r0, r3
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a9e:	4770      	bx	lr

08000aa0 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U8 Data)
{
 8000aa0:	b580      	push	{r7, lr}
 8000aa2:	b082      	sub	sp, #8
 8000aa4:	af00      	add	r7, sp, #0
 8000aa6:	4603      	mov	r3, r0
 8000aa8:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000aaa:	2200      	movs	r2, #0
 8000aac:	2102      	movs	r1, #2
 8000aae:	480b      	ldr	r0, [pc, #44]	; (8000adc <LcdWriteData+0x3c>)
 8000ab0:	f001 fcee 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 8000ab4:	2201      	movs	r2, #1
 8000ab6:	2104      	movs	r1, #4
 8000ab8:	4808      	ldr	r0, [pc, #32]	; (8000adc <LcdWriteData+0x3c>)
 8000aba:	f001 fce9 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000abe:	1df9      	adds	r1, r7, #7
 8000ac0:	2301      	movs	r3, #1
 8000ac2:	2201      	movs	r2, #1
 8000ac4:	4806      	ldr	r0, [pc, #24]	; (8000ae0 <LcdWriteData+0x40>)
 8000ac6:	f002 f9ea 	bl	8002e9e <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000aca:	2201      	movs	r2, #1
 8000acc:	2102      	movs	r1, #2
 8000ace:	4803      	ldr	r0, [pc, #12]	; (8000adc <LcdWriteData+0x3c>)
 8000ad0:	f001 fcde 	bl	8002490 <HAL_GPIO_WritePin>
}
 8000ad4:	bf00      	nop
 8000ad6:	3708      	adds	r7, #8
 8000ad8:	46bd      	mov	sp, r7
 8000ada:	bd80      	pop	{r7, pc}
 8000adc:	40020800 	.word	0x40020800
 8000ae0:	20002a70 	.word	0x20002a70

08000ae4 <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U8 * pData, int NumItems) {
 8000ae4:	b580      	push	{r7, lr}
 8000ae6:	b082      	sub	sp, #8
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	6078      	str	r0, [r7, #4]
 8000aec:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 8000aee:	e011      	b.n	8000b14 <LcdWriteDataMultiple+0x30>
	{
		HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000af0:	2200      	movs	r2, #0
 8000af2:	2102      	movs	r1, #2
 8000af4:	480c      	ldr	r0, [pc, #48]	; (8000b28 <LcdWriteDataMultiple+0x44>)
 8000af6:	f001 fccb 	bl	8002490 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 8000afa:	2201      	movs	r2, #1
 8000afc:	2104      	movs	r1, #4
 8000afe:	480a      	ldr	r0, [pc, #40]	; (8000b28 <LcdWriteDataMultiple+0x44>)
 8000b00:	f001 fcc6 	bl	8002490 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1, pData++, 1, 1);
 8000b04:	6879      	ldr	r1, [r7, #4]
 8000b06:	1c4b      	adds	r3, r1, #1
 8000b08:	607b      	str	r3, [r7, #4]
 8000b0a:	2301      	movs	r3, #1
 8000b0c:	2201      	movs	r2, #1
 8000b0e:	4807      	ldr	r0, [pc, #28]	; (8000b2c <LcdWriteDataMultiple+0x48>)
 8000b10:	f002 f9c5 	bl	8002e9e <HAL_SPI_Transmit>
	while (NumItems--)
 8000b14:	683b      	ldr	r3, [r7, #0]
 8000b16:	1e5a      	subs	r2, r3, #1
 8000b18:	603a      	str	r2, [r7, #0]
 8000b1a:	2b00      	cmp	r3, #0
 8000b1c:	d1e8      	bne.n	8000af0 <LcdWriteDataMultiple+0xc>
  }
}
 8000b1e:	bf00      	nop
 8000b20:	bf00      	nop
 8000b22:	3708      	adds	r7, #8
 8000b24:	46bd      	mov	sp, r7
 8000b26:	bd80      	pop	{r7, pc}
 8000b28:	40020800 	.word	0x40020800
 8000b2c:	20002a70 	.word	0x20002a70

08000b30 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U8 * pData, int NumItems) {
 8000b30:	b480      	push	{r7}
 8000b32:	b083      	sub	sp, #12
 8000b34:	af00      	add	r7, sp, #0
 8000b36:	6078      	str	r0, [r7, #4]
 8000b38:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000b3a:	bf00      	nop
 8000b3c:	683b      	ldr	r3, [r7, #0]
 8000b3e:	1e5a      	subs	r2, r3, #1
 8000b40:	603a      	str	r2, [r7, #0]
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d1fa      	bne.n	8000b3c <LcdReadDataMultiple+0xc>
    // ... TBD by user
  }
}
 8000b46:	bf00      	nop
 8000b48:	bf00      	nop
 8000b4a:	370c      	adds	r7, #12
 8000b4c:	46bd      	mov	sp, r7
 8000b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b52:	4770      	bx	lr

08000b54 <LcdInit>:

void LcdInit(void) {
 8000b54:	b580      	push	{r7, lr}
 8000b56:	b082      	sub	sp, #8
 8000b58:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000b5a:	2201      	movs	r2, #1
 8000b5c:	2102      	movs	r1, #2
 8000b5e:	489a      	ldr	r0, [pc, #616]	; (8000dc8 <LcdInit+0x274>)
 8000b60:	f001 fc96 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 8000b64:	2201      	movs	r2, #1
 8000b66:	2104      	movs	r1, #4
 8000b68:	4897      	ldr	r0, [pc, #604]	; (8000dc8 <LcdInit+0x274>)
 8000b6a:	f001 fc91 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_RESET);
 8000b6e:	2200      	movs	r2, #0
 8000b70:	2108      	movs	r1, #8
 8000b72:	4895      	ldr	r0, [pc, #596]	; (8000dc8 <LcdInit+0x274>)
 8000b74:	f001 fc8c 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_Delay(2);//Reset delay
 8000b78:	2002      	movs	r0, #2
 8000b7a:	f000 fdc7 	bl	800170c <HAL_Delay>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000b7e:	2200      	movs	r2, #0
 8000b80:	2102      	movs	r1, #2
 8000b82:	4891      	ldr	r0, [pc, #580]	; (8000dc8 <LcdInit+0x274>)
 8000b84:	f001 fc84 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000b88:	2200      	movs	r2, #0
 8000b8a:	2104      	movs	r1, #4
 8000b8c:	488e      	ldr	r0, [pc, #568]	; (8000dc8 <LcdInit+0x274>)
 8000b8e:	f001 fc7f 	bl	8002490 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_SET);
 8000b92:	2201      	movs	r2, #1
 8000b94:	2108      	movs	r1, #8
 8000b96:	488c      	ldr	r0, [pc, #560]	; (8000dc8 <LcdInit+0x274>)
 8000b98:	f001 fc7a 	bl	8002490 <HAL_GPIO_WritePin>
	for(uint8_t i=0; i<3; i++)  {
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	71fb      	strb	r3, [r7, #7]
 8000ba0:	e005      	b.n	8000bae <LcdInit+0x5a>
		LcdWriteReg(0x00);
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	f7ff ff52 	bl	8000a4c <LcdWriteReg>
	for(uint8_t i=0; i<3; i++)  {
 8000ba8:	79fb      	ldrb	r3, [r7, #7]
 8000baa:	3301      	adds	r3, #1
 8000bac:	71fb      	strb	r3, [r7, #7]
 8000bae:	79fb      	ldrb	r3, [r7, #7]
 8000bb0:	2b02      	cmp	r3, #2
 8000bb2:	d9f6      	bls.n	8000ba2 <LcdInit+0x4e>
	} // Three extra 0x00s
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	2102      	movs	r1, #2
 8000bb8:	4883      	ldr	r0, [pc, #524]	; (8000dc8 <LcdInit+0x274>)
 8000bba:	f001 fc69 	bl	8002490 <HAL_GPIO_WritePin>

//ILI9341 initialization sequence

	LcdWriteReg(0x01);//soft reset
 8000bbe:	2001      	movs	r0, #1
 8000bc0:	f7ff ff44 	bl	8000a4c <LcdWriteReg>
	HAL_Delay(1000);
 8000bc4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bc8:	f000 fda0 	bl	800170c <HAL_Delay>
	//power control A
	LcdWriteReg(0xCB);
 8000bcc:	20cb      	movs	r0, #203	; 0xcb
 8000bce:	f7ff ff3d 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x39);
 8000bd2:	2039      	movs	r0, #57	; 0x39
 8000bd4:	f7ff ff64 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x2C);
 8000bd8:	202c      	movs	r0, #44	; 0x2c
 8000bda:	f7ff ff61 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x00);
 8000bde:	2000      	movs	r0, #0
 8000be0:	f7ff ff5e 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x34);
 8000be4:	2034      	movs	r0, #52	; 0x34
 8000be6:	f7ff ff5b 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x02);
 8000bea:	2002      	movs	r0, #2
 8000bec:	f7ff ff58 	bl	8000aa0 <LcdWriteData>

	//power control B
	LcdWriteReg(0xCF);
 8000bf0:	20cf      	movs	r0, #207	; 0xcf
 8000bf2:	f7ff ff2b 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x00);
 8000bf6:	2000      	movs	r0, #0
 8000bf8:	f7ff ff52 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0xC1);
 8000bfc:	20c1      	movs	r0, #193	; 0xc1
 8000bfe:	f7ff ff4f 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x30);
 8000c02:	2030      	movs	r0, #48	; 0x30
 8000c04:	f7ff ff4c 	bl	8000aa0 <LcdWriteData>

	//driver timing control A
	LcdWriteReg(0xE8);
 8000c08:	20e8      	movs	r0, #232	; 0xe8
 8000c0a:	f7ff ff1f 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x85);
 8000c0e:	2085      	movs	r0, #133	; 0x85
 8000c10:	f7ff ff46 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x00);
 8000c14:	2000      	movs	r0, #0
 8000c16:	f7ff ff43 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x78);
 8000c1a:	2078      	movs	r0, #120	; 0x78
 8000c1c:	f7ff ff40 	bl	8000aa0 <LcdWriteData>

	//driver timing control B
	LcdWriteReg(0xEA);
 8000c20:	20ea      	movs	r0, #234	; 0xea
 8000c22:	f7ff ff13 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x00);
 8000c26:	2000      	movs	r0, #0
 8000c28:	f7ff ff3a 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x00);
 8000c2c:	2000      	movs	r0, #0
 8000c2e:	f7ff ff37 	bl	8000aa0 <LcdWriteData>

	//power on sequence control
	LcdWriteReg(0xED);
 8000c32:	20ed      	movs	r0, #237	; 0xed
 8000c34:	f7ff ff0a 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x64);
 8000c38:	2064      	movs	r0, #100	; 0x64
 8000c3a:	f7ff ff31 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x03);
 8000c3e:	2003      	movs	r0, #3
 8000c40:	f7ff ff2e 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x12);
 8000c44:	2012      	movs	r0, #18
 8000c46:	f7ff ff2b 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x81);
 8000c4a:	2081      	movs	r0, #129	; 0x81
 8000c4c:	f7ff ff28 	bl	8000aa0 <LcdWriteData>

	//pump ratio control
	LcdWriteReg(0xF7);
 8000c50:	20f7      	movs	r0, #247	; 0xf7
 8000c52:	f7ff fefb 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x20);
 8000c56:	2020      	movs	r0, #32
 8000c58:	f7ff ff22 	bl	8000aa0 <LcdWriteData>

	//power control,VRH[5:0]
	LcdWriteReg(0xC0);
 8000c5c:	20c0      	movs	r0, #192	; 0xc0
 8000c5e:	f7ff fef5 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x23);
 8000c62:	2023      	movs	r0, #35	; 0x23
 8000c64:	f7ff ff1c 	bl	8000aa0 <LcdWriteData>

	//Power control,SAP[2:0];BT[3:0]
	LcdWriteReg(0xC1);
 8000c68:	20c1      	movs	r0, #193	; 0xc1
 8000c6a:	f7ff feef 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x10);
 8000c6e:	2010      	movs	r0, #16
 8000c70:	f7ff ff16 	bl	8000aa0 <LcdWriteData>

	//vcm control
	LcdWriteReg(0xC5);
 8000c74:	20c5      	movs	r0, #197	; 0xc5
 8000c76:	f7ff fee9 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x3E);
 8000c7a:	203e      	movs	r0, #62	; 0x3e
 8000c7c:	f7ff ff10 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x28);
 8000c80:	2028      	movs	r0, #40	; 0x28
 8000c82:	f7ff ff0d 	bl	8000aa0 <LcdWriteData>

	//vcm control 2
	LcdWriteReg(0xC7);
 8000c86:	20c7      	movs	r0, #199	; 0xc7
 8000c88:	f7ff fee0 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x86);
 8000c8c:	2086      	movs	r0, #134	; 0x86
 8000c8e:	f7ff ff07 	bl	8000aa0 <LcdWriteData>

	//memory access control
	LcdWriteReg(0x36);
 8000c92:	2036      	movs	r0, #54	; 0x36
 8000c94:	f7ff feda 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x48);
 8000c98:	2048      	movs	r0, #72	; 0x48
 8000c9a:	f7ff ff01 	bl	8000aa0 <LcdWriteData>

	//pixel format
	LcdWriteReg(0x3A);
 8000c9e:	203a      	movs	r0, #58	; 0x3a
 8000ca0:	f7ff fed4 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x55);
 8000ca4:	2055      	movs	r0, #85	; 0x55
 8000ca6:	f7ff fefb 	bl	8000aa0 <LcdWriteData>

	//frameration control,normal mode full colours
	LcdWriteReg(0xB1);
 8000caa:	20b1      	movs	r0, #177	; 0xb1
 8000cac:	f7ff fece 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x00);
 8000cb0:	2000      	movs	r0, #0
 8000cb2:	f7ff fef5 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x18);
 8000cb6:	2018      	movs	r0, #24
 8000cb8:	f7ff fef2 	bl	8000aa0 <LcdWriteData>

	//display function control
	LcdWriteReg(0xB6);
 8000cbc:	20b6      	movs	r0, #182	; 0xb6
 8000cbe:	f7ff fec5 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x08);
 8000cc2:	2008      	movs	r0, #8
 8000cc4:	f7ff feec 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x82);
 8000cc8:	2082      	movs	r0, #130	; 0x82
 8000cca:	f7ff fee9 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x27);
 8000cce:	2027      	movs	r0, #39	; 0x27
 8000cd0:	f7ff fee6 	bl	8000aa0 <LcdWriteData>

	//3gamma function disable
	LcdWriteReg(0xF2);
 8000cd4:	20f2      	movs	r0, #242	; 0xf2
 8000cd6:	f7ff feb9 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x00);
 8000cda:	2000      	movs	r0, #0
 8000cdc:	f7ff fee0 	bl	8000aa0 <LcdWriteData>

	//gamma curve selected
	LcdWriteReg(0x26);
 8000ce0:	2026      	movs	r0, #38	; 0x26
 8000ce2:	f7ff feb3 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x01);
 8000ce6:	2001      	movs	r0, #1
 8000ce8:	f7ff feda 	bl	8000aa0 <LcdWriteData>

	//set positive gamma correction
	LcdWriteReg(0xE0);
 8000cec:	20e0      	movs	r0, #224	; 0xe0
 8000cee:	f7ff fead 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x0F);
 8000cf2:	200f      	movs	r0, #15
 8000cf4:	f7ff fed4 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x31);
 8000cf8:	2031      	movs	r0, #49	; 0x31
 8000cfa:	f7ff fed1 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x2B);
 8000cfe:	202b      	movs	r0, #43	; 0x2b
 8000d00:	f7ff fece 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0C);
 8000d04:	200c      	movs	r0, #12
 8000d06:	f7ff fecb 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000d0a:	200e      	movs	r0, #14
 8000d0c:	f7ff fec8 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x08);
 8000d10:	2008      	movs	r0, #8
 8000d12:	f7ff fec5 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x4E);
 8000d16:	204e      	movs	r0, #78	; 0x4e
 8000d18:	f7ff fec2 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0xF1);
 8000d1c:	20f1      	movs	r0, #241	; 0xf1
 8000d1e:	f7ff febf 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x37);
 8000d22:	2037      	movs	r0, #55	; 0x37
 8000d24:	f7ff febc 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x07);
 8000d28:	2007      	movs	r0, #7
 8000d2a:	f7ff feb9 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x10);
 8000d2e:	2010      	movs	r0, #16
 8000d30:	f7ff feb6 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x03);
 8000d34:	2003      	movs	r0, #3
 8000d36:	f7ff feb3 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000d3a:	200e      	movs	r0, #14
 8000d3c:	f7ff feb0 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x09);
 8000d40:	2009      	movs	r0, #9
 8000d42:	f7ff fead 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x00);
 8000d46:	2000      	movs	r0, #0
 8000d48:	f7ff feaa 	bl	8000aa0 <LcdWriteData>

	//set negative gamma correction
	LcdWriteReg(0xE1);
 8000d4c:	20e1      	movs	r0, #225	; 0xe1
 8000d4e:	f7ff fe7d 	bl	8000a4c <LcdWriteReg>
	LcdWriteData(0x00);
 8000d52:	2000      	movs	r0, #0
 8000d54:	f7ff fea4 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000d58:	200e      	movs	r0, #14
 8000d5a:	f7ff fea1 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x14);
 8000d5e:	2014      	movs	r0, #20
 8000d60:	f7ff fe9e 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x03);
 8000d64:	2003      	movs	r0, #3
 8000d66:	f7ff fe9b 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x11);
 8000d6a:	2011      	movs	r0, #17
 8000d6c:	f7ff fe98 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x07);
 8000d70:	2007      	movs	r0, #7
 8000d72:	f7ff fe95 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x31);
 8000d76:	2031      	movs	r0, #49	; 0x31
 8000d78:	f7ff fe92 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0xC1);
 8000d7c:	20c1      	movs	r0, #193	; 0xc1
 8000d7e:	f7ff fe8f 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x48);
 8000d82:	2048      	movs	r0, #72	; 0x48
 8000d84:	f7ff fe8c 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x08);
 8000d88:	2008      	movs	r0, #8
 8000d8a:	f7ff fe89 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0F);
 8000d8e:	200f      	movs	r0, #15
 8000d90:	f7ff fe86 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0C);
 8000d94:	200c      	movs	r0, #12
 8000d96:	f7ff fe83 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x31);
 8000d9a:	2031      	movs	r0, #49	; 0x31
 8000d9c:	f7ff fe80 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x36);
 8000da0:	2036      	movs	r0, #54	; 0x36
 8000da2:	f7ff fe7d 	bl	8000aa0 <LcdWriteData>
	LcdWriteData(0x0F);
 8000da6:	200f      	movs	r0, #15
 8000da8:	f7ff fe7a 	bl	8000aa0 <LcdWriteData>

	//exit sleep
	LcdWriteReg(0x11);
 8000dac:	2011      	movs	r0, #17
 8000dae:	f7ff fe4d 	bl	8000a4c <LcdWriteReg>
	HAL_Delay(120);
 8000db2:	2078      	movs	r0, #120	; 0x78
 8000db4:	f000 fcaa 	bl	800170c <HAL_Delay>
	//display on
	LcdWriteReg(0x29);
 8000db8:	2029      	movs	r0, #41	; 0x29
 8000dba:	f7ff fe47 	bl	8000a4c <LcdWriteReg>
}
 8000dbe:	bf00      	nop
 8000dc0:	3708      	adds	r7, #8
 8000dc2:	46bd      	mov	sp, r7
 8000dc4:	bd80      	pop	{r7, pc}
 8000dc6:	bf00      	nop
 8000dc8:	40020800 	.word	0x40020800

08000dcc <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	b0a0      	sub	sp, #128	; 0x80
 8000dd0:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 8000dd2:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	601a      	str	r2, [r3, #0]
 8000dda:	605a      	str	r2, [r3, #4]
 8000ddc:	609a      	str	r2, [r3, #8]
 8000dde:	60da      	str	r2, [r3, #12]
 8000de0:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 8000de2:	463b      	mov	r3, r7
 8000de4:	2268      	movs	r2, #104	; 0x68
 8000de6:	2100      	movs	r1, #0
 8000de8:	4618      	mov	r0, r3
 8000dea:	f00f ffab 	bl	8010d44 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 8000dee:	2300      	movs	r3, #0
 8000df0:	2200      	movs	r2, #0
 8000df2:	4916      	ldr	r1, [pc, #88]	; (8000e4c <LCD_X_Config+0x80>)
 8000df4:	4816      	ldr	r0, [pc, #88]	; (8000e50 <LCD_X_Config+0x84>)
 8000df6:	f00a fc31 	bl	800b65c <GUI_DEVICE_CreateAndLink>
 8000dfa:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8000dfc:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8000e00:	21f0      	movs	r1, #240	; 0xf0
 8000e02:	2000      	movs	r0, #0
 8000e04:	f008 fa24 	bl	8009250 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 8000e08:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8000e0c:	21f0      	movs	r1, #240	; 0xf0
 8000e0e:	2000      	movs	r0, #0
 8000e10:	f008 fa06 	bl	8009220 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_X | GUI_MIRROR_Y;
 8000e14:	2307      	movs	r3, #7
 8000e16:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8000e18:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000e20:	f008 f99d 	bl	800915e <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite8_A0  = LcdWriteReg;
 8000e24:	4b0b      	ldr	r3, [pc, #44]	; (8000e54 <LCD_X_Config+0x88>)
 8000e26:	603b      	str	r3, [r7, #0]
  PortAPI.pfWrite8_A1  = LcdWriteData;
 8000e28:	4b0b      	ldr	r3, [pc, #44]	; (8000e58 <LCD_X_Config+0x8c>)
 8000e2a:	607b      	str	r3, [r7, #4]
  PortAPI.pfWriteM8_A1  = LcdWriteDataMultiple;
 8000e2c:	4b0b      	ldr	r3, [pc, #44]	; (8000e5c <LCD_X_Config+0x90>)
 8000e2e:	60fb      	str	r3, [r7, #12]
  PortAPI.pfRead8_A1  = LcdReadReg;
 8000e30:	4b0b      	ldr	r3, [pc, #44]	; (8000e60 <LCD_X_Config+0x94>)
 8000e32:	617b      	str	r3, [r7, #20]
  PortAPI.pfReadM8_A1 = LcdReadDataMultiple;
 8000e34:	4b0b      	ldr	r3, [pc, #44]	; (8000e64 <LCD_X_Config+0x98>)
 8000e36:	61fb      	str	r3, [r7, #28]

  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B8);//ILI9341, 16bit color, 8 bit bus, no cache
 8000e38:	4639      	mov	r1, r7
 8000e3a:	4b0b      	ldr	r3, [pc, #44]	; (8000e68 <LCD_X_Config+0x9c>)
 8000e3c:	4a0b      	ldr	r2, [pc, #44]	; (8000e6c <LCD_X_Config+0xa0>)
 8000e3e:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000e40:	f008 f9ab 	bl	800919a <GUIDRV_FlexColor_SetFunc>
}
 8000e44:	bf00      	nop
 8000e46:	3780      	adds	r7, #128	; 0x80
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd80      	pop	{r7, pc}
 8000e4c:	08013d84 	.word	0x08013d84
 8000e50:	08013bd0 	.word	0x08013bd0
 8000e54:	08000a4d 	.word	0x08000a4d
 8000e58:	08000aa1 	.word	0x08000aa1
 8000e5c:	08000ae5 	.word	0x08000ae5
 8000e60:	08000a91 	.word	0x08000a91
 8000e64:	08000b31 	.word	0x08000b31
 8000e68:	08008b21 	.word	0x08008b21
 8000e6c:	0800841d 	.word	0x0800841d

08000e70 <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8000e70:	b580      	push	{r7, lr}
 8000e72:	b086      	sub	sp, #24
 8000e74:	af00      	add	r7, sp, #0
 8000e76:	60f8      	str	r0, [r7, #12]
 8000e78:	60b9      	str	r1, [r7, #8]
 8000e7a:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8000e7c:	68bb      	ldr	r3, [r7, #8]
 8000e7e:	2b01      	cmp	r3, #1
 8000e80:	d103      	bne.n	8000e8a <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {
	LcdInit();	//ili9341 init code
 8000e82:	f7ff fe67 	bl	8000b54 <LcdInit>
    return 0;
 8000e86:	2300      	movs	r3, #0
 8000e88:	e003      	b.n	8000e92 <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 8000e8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000e8e:	617b      	str	r3, [r7, #20]
  }
  return r;
 8000e90:	697b      	ldr	r3, [r7, #20]
}
 8000e92:	4618      	mov	r0, r3
 8000e94:	3718      	adds	r7, #24
 8000e96:	46bd      	mov	sp, r7
 8000e98:	bd80      	pop	{r7, pc}
	...

08000e9c <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b084      	sub	sp, #16
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	2b1d      	cmp	r3, #29
 8000eaa:	d118      	bne.n	8000ede <_cbDialog+0x42>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	685b      	ldr	r3, [r3, #4]
 8000eb0:	f640 0103 	movw	r1, #2051	; 0x803
 8000eb4:	4618      	mov	r0, r3
 8000eb6:	f004 fb73 	bl	80055a0 <WM_GetDialogItem>
 8000eba:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 8000ebc:	490c      	ldr	r1, [pc, #48]	; (8000ef0 <_cbDialog+0x54>)
 8000ebe:	68f8      	ldr	r0, [r7, #12]
 8000ec0:	f002 fab9 	bl	8003436 <TEXT_SetFont>
    //
    // Initialization of 'BURAK OZSOY'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	685b      	ldr	r3, [r3, #4]
 8000ec8:	f640 0107 	movw	r1, #2055	; 0x807
 8000ecc:	4618      	mov	r0, r3
 8000ece:	f004 fb67 	bl	80055a0 <WM_GetDialogItem>
 8000ed2:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_16_ASCII);
 8000ed4:	4907      	ldr	r1, [pc, #28]	; (8000ef4 <_cbDialog+0x58>)
 8000ed6:	68f8      	ldr	r0, [r7, #12]
 8000ed8:	f002 faad 	bl	8003436 <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 8000edc:	e003      	b.n	8000ee6 <_cbDialog+0x4a>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 8000ede:	6878      	ldr	r0, [r7, #4]
 8000ee0:	f005 ffd0 	bl	8006e84 <WM_DefaultProc>
    break;
 8000ee4:	bf00      	nop
  }
}
 8000ee6:	bf00      	nop
 8000ee8:	3710      	adds	r7, #16
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bd80      	pop	{r7, pc}
 8000eee:	bf00      	nop
 8000ef0:	080121d0 	.word	0x080121d0
 8000ef4:	08012ae0 	.word	0x08012ae0

08000ef8 <MainLCDTask>:
*/
/*********************************************************************
*
*       CreateSTemWin_Demo
*/
WM_HWIN MainLCDTask(void) {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b092      	sub	sp, #72	; 0x48
 8000efc:	af02      	add	r7, sp, #8
  char i = 0, x = 0;
 8000efe:	2300      	movs	r3, #0
 8000f00:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8000f04:	2300      	movs	r3, #0
 8000f06:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
  PROGBAR_Handle 		hPbar;
  TEXT_Handle		 	hText1, hText2;
  GRAPH_DATA_Handle 	hData;
  GRAPH_SCALE_Handle    hScale;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 8000f0a:	f004 fae3 	bl	80054d4 <WM_GetDesktopWindow>
 8000f0e:	4603      	mov	r3, r0
 8000f10:	2200      	movs	r2, #0
 8000f12:	9201      	str	r2, [sp, #4]
 8000f14:	2200      	movs	r2, #0
 8000f16:	9200      	str	r2, [sp, #0]
 8000f18:	4a67      	ldr	r2, [pc, #412]	; (80010b8 <MainLCDTask+0x1c0>)
 8000f1a:	2107      	movs	r1, #7
 8000f1c:	4867      	ldr	r0, [pc, #412]	; (80010bc <MainLCDTask+0x1c4>)
 8000f1e:	f003 ff39 	bl	8004d94 <GUI_CreateDialogBox>
 8000f22:	6378      	str	r0, [r7, #52]	; 0x34

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 8000f24:	f640 0104 	movw	r1, #2052	; 0x804
 8000f28:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000f2a:	f004 fb39 	bl	80055a0 <WM_GetDialogItem>
 8000f2e:	6338      	str	r0, [r7, #48]	; 0x30
  hText1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 8000f30:	f640 0103 	movw	r1, #2051	; 0x803
 8000f34:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000f36:	f004 fb33 	bl	80055a0 <WM_GetDialogItem>
 8000f3a:	62f8      	str	r0, [r7, #44]	; 0x2c
  hText2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 8000f3c:	f640 0105 	movw	r1, #2053	; 0x805
 8000f40:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000f42:	f004 fb2d 	bl	80055a0 <WM_GetDialogItem>
 8000f46:	62b8      	str	r0, [r7, #40]	; 0x28
  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 8000f48:	f640 0101 	movw	r1, #2049	; 0x801
 8000f4c:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000f4e:	f004 fb27 	bl	80055a0 <WM_GetDialogItem>
 8000f52:	6278      	str	r0, [r7, #36]	; 0x24

  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 8000f54:	2300      	movs	r3, #0
 8000f56:	2200      	movs	r2, #0
 8000f58:	21c8      	movs	r1, #200	; 0xc8
 8000f5a:	4859      	ldr	r0, [pc, #356]	; (80010c0 <MainLCDTask+0x1c8>)
 8000f5c:	f002 febc 	bl	8003cd8 <GRAPH_DATA_YT_Create>
 8000f60:	6238      	str	r0, [r7, #32]

  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 8000f62:	2101      	movs	r1, #1
 8000f64:	6a38      	ldr	r0, [r7, #32]
 8000f66:	f002 ff0e 	bl	8003d86 <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 8000f6a:	6a39      	ldr	r1, [r7, #32]
 8000f6c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f6e:	f003 fad8 	bl	8004522 <GRAPH_AttachData>
  GRAPH_SetGridVis(hGraph, 1);
 8000f72:	2101      	movs	r1, #1
 8000f74:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f76:	f003 fb35 	bl	80045e4 <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	9300      	str	r3, [sp, #0]
 8000f7e:	2300      	movs	r3, #0
 8000f80:	2200      	movs	r2, #0
 8000f82:	211e      	movs	r1, #30
 8000f84:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f86:	f003 fb5b 	bl	8004640 <GRAPH_SetBorder>
  GRAPH_SetGridDistY(hGraph, 20);
 8000f8a:	2114      	movs	r1, #20
 8000f8c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f8e:	f003 fb41 	bl	8004614 <GRAPH_SetGridDistY>
  GRAPH_SetColor(hGraph, GUI_WHITE, GRAPH_CI_BK);
 8000f92:	2200      	movs	r2, #0
 8000f94:	f04f 31ff 	mov.w	r1, #4294967295
 8000f98:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f9a:	f003 fb06 	bl	80045aa <GRAPH_SetColor>
  GRAPH_SetColor(hGraph, GUI_WHITE, GRAPH_CI_BORDER);
 8000f9e:	2201      	movs	r2, #1
 8000fa0:	f04f 31ff 	mov.w	r1, #4294967295
 8000fa4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000fa6:	f003 fb00 	bl	80045aa <GRAPH_SetColor>
  GRAPH_SetColor(hGraph, GUI_GRAY_E7, GRAPH_CI_GRID);
 8000faa:	2203      	movs	r2, #3
 8000fac:	4945      	ldr	r1, [pc, #276]	; (80010c4 <MainLCDTask+0x1cc>)
 8000fae:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000fb0:	f003 fafb 	bl	80045aa <GRAPH_SetColor>

  hScale = GRAPH_SCALE_Create(15, GUI_TA_HCENTER | GUI_TA_VCENTER, GRAPH_SCALE_CF_VERTICAL, 1);
 8000fb4:	2301      	movs	r3, #1
 8000fb6:	2201      	movs	r2, #1
 8000fb8:	210e      	movs	r1, #14
 8000fba:	200f      	movs	r0, #15
 8000fbc:	f002 fd30 	bl	8003a20 <GRAPH_SCALE_Create>
 8000fc0:	61f8      	str	r0, [r7, #28]

  GRAPH_SCALE_SetNumDecs(hScale, 0);    // No decimals are shown on the scale
 8000fc2:	2100      	movs	r1, #0
 8000fc4:	69f8      	ldr	r0, [r7, #28]
 8000fc6:	f002 fdbb 	bl	8003b40 <GRAPH_SCALE_SetNumDecs>
  GRAPH_SCALE_SetFactor(hScale, 30);     // Factor of the numbers on the scale
 8000fca:	eeb3 0a0e 	vmov.f32	s0, #62	; 0x41f00000  30.0
 8000fce:	69f8      	ldr	r0, [r7, #28]
 8000fd0:	f002 fd90 	bl	8003af4 <GRAPH_SCALE_SetFactor>
  GRAPH_SCALE_SetTickDist(hScale, 20);  // Distance in pixels between each number on the scale
 8000fd4:	2114      	movs	r1, #20
 8000fd6:	69f8      	ldr	r0, [r7, #28]
 8000fd8:	f002 fd64 	bl	8003aa4 <GRAPH_SCALE_SetTickDist>
  GRAPH_SCALE_SetOff(hScale, 0);      // Set y-offset of the scale to show negative numbers
 8000fdc:	2100      	movs	r1, #0
 8000fde:	69f8      	ldr	r0, [r7, #28]
 8000fe0:	f002 fd4c 	bl	8003a7c <GRAPH_SCALE_SetOff>
  GRAPH_SCALE_SetTextColor(hScale, GUI_WHITE);
 8000fe4:	f04f 31ff 	mov.w	r1, #4294967295
 8000fe8:	69f8      	ldr	r0, [r7, #28]
 8000fea:	f002 fd6f 	bl	8003acc <GRAPH_SCALE_SetTextColor>
  GRAPH_AttachScale(hGraph, hScale);
 8000fee:	69f9      	ldr	r1, [r7, #28]
 8000ff0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000ff2:	f003 fab8 	bl	8004566 <GRAPH_AttachScale>


  while(1)
  {
	  PROGBAR_SetValue(hPbar, i++);
 8000ff6:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8000ffa:	1c5a      	adds	r2, r3, #1
 8000ffc:	f887 203f 	strb.w	r2, [r7, #63]	; 0x3f
 8001000:	4619      	mov	r1, r3
 8001002:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8001004:	f002 fb83 	bl	800370e <PROGBAR_SetValue>
	  if(i>100) i = 0;
 8001008:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800100c:	2b64      	cmp	r3, #100	; 0x64
 800100e:	d902      	bls.n	8001016 <MainLCDTask+0x11e>
 8001010:	2300      	movs	r3, #0
 8001012:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f

	  HAL_ADC_Start(&hadc1);
 8001016:	482c      	ldr	r0, [pc, #176]	; (80010c8 <MainLCDTask+0x1d0>)
 8001018:	f000 fbe0 	bl	80017dc <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, 50);
 800101c:	2132      	movs	r1, #50	; 0x32
 800101e:	482a      	ldr	r0, [pc, #168]	; (80010c8 <MainLCDTask+0x1d0>)
 8001020:	f000 fce1 	bl	80019e6 <HAL_ADC_PollForConversion>
	  ADC_Value = HAL_ADC_GetValue(&hadc1);
 8001024:	4828      	ldr	r0, [pc, #160]	; (80010c8 <MainLCDTask+0x1d0>)
 8001026:	f000 fd69 	bl	8001afc <HAL_ADC_GetValue>
 800102a:	4603      	mov	r3, r0
 800102c:	61bb      	str	r3, [r7, #24]
	  HAL_ADC_Stop(&hadc1);
 800102e:	4826      	ldr	r0, [pc, #152]	; (80010c8 <MainLCDTask+0x1d0>)
 8001030:	f000 fca6 	bl	8001980 <HAL_ADC_Stop>
	  itoa(ADC_Value,str,10);
 8001034:	1d3b      	adds	r3, r7, #4
 8001036:	220a      	movs	r2, #10
 8001038:	4619      	mov	r1, r3
 800103a:	69b8      	ldr	r0, [r7, #24]
 800103c:	f00f fe58 	bl	8010cf0 <itoa>
	  TEXT_SetText(hText1, str);
 8001040:	1d3b      	adds	r3, r7, #4
 8001042:	4619      	mov	r1, r3
 8001044:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8001046:	f002 fa09 	bl	800345c <TEXT_SetText>

	  itoa(StopTime,str,10);
 800104a:	1d3b      	adds	r3, r7, #4
 800104c:	220a      	movs	r2, #10
 800104e:	4619      	mov	r1, r3
 8001050:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8001052:	f00f fe4d 	bl	8010cf0 <itoa>
	  TEXT_SetText(hText2, str);
 8001056:	1d3b      	adds	r3, r7, #4
 8001058:	4619      	mov	r1, r3
 800105a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800105c:	f002 f9fe 	bl	800345c <TEXT_SetText>

	  x++;
 8001060:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 8001064:	3301      	adds	r3, #1
 8001066:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	  if(x>200)
 800106a:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 800106e:	2bc8      	cmp	r3, #200	; 0xc8
 8001070:	d905      	bls.n	800107e <MainLCDTask+0x186>
	  {
		 x=0;
 8001072:	2300      	movs	r3, #0
 8001074:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
		 GRAPH_DATA_YT_Clear(hData);
 8001078:	6a38      	ldr	r0, [r7, #32]
 800107a:	f002 fe98 	bl	8003dae <GRAPH_DATA_YT_Clear>
	  }

	  GRAPH_DATA_YT_AddValue(hData, ADC_Value/30);
 800107e:	69bb      	ldr	r3, [r7, #24]
 8001080:	4a12      	ldr	r2, [pc, #72]	; (80010cc <MainLCDTask+0x1d4>)
 8001082:	fb82 1203 	smull	r1, r2, r2, r3
 8001086:	441a      	add	r2, r3
 8001088:	1112      	asrs	r2, r2, #4
 800108a:	17db      	asrs	r3, r3, #31
 800108c:	1ad3      	subs	r3, r2, r3
 800108e:	b21b      	sxth	r3, r3
 8001090:	4619      	mov	r1, r3
 8001092:	6a38      	ldr	r0, [r7, #32]
 8001094:	f002 fe5c 	bl	8003d50 <GRAPH_DATA_YT_AddValue>

	  HAL_Delay(100);
 8001098:	2064      	movs	r0, #100	; 0x64
 800109a:	f000 fb37 	bl	800170c <HAL_Delay>

	  StartTime = HAL_GetTick();
 800109e:	f000 fb29 	bl	80016f4 <HAL_GetTick>
 80010a2:	4603      	mov	r3, r0
 80010a4:	617b      	str	r3, [r7, #20]
	  GUI_Exec();
 80010a6:	f00a fd57 	bl	800bb58 <GUI_Exec>
	  StopTime = HAL_GetTick() - StartTime;
 80010aa:	f000 fb23 	bl	80016f4 <HAL_GetTick>
 80010ae:	4602      	mov	r2, r0
 80010b0:	697b      	ldr	r3, [r7, #20]
 80010b2:	1ad3      	subs	r3, r2, r3
 80010b4:	63bb      	str	r3, [r7, #56]	; 0x38
	  PROGBAR_SetValue(hPbar, i++);
 80010b6:	e79e      	b.n	8000ff6 <MainLCDTask+0xfe>
 80010b8:	08000e9d 	.word	0x08000e9d
 80010bc:	08011090 	.word	0x08011090
 80010c0:	ffff0000 	.word	0xffff0000
 80010c4:	ffe7e7e7 	.word	0xffe7e7e7
 80010c8:	20002a20 	.word	0x20002a20
 80010cc:	88888889 	.word	0x88888889

080010d0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80010d0:	b580      	push	{r7, lr}
 80010d2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80010d4:	f000 faa8 	bl	8001628 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80010d8:	f000 f80e 	bl	80010f8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80010dc:	f000 f912 	bl	8001304 <MX_GPIO_Init>
  MX_SPI1_Init();
 80010e0:	f000 f8da 	bl	8001298 <MX_SPI1_Init>
  MX_ADC1_Init();
 80010e4:	f000 f872 	bl	80011cc <MX_ADC1_Init>
  MX_CRC_Init();
 80010e8:	f000 f8c2 	bl	8001270 <MX_CRC_Init>
  /* USER CODE BEGIN 2 */
  GUI_Init();
 80010ec:	f00a fba6 	bl	800b83c <GUI_Init>
  MainLCDTask();
 80010f0:	f7ff ff02 	bl	8000ef8 <MainLCDTask>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80010f4:	e7fe      	b.n	80010f4 <main+0x24>
	...

080010f8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b094      	sub	sp, #80	; 0x50
 80010fc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010fe:	f107 0320 	add.w	r3, r7, #32
 8001102:	2230      	movs	r2, #48	; 0x30
 8001104:	2100      	movs	r1, #0
 8001106:	4618      	mov	r0, r3
 8001108:	f00f fe1c 	bl	8010d44 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800110c:	f107 030c 	add.w	r3, r7, #12
 8001110:	2200      	movs	r2, #0
 8001112:	601a      	str	r2, [r3, #0]
 8001114:	605a      	str	r2, [r3, #4]
 8001116:	609a      	str	r2, [r3, #8]
 8001118:	60da      	str	r2, [r3, #12]
 800111a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800111c:	2300      	movs	r3, #0
 800111e:	60bb      	str	r3, [r7, #8]
 8001120:	4b28      	ldr	r3, [pc, #160]	; (80011c4 <SystemClock_Config+0xcc>)
 8001122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001124:	4a27      	ldr	r2, [pc, #156]	; (80011c4 <SystemClock_Config+0xcc>)
 8001126:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800112a:	6413      	str	r3, [r2, #64]	; 0x40
 800112c:	4b25      	ldr	r3, [pc, #148]	; (80011c4 <SystemClock_Config+0xcc>)
 800112e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001130:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001134:	60bb      	str	r3, [r7, #8]
 8001136:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001138:	2300      	movs	r3, #0
 800113a:	607b      	str	r3, [r7, #4]
 800113c:	4b22      	ldr	r3, [pc, #136]	; (80011c8 <SystemClock_Config+0xd0>)
 800113e:	681b      	ldr	r3, [r3, #0]
 8001140:	4a21      	ldr	r2, [pc, #132]	; (80011c8 <SystemClock_Config+0xd0>)
 8001142:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001146:	6013      	str	r3, [r2, #0]
 8001148:	4b1f      	ldr	r3, [pc, #124]	; (80011c8 <SystemClock_Config+0xd0>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001150:	607b      	str	r3, [r7, #4]
 8001152:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001154:	2301      	movs	r3, #1
 8001156:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001158:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800115c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800115e:	2302      	movs	r3, #2
 8001160:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001162:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001166:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001168:	2308      	movs	r3, #8
 800116a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 800116c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001170:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001172:	2302      	movs	r3, #2
 8001174:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001176:	2307      	movs	r3, #7
 8001178:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800117a:	f107 0320 	add.w	r3, r7, #32
 800117e:	4618      	mov	r0, r3
 8001180:	f001 f9a0 	bl	80024c4 <HAL_RCC_OscConfig>
 8001184:	4603      	mov	r3, r0
 8001186:	2b00      	cmp	r3, #0
 8001188:	d001      	beq.n	800118e <SystemClock_Config+0x96>
  {
    Error_Handler();
 800118a:	f000 f90b 	bl	80013a4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800118e:	230f      	movs	r3, #15
 8001190:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001192:	2302      	movs	r3, #2
 8001194:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001196:	2300      	movs	r3, #0
 8001198:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800119a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800119e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80011a4:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011a6:	f107 030c 	add.w	r3, r7, #12
 80011aa:	2105      	movs	r1, #5
 80011ac:	4618      	mov	r0, r3
 80011ae:	f001 fc01 	bl	80029b4 <HAL_RCC_ClockConfig>
 80011b2:	4603      	mov	r3, r0
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d001      	beq.n	80011bc <SystemClock_Config+0xc4>
  {
    Error_Handler();
 80011b8:	f000 f8f4 	bl	80013a4 <Error_Handler>
  }
}
 80011bc:	bf00      	nop
 80011be:	3750      	adds	r7, #80	; 0x50
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bd80      	pop	{r7, pc}
 80011c4:	40023800 	.word	0x40023800
 80011c8:	40007000 	.word	0x40007000

080011cc <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b084      	sub	sp, #16
 80011d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011d2:	463b      	mov	r3, r7
 80011d4:	2200      	movs	r2, #0
 80011d6:	601a      	str	r2, [r3, #0]
 80011d8:	605a      	str	r2, [r3, #4]
 80011da:	609a      	str	r2, [r3, #8]
 80011dc:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80011de:	4b21      	ldr	r3, [pc, #132]	; (8001264 <MX_ADC1_Init+0x98>)
 80011e0:	4a21      	ldr	r2, [pc, #132]	; (8001268 <MX_ADC1_Init+0x9c>)
 80011e2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80011e4:	4b1f      	ldr	r3, [pc, #124]	; (8001264 <MX_ADC1_Init+0x98>)
 80011e6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80011ea:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80011ec:	4b1d      	ldr	r3, [pc, #116]	; (8001264 <MX_ADC1_Init+0x98>)
 80011ee:	2200      	movs	r2, #0
 80011f0:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80011f2:	4b1c      	ldr	r3, [pc, #112]	; (8001264 <MX_ADC1_Init+0x98>)
 80011f4:	2200      	movs	r2, #0
 80011f6:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80011f8:	4b1a      	ldr	r3, [pc, #104]	; (8001264 <MX_ADC1_Init+0x98>)
 80011fa:	2200      	movs	r2, #0
 80011fc:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80011fe:	4b19      	ldr	r3, [pc, #100]	; (8001264 <MX_ADC1_Init+0x98>)
 8001200:	2200      	movs	r2, #0
 8001202:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001206:	4b17      	ldr	r3, [pc, #92]	; (8001264 <MX_ADC1_Init+0x98>)
 8001208:	2200      	movs	r2, #0
 800120a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800120c:	4b15      	ldr	r3, [pc, #84]	; (8001264 <MX_ADC1_Init+0x98>)
 800120e:	4a17      	ldr	r2, [pc, #92]	; (800126c <MX_ADC1_Init+0xa0>)
 8001210:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001212:	4b14      	ldr	r3, [pc, #80]	; (8001264 <MX_ADC1_Init+0x98>)
 8001214:	2200      	movs	r2, #0
 8001216:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001218:	4b12      	ldr	r3, [pc, #72]	; (8001264 <MX_ADC1_Init+0x98>)
 800121a:	2201      	movs	r2, #1
 800121c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800121e:	4b11      	ldr	r3, [pc, #68]	; (8001264 <MX_ADC1_Init+0x98>)
 8001220:	2200      	movs	r2, #0
 8001222:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001226:	4b0f      	ldr	r3, [pc, #60]	; (8001264 <MX_ADC1_Init+0x98>)
 8001228:	2201      	movs	r2, #1
 800122a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800122c:	480d      	ldr	r0, [pc, #52]	; (8001264 <MX_ADC1_Init+0x98>)
 800122e:	f000 fa91 	bl	8001754 <HAL_ADC_Init>
 8001232:	4603      	mov	r3, r0
 8001234:	2b00      	cmp	r3, #0
 8001236:	d001      	beq.n	800123c <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001238:	f000 f8b4 	bl	80013a4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800123c:	2300      	movs	r3, #0
 800123e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001240:	2301      	movs	r3, #1
 8001242:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001244:	2300      	movs	r3, #0
 8001246:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001248:	463b      	mov	r3, r7
 800124a:	4619      	mov	r1, r3
 800124c:	4805      	ldr	r0, [pc, #20]	; (8001264 <MX_ADC1_Init+0x98>)
 800124e:	f000 fc63 	bl	8001b18 <HAL_ADC_ConfigChannel>
 8001252:	4603      	mov	r3, r0
 8001254:	2b00      	cmp	r3, #0
 8001256:	d001      	beq.n	800125c <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001258:	f000 f8a4 	bl	80013a4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800125c:	bf00      	nop
 800125e:	3710      	adds	r7, #16
 8001260:	46bd      	mov	sp, r7
 8001262:	bd80      	pop	{r7, pc}
 8001264:	20002a20 	.word	0x20002a20
 8001268:	40012000 	.word	0x40012000
 800126c:	0f000001 	.word	0x0f000001

08001270 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001270:	b580      	push	{r7, lr}
 8001272:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001274:	4b06      	ldr	r3, [pc, #24]	; (8001290 <MX_CRC_Init+0x20>)
 8001276:	4a07      	ldr	r2, [pc, #28]	; (8001294 <MX_CRC_Init+0x24>)
 8001278:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800127a:	4805      	ldr	r0, [pc, #20]	; (8001290 <MX_CRC_Init+0x20>)
 800127c:	f000 ff4f 	bl	800211e <HAL_CRC_Init>
 8001280:	4603      	mov	r3, r0
 8001282:	2b00      	cmp	r3, #0
 8001284:	d001      	beq.n	800128a <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8001286:	f000 f88d 	bl	80013a4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800128a:	bf00      	nop
 800128c:	bd80      	pop	{r7, pc}
 800128e:	bf00      	nop
 8001290:	20002a68 	.word	0x20002a68
 8001294:	40023000 	.word	0x40023000

08001298 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8001298:	b580      	push	{r7, lr}
 800129a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800129c:	4b17      	ldr	r3, [pc, #92]	; (80012fc <MX_SPI1_Init+0x64>)
 800129e:	4a18      	ldr	r2, [pc, #96]	; (8001300 <MX_SPI1_Init+0x68>)
 80012a0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80012a2:	4b16      	ldr	r3, [pc, #88]	; (80012fc <MX_SPI1_Init+0x64>)
 80012a4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80012a8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80012aa:	4b14      	ldr	r3, [pc, #80]	; (80012fc <MX_SPI1_Init+0x64>)
 80012ac:	2200      	movs	r2, #0
 80012ae:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80012b0:	4b12      	ldr	r3, [pc, #72]	; (80012fc <MX_SPI1_Init+0x64>)
 80012b2:	2200      	movs	r2, #0
 80012b4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80012b6:	4b11      	ldr	r3, [pc, #68]	; (80012fc <MX_SPI1_Init+0x64>)
 80012b8:	2200      	movs	r2, #0
 80012ba:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80012bc:	4b0f      	ldr	r3, [pc, #60]	; (80012fc <MX_SPI1_Init+0x64>)
 80012be:	2200      	movs	r2, #0
 80012c0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80012c2:	4b0e      	ldr	r3, [pc, #56]	; (80012fc <MX_SPI1_Init+0x64>)
 80012c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80012c8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80012ca:	4b0c      	ldr	r3, [pc, #48]	; (80012fc <MX_SPI1_Init+0x64>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80012d0:	4b0a      	ldr	r3, [pc, #40]	; (80012fc <MX_SPI1_Init+0x64>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80012d6:	4b09      	ldr	r3, [pc, #36]	; (80012fc <MX_SPI1_Init+0x64>)
 80012d8:	2200      	movs	r2, #0
 80012da:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80012dc:	4b07      	ldr	r3, [pc, #28]	; (80012fc <MX_SPI1_Init+0x64>)
 80012de:	2200      	movs	r2, #0
 80012e0:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80012e2:	4b06      	ldr	r3, [pc, #24]	; (80012fc <MX_SPI1_Init+0x64>)
 80012e4:	220a      	movs	r2, #10
 80012e6:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80012e8:	4804      	ldr	r0, [pc, #16]	; (80012fc <MX_SPI1_Init+0x64>)
 80012ea:	f001 fd4f 	bl	8002d8c <HAL_SPI_Init>
 80012ee:	4603      	mov	r3, r0
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d001      	beq.n	80012f8 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80012f4:	f000 f856 	bl	80013a4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80012f8:	bf00      	nop
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	20002a70 	.word	0x20002a70
 8001300:	40013000 	.word	0x40013000

08001304 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001304:	b580      	push	{r7, lr}
 8001306:	b088      	sub	sp, #32
 8001308:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800130a:	f107 030c 	add.w	r3, r7, #12
 800130e:	2200      	movs	r2, #0
 8001310:	601a      	str	r2, [r3, #0]
 8001312:	605a      	str	r2, [r3, #4]
 8001314:	609a      	str	r2, [r3, #8]
 8001316:	60da      	str	r2, [r3, #12]
 8001318:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800131a:	2300      	movs	r3, #0
 800131c:	60bb      	str	r3, [r7, #8]
 800131e:	4b1f      	ldr	r3, [pc, #124]	; (800139c <MX_GPIO_Init+0x98>)
 8001320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001322:	4a1e      	ldr	r2, [pc, #120]	; (800139c <MX_GPIO_Init+0x98>)
 8001324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001328:	6313      	str	r3, [r2, #48]	; 0x30
 800132a:	4b1c      	ldr	r3, [pc, #112]	; (800139c <MX_GPIO_Init+0x98>)
 800132c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800132e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001332:	60bb      	str	r3, [r7, #8]
 8001334:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001336:	2300      	movs	r3, #0
 8001338:	607b      	str	r3, [r7, #4]
 800133a:	4b18      	ldr	r3, [pc, #96]	; (800139c <MX_GPIO_Init+0x98>)
 800133c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800133e:	4a17      	ldr	r2, [pc, #92]	; (800139c <MX_GPIO_Init+0x98>)
 8001340:	f043 0304 	orr.w	r3, r3, #4
 8001344:	6313      	str	r3, [r2, #48]	; 0x30
 8001346:	4b15      	ldr	r3, [pc, #84]	; (800139c <MX_GPIO_Init+0x98>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800134a:	f003 0304 	and.w	r3, r3, #4
 800134e:	607b      	str	r3, [r7, #4]
 8001350:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001352:	2300      	movs	r3, #0
 8001354:	603b      	str	r3, [r7, #0]
 8001356:	4b11      	ldr	r3, [pc, #68]	; (800139c <MX_GPIO_Init+0x98>)
 8001358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800135a:	4a10      	ldr	r2, [pc, #64]	; (800139c <MX_GPIO_Init+0x98>)
 800135c:	f043 0301 	orr.w	r3, r3, #1
 8001360:	6313      	str	r3, [r2, #48]	; 0x30
 8001362:	4b0e      	ldr	r3, [pc, #56]	; (800139c <MX_GPIO_Init+0x98>)
 8001364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001366:	f003 0301 	and.w	r3, r3, #1
 800136a:	603b      	str	r3, [r7, #0]
 800136c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin, GPIO_PIN_RESET);
 800136e:	2200      	movs	r2, #0
 8001370:	210e      	movs	r1, #14
 8001372:	480b      	ldr	r0, [pc, #44]	; (80013a0 <MX_GPIO_Init+0x9c>)
 8001374:	f001 f88c 	bl	8002490 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_CS_Pin LCD_DC_Pin LCD_RST_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin;
 8001378:	230e      	movs	r3, #14
 800137a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800137c:	2301      	movs	r3, #1
 800137e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001380:	2300      	movs	r3, #0
 8001382:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001384:	2300      	movs	r3, #0
 8001386:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001388:	f107 030c 	add.w	r3, r7, #12
 800138c:	4619      	mov	r1, r3
 800138e:	4804      	ldr	r0, [pc, #16]	; (80013a0 <MX_GPIO_Init+0x9c>)
 8001390:	f000 fee2 	bl	8002158 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001394:	bf00      	nop
 8001396:	3720      	adds	r7, #32
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}
 800139c:	40023800 	.word	0x40023800
 80013a0:	40020800 	.word	0x40020800

080013a4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80013a4:	b480      	push	{r7}
 80013a6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80013a8:	b672      	cpsid	i
}
 80013aa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80013ac:	e7fe      	b.n	80013ac <Error_Handler+0x8>
	...

080013b0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80013b0:	b580      	push	{r7, lr}
 80013b2:	b082      	sub	sp, #8
 80013b4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013b6:	2300      	movs	r3, #0
 80013b8:	607b      	str	r3, [r7, #4]
 80013ba:	4b10      	ldr	r3, [pc, #64]	; (80013fc <HAL_MspInit+0x4c>)
 80013bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013be:	4a0f      	ldr	r2, [pc, #60]	; (80013fc <HAL_MspInit+0x4c>)
 80013c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80013c4:	6453      	str	r3, [r2, #68]	; 0x44
 80013c6:	4b0d      	ldr	r3, [pc, #52]	; (80013fc <HAL_MspInit+0x4c>)
 80013c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013ca:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80013ce:	607b      	str	r3, [r7, #4]
 80013d0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013d2:	2300      	movs	r3, #0
 80013d4:	603b      	str	r3, [r7, #0]
 80013d6:	4b09      	ldr	r3, [pc, #36]	; (80013fc <HAL_MspInit+0x4c>)
 80013d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013da:	4a08      	ldr	r2, [pc, #32]	; (80013fc <HAL_MspInit+0x4c>)
 80013dc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80013e0:	6413      	str	r3, [r2, #64]	; 0x40
 80013e2:	4b06      	ldr	r3, [pc, #24]	; (80013fc <HAL_MspInit+0x4c>)
 80013e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013ea:	603b      	str	r3, [r7, #0]
 80013ec:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 80013ee:	2007      	movs	r0, #7
 80013f0:	f000 fe62 	bl	80020b8 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80013f4:	bf00      	nop
 80013f6:	3708      	adds	r7, #8
 80013f8:	46bd      	mov	sp, r7
 80013fa:	bd80      	pop	{r7, pc}
 80013fc:	40023800 	.word	0x40023800

08001400 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001400:	b580      	push	{r7, lr}
 8001402:	b08a      	sub	sp, #40	; 0x28
 8001404:	af00      	add	r7, sp, #0
 8001406:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001408:	f107 0314 	add.w	r3, r7, #20
 800140c:	2200      	movs	r2, #0
 800140e:	601a      	str	r2, [r3, #0]
 8001410:	605a      	str	r2, [r3, #4]
 8001412:	609a      	str	r2, [r3, #8]
 8001414:	60da      	str	r2, [r3, #12]
 8001416:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	681b      	ldr	r3, [r3, #0]
 800141c:	4a17      	ldr	r2, [pc, #92]	; (800147c <HAL_ADC_MspInit+0x7c>)
 800141e:	4293      	cmp	r3, r2
 8001420:	d127      	bne.n	8001472 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001422:	2300      	movs	r3, #0
 8001424:	613b      	str	r3, [r7, #16]
 8001426:	4b16      	ldr	r3, [pc, #88]	; (8001480 <HAL_ADC_MspInit+0x80>)
 8001428:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800142a:	4a15      	ldr	r2, [pc, #84]	; (8001480 <HAL_ADC_MspInit+0x80>)
 800142c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001430:	6453      	str	r3, [r2, #68]	; 0x44
 8001432:	4b13      	ldr	r3, [pc, #76]	; (8001480 <HAL_ADC_MspInit+0x80>)
 8001434:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001436:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800143a:	613b      	str	r3, [r7, #16]
 800143c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800143e:	2300      	movs	r3, #0
 8001440:	60fb      	str	r3, [r7, #12]
 8001442:	4b0f      	ldr	r3, [pc, #60]	; (8001480 <HAL_ADC_MspInit+0x80>)
 8001444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001446:	4a0e      	ldr	r2, [pc, #56]	; (8001480 <HAL_ADC_MspInit+0x80>)
 8001448:	f043 0301 	orr.w	r3, r3, #1
 800144c:	6313      	str	r3, [r2, #48]	; 0x30
 800144e:	4b0c      	ldr	r3, [pc, #48]	; (8001480 <HAL_ADC_MspInit+0x80>)
 8001450:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001452:	f003 0301 	and.w	r3, r3, #1
 8001456:	60fb      	str	r3, [r7, #12]
 8001458:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800145a:	2301      	movs	r3, #1
 800145c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800145e:	2303      	movs	r3, #3
 8001460:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001462:	2300      	movs	r3, #0
 8001464:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001466:	f107 0314 	add.w	r3, r7, #20
 800146a:	4619      	mov	r1, r3
 800146c:	4805      	ldr	r0, [pc, #20]	; (8001484 <HAL_ADC_MspInit+0x84>)
 800146e:	f000 fe73 	bl	8002158 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001472:	bf00      	nop
 8001474:	3728      	adds	r7, #40	; 0x28
 8001476:	46bd      	mov	sp, r7
 8001478:	bd80      	pop	{r7, pc}
 800147a:	bf00      	nop
 800147c:	40012000 	.word	0x40012000
 8001480:	40023800 	.word	0x40023800
 8001484:	40020000 	.word	0x40020000

08001488 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001488:	b480      	push	{r7}
 800148a:	b085      	sub	sp, #20
 800148c:	af00      	add	r7, sp, #0
 800148e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	4a0b      	ldr	r2, [pc, #44]	; (80014c4 <HAL_CRC_MspInit+0x3c>)
 8001496:	4293      	cmp	r3, r2
 8001498:	d10d      	bne.n	80014b6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800149a:	2300      	movs	r3, #0
 800149c:	60fb      	str	r3, [r7, #12]
 800149e:	4b0a      	ldr	r3, [pc, #40]	; (80014c8 <HAL_CRC_MspInit+0x40>)
 80014a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014a2:	4a09      	ldr	r2, [pc, #36]	; (80014c8 <HAL_CRC_MspInit+0x40>)
 80014a4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80014a8:	6313      	str	r3, [r2, #48]	; 0x30
 80014aa:	4b07      	ldr	r3, [pc, #28]	; (80014c8 <HAL_CRC_MspInit+0x40>)
 80014ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ae:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80014b2:	60fb      	str	r3, [r7, #12]
 80014b4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80014b6:	bf00      	nop
 80014b8:	3714      	adds	r7, #20
 80014ba:	46bd      	mov	sp, r7
 80014bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c0:	4770      	bx	lr
 80014c2:	bf00      	nop
 80014c4:	40023000 	.word	0x40023000
 80014c8:	40023800 	.word	0x40023800

080014cc <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	b08a      	sub	sp, #40	; 0x28
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d4:	f107 0314 	add.w	r3, r7, #20
 80014d8:	2200      	movs	r2, #0
 80014da:	601a      	str	r2, [r3, #0]
 80014dc:	605a      	str	r2, [r3, #4]
 80014de:	609a      	str	r2, [r3, #8]
 80014e0:	60da      	str	r2, [r3, #12]
 80014e2:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a19      	ldr	r2, [pc, #100]	; (8001550 <HAL_SPI_MspInit+0x84>)
 80014ea:	4293      	cmp	r3, r2
 80014ec:	d12b      	bne.n	8001546 <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80014ee:	2300      	movs	r3, #0
 80014f0:	613b      	str	r3, [r7, #16]
 80014f2:	4b18      	ldr	r3, [pc, #96]	; (8001554 <HAL_SPI_MspInit+0x88>)
 80014f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014f6:	4a17      	ldr	r2, [pc, #92]	; (8001554 <HAL_SPI_MspInit+0x88>)
 80014f8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80014fc:	6453      	str	r3, [r2, #68]	; 0x44
 80014fe:	4b15      	ldr	r3, [pc, #84]	; (8001554 <HAL_SPI_MspInit+0x88>)
 8001500:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001502:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001506:	613b      	str	r3, [r7, #16]
 8001508:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800150a:	2300      	movs	r3, #0
 800150c:	60fb      	str	r3, [r7, #12]
 800150e:	4b11      	ldr	r3, [pc, #68]	; (8001554 <HAL_SPI_MspInit+0x88>)
 8001510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001512:	4a10      	ldr	r2, [pc, #64]	; (8001554 <HAL_SPI_MspInit+0x88>)
 8001514:	f043 0301 	orr.w	r3, r3, #1
 8001518:	6313      	str	r3, [r2, #48]	; 0x30
 800151a:	4b0e      	ldr	r3, [pc, #56]	; (8001554 <HAL_SPI_MspInit+0x88>)
 800151c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800151e:	f003 0301 	and.w	r3, r3, #1
 8001522:	60fb      	str	r3, [r7, #12]
 8001524:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8001526:	23e0      	movs	r3, #224	; 0xe0
 8001528:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800152a:	2302      	movs	r3, #2
 800152c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800152e:	2300      	movs	r3, #0
 8001530:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001532:	2303      	movs	r3, #3
 8001534:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001536:	2305      	movs	r3, #5
 8001538:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800153a:	f107 0314 	add.w	r3, r7, #20
 800153e:	4619      	mov	r1, r3
 8001540:	4805      	ldr	r0, [pc, #20]	; (8001558 <HAL_SPI_MspInit+0x8c>)
 8001542:	f000 fe09 	bl	8002158 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8001546:	bf00      	nop
 8001548:	3728      	adds	r7, #40	; 0x28
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	40013000 	.word	0x40013000
 8001554:	40023800 	.word	0x40023800
 8001558:	40020000 	.word	0x40020000

0800155c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800155c:	b480      	push	{r7}
 800155e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001560:	e7fe      	b.n	8001560 <NMI_Handler+0x4>

08001562 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001562:	b480      	push	{r7}
 8001564:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001566:	e7fe      	b.n	8001566 <HardFault_Handler+0x4>

08001568 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001568:	b480      	push	{r7}
 800156a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800156c:	e7fe      	b.n	800156c <MemManage_Handler+0x4>

0800156e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800156e:	b480      	push	{r7}
 8001570:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001572:	e7fe      	b.n	8001572 <BusFault_Handler+0x4>

08001574 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001574:	b480      	push	{r7}
 8001576:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001578:	e7fe      	b.n	8001578 <UsageFault_Handler+0x4>

0800157a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800157a:	b480      	push	{r7}
 800157c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800157e:	bf00      	nop
 8001580:	46bd      	mov	sp, r7
 8001582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001586:	4770      	bx	lr

08001588 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001588:	b480      	push	{r7}
 800158a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800158c:	bf00      	nop
 800158e:	46bd      	mov	sp, r7
 8001590:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001594:	4770      	bx	lr

08001596 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001596:	b480      	push	{r7}
 8001598:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800159a:	bf00      	nop
 800159c:	46bd      	mov	sp, r7
 800159e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a2:	4770      	bx	lr

080015a4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80015a4:	b580      	push	{r7, lr}
 80015a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80015a8:	f000 f890 	bl	80016cc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80015ac:	bf00      	nop
 80015ae:	bd80      	pop	{r7, pc}

080015b0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80015b0:	b480      	push	{r7}
 80015b2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80015b4:	4b06      	ldr	r3, [pc, #24]	; (80015d0 <SystemInit+0x20>)
 80015b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80015ba:	4a05      	ldr	r2, [pc, #20]	; (80015d0 <SystemInit+0x20>)
 80015bc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80015c0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80015c4:	bf00      	nop
 80015c6:	46bd      	mov	sp, r7
 80015c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015cc:	4770      	bx	lr
 80015ce:	bf00      	nop
 80015d0:	e000ed00 	.word	0xe000ed00

080015d4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80015d4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800160c <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80015d8:	480d      	ldr	r0, [pc, #52]	; (8001610 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80015da:	490e      	ldr	r1, [pc, #56]	; (8001614 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80015dc:	4a0e      	ldr	r2, [pc, #56]	; (8001618 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80015de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80015e0:	e002      	b.n	80015e8 <LoopCopyDataInit>

080015e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80015e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80015e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80015e6:	3304      	adds	r3, #4

080015e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80015e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80015ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80015ec:	d3f9      	bcc.n	80015e2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80015ee:	4a0b      	ldr	r2, [pc, #44]	; (800161c <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80015f0:	4c0b      	ldr	r4, [pc, #44]	; (8001620 <LoopFillZerobss+0x26>)
  movs r3, #0
 80015f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80015f4:	e001      	b.n	80015fa <LoopFillZerobss>

080015f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80015f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80015f8:	3204      	adds	r2, #4

080015fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80015fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80015fc:	d3fb      	bcc.n	80015f6 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80015fe:	f7ff ffd7 	bl	80015b0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001602:	f00f fb39 	bl	8010c78 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001606:	f7ff fd63 	bl	80010d0 <main>
  bx  lr    
 800160a:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 800160c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001610:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001614:	20000200 	.word	0x20000200
  ldr r2, =_sidata
 8001618:	0801493c 	.word	0x0801493c
  ldr r2, =_sbss
 800161c:	20000200 	.word	0x20000200
  ldr r4, =_ebss
 8001620:	20002e38 	.word	0x20002e38

08001624 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001624:	e7fe      	b.n	8001624 <ADC_IRQHandler>
	...

08001628 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001628:	b580      	push	{r7, lr}
 800162a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800162c:	4b0e      	ldr	r3, [pc, #56]	; (8001668 <HAL_Init+0x40>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	4a0d      	ldr	r2, [pc, #52]	; (8001668 <HAL_Init+0x40>)
 8001632:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001636:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001638:	4b0b      	ldr	r3, [pc, #44]	; (8001668 <HAL_Init+0x40>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	4a0a      	ldr	r2, [pc, #40]	; (8001668 <HAL_Init+0x40>)
 800163e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001642:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001644:	4b08      	ldr	r3, [pc, #32]	; (8001668 <HAL_Init+0x40>)
 8001646:	681b      	ldr	r3, [r3, #0]
 8001648:	4a07      	ldr	r2, [pc, #28]	; (8001668 <HAL_Init+0x40>)
 800164a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800164e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001650:	2003      	movs	r0, #3
 8001652:	f000 fd31 	bl	80020b8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001656:	2000      	movs	r0, #0
 8001658:	f000 f808 	bl	800166c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800165c:	f7ff fea8 	bl	80013b0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001660:	2300      	movs	r3, #0
}
 8001662:	4618      	mov	r0, r3
 8001664:	bd80      	pop	{r7, pc}
 8001666:	bf00      	nop
 8001668:	40023c00 	.word	0x40023c00

0800166c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800166c:	b580      	push	{r7, lr}
 800166e:	b082      	sub	sp, #8
 8001670:	af00      	add	r7, sp, #0
 8001672:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001674:	4b12      	ldr	r3, [pc, #72]	; (80016c0 <HAL_InitTick+0x54>)
 8001676:	681a      	ldr	r2, [r3, #0]
 8001678:	4b12      	ldr	r3, [pc, #72]	; (80016c4 <HAL_InitTick+0x58>)
 800167a:	781b      	ldrb	r3, [r3, #0]
 800167c:	4619      	mov	r1, r3
 800167e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001682:	fbb3 f3f1 	udiv	r3, r3, r1
 8001686:	fbb2 f3f3 	udiv	r3, r2, r3
 800168a:	4618      	mov	r0, r3
 800168c:	f000 fd3b 	bl	8002106 <HAL_SYSTICK_Config>
 8001690:	4603      	mov	r3, r0
 8001692:	2b00      	cmp	r3, #0
 8001694:	d001      	beq.n	800169a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8001696:	2301      	movs	r3, #1
 8001698:	e00e      	b.n	80016b8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	2b0f      	cmp	r3, #15
 800169e:	d80a      	bhi.n	80016b6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80016a0:	2200      	movs	r2, #0
 80016a2:	6879      	ldr	r1, [r7, #4]
 80016a4:	f04f 30ff 	mov.w	r0, #4294967295
 80016a8:	f000 fd11 	bl	80020ce <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80016ac:	4a06      	ldr	r2, [pc, #24]	; (80016c8 <HAL_InitTick+0x5c>)
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80016b2:	2300      	movs	r3, #0
 80016b4:	e000      	b.n	80016b8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80016b6:	2301      	movs	r3, #1
}
 80016b8:	4618      	mov	r0, r3
 80016ba:	3708      	adds	r7, #8
 80016bc:	46bd      	mov	sp, r7
 80016be:	bd80      	pop	{r7, pc}
 80016c0:	20000000 	.word	0x20000000
 80016c4:	20000008 	.word	0x20000008
 80016c8:	20000004 	.word	0x20000004

080016cc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80016cc:	b480      	push	{r7}
 80016ce:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80016d0:	4b06      	ldr	r3, [pc, #24]	; (80016ec <HAL_IncTick+0x20>)
 80016d2:	781b      	ldrb	r3, [r3, #0]
 80016d4:	461a      	mov	r2, r3
 80016d6:	4b06      	ldr	r3, [pc, #24]	; (80016f0 <HAL_IncTick+0x24>)
 80016d8:	681b      	ldr	r3, [r3, #0]
 80016da:	4413      	add	r3, r2
 80016dc:	4a04      	ldr	r2, [pc, #16]	; (80016f0 <HAL_IncTick+0x24>)
 80016de:	6013      	str	r3, [r2, #0]
}
 80016e0:	bf00      	nop
 80016e2:	46bd      	mov	sp, r7
 80016e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e8:	4770      	bx	lr
 80016ea:	bf00      	nop
 80016ec:	20000008 	.word	0x20000008
 80016f0:	20002ac8 	.word	0x20002ac8

080016f4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80016f4:	b480      	push	{r7}
 80016f6:	af00      	add	r7, sp, #0
  return uwTick;
 80016f8:	4b03      	ldr	r3, [pc, #12]	; (8001708 <HAL_GetTick+0x14>)
 80016fa:	681b      	ldr	r3, [r3, #0]
}
 80016fc:	4618      	mov	r0, r3
 80016fe:	46bd      	mov	sp, r7
 8001700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001704:	4770      	bx	lr
 8001706:	bf00      	nop
 8001708:	20002ac8 	.word	0x20002ac8

0800170c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800170c:	b580      	push	{r7, lr}
 800170e:	b084      	sub	sp, #16
 8001710:	af00      	add	r7, sp, #0
 8001712:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001714:	f7ff ffee 	bl	80016f4 <HAL_GetTick>
 8001718:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800171e:	68fb      	ldr	r3, [r7, #12]
 8001720:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001724:	d005      	beq.n	8001732 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001726:	4b0a      	ldr	r3, [pc, #40]	; (8001750 <HAL_Delay+0x44>)
 8001728:	781b      	ldrb	r3, [r3, #0]
 800172a:	461a      	mov	r2, r3
 800172c:	68fb      	ldr	r3, [r7, #12]
 800172e:	4413      	add	r3, r2
 8001730:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001732:	bf00      	nop
 8001734:	f7ff ffde 	bl	80016f4 <HAL_GetTick>
 8001738:	4602      	mov	r2, r0
 800173a:	68bb      	ldr	r3, [r7, #8]
 800173c:	1ad3      	subs	r3, r2, r3
 800173e:	68fa      	ldr	r2, [r7, #12]
 8001740:	429a      	cmp	r2, r3
 8001742:	d8f7      	bhi.n	8001734 <HAL_Delay+0x28>
  {
  }
}
 8001744:	bf00      	nop
 8001746:	bf00      	nop
 8001748:	3710      	adds	r7, #16
 800174a:	46bd      	mov	sp, r7
 800174c:	bd80      	pop	{r7, pc}
 800174e:	bf00      	nop
 8001750:	20000008 	.word	0x20000008

08001754 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001754:	b580      	push	{r7, lr}
 8001756:	b084      	sub	sp, #16
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800175c:	2300      	movs	r3, #0
 800175e:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	2b00      	cmp	r3, #0
 8001764:	d101      	bne.n	800176a <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8001766:	2301      	movs	r3, #1
 8001768:	e033      	b.n	80017d2 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800176e:	2b00      	cmp	r3, #0
 8001770:	d109      	bne.n	8001786 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001772:	6878      	ldr	r0, [r7, #4]
 8001774:	f7ff fe44 	bl	8001400 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8001778:	687b      	ldr	r3, [r7, #4]
 800177a:	2200      	movs	r2, #0
 800177c:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	2200      	movs	r2, #0
 8001782:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800178a:	f003 0310 	and.w	r3, r3, #16
 800178e:	2b00      	cmp	r3, #0
 8001790:	d118      	bne.n	80017c4 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001796:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800179a:	f023 0302 	bic.w	r3, r3, #2
 800179e:	f043 0202 	orr.w	r2, r3, #2
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 80017a6:	6878      	ldr	r0, [r7, #4]
 80017a8:	f000 fad8 	bl	8001d5c <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	2200      	movs	r2, #0
 80017b0:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017b6:	f023 0303 	bic.w	r3, r3, #3
 80017ba:	f043 0201 	orr.w	r2, r3, #1
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	641a      	str	r2, [r3, #64]	; 0x40
 80017c2:	e001      	b.n	80017c8 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80017c4:	2301      	movs	r3, #1
 80017c6:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80017c8:	687b      	ldr	r3, [r7, #4]
 80017ca:	2200      	movs	r2, #0
 80017cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80017d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80017d2:	4618      	mov	r0, r3
 80017d4:	3710      	adds	r7, #16
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}
	...

080017dc <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 80017dc:	b480      	push	{r7}
 80017de:	b085      	sub	sp, #20
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 80017e4:	2300      	movs	r3, #0
 80017e6:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80017ee:	2b01      	cmp	r3, #1
 80017f0:	d101      	bne.n	80017f6 <HAL_ADC_Start+0x1a>
 80017f2:	2302      	movs	r3, #2
 80017f4:	e0b2      	b.n	800195c <HAL_ADC_Start+0x180>
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	2201      	movs	r2, #1
 80017fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	689b      	ldr	r3, [r3, #8]
 8001804:	f003 0301 	and.w	r3, r3, #1
 8001808:	2b01      	cmp	r3, #1
 800180a:	d018      	beq.n	800183e <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	689a      	ldr	r2, [r3, #8]
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	f042 0201 	orr.w	r2, r2, #1
 800181a:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800181c:	4b52      	ldr	r3, [pc, #328]	; (8001968 <HAL_ADC_Start+0x18c>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4a52      	ldr	r2, [pc, #328]	; (800196c <HAL_ADC_Start+0x190>)
 8001822:	fba2 2303 	umull	r2, r3, r2, r3
 8001826:	0c9a      	lsrs	r2, r3, #18
 8001828:	4613      	mov	r3, r2
 800182a:	005b      	lsls	r3, r3, #1
 800182c:	4413      	add	r3, r2
 800182e:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001830:	e002      	b.n	8001838 <HAL_ADC_Start+0x5c>
    {
      counter--;
 8001832:	68bb      	ldr	r3, [r7, #8]
 8001834:	3b01      	subs	r3, #1
 8001836:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001838:	68bb      	ldr	r3, [r7, #8]
 800183a:	2b00      	cmp	r3, #0
 800183c:	d1f9      	bne.n	8001832 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	689b      	ldr	r3, [r3, #8]
 8001844:	f003 0301 	and.w	r3, r3, #1
 8001848:	2b01      	cmp	r3, #1
 800184a:	d17a      	bne.n	8001942 <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 800184c:	687b      	ldr	r3, [r7, #4]
 800184e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001850:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001854:	f023 0301 	bic.w	r3, r3, #1
 8001858:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	685b      	ldr	r3, [r3, #4]
 8001866:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800186a:	2b00      	cmp	r3, #0
 800186c:	d007      	beq.n	800187e <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001872:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001876:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001882:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001886:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800188a:	d106      	bne.n	800189a <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001890:	f023 0206 	bic.w	r2, r3, #6
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	645a      	str	r2, [r3, #68]	; 0x44
 8001898:	e002      	b.n	80018a0 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	2200      	movs	r2, #0
 800189e:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	2200      	movs	r2, #0
 80018a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80018a8:	4b31      	ldr	r3, [pc, #196]	; (8001970 <HAL_ADC_Start+0x194>)
 80018aa:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80018b4:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	685b      	ldr	r3, [r3, #4]
 80018ba:	f003 031f 	and.w	r3, r3, #31
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d12a      	bne.n	8001918 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	4a2b      	ldr	r2, [pc, #172]	; (8001974 <HAL_ADC_Start+0x198>)
 80018c8:	4293      	cmp	r3, r2
 80018ca:	d015      	beq.n	80018f8 <HAL_ADC_Start+0x11c>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4a29      	ldr	r2, [pc, #164]	; (8001978 <HAL_ADC_Start+0x19c>)
 80018d2:	4293      	cmp	r3, r2
 80018d4:	d105      	bne.n	80018e2 <HAL_ADC_Start+0x106>
 80018d6:	4b26      	ldr	r3, [pc, #152]	; (8001970 <HAL_ADC_Start+0x194>)
 80018d8:	685b      	ldr	r3, [r3, #4]
 80018da:	f003 031f 	and.w	r3, r3, #31
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d00a      	beq.n	80018f8 <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	4a25      	ldr	r2, [pc, #148]	; (800197c <HAL_ADC_Start+0x1a0>)
 80018e8:	4293      	cmp	r3, r2
 80018ea:	d136      	bne.n	800195a <HAL_ADC_Start+0x17e>
 80018ec:	4b20      	ldr	r3, [pc, #128]	; (8001970 <HAL_ADC_Start+0x194>)
 80018ee:	685b      	ldr	r3, [r3, #4]
 80018f0:	f003 0310 	and.w	r3, r3, #16
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d130      	bne.n	800195a <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	689b      	ldr	r3, [r3, #8]
 80018fe:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001902:	2b00      	cmp	r3, #0
 8001904:	d129      	bne.n	800195a <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	689a      	ldr	r2, [r3, #8]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001914:	609a      	str	r2, [r3, #8]
 8001916:	e020      	b.n	800195a <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	4a15      	ldr	r2, [pc, #84]	; (8001974 <HAL_ADC_Start+0x198>)
 800191e:	4293      	cmp	r3, r2
 8001920:	d11b      	bne.n	800195a <HAL_ADC_Start+0x17e>
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	689b      	ldr	r3, [r3, #8]
 8001928:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800192c:	2b00      	cmp	r3, #0
 800192e:	d114      	bne.n	800195a <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	689a      	ldr	r2, [r3, #8]
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800193e:	609a      	str	r2, [r3, #8]
 8001940:	e00b      	b.n	800195a <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001946:	f043 0210 	orr.w	r2, r3, #16
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001952:	f043 0201 	orr.w	r2, r3, #1
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 800195a:	2300      	movs	r3, #0
}
 800195c:	4618      	mov	r0, r3
 800195e:	3714      	adds	r7, #20
 8001960:	46bd      	mov	sp, r7
 8001962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001966:	4770      	bx	lr
 8001968:	20000000 	.word	0x20000000
 800196c:	431bde83 	.word	0x431bde83
 8001970:	40012300 	.word	0x40012300
 8001974:	40012000 	.word	0x40012000
 8001978:	40012100 	.word	0x40012100
 800197c:	40012200 	.word	0x40012200

08001980 <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 8001980:	b480      	push	{r7}
 8001982:	b083      	sub	sp, #12
 8001984:	af00      	add	r7, sp, #0
 8001986:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800198e:	2b01      	cmp	r3, #1
 8001990:	d101      	bne.n	8001996 <HAL_ADC_Stop+0x16>
 8001992:	2302      	movs	r3, #2
 8001994:	e021      	b.n	80019da <HAL_ADC_Stop+0x5a>
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	2201      	movs	r2, #1
 800199a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	689a      	ldr	r2, [r3, #8]
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	f022 0201 	bic.w	r2, r2, #1
 80019ac:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	689b      	ldr	r3, [r3, #8]
 80019b4:	f003 0301 	and.w	r3, r3, #1
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d109      	bne.n	80019d0 <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019c0:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80019c4:	f023 0301 	bic.w	r3, r3, #1
 80019c8:	f043 0201 	orr.w	r2, r3, #1
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	2200      	movs	r2, #0
 80019d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80019d8:	2300      	movs	r3, #0
}
 80019da:	4618      	mov	r0, r3
 80019dc:	370c      	adds	r7, #12
 80019de:	46bd      	mov	sp, r7
 80019e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e4:	4770      	bx	lr

080019e6 <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 80019e6:	b580      	push	{r7, lr}
 80019e8:	b084      	sub	sp, #16
 80019ea:	af00      	add	r7, sp, #0
 80019ec:	6078      	str	r0, [r7, #4]
 80019ee:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 80019f0:	2300      	movs	r3, #0
 80019f2:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	689b      	ldr	r3, [r3, #8]
 80019fa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80019fe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001a02:	d113      	bne.n	8001a2c <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	689b      	ldr	r3, [r3, #8]
 8001a0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8001a0e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001a12:	d10b      	bne.n	8001a2c <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a18:	f043 0220 	orr.w	r2, r3, #32
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	2200      	movs	r2, #0
 8001a24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8001a28:	2301      	movs	r3, #1
 8001a2a:	e063      	b.n	8001af4 <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8001a2c:	f7ff fe62 	bl	80016f4 <HAL_GetTick>
 8001a30:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001a32:	e021      	b.n	8001a78 <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a3a:	d01d      	beq.n	8001a78 <HAL_ADC_PollForConversion+0x92>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8001a3c:	683b      	ldr	r3, [r7, #0]
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	d007      	beq.n	8001a52 <HAL_ADC_PollForConversion+0x6c>
 8001a42:	f7ff fe57 	bl	80016f4 <HAL_GetTick>
 8001a46:	4602      	mov	r2, r0
 8001a48:	68fb      	ldr	r3, [r7, #12]
 8001a4a:	1ad3      	subs	r3, r2, r3
 8001a4c:	683a      	ldr	r2, [r7, #0]
 8001a4e:	429a      	cmp	r2, r3
 8001a50:	d212      	bcs.n	8001a78 <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	681b      	ldr	r3, [r3, #0]
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	f003 0302 	and.w	r3, r3, #2
 8001a5c:	2b02      	cmp	r3, #2
 8001a5e:	d00b      	beq.n	8001a78 <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a64:	f043 0204 	orr.w	r2, r3, #4
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	641a      	str	r2, [r3, #64]	; 0x40
          
          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	2200      	movs	r2, #0
 8001a70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
          
          return HAL_TIMEOUT;
 8001a74:	2303      	movs	r3, #3
 8001a76:	e03d      	b.n	8001af4 <HAL_ADC_PollForConversion+0x10e>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	f003 0302 	and.w	r3, r3, #2
 8001a82:	2b02      	cmp	r3, #2
 8001a84:	d1d6      	bne.n	8001a34 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	f06f 0212 	mvn.w	r2, #18
 8001a8e:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a94:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	689b      	ldr	r3, [r3, #8]
 8001aa2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	d123      	bne.n	8001af2 <HAL_ADC_PollForConversion+0x10c>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001aae:	2b00      	cmp	r3, #0
 8001ab0:	d11f      	bne.n	8001af2 <HAL_ADC_PollForConversion+0x10c>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001ab8:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d006      	beq.n	8001ace <HAL_ADC_PollForConversion+0xe8>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	689b      	ldr	r3, [r3, #8]
 8001ac6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d111      	bne.n	8001af2 <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ad2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ade:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001ae2:	2b00      	cmp	r3, #0
 8001ae4:	d105      	bne.n	8001af2 <HAL_ADC_PollForConversion+0x10c>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aea:	f043 0201 	orr.w	r2, r3, #1
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 8001af2:	2300      	movs	r3, #0
}
 8001af4:	4618      	mov	r0, r3
 8001af6:	3710      	adds	r7, #16
 8001af8:	46bd      	mov	sp, r7
 8001afa:	bd80      	pop	{r7, pc}

08001afc <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8001afc:	b480      	push	{r7}
 8001afe:	b083      	sub	sp, #12
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8001b0a:	4618      	mov	r0, r3
 8001b0c:	370c      	adds	r7, #12
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b14:	4770      	bx	lr
	...

08001b18 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8001b18:	b480      	push	{r7}
 8001b1a:	b085      	sub	sp, #20
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	6078      	str	r0, [r7, #4]
 8001b20:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8001b22:	2300      	movs	r3, #0
 8001b24:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001b2c:	2b01      	cmp	r3, #1
 8001b2e:	d101      	bne.n	8001b34 <HAL_ADC_ConfigChannel+0x1c>
 8001b30:	2302      	movs	r3, #2
 8001b32:	e105      	b.n	8001d40 <HAL_ADC_ConfigChannel+0x228>
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	2201      	movs	r2, #1
 8001b38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8001b3c:	683b      	ldr	r3, [r7, #0]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	2b09      	cmp	r3, #9
 8001b42:	d925      	bls.n	8001b90 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	68d9      	ldr	r1, [r3, #12]
 8001b4a:	683b      	ldr	r3, [r7, #0]
 8001b4c:	681b      	ldr	r3, [r3, #0]
 8001b4e:	b29b      	uxth	r3, r3
 8001b50:	461a      	mov	r2, r3
 8001b52:	4613      	mov	r3, r2
 8001b54:	005b      	lsls	r3, r3, #1
 8001b56:	4413      	add	r3, r2
 8001b58:	3b1e      	subs	r3, #30
 8001b5a:	2207      	movs	r2, #7
 8001b5c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b60:	43da      	mvns	r2, r3
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	400a      	ands	r2, r1
 8001b68:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	68d9      	ldr	r1, [r3, #12]
 8001b70:	683b      	ldr	r3, [r7, #0]
 8001b72:	689a      	ldr	r2, [r3, #8]
 8001b74:	683b      	ldr	r3, [r7, #0]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	b29b      	uxth	r3, r3
 8001b7a:	4618      	mov	r0, r3
 8001b7c:	4603      	mov	r3, r0
 8001b7e:	005b      	lsls	r3, r3, #1
 8001b80:	4403      	add	r3, r0
 8001b82:	3b1e      	subs	r3, #30
 8001b84:	409a      	lsls	r2, r3
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	430a      	orrs	r2, r1
 8001b8c:	60da      	str	r2, [r3, #12]
 8001b8e:	e022      	b.n	8001bd6 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	6919      	ldr	r1, [r3, #16]
 8001b96:	683b      	ldr	r3, [r7, #0]
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	b29b      	uxth	r3, r3
 8001b9c:	461a      	mov	r2, r3
 8001b9e:	4613      	mov	r3, r2
 8001ba0:	005b      	lsls	r3, r3, #1
 8001ba2:	4413      	add	r3, r2
 8001ba4:	2207      	movs	r2, #7
 8001ba6:	fa02 f303 	lsl.w	r3, r2, r3
 8001baa:	43da      	mvns	r2, r3
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	400a      	ands	r2, r1
 8001bb2:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	6919      	ldr	r1, [r3, #16]
 8001bba:	683b      	ldr	r3, [r7, #0]
 8001bbc:	689a      	ldr	r2, [r3, #8]
 8001bbe:	683b      	ldr	r3, [r7, #0]
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	b29b      	uxth	r3, r3
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	4603      	mov	r3, r0
 8001bc8:	005b      	lsls	r3, r3, #1
 8001bca:	4403      	add	r3, r0
 8001bcc:	409a      	lsls	r2, r3
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	430a      	orrs	r2, r1
 8001bd4:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8001bd6:	683b      	ldr	r3, [r7, #0]
 8001bd8:	685b      	ldr	r3, [r3, #4]
 8001bda:	2b06      	cmp	r3, #6
 8001bdc:	d824      	bhi.n	8001c28 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001be4:	683b      	ldr	r3, [r7, #0]
 8001be6:	685a      	ldr	r2, [r3, #4]
 8001be8:	4613      	mov	r3, r2
 8001bea:	009b      	lsls	r3, r3, #2
 8001bec:	4413      	add	r3, r2
 8001bee:	3b05      	subs	r3, #5
 8001bf0:	221f      	movs	r2, #31
 8001bf2:	fa02 f303 	lsl.w	r3, r2, r3
 8001bf6:	43da      	mvns	r2, r3
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	400a      	ands	r2, r1
 8001bfe:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001c06:	683b      	ldr	r3, [r7, #0]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	b29b      	uxth	r3, r3
 8001c0c:	4618      	mov	r0, r3
 8001c0e:	683b      	ldr	r3, [r7, #0]
 8001c10:	685a      	ldr	r2, [r3, #4]
 8001c12:	4613      	mov	r3, r2
 8001c14:	009b      	lsls	r3, r3, #2
 8001c16:	4413      	add	r3, r2
 8001c18:	3b05      	subs	r3, #5
 8001c1a:	fa00 f203 	lsl.w	r2, r0, r3
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	681b      	ldr	r3, [r3, #0]
 8001c22:	430a      	orrs	r2, r1
 8001c24:	635a      	str	r2, [r3, #52]	; 0x34
 8001c26:	e04c      	b.n	8001cc2 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8001c28:	683b      	ldr	r3, [r7, #0]
 8001c2a:	685b      	ldr	r3, [r3, #4]
 8001c2c:	2b0c      	cmp	r3, #12
 8001c2e:	d824      	bhi.n	8001c7a <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c36:	683b      	ldr	r3, [r7, #0]
 8001c38:	685a      	ldr	r2, [r3, #4]
 8001c3a:	4613      	mov	r3, r2
 8001c3c:	009b      	lsls	r3, r3, #2
 8001c3e:	4413      	add	r3, r2
 8001c40:	3b23      	subs	r3, #35	; 0x23
 8001c42:	221f      	movs	r2, #31
 8001c44:	fa02 f303 	lsl.w	r3, r2, r3
 8001c48:	43da      	mvns	r2, r3
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	400a      	ands	r2, r1
 8001c50:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c58:	683b      	ldr	r3, [r7, #0]
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	b29b      	uxth	r3, r3
 8001c5e:	4618      	mov	r0, r3
 8001c60:	683b      	ldr	r3, [r7, #0]
 8001c62:	685a      	ldr	r2, [r3, #4]
 8001c64:	4613      	mov	r3, r2
 8001c66:	009b      	lsls	r3, r3, #2
 8001c68:	4413      	add	r3, r2
 8001c6a:	3b23      	subs	r3, #35	; 0x23
 8001c6c:	fa00 f203 	lsl.w	r2, r0, r3
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	430a      	orrs	r2, r1
 8001c76:	631a      	str	r2, [r3, #48]	; 0x30
 8001c78:	e023      	b.n	8001cc2 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001c80:	683b      	ldr	r3, [r7, #0]
 8001c82:	685a      	ldr	r2, [r3, #4]
 8001c84:	4613      	mov	r3, r2
 8001c86:	009b      	lsls	r3, r3, #2
 8001c88:	4413      	add	r3, r2
 8001c8a:	3b41      	subs	r3, #65	; 0x41
 8001c8c:	221f      	movs	r2, #31
 8001c8e:	fa02 f303 	lsl.w	r3, r2, r3
 8001c92:	43da      	mvns	r2, r3
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	400a      	ands	r2, r1
 8001c9a:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ca2:	683b      	ldr	r3, [r7, #0]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	b29b      	uxth	r3, r3
 8001ca8:	4618      	mov	r0, r3
 8001caa:	683b      	ldr	r3, [r7, #0]
 8001cac:	685a      	ldr	r2, [r3, #4]
 8001cae:	4613      	mov	r3, r2
 8001cb0:	009b      	lsls	r3, r3, #2
 8001cb2:	4413      	add	r3, r2
 8001cb4:	3b41      	subs	r3, #65	; 0x41
 8001cb6:	fa00 f203 	lsl.w	r2, r0, r3
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	430a      	orrs	r2, r1
 8001cc0:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001cc2:	4b22      	ldr	r3, [pc, #136]	; (8001d4c <HAL_ADC_ConfigChannel+0x234>)
 8001cc4:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	4a21      	ldr	r2, [pc, #132]	; (8001d50 <HAL_ADC_ConfigChannel+0x238>)
 8001ccc:	4293      	cmp	r3, r2
 8001cce:	d109      	bne.n	8001ce4 <HAL_ADC_ConfigChannel+0x1cc>
 8001cd0:	683b      	ldr	r3, [r7, #0]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	2b12      	cmp	r3, #18
 8001cd6:	d105      	bne.n	8001ce4 <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8001cd8:	68fb      	ldr	r3, [r7, #12]
 8001cda:	685b      	ldr	r3, [r3, #4]
 8001cdc:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8001ce0:	68fb      	ldr	r3, [r7, #12]
 8001ce2:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	4a19      	ldr	r2, [pc, #100]	; (8001d50 <HAL_ADC_ConfigChannel+0x238>)
 8001cea:	4293      	cmp	r3, r2
 8001cec:	d123      	bne.n	8001d36 <HAL_ADC_ConfigChannel+0x21e>
 8001cee:	683b      	ldr	r3, [r7, #0]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	2b10      	cmp	r3, #16
 8001cf4:	d003      	beq.n	8001cfe <HAL_ADC_ConfigChannel+0x1e6>
 8001cf6:	683b      	ldr	r3, [r7, #0]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	2b11      	cmp	r3, #17
 8001cfc:	d11b      	bne.n	8001d36 <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8001cfe:	68fb      	ldr	r3, [r7, #12]
 8001d00:	685b      	ldr	r3, [r3, #4]
 8001d02:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8001d06:	68fb      	ldr	r3, [r7, #12]
 8001d08:	605a      	str	r2, [r3, #4]
    
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001d0a:	683b      	ldr	r3, [r7, #0]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	2b10      	cmp	r3, #16
 8001d10:	d111      	bne.n	8001d36 <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8001d12:	4b10      	ldr	r3, [pc, #64]	; (8001d54 <HAL_ADC_ConfigChannel+0x23c>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4a10      	ldr	r2, [pc, #64]	; (8001d58 <HAL_ADC_ConfigChannel+0x240>)
 8001d18:	fba2 2303 	umull	r2, r3, r2, r3
 8001d1c:	0c9a      	lsrs	r2, r3, #18
 8001d1e:	4613      	mov	r3, r2
 8001d20:	009b      	lsls	r3, r3, #2
 8001d22:	4413      	add	r3, r2
 8001d24:	005b      	lsls	r3, r3, #1
 8001d26:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001d28:	e002      	b.n	8001d30 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 8001d2a:	68bb      	ldr	r3, [r7, #8]
 8001d2c:	3b01      	subs	r3, #1
 8001d2e:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001d30:	68bb      	ldr	r3, [r7, #8]
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d1f9      	bne.n	8001d2a <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	2200      	movs	r2, #0
 8001d3a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8001d3e:	2300      	movs	r3, #0
}
 8001d40:	4618      	mov	r0, r3
 8001d42:	3714      	adds	r7, #20
 8001d44:	46bd      	mov	sp, r7
 8001d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4a:	4770      	bx	lr
 8001d4c:	40012300 	.word	0x40012300
 8001d50:	40012000 	.word	0x40012000
 8001d54:	20000000 	.word	0x20000000
 8001d58:	431bde83 	.word	0x431bde83

08001d5c <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001d5c:	b480      	push	{r7}
 8001d5e:	b085      	sub	sp, #20
 8001d60:	af00      	add	r7, sp, #0
 8001d62:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001d64:	4b79      	ldr	r3, [pc, #484]	; (8001f4c <ADC_Init+0x1f0>)
 8001d66:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8001d68:	68fb      	ldr	r3, [r7, #12]
 8001d6a:	685b      	ldr	r3, [r3, #4]
 8001d6c:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	685a      	ldr	r2, [r3, #4]
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	685b      	ldr	r3, [r3, #4]
 8001d7c:	431a      	orrs	r2, r3
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	685a      	ldr	r2, [r3, #4]
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001d90:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	6859      	ldr	r1, [r3, #4]
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	691b      	ldr	r3, [r3, #16]
 8001d9c:	021a      	lsls	r2, r3, #8
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	430a      	orrs	r2, r1
 8001da4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	685a      	ldr	r2, [r3, #4]
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8001db4:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	6859      	ldr	r1, [r3, #4]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	689a      	ldr	r2, [r3, #8]
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	430a      	orrs	r2, r1
 8001dc6:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	689a      	ldr	r2, [r3, #8]
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001dd6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	6899      	ldr	r1, [r3, #8]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	68da      	ldr	r2, [r3, #12]
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	430a      	orrs	r2, r1
 8001de8:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001dee:	4a58      	ldr	r2, [pc, #352]	; (8001f50 <ADC_Init+0x1f4>)
 8001df0:	4293      	cmp	r3, r2
 8001df2:	d022      	beq.n	8001e3a <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	689a      	ldr	r2, [r3, #8]
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001e02:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	6899      	ldr	r1, [r3, #8]
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	430a      	orrs	r2, r1
 8001e14:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	689a      	ldr	r2, [r3, #8]
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001e24:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	6899      	ldr	r1, [r3, #8]
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	430a      	orrs	r2, r1
 8001e36:	609a      	str	r2, [r3, #8]
 8001e38:	e00f      	b.n	8001e5a <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	681b      	ldr	r3, [r3, #0]
 8001e3e:	689a      	ldr	r2, [r3, #8]
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001e48:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	689a      	ldr	r2, [r3, #8]
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001e58:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	689a      	ldr	r2, [r3, #8]
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	f022 0202 	bic.w	r2, r2, #2
 8001e68:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	6899      	ldr	r1, [r3, #8]
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	7e1b      	ldrb	r3, [r3, #24]
 8001e74:	005a      	lsls	r2, r3, #1
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	430a      	orrs	r2, r1
 8001e7c:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d01b      	beq.n	8001ec0 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	685a      	ldr	r2, [r3, #4]
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001e96:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	685a      	ldr	r2, [r3, #4]
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8001ea6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	6859      	ldr	r1, [r3, #4]
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001eb2:	3b01      	subs	r3, #1
 8001eb4:	035a      	lsls	r2, r3, #13
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	430a      	orrs	r2, r1
 8001ebc:	605a      	str	r2, [r3, #4]
 8001ebe:	e007      	b.n	8001ed0 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	685a      	ldr	r2, [r3, #4]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001ece:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8001ede:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	69db      	ldr	r3, [r3, #28]
 8001eea:	3b01      	subs	r3, #1
 8001eec:	051a      	lsls	r2, r3, #20
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	430a      	orrs	r2, r1
 8001ef4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	689a      	ldr	r2, [r3, #8]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8001f04:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	6899      	ldr	r1, [r3, #8]
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8001f12:	025a      	lsls	r2, r3, #9
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	430a      	orrs	r2, r1
 8001f1a:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	689a      	ldr	r2, [r3, #8]
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001f2a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	6899      	ldr	r1, [r3, #8]
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	695b      	ldr	r3, [r3, #20]
 8001f36:	029a      	lsls	r2, r3, #10
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	430a      	orrs	r2, r1
 8001f3e:	609a      	str	r2, [r3, #8]
}
 8001f40:	bf00      	nop
 8001f42:	3714      	adds	r7, #20
 8001f44:	46bd      	mov	sp, r7
 8001f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f4a:	4770      	bx	lr
 8001f4c:	40012300 	.word	0x40012300
 8001f50:	0f000001 	.word	0x0f000001

08001f54 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001f54:	b480      	push	{r7}
 8001f56:	b085      	sub	sp, #20
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	f003 0307 	and.w	r3, r3, #7
 8001f62:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001f64:	4b0c      	ldr	r3, [pc, #48]	; (8001f98 <__NVIC_SetPriorityGrouping+0x44>)
 8001f66:	68db      	ldr	r3, [r3, #12]
 8001f68:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001f6a:	68ba      	ldr	r2, [r7, #8]
 8001f6c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001f70:	4013      	ands	r3, r2
 8001f72:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001f78:	68bb      	ldr	r3, [r7, #8]
 8001f7a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001f7c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001f80:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001f84:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001f86:	4a04      	ldr	r2, [pc, #16]	; (8001f98 <__NVIC_SetPriorityGrouping+0x44>)
 8001f88:	68bb      	ldr	r3, [r7, #8]
 8001f8a:	60d3      	str	r3, [r2, #12]
}
 8001f8c:	bf00      	nop
 8001f8e:	3714      	adds	r7, #20
 8001f90:	46bd      	mov	sp, r7
 8001f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f96:	4770      	bx	lr
 8001f98:	e000ed00 	.word	0xe000ed00

08001f9c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001f9c:	b480      	push	{r7}
 8001f9e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001fa0:	4b04      	ldr	r3, [pc, #16]	; (8001fb4 <__NVIC_GetPriorityGrouping+0x18>)
 8001fa2:	68db      	ldr	r3, [r3, #12]
 8001fa4:	0a1b      	lsrs	r3, r3, #8
 8001fa6:	f003 0307 	and.w	r3, r3, #7
}
 8001faa:	4618      	mov	r0, r3
 8001fac:	46bd      	mov	sp, r7
 8001fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb2:	4770      	bx	lr
 8001fb4:	e000ed00 	.word	0xe000ed00

08001fb8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	4603      	mov	r3, r0
 8001fc0:	6039      	str	r1, [r7, #0]
 8001fc2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001fc4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	db0a      	blt.n	8001fe2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fcc:	683b      	ldr	r3, [r7, #0]
 8001fce:	b2da      	uxtb	r2, r3
 8001fd0:	490c      	ldr	r1, [pc, #48]	; (8002004 <__NVIC_SetPriority+0x4c>)
 8001fd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001fd6:	0112      	lsls	r2, r2, #4
 8001fd8:	b2d2      	uxtb	r2, r2
 8001fda:	440b      	add	r3, r1
 8001fdc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001fe0:	e00a      	b.n	8001ff8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fe2:	683b      	ldr	r3, [r7, #0]
 8001fe4:	b2da      	uxtb	r2, r3
 8001fe6:	4908      	ldr	r1, [pc, #32]	; (8002008 <__NVIC_SetPriority+0x50>)
 8001fe8:	79fb      	ldrb	r3, [r7, #7]
 8001fea:	f003 030f 	and.w	r3, r3, #15
 8001fee:	3b04      	subs	r3, #4
 8001ff0:	0112      	lsls	r2, r2, #4
 8001ff2:	b2d2      	uxtb	r2, r2
 8001ff4:	440b      	add	r3, r1
 8001ff6:	761a      	strb	r2, [r3, #24]
}
 8001ff8:	bf00      	nop
 8001ffa:	370c      	adds	r7, #12
 8001ffc:	46bd      	mov	sp, r7
 8001ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002002:	4770      	bx	lr
 8002004:	e000e100 	.word	0xe000e100
 8002008:	e000ed00 	.word	0xe000ed00

0800200c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800200c:	b480      	push	{r7}
 800200e:	b089      	sub	sp, #36	; 0x24
 8002010:	af00      	add	r7, sp, #0
 8002012:	60f8      	str	r0, [r7, #12]
 8002014:	60b9      	str	r1, [r7, #8]
 8002016:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	f003 0307 	and.w	r3, r3, #7
 800201e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002020:	69fb      	ldr	r3, [r7, #28]
 8002022:	f1c3 0307 	rsb	r3, r3, #7
 8002026:	2b04      	cmp	r3, #4
 8002028:	bf28      	it	cs
 800202a:	2304      	movcs	r3, #4
 800202c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800202e:	69fb      	ldr	r3, [r7, #28]
 8002030:	3304      	adds	r3, #4
 8002032:	2b06      	cmp	r3, #6
 8002034:	d902      	bls.n	800203c <NVIC_EncodePriority+0x30>
 8002036:	69fb      	ldr	r3, [r7, #28]
 8002038:	3b03      	subs	r3, #3
 800203a:	e000      	b.n	800203e <NVIC_EncodePriority+0x32>
 800203c:	2300      	movs	r3, #0
 800203e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002040:	f04f 32ff 	mov.w	r2, #4294967295
 8002044:	69bb      	ldr	r3, [r7, #24]
 8002046:	fa02 f303 	lsl.w	r3, r2, r3
 800204a:	43da      	mvns	r2, r3
 800204c:	68bb      	ldr	r3, [r7, #8]
 800204e:	401a      	ands	r2, r3
 8002050:	697b      	ldr	r3, [r7, #20]
 8002052:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002054:	f04f 31ff 	mov.w	r1, #4294967295
 8002058:	697b      	ldr	r3, [r7, #20]
 800205a:	fa01 f303 	lsl.w	r3, r1, r3
 800205e:	43d9      	mvns	r1, r3
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002064:	4313      	orrs	r3, r2
         );
}
 8002066:	4618      	mov	r0, r3
 8002068:	3724      	adds	r7, #36	; 0x24
 800206a:	46bd      	mov	sp, r7
 800206c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002070:	4770      	bx	lr
	...

08002074 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002074:	b580      	push	{r7, lr}
 8002076:	b082      	sub	sp, #8
 8002078:	af00      	add	r7, sp, #0
 800207a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	3b01      	subs	r3, #1
 8002080:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002084:	d301      	bcc.n	800208a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002086:	2301      	movs	r3, #1
 8002088:	e00f      	b.n	80020aa <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800208a:	4a0a      	ldr	r2, [pc, #40]	; (80020b4 <SysTick_Config+0x40>)
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	3b01      	subs	r3, #1
 8002090:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002092:	210f      	movs	r1, #15
 8002094:	f04f 30ff 	mov.w	r0, #4294967295
 8002098:	f7ff ff8e 	bl	8001fb8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800209c:	4b05      	ldr	r3, [pc, #20]	; (80020b4 <SysTick_Config+0x40>)
 800209e:	2200      	movs	r2, #0
 80020a0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80020a2:	4b04      	ldr	r3, [pc, #16]	; (80020b4 <SysTick_Config+0x40>)
 80020a4:	2207      	movs	r2, #7
 80020a6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80020a8:	2300      	movs	r3, #0
}
 80020aa:	4618      	mov	r0, r3
 80020ac:	3708      	adds	r7, #8
 80020ae:	46bd      	mov	sp, r7
 80020b0:	bd80      	pop	{r7, pc}
 80020b2:	bf00      	nop
 80020b4:	e000e010 	.word	0xe000e010

080020b8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b082      	sub	sp, #8
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80020c0:	6878      	ldr	r0, [r7, #4]
 80020c2:	f7ff ff47 	bl	8001f54 <__NVIC_SetPriorityGrouping>
}
 80020c6:	bf00      	nop
 80020c8:	3708      	adds	r7, #8
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bd80      	pop	{r7, pc}

080020ce <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80020ce:	b580      	push	{r7, lr}
 80020d0:	b086      	sub	sp, #24
 80020d2:	af00      	add	r7, sp, #0
 80020d4:	4603      	mov	r3, r0
 80020d6:	60b9      	str	r1, [r7, #8]
 80020d8:	607a      	str	r2, [r7, #4]
 80020da:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80020dc:	2300      	movs	r3, #0
 80020de:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80020e0:	f7ff ff5c 	bl	8001f9c <__NVIC_GetPriorityGrouping>
 80020e4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80020e6:	687a      	ldr	r2, [r7, #4]
 80020e8:	68b9      	ldr	r1, [r7, #8]
 80020ea:	6978      	ldr	r0, [r7, #20]
 80020ec:	f7ff ff8e 	bl	800200c <NVIC_EncodePriority>
 80020f0:	4602      	mov	r2, r0
 80020f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80020f6:	4611      	mov	r1, r2
 80020f8:	4618      	mov	r0, r3
 80020fa:	f7ff ff5d 	bl	8001fb8 <__NVIC_SetPriority>
}
 80020fe:	bf00      	nop
 8002100:	3718      	adds	r7, #24
 8002102:	46bd      	mov	sp, r7
 8002104:	bd80      	pop	{r7, pc}

08002106 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002106:	b580      	push	{r7, lr}
 8002108:	b082      	sub	sp, #8
 800210a:	af00      	add	r7, sp, #0
 800210c:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800210e:	6878      	ldr	r0, [r7, #4]
 8002110:	f7ff ffb0 	bl	8002074 <SysTick_Config>
 8002114:	4603      	mov	r3, r0
}
 8002116:	4618      	mov	r0, r3
 8002118:	3708      	adds	r7, #8
 800211a:	46bd      	mov	sp, r7
 800211c:	bd80      	pop	{r7, pc}

0800211e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800211e:	b580      	push	{r7, lr}
 8002120:	b082      	sub	sp, #8
 8002122:	af00      	add	r7, sp, #0
 8002124:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	2b00      	cmp	r3, #0
 800212a:	d101      	bne.n	8002130 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800212c:	2301      	movs	r3, #1
 800212e:	e00e      	b.n	800214e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	795b      	ldrb	r3, [r3, #5]
 8002134:	b2db      	uxtb	r3, r3
 8002136:	2b00      	cmp	r3, #0
 8002138:	d105      	bne.n	8002146 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	2200      	movs	r2, #0
 800213e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002140:	6878      	ldr	r0, [r7, #4]
 8002142:	f7ff f9a1 	bl	8001488 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	2201      	movs	r2, #1
 800214a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800214c:	2300      	movs	r3, #0
}
 800214e:	4618      	mov	r0, r3
 8002150:	3708      	adds	r7, #8
 8002152:	46bd      	mov	sp, r7
 8002154:	bd80      	pop	{r7, pc}
	...

08002158 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002158:	b480      	push	{r7}
 800215a:	b089      	sub	sp, #36	; 0x24
 800215c:	af00      	add	r7, sp, #0
 800215e:	6078      	str	r0, [r7, #4]
 8002160:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8002162:	2300      	movs	r3, #0
 8002164:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8002166:	2300      	movs	r3, #0
 8002168:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800216a:	2300      	movs	r3, #0
 800216c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800216e:	2300      	movs	r3, #0
 8002170:	61fb      	str	r3, [r7, #28]
 8002172:	e16b      	b.n	800244c <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8002174:	2201      	movs	r2, #1
 8002176:	69fb      	ldr	r3, [r7, #28]
 8002178:	fa02 f303 	lsl.w	r3, r2, r3
 800217c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800217e:	683b      	ldr	r3, [r7, #0]
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	697a      	ldr	r2, [r7, #20]
 8002184:	4013      	ands	r3, r2
 8002186:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8002188:	693a      	ldr	r2, [r7, #16]
 800218a:	697b      	ldr	r3, [r7, #20]
 800218c:	429a      	cmp	r2, r3
 800218e:	f040 815a 	bne.w	8002446 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002192:	683b      	ldr	r3, [r7, #0]
 8002194:	685b      	ldr	r3, [r3, #4]
 8002196:	f003 0303 	and.w	r3, r3, #3
 800219a:	2b01      	cmp	r3, #1
 800219c:	d005      	beq.n	80021aa <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800219e:	683b      	ldr	r3, [r7, #0]
 80021a0:	685b      	ldr	r3, [r3, #4]
 80021a2:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80021a6:	2b02      	cmp	r3, #2
 80021a8:	d130      	bne.n	800220c <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	689b      	ldr	r3, [r3, #8]
 80021ae:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80021b0:	69fb      	ldr	r3, [r7, #28]
 80021b2:	005b      	lsls	r3, r3, #1
 80021b4:	2203      	movs	r2, #3
 80021b6:	fa02 f303 	lsl.w	r3, r2, r3
 80021ba:	43db      	mvns	r3, r3
 80021bc:	69ba      	ldr	r2, [r7, #24]
 80021be:	4013      	ands	r3, r2
 80021c0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80021c2:	683b      	ldr	r3, [r7, #0]
 80021c4:	68da      	ldr	r2, [r3, #12]
 80021c6:	69fb      	ldr	r3, [r7, #28]
 80021c8:	005b      	lsls	r3, r3, #1
 80021ca:	fa02 f303 	lsl.w	r3, r2, r3
 80021ce:	69ba      	ldr	r2, [r7, #24]
 80021d0:	4313      	orrs	r3, r2
 80021d2:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	69ba      	ldr	r2, [r7, #24]
 80021d8:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	685b      	ldr	r3, [r3, #4]
 80021de:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80021e0:	2201      	movs	r2, #1
 80021e2:	69fb      	ldr	r3, [r7, #28]
 80021e4:	fa02 f303 	lsl.w	r3, r2, r3
 80021e8:	43db      	mvns	r3, r3
 80021ea:	69ba      	ldr	r2, [r7, #24]
 80021ec:	4013      	ands	r3, r2
 80021ee:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80021f0:	683b      	ldr	r3, [r7, #0]
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	091b      	lsrs	r3, r3, #4
 80021f6:	f003 0201 	and.w	r2, r3, #1
 80021fa:	69fb      	ldr	r3, [r7, #28]
 80021fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002200:	69ba      	ldr	r2, [r7, #24]
 8002202:	4313      	orrs	r3, r2
 8002204:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	69ba      	ldr	r2, [r7, #24]
 800220a:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800220c:	683b      	ldr	r3, [r7, #0]
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	f003 0303 	and.w	r3, r3, #3
 8002214:	2b03      	cmp	r3, #3
 8002216:	d017      	beq.n	8002248 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	68db      	ldr	r3, [r3, #12]
 800221c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800221e:	69fb      	ldr	r3, [r7, #28]
 8002220:	005b      	lsls	r3, r3, #1
 8002222:	2203      	movs	r2, #3
 8002224:	fa02 f303 	lsl.w	r3, r2, r3
 8002228:	43db      	mvns	r3, r3
 800222a:	69ba      	ldr	r2, [r7, #24]
 800222c:	4013      	ands	r3, r2
 800222e:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002230:	683b      	ldr	r3, [r7, #0]
 8002232:	689a      	ldr	r2, [r3, #8]
 8002234:	69fb      	ldr	r3, [r7, #28]
 8002236:	005b      	lsls	r3, r3, #1
 8002238:	fa02 f303 	lsl.w	r3, r2, r3
 800223c:	69ba      	ldr	r2, [r7, #24]
 800223e:	4313      	orrs	r3, r2
 8002240:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	69ba      	ldr	r2, [r7, #24]
 8002246:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002248:	683b      	ldr	r3, [r7, #0]
 800224a:	685b      	ldr	r3, [r3, #4]
 800224c:	f003 0303 	and.w	r3, r3, #3
 8002250:	2b02      	cmp	r3, #2
 8002252:	d123      	bne.n	800229c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002254:	69fb      	ldr	r3, [r7, #28]
 8002256:	08da      	lsrs	r2, r3, #3
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	3208      	adds	r2, #8
 800225c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002260:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8002262:	69fb      	ldr	r3, [r7, #28]
 8002264:	f003 0307 	and.w	r3, r3, #7
 8002268:	009b      	lsls	r3, r3, #2
 800226a:	220f      	movs	r2, #15
 800226c:	fa02 f303 	lsl.w	r3, r2, r3
 8002270:	43db      	mvns	r3, r3
 8002272:	69ba      	ldr	r2, [r7, #24]
 8002274:	4013      	ands	r3, r2
 8002276:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8002278:	683b      	ldr	r3, [r7, #0]
 800227a:	691a      	ldr	r2, [r3, #16]
 800227c:	69fb      	ldr	r3, [r7, #28]
 800227e:	f003 0307 	and.w	r3, r3, #7
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	fa02 f303 	lsl.w	r3, r2, r3
 8002288:	69ba      	ldr	r2, [r7, #24]
 800228a:	4313      	orrs	r3, r2
 800228c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 800228e:	69fb      	ldr	r3, [r7, #28]
 8002290:	08da      	lsrs	r2, r3, #3
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	3208      	adds	r2, #8
 8002296:	69b9      	ldr	r1, [r7, #24]
 8002298:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80022a2:	69fb      	ldr	r3, [r7, #28]
 80022a4:	005b      	lsls	r3, r3, #1
 80022a6:	2203      	movs	r2, #3
 80022a8:	fa02 f303 	lsl.w	r3, r2, r3
 80022ac:	43db      	mvns	r3, r3
 80022ae:	69ba      	ldr	r2, [r7, #24]
 80022b0:	4013      	ands	r3, r2
 80022b2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80022b4:	683b      	ldr	r3, [r7, #0]
 80022b6:	685b      	ldr	r3, [r3, #4]
 80022b8:	f003 0203 	and.w	r2, r3, #3
 80022bc:	69fb      	ldr	r3, [r7, #28]
 80022be:	005b      	lsls	r3, r3, #1
 80022c0:	fa02 f303 	lsl.w	r3, r2, r3
 80022c4:	69ba      	ldr	r2, [r7, #24]
 80022c6:	4313      	orrs	r3, r2
 80022c8:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	69ba      	ldr	r2, [r7, #24]
 80022ce:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80022d0:	683b      	ldr	r3, [r7, #0]
 80022d2:	685b      	ldr	r3, [r3, #4]
 80022d4:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80022d8:	2b00      	cmp	r3, #0
 80022da:	f000 80b4 	beq.w	8002446 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80022de:	2300      	movs	r3, #0
 80022e0:	60fb      	str	r3, [r7, #12]
 80022e2:	4b60      	ldr	r3, [pc, #384]	; (8002464 <HAL_GPIO_Init+0x30c>)
 80022e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022e6:	4a5f      	ldr	r2, [pc, #380]	; (8002464 <HAL_GPIO_Init+0x30c>)
 80022e8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80022ec:	6453      	str	r3, [r2, #68]	; 0x44
 80022ee:	4b5d      	ldr	r3, [pc, #372]	; (8002464 <HAL_GPIO_Init+0x30c>)
 80022f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022f2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80022f6:	60fb      	str	r3, [r7, #12]
 80022f8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80022fa:	4a5b      	ldr	r2, [pc, #364]	; (8002468 <HAL_GPIO_Init+0x310>)
 80022fc:	69fb      	ldr	r3, [r7, #28]
 80022fe:	089b      	lsrs	r3, r3, #2
 8002300:	3302      	adds	r3, #2
 8002302:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002306:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8002308:	69fb      	ldr	r3, [r7, #28]
 800230a:	f003 0303 	and.w	r3, r3, #3
 800230e:	009b      	lsls	r3, r3, #2
 8002310:	220f      	movs	r2, #15
 8002312:	fa02 f303 	lsl.w	r3, r2, r3
 8002316:	43db      	mvns	r3, r3
 8002318:	69ba      	ldr	r2, [r7, #24]
 800231a:	4013      	ands	r3, r2
 800231c:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	4a52      	ldr	r2, [pc, #328]	; (800246c <HAL_GPIO_Init+0x314>)
 8002322:	4293      	cmp	r3, r2
 8002324:	d02b      	beq.n	800237e <HAL_GPIO_Init+0x226>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	4a51      	ldr	r2, [pc, #324]	; (8002470 <HAL_GPIO_Init+0x318>)
 800232a:	4293      	cmp	r3, r2
 800232c:	d025      	beq.n	800237a <HAL_GPIO_Init+0x222>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	4a50      	ldr	r2, [pc, #320]	; (8002474 <HAL_GPIO_Init+0x31c>)
 8002332:	4293      	cmp	r3, r2
 8002334:	d01f      	beq.n	8002376 <HAL_GPIO_Init+0x21e>
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	4a4f      	ldr	r2, [pc, #316]	; (8002478 <HAL_GPIO_Init+0x320>)
 800233a:	4293      	cmp	r3, r2
 800233c:	d019      	beq.n	8002372 <HAL_GPIO_Init+0x21a>
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	4a4e      	ldr	r2, [pc, #312]	; (800247c <HAL_GPIO_Init+0x324>)
 8002342:	4293      	cmp	r3, r2
 8002344:	d013      	beq.n	800236e <HAL_GPIO_Init+0x216>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	4a4d      	ldr	r2, [pc, #308]	; (8002480 <HAL_GPIO_Init+0x328>)
 800234a:	4293      	cmp	r3, r2
 800234c:	d00d      	beq.n	800236a <HAL_GPIO_Init+0x212>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	4a4c      	ldr	r2, [pc, #304]	; (8002484 <HAL_GPIO_Init+0x32c>)
 8002352:	4293      	cmp	r3, r2
 8002354:	d007      	beq.n	8002366 <HAL_GPIO_Init+0x20e>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	4a4b      	ldr	r2, [pc, #300]	; (8002488 <HAL_GPIO_Init+0x330>)
 800235a:	4293      	cmp	r3, r2
 800235c:	d101      	bne.n	8002362 <HAL_GPIO_Init+0x20a>
 800235e:	2307      	movs	r3, #7
 8002360:	e00e      	b.n	8002380 <HAL_GPIO_Init+0x228>
 8002362:	2308      	movs	r3, #8
 8002364:	e00c      	b.n	8002380 <HAL_GPIO_Init+0x228>
 8002366:	2306      	movs	r3, #6
 8002368:	e00a      	b.n	8002380 <HAL_GPIO_Init+0x228>
 800236a:	2305      	movs	r3, #5
 800236c:	e008      	b.n	8002380 <HAL_GPIO_Init+0x228>
 800236e:	2304      	movs	r3, #4
 8002370:	e006      	b.n	8002380 <HAL_GPIO_Init+0x228>
 8002372:	2303      	movs	r3, #3
 8002374:	e004      	b.n	8002380 <HAL_GPIO_Init+0x228>
 8002376:	2302      	movs	r3, #2
 8002378:	e002      	b.n	8002380 <HAL_GPIO_Init+0x228>
 800237a:	2301      	movs	r3, #1
 800237c:	e000      	b.n	8002380 <HAL_GPIO_Init+0x228>
 800237e:	2300      	movs	r3, #0
 8002380:	69fa      	ldr	r2, [r7, #28]
 8002382:	f002 0203 	and.w	r2, r2, #3
 8002386:	0092      	lsls	r2, r2, #2
 8002388:	4093      	lsls	r3, r2
 800238a:	69ba      	ldr	r2, [r7, #24]
 800238c:	4313      	orrs	r3, r2
 800238e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002390:	4935      	ldr	r1, [pc, #212]	; (8002468 <HAL_GPIO_Init+0x310>)
 8002392:	69fb      	ldr	r3, [r7, #28]
 8002394:	089b      	lsrs	r3, r3, #2
 8002396:	3302      	adds	r3, #2
 8002398:	69ba      	ldr	r2, [r7, #24]
 800239a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800239e:	4b3b      	ldr	r3, [pc, #236]	; (800248c <HAL_GPIO_Init+0x334>)
 80023a0:	689b      	ldr	r3, [r3, #8]
 80023a2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80023a4:	693b      	ldr	r3, [r7, #16]
 80023a6:	43db      	mvns	r3, r3
 80023a8:	69ba      	ldr	r2, [r7, #24]
 80023aa:	4013      	ands	r3, r2
 80023ac:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80023ae:	683b      	ldr	r3, [r7, #0]
 80023b0:	685b      	ldr	r3, [r3, #4]
 80023b2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80023b6:	2b00      	cmp	r3, #0
 80023b8:	d003      	beq.n	80023c2 <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 80023ba:	69ba      	ldr	r2, [r7, #24]
 80023bc:	693b      	ldr	r3, [r7, #16]
 80023be:	4313      	orrs	r3, r2
 80023c0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80023c2:	4a32      	ldr	r2, [pc, #200]	; (800248c <HAL_GPIO_Init+0x334>)
 80023c4:	69bb      	ldr	r3, [r7, #24]
 80023c6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80023c8:	4b30      	ldr	r3, [pc, #192]	; (800248c <HAL_GPIO_Init+0x334>)
 80023ca:	68db      	ldr	r3, [r3, #12]
 80023cc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80023ce:	693b      	ldr	r3, [r7, #16]
 80023d0:	43db      	mvns	r3, r3
 80023d2:	69ba      	ldr	r2, [r7, #24]
 80023d4:	4013      	ands	r3, r2
 80023d6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80023d8:	683b      	ldr	r3, [r7, #0]
 80023da:	685b      	ldr	r3, [r3, #4]
 80023dc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d003      	beq.n	80023ec <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 80023e4:	69ba      	ldr	r2, [r7, #24]
 80023e6:	693b      	ldr	r3, [r7, #16]
 80023e8:	4313      	orrs	r3, r2
 80023ea:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80023ec:	4a27      	ldr	r2, [pc, #156]	; (800248c <HAL_GPIO_Init+0x334>)
 80023ee:	69bb      	ldr	r3, [r7, #24]
 80023f0:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80023f2:	4b26      	ldr	r3, [pc, #152]	; (800248c <HAL_GPIO_Init+0x334>)
 80023f4:	685b      	ldr	r3, [r3, #4]
 80023f6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80023f8:	693b      	ldr	r3, [r7, #16]
 80023fa:	43db      	mvns	r3, r3
 80023fc:	69ba      	ldr	r2, [r7, #24]
 80023fe:	4013      	ands	r3, r2
 8002400:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002402:	683b      	ldr	r3, [r7, #0]
 8002404:	685b      	ldr	r3, [r3, #4]
 8002406:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800240a:	2b00      	cmp	r3, #0
 800240c:	d003      	beq.n	8002416 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 800240e:	69ba      	ldr	r2, [r7, #24]
 8002410:	693b      	ldr	r3, [r7, #16]
 8002412:	4313      	orrs	r3, r2
 8002414:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8002416:	4a1d      	ldr	r2, [pc, #116]	; (800248c <HAL_GPIO_Init+0x334>)
 8002418:	69bb      	ldr	r3, [r7, #24]
 800241a:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800241c:	4b1b      	ldr	r3, [pc, #108]	; (800248c <HAL_GPIO_Init+0x334>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002422:	693b      	ldr	r3, [r7, #16]
 8002424:	43db      	mvns	r3, r3
 8002426:	69ba      	ldr	r2, [r7, #24]
 8002428:	4013      	ands	r3, r2
 800242a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800242c:	683b      	ldr	r3, [r7, #0]
 800242e:	685b      	ldr	r3, [r3, #4]
 8002430:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002434:	2b00      	cmp	r3, #0
 8002436:	d003      	beq.n	8002440 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8002438:	69ba      	ldr	r2, [r7, #24]
 800243a:	693b      	ldr	r3, [r7, #16]
 800243c:	4313      	orrs	r3, r2
 800243e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8002440:	4a12      	ldr	r2, [pc, #72]	; (800248c <HAL_GPIO_Init+0x334>)
 8002442:	69bb      	ldr	r3, [r7, #24]
 8002444:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002446:	69fb      	ldr	r3, [r7, #28]
 8002448:	3301      	adds	r3, #1
 800244a:	61fb      	str	r3, [r7, #28]
 800244c:	69fb      	ldr	r3, [r7, #28]
 800244e:	2b0f      	cmp	r3, #15
 8002450:	f67f ae90 	bls.w	8002174 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8002454:	bf00      	nop
 8002456:	bf00      	nop
 8002458:	3724      	adds	r7, #36	; 0x24
 800245a:	46bd      	mov	sp, r7
 800245c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002460:	4770      	bx	lr
 8002462:	bf00      	nop
 8002464:	40023800 	.word	0x40023800
 8002468:	40013800 	.word	0x40013800
 800246c:	40020000 	.word	0x40020000
 8002470:	40020400 	.word	0x40020400
 8002474:	40020800 	.word	0x40020800
 8002478:	40020c00 	.word	0x40020c00
 800247c:	40021000 	.word	0x40021000
 8002480:	40021400 	.word	0x40021400
 8002484:	40021800 	.word	0x40021800
 8002488:	40021c00 	.word	0x40021c00
 800248c:	40013c00 	.word	0x40013c00

08002490 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002490:	b480      	push	{r7}
 8002492:	b083      	sub	sp, #12
 8002494:	af00      	add	r7, sp, #0
 8002496:	6078      	str	r0, [r7, #4]
 8002498:	460b      	mov	r3, r1
 800249a:	807b      	strh	r3, [r7, #2]
 800249c:	4613      	mov	r3, r2
 800249e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80024a0:	787b      	ldrb	r3, [r7, #1]
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d003      	beq.n	80024ae <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80024a6:	887a      	ldrh	r2, [r7, #2]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80024ac:	e003      	b.n	80024b6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80024ae:	887b      	ldrh	r3, [r7, #2]
 80024b0:	041a      	lsls	r2, r3, #16
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	619a      	str	r2, [r3, #24]
}
 80024b6:	bf00      	nop
 80024b8:	370c      	adds	r7, #12
 80024ba:	46bd      	mov	sp, r7
 80024bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c0:	4770      	bx	lr
	...

080024c4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	b086      	sub	sp, #24
 80024c8:	af00      	add	r7, sp, #0
 80024ca:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d101      	bne.n	80024d6 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80024d2:	2301      	movs	r3, #1
 80024d4:	e267      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f003 0301 	and.w	r3, r3, #1
 80024de:	2b00      	cmp	r3, #0
 80024e0:	d075      	beq.n	80025ce <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80024e2:	4b88      	ldr	r3, [pc, #544]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80024e4:	689b      	ldr	r3, [r3, #8]
 80024e6:	f003 030c 	and.w	r3, r3, #12
 80024ea:	2b04      	cmp	r3, #4
 80024ec:	d00c      	beq.n	8002508 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80024ee:	4b85      	ldr	r3, [pc, #532]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80024f0:	689b      	ldr	r3, [r3, #8]
 80024f2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80024f6:	2b08      	cmp	r3, #8
 80024f8:	d112      	bne.n	8002520 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80024fa:	4b82      	ldr	r3, [pc, #520]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80024fc:	685b      	ldr	r3, [r3, #4]
 80024fe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002502:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002506:	d10b      	bne.n	8002520 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002508:	4b7e      	ldr	r3, [pc, #504]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002510:	2b00      	cmp	r3, #0
 8002512:	d05b      	beq.n	80025cc <HAL_RCC_OscConfig+0x108>
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	685b      	ldr	r3, [r3, #4]
 8002518:	2b00      	cmp	r3, #0
 800251a:	d157      	bne.n	80025cc <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 800251c:	2301      	movs	r3, #1
 800251e:	e242      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	685b      	ldr	r3, [r3, #4]
 8002524:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002528:	d106      	bne.n	8002538 <HAL_RCC_OscConfig+0x74>
 800252a:	4b76      	ldr	r3, [pc, #472]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4a75      	ldr	r2, [pc, #468]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002530:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002534:	6013      	str	r3, [r2, #0]
 8002536:	e01d      	b.n	8002574 <HAL_RCC_OscConfig+0xb0>
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	685b      	ldr	r3, [r3, #4]
 800253c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002540:	d10c      	bne.n	800255c <HAL_RCC_OscConfig+0x98>
 8002542:	4b70      	ldr	r3, [pc, #448]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	4a6f      	ldr	r2, [pc, #444]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002548:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800254c:	6013      	str	r3, [r2, #0]
 800254e:	4b6d      	ldr	r3, [pc, #436]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002550:	681b      	ldr	r3, [r3, #0]
 8002552:	4a6c      	ldr	r2, [pc, #432]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002554:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002558:	6013      	str	r3, [r2, #0]
 800255a:	e00b      	b.n	8002574 <HAL_RCC_OscConfig+0xb0>
 800255c:	4b69      	ldr	r3, [pc, #420]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	4a68      	ldr	r2, [pc, #416]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002562:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002566:	6013      	str	r3, [r2, #0]
 8002568:	4b66      	ldr	r3, [pc, #408]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	4a65      	ldr	r2, [pc, #404]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 800256e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002572:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	685b      	ldr	r3, [r3, #4]
 8002578:	2b00      	cmp	r3, #0
 800257a:	d013      	beq.n	80025a4 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800257c:	f7ff f8ba 	bl	80016f4 <HAL_GetTick>
 8002580:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002582:	e008      	b.n	8002596 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002584:	f7ff f8b6 	bl	80016f4 <HAL_GetTick>
 8002588:	4602      	mov	r2, r0
 800258a:	693b      	ldr	r3, [r7, #16]
 800258c:	1ad3      	subs	r3, r2, r3
 800258e:	2b64      	cmp	r3, #100	; 0x64
 8002590:	d901      	bls.n	8002596 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8002592:	2303      	movs	r3, #3
 8002594:	e207      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002596:	4b5b      	ldr	r3, [pc, #364]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d0f0      	beq.n	8002584 <HAL_RCC_OscConfig+0xc0>
 80025a2:	e014      	b.n	80025ce <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80025a4:	f7ff f8a6 	bl	80016f4 <HAL_GetTick>
 80025a8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80025aa:	e008      	b.n	80025be <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80025ac:	f7ff f8a2 	bl	80016f4 <HAL_GetTick>
 80025b0:	4602      	mov	r2, r0
 80025b2:	693b      	ldr	r3, [r7, #16]
 80025b4:	1ad3      	subs	r3, r2, r3
 80025b6:	2b64      	cmp	r3, #100	; 0x64
 80025b8:	d901      	bls.n	80025be <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80025ba:	2303      	movs	r3, #3
 80025bc:	e1f3      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80025be:	4b51      	ldr	r3, [pc, #324]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d1f0      	bne.n	80025ac <HAL_RCC_OscConfig+0xe8>
 80025ca:	e000      	b.n	80025ce <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80025cc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	f003 0302 	and.w	r3, r3, #2
 80025d6:	2b00      	cmp	r3, #0
 80025d8:	d063      	beq.n	80026a2 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80025da:	4b4a      	ldr	r3, [pc, #296]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80025dc:	689b      	ldr	r3, [r3, #8]
 80025de:	f003 030c 	and.w	r3, r3, #12
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d00b      	beq.n	80025fe <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80025e6:	4b47      	ldr	r3, [pc, #284]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80025e8:	689b      	ldr	r3, [r3, #8]
 80025ea:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80025ee:	2b08      	cmp	r3, #8
 80025f0:	d11c      	bne.n	800262c <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80025f2:	4b44      	ldr	r3, [pc, #272]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80025f4:	685b      	ldr	r3, [r3, #4]
 80025f6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d116      	bne.n	800262c <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80025fe:	4b41      	ldr	r3, [pc, #260]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	f003 0302 	and.w	r3, r3, #2
 8002606:	2b00      	cmp	r3, #0
 8002608:	d005      	beq.n	8002616 <HAL_RCC_OscConfig+0x152>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	68db      	ldr	r3, [r3, #12]
 800260e:	2b01      	cmp	r3, #1
 8002610:	d001      	beq.n	8002616 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8002612:	2301      	movs	r3, #1
 8002614:	e1c7      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002616:	4b3b      	ldr	r3, [pc, #236]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	691b      	ldr	r3, [r3, #16]
 8002622:	00db      	lsls	r3, r3, #3
 8002624:	4937      	ldr	r1, [pc, #220]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002626:	4313      	orrs	r3, r2
 8002628:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800262a:	e03a      	b.n	80026a2 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	68db      	ldr	r3, [r3, #12]
 8002630:	2b00      	cmp	r3, #0
 8002632:	d020      	beq.n	8002676 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8002634:	4b34      	ldr	r3, [pc, #208]	; (8002708 <HAL_RCC_OscConfig+0x244>)
 8002636:	2201      	movs	r2, #1
 8002638:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800263a:	f7ff f85b 	bl	80016f4 <HAL_GetTick>
 800263e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002640:	e008      	b.n	8002654 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002642:	f7ff f857 	bl	80016f4 <HAL_GetTick>
 8002646:	4602      	mov	r2, r0
 8002648:	693b      	ldr	r3, [r7, #16]
 800264a:	1ad3      	subs	r3, r2, r3
 800264c:	2b02      	cmp	r3, #2
 800264e:	d901      	bls.n	8002654 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8002650:	2303      	movs	r3, #3
 8002652:	e1a8      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002654:	4b2b      	ldr	r3, [pc, #172]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	f003 0302 	and.w	r3, r3, #2
 800265c:	2b00      	cmp	r3, #0
 800265e:	d0f0      	beq.n	8002642 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002660:	4b28      	ldr	r3, [pc, #160]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	691b      	ldr	r3, [r3, #16]
 800266c:	00db      	lsls	r3, r3, #3
 800266e:	4925      	ldr	r1, [pc, #148]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002670:	4313      	orrs	r3, r2
 8002672:	600b      	str	r3, [r1, #0]
 8002674:	e015      	b.n	80026a2 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002676:	4b24      	ldr	r3, [pc, #144]	; (8002708 <HAL_RCC_OscConfig+0x244>)
 8002678:	2200      	movs	r2, #0
 800267a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800267c:	f7ff f83a 	bl	80016f4 <HAL_GetTick>
 8002680:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002682:	e008      	b.n	8002696 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002684:	f7ff f836 	bl	80016f4 <HAL_GetTick>
 8002688:	4602      	mov	r2, r0
 800268a:	693b      	ldr	r3, [r7, #16]
 800268c:	1ad3      	subs	r3, r2, r3
 800268e:	2b02      	cmp	r3, #2
 8002690:	d901      	bls.n	8002696 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8002692:	2303      	movs	r3, #3
 8002694:	e187      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002696:	4b1b      	ldr	r3, [pc, #108]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	f003 0302 	and.w	r3, r3, #2
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d1f0      	bne.n	8002684 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	f003 0308 	and.w	r3, r3, #8
 80026aa:	2b00      	cmp	r3, #0
 80026ac:	d036      	beq.n	800271c <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	695b      	ldr	r3, [r3, #20]
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d016      	beq.n	80026e4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80026b6:	4b15      	ldr	r3, [pc, #84]	; (800270c <HAL_RCC_OscConfig+0x248>)
 80026b8:	2201      	movs	r2, #1
 80026ba:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80026bc:	f7ff f81a 	bl	80016f4 <HAL_GetTick>
 80026c0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80026c2:	e008      	b.n	80026d6 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80026c4:	f7ff f816 	bl	80016f4 <HAL_GetTick>
 80026c8:	4602      	mov	r2, r0
 80026ca:	693b      	ldr	r3, [r7, #16]
 80026cc:	1ad3      	subs	r3, r2, r3
 80026ce:	2b02      	cmp	r3, #2
 80026d0:	d901      	bls.n	80026d6 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80026d2:	2303      	movs	r3, #3
 80026d4:	e167      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80026d6:	4b0b      	ldr	r3, [pc, #44]	; (8002704 <HAL_RCC_OscConfig+0x240>)
 80026d8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80026da:	f003 0302 	and.w	r3, r3, #2
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d0f0      	beq.n	80026c4 <HAL_RCC_OscConfig+0x200>
 80026e2:	e01b      	b.n	800271c <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80026e4:	4b09      	ldr	r3, [pc, #36]	; (800270c <HAL_RCC_OscConfig+0x248>)
 80026e6:	2200      	movs	r2, #0
 80026e8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80026ea:	f7ff f803 	bl	80016f4 <HAL_GetTick>
 80026ee:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80026f0:	e00e      	b.n	8002710 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80026f2:	f7fe ffff 	bl	80016f4 <HAL_GetTick>
 80026f6:	4602      	mov	r2, r0
 80026f8:	693b      	ldr	r3, [r7, #16]
 80026fa:	1ad3      	subs	r3, r2, r3
 80026fc:	2b02      	cmp	r3, #2
 80026fe:	d907      	bls.n	8002710 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8002700:	2303      	movs	r3, #3
 8002702:	e150      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
 8002704:	40023800 	.word	0x40023800
 8002708:	42470000 	.word	0x42470000
 800270c:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002710:	4b88      	ldr	r3, [pc, #544]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002712:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002714:	f003 0302 	and.w	r3, r3, #2
 8002718:	2b00      	cmp	r3, #0
 800271a:	d1ea      	bne.n	80026f2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	f003 0304 	and.w	r3, r3, #4
 8002724:	2b00      	cmp	r3, #0
 8002726:	f000 8097 	beq.w	8002858 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 800272a:	2300      	movs	r3, #0
 800272c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800272e:	4b81      	ldr	r3, [pc, #516]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002730:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002732:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002736:	2b00      	cmp	r3, #0
 8002738:	d10f      	bne.n	800275a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800273a:	2300      	movs	r3, #0
 800273c:	60bb      	str	r3, [r7, #8]
 800273e:	4b7d      	ldr	r3, [pc, #500]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002742:	4a7c      	ldr	r2, [pc, #496]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002744:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002748:	6413      	str	r3, [r2, #64]	; 0x40
 800274a:	4b7a      	ldr	r3, [pc, #488]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 800274c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800274e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002752:	60bb      	str	r3, [r7, #8]
 8002754:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8002756:	2301      	movs	r3, #1
 8002758:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800275a:	4b77      	ldr	r3, [pc, #476]	; (8002938 <HAL_RCC_OscConfig+0x474>)
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002762:	2b00      	cmp	r3, #0
 8002764:	d118      	bne.n	8002798 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002766:	4b74      	ldr	r3, [pc, #464]	; (8002938 <HAL_RCC_OscConfig+0x474>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4a73      	ldr	r2, [pc, #460]	; (8002938 <HAL_RCC_OscConfig+0x474>)
 800276c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002770:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002772:	f7fe ffbf 	bl	80016f4 <HAL_GetTick>
 8002776:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002778:	e008      	b.n	800278c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800277a:	f7fe ffbb 	bl	80016f4 <HAL_GetTick>
 800277e:	4602      	mov	r2, r0
 8002780:	693b      	ldr	r3, [r7, #16]
 8002782:	1ad3      	subs	r3, r2, r3
 8002784:	2b02      	cmp	r3, #2
 8002786:	d901      	bls.n	800278c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8002788:	2303      	movs	r3, #3
 800278a:	e10c      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800278c:	4b6a      	ldr	r3, [pc, #424]	; (8002938 <HAL_RCC_OscConfig+0x474>)
 800278e:	681b      	ldr	r3, [r3, #0]
 8002790:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002794:	2b00      	cmp	r3, #0
 8002796:	d0f0      	beq.n	800277a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	689b      	ldr	r3, [r3, #8]
 800279c:	2b01      	cmp	r3, #1
 800279e:	d106      	bne.n	80027ae <HAL_RCC_OscConfig+0x2ea>
 80027a0:	4b64      	ldr	r3, [pc, #400]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80027a4:	4a63      	ldr	r2, [pc, #396]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027a6:	f043 0301 	orr.w	r3, r3, #1
 80027aa:	6713      	str	r3, [r2, #112]	; 0x70
 80027ac:	e01c      	b.n	80027e8 <HAL_RCC_OscConfig+0x324>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	689b      	ldr	r3, [r3, #8]
 80027b2:	2b05      	cmp	r3, #5
 80027b4:	d10c      	bne.n	80027d0 <HAL_RCC_OscConfig+0x30c>
 80027b6:	4b5f      	ldr	r3, [pc, #380]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80027ba:	4a5e      	ldr	r2, [pc, #376]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027bc:	f043 0304 	orr.w	r3, r3, #4
 80027c0:	6713      	str	r3, [r2, #112]	; 0x70
 80027c2:	4b5c      	ldr	r3, [pc, #368]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80027c6:	4a5b      	ldr	r2, [pc, #364]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027c8:	f043 0301 	orr.w	r3, r3, #1
 80027cc:	6713      	str	r3, [r2, #112]	; 0x70
 80027ce:	e00b      	b.n	80027e8 <HAL_RCC_OscConfig+0x324>
 80027d0:	4b58      	ldr	r3, [pc, #352]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027d2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80027d4:	4a57      	ldr	r2, [pc, #348]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027d6:	f023 0301 	bic.w	r3, r3, #1
 80027da:	6713      	str	r3, [r2, #112]	; 0x70
 80027dc:	4b55      	ldr	r3, [pc, #340]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80027e0:	4a54      	ldr	r2, [pc, #336]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80027e2:	f023 0304 	bic.w	r3, r3, #4
 80027e6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	689b      	ldr	r3, [r3, #8]
 80027ec:	2b00      	cmp	r3, #0
 80027ee:	d015      	beq.n	800281c <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80027f0:	f7fe ff80 	bl	80016f4 <HAL_GetTick>
 80027f4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80027f6:	e00a      	b.n	800280e <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80027f8:	f7fe ff7c 	bl	80016f4 <HAL_GetTick>
 80027fc:	4602      	mov	r2, r0
 80027fe:	693b      	ldr	r3, [r7, #16]
 8002800:	1ad3      	subs	r3, r2, r3
 8002802:	f241 3288 	movw	r2, #5000	; 0x1388
 8002806:	4293      	cmp	r3, r2
 8002808:	d901      	bls.n	800280e <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 800280a:	2303      	movs	r3, #3
 800280c:	e0cb      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800280e:	4b49      	ldr	r3, [pc, #292]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002810:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002812:	f003 0302 	and.w	r3, r3, #2
 8002816:	2b00      	cmp	r3, #0
 8002818:	d0ee      	beq.n	80027f8 <HAL_RCC_OscConfig+0x334>
 800281a:	e014      	b.n	8002846 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800281c:	f7fe ff6a 	bl	80016f4 <HAL_GetTick>
 8002820:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002822:	e00a      	b.n	800283a <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002824:	f7fe ff66 	bl	80016f4 <HAL_GetTick>
 8002828:	4602      	mov	r2, r0
 800282a:	693b      	ldr	r3, [r7, #16]
 800282c:	1ad3      	subs	r3, r2, r3
 800282e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002832:	4293      	cmp	r3, r2
 8002834:	d901      	bls.n	800283a <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8002836:	2303      	movs	r3, #3
 8002838:	e0b5      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800283a:	4b3e      	ldr	r3, [pc, #248]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 800283c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800283e:	f003 0302 	and.w	r3, r3, #2
 8002842:	2b00      	cmp	r3, #0
 8002844:	d1ee      	bne.n	8002824 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8002846:	7dfb      	ldrb	r3, [r7, #23]
 8002848:	2b01      	cmp	r3, #1
 800284a:	d105      	bne.n	8002858 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800284c:	4b39      	ldr	r3, [pc, #228]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 800284e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002850:	4a38      	ldr	r2, [pc, #224]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002852:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002856:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	699b      	ldr	r3, [r3, #24]
 800285c:	2b00      	cmp	r3, #0
 800285e:	f000 80a1 	beq.w	80029a4 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002862:	4b34      	ldr	r3, [pc, #208]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002864:	689b      	ldr	r3, [r3, #8]
 8002866:	f003 030c 	and.w	r3, r3, #12
 800286a:	2b08      	cmp	r3, #8
 800286c:	d05c      	beq.n	8002928 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	699b      	ldr	r3, [r3, #24]
 8002872:	2b02      	cmp	r3, #2
 8002874:	d141      	bne.n	80028fa <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002876:	4b31      	ldr	r3, [pc, #196]	; (800293c <HAL_RCC_OscConfig+0x478>)
 8002878:	2200      	movs	r2, #0
 800287a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800287c:	f7fe ff3a 	bl	80016f4 <HAL_GetTick>
 8002880:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002882:	e008      	b.n	8002896 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002884:	f7fe ff36 	bl	80016f4 <HAL_GetTick>
 8002888:	4602      	mov	r2, r0
 800288a:	693b      	ldr	r3, [r7, #16]
 800288c:	1ad3      	subs	r3, r2, r3
 800288e:	2b02      	cmp	r3, #2
 8002890:	d901      	bls.n	8002896 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8002892:	2303      	movs	r3, #3
 8002894:	e087      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002896:	4b27      	ldr	r3, [pc, #156]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800289e:	2b00      	cmp	r3, #0
 80028a0:	d1f0      	bne.n	8002884 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	69da      	ldr	r2, [r3, #28]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	6a1b      	ldr	r3, [r3, #32]
 80028aa:	431a      	orrs	r2, r3
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028b0:	019b      	lsls	r3, r3, #6
 80028b2:	431a      	orrs	r2, r3
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028b8:	085b      	lsrs	r3, r3, #1
 80028ba:	3b01      	subs	r3, #1
 80028bc:	041b      	lsls	r3, r3, #16
 80028be:	431a      	orrs	r2, r3
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028c4:	061b      	lsls	r3, r3, #24
 80028c6:	491b      	ldr	r1, [pc, #108]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80028c8:	4313      	orrs	r3, r2
 80028ca:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80028cc:	4b1b      	ldr	r3, [pc, #108]	; (800293c <HAL_RCC_OscConfig+0x478>)
 80028ce:	2201      	movs	r2, #1
 80028d0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80028d2:	f7fe ff0f 	bl	80016f4 <HAL_GetTick>
 80028d6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80028d8:	e008      	b.n	80028ec <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80028da:	f7fe ff0b 	bl	80016f4 <HAL_GetTick>
 80028de:	4602      	mov	r2, r0
 80028e0:	693b      	ldr	r3, [r7, #16]
 80028e2:	1ad3      	subs	r3, r2, r3
 80028e4:	2b02      	cmp	r3, #2
 80028e6:	d901      	bls.n	80028ec <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 80028e8:	2303      	movs	r3, #3
 80028ea:	e05c      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80028ec:	4b11      	ldr	r3, [pc, #68]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	d0f0      	beq.n	80028da <HAL_RCC_OscConfig+0x416>
 80028f8:	e054      	b.n	80029a4 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80028fa:	4b10      	ldr	r3, [pc, #64]	; (800293c <HAL_RCC_OscConfig+0x478>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002900:	f7fe fef8 	bl	80016f4 <HAL_GetTick>
 8002904:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002906:	e008      	b.n	800291a <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002908:	f7fe fef4 	bl	80016f4 <HAL_GetTick>
 800290c:	4602      	mov	r2, r0
 800290e:	693b      	ldr	r3, [r7, #16]
 8002910:	1ad3      	subs	r3, r2, r3
 8002912:	2b02      	cmp	r3, #2
 8002914:	d901      	bls.n	800291a <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8002916:	2303      	movs	r3, #3
 8002918:	e045      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800291a:	4b06      	ldr	r3, [pc, #24]	; (8002934 <HAL_RCC_OscConfig+0x470>)
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002922:	2b00      	cmp	r3, #0
 8002924:	d1f0      	bne.n	8002908 <HAL_RCC_OscConfig+0x444>
 8002926:	e03d      	b.n	80029a4 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	699b      	ldr	r3, [r3, #24]
 800292c:	2b01      	cmp	r3, #1
 800292e:	d107      	bne.n	8002940 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8002930:	2301      	movs	r3, #1
 8002932:	e038      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
 8002934:	40023800 	.word	0x40023800
 8002938:	40007000 	.word	0x40007000
 800293c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8002940:	4b1b      	ldr	r3, [pc, #108]	; (80029b0 <HAL_RCC_OscConfig+0x4ec>)
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	699b      	ldr	r3, [r3, #24]
 800294a:	2b01      	cmp	r3, #1
 800294c:	d028      	beq.n	80029a0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002958:	429a      	cmp	r2, r3
 800295a:	d121      	bne.n	80029a0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002966:	429a      	cmp	r2, r3
 8002968:	d11a      	bne.n	80029a0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800296a:	68fa      	ldr	r2, [r7, #12]
 800296c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002970:	4013      	ands	r3, r2
 8002972:	687a      	ldr	r2, [r7, #4]
 8002974:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002976:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8002978:	4293      	cmp	r3, r2
 800297a:	d111      	bne.n	80029a0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002986:	085b      	lsrs	r3, r3, #1
 8002988:	3b01      	subs	r3, #1
 800298a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800298c:	429a      	cmp	r2, r3
 800298e:	d107      	bne.n	80029a0 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8002990:	68fb      	ldr	r3, [r7, #12]
 8002992:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800299a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800299c:	429a      	cmp	r2, r3
 800299e:	d001      	beq.n	80029a4 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 80029a0:	2301      	movs	r3, #1
 80029a2:	e000      	b.n	80029a6 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 80029a4:	2300      	movs	r3, #0
}
 80029a6:	4618      	mov	r0, r3
 80029a8:	3718      	adds	r7, #24
 80029aa:	46bd      	mov	sp, r7
 80029ac:	bd80      	pop	{r7, pc}
 80029ae:	bf00      	nop
 80029b0:	40023800 	.word	0x40023800

080029b4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80029b4:	b580      	push	{r7, lr}
 80029b6:	b084      	sub	sp, #16
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
 80029bc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d101      	bne.n	80029c8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80029c4:	2301      	movs	r3, #1
 80029c6:	e0cc      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80029c8:	4b68      	ldr	r3, [pc, #416]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	f003 0307 	and.w	r3, r3, #7
 80029d0:	683a      	ldr	r2, [r7, #0]
 80029d2:	429a      	cmp	r2, r3
 80029d4:	d90c      	bls.n	80029f0 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80029d6:	4b65      	ldr	r3, [pc, #404]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 80029d8:	683a      	ldr	r2, [r7, #0]
 80029da:	b2d2      	uxtb	r2, r2
 80029dc:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80029de:	4b63      	ldr	r3, [pc, #396]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	f003 0307 	and.w	r3, r3, #7
 80029e6:	683a      	ldr	r2, [r7, #0]
 80029e8:	429a      	cmp	r2, r3
 80029ea:	d001      	beq.n	80029f0 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 80029ec:	2301      	movs	r3, #1
 80029ee:	e0b8      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f003 0302 	and.w	r3, r3, #2
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d020      	beq.n	8002a3e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	f003 0304 	and.w	r3, r3, #4
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	d005      	beq.n	8002a14 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8002a08:	4b59      	ldr	r3, [pc, #356]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a0a:	689b      	ldr	r3, [r3, #8]
 8002a0c:	4a58      	ldr	r2, [pc, #352]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a0e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002a12:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	f003 0308 	and.w	r3, r3, #8
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d005      	beq.n	8002a2c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002a20:	4b53      	ldr	r3, [pc, #332]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a22:	689b      	ldr	r3, [r3, #8]
 8002a24:	4a52      	ldr	r2, [pc, #328]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a26:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002a2a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002a2c:	4b50      	ldr	r3, [pc, #320]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a2e:	689b      	ldr	r3, [r3, #8]
 8002a30:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	689b      	ldr	r3, [r3, #8]
 8002a38:	494d      	ldr	r1, [pc, #308]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a3a:	4313      	orrs	r3, r2
 8002a3c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f003 0301 	and.w	r3, r3, #1
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d044      	beq.n	8002ad4 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	685b      	ldr	r3, [r3, #4]
 8002a4e:	2b01      	cmp	r3, #1
 8002a50:	d107      	bne.n	8002a62 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002a52:	4b47      	ldr	r3, [pc, #284]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d119      	bne.n	8002a92 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8002a5e:	2301      	movs	r3, #1
 8002a60:	e07f      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	685b      	ldr	r3, [r3, #4]
 8002a66:	2b02      	cmp	r3, #2
 8002a68:	d003      	beq.n	8002a72 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8002a6e:	2b03      	cmp	r3, #3
 8002a70:	d107      	bne.n	8002a82 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002a72:	4b3f      	ldr	r3, [pc, #252]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d109      	bne.n	8002a92 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8002a7e:	2301      	movs	r3, #1
 8002a80:	e06f      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002a82:	4b3b      	ldr	r3, [pc, #236]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	f003 0302 	and.w	r3, r3, #2
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d101      	bne.n	8002a92 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8002a8e:	2301      	movs	r3, #1
 8002a90:	e067      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002a92:	4b37      	ldr	r3, [pc, #220]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002a94:	689b      	ldr	r3, [r3, #8]
 8002a96:	f023 0203 	bic.w	r2, r3, #3
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	685b      	ldr	r3, [r3, #4]
 8002a9e:	4934      	ldr	r1, [pc, #208]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002aa0:	4313      	orrs	r3, r2
 8002aa2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002aa4:	f7fe fe26 	bl	80016f4 <HAL_GetTick>
 8002aa8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002aaa:	e00a      	b.n	8002ac2 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002aac:	f7fe fe22 	bl	80016f4 <HAL_GetTick>
 8002ab0:	4602      	mov	r2, r0
 8002ab2:	68fb      	ldr	r3, [r7, #12]
 8002ab4:	1ad3      	subs	r3, r2, r3
 8002ab6:	f241 3288 	movw	r2, #5000	; 0x1388
 8002aba:	4293      	cmp	r3, r2
 8002abc:	d901      	bls.n	8002ac2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8002abe:	2303      	movs	r3, #3
 8002ac0:	e04f      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002ac2:	4b2b      	ldr	r3, [pc, #172]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002ac4:	689b      	ldr	r3, [r3, #8]
 8002ac6:	f003 020c 	and.w	r2, r3, #12
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	685b      	ldr	r3, [r3, #4]
 8002ace:	009b      	lsls	r3, r3, #2
 8002ad0:	429a      	cmp	r2, r3
 8002ad2:	d1eb      	bne.n	8002aac <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002ad4:	4b25      	ldr	r3, [pc, #148]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f003 0307 	and.w	r3, r3, #7
 8002adc:	683a      	ldr	r2, [r7, #0]
 8002ade:	429a      	cmp	r2, r3
 8002ae0:	d20c      	bcs.n	8002afc <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002ae2:	4b22      	ldr	r3, [pc, #136]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 8002ae4:	683a      	ldr	r2, [r7, #0]
 8002ae6:	b2d2      	uxtb	r2, r2
 8002ae8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002aea:	4b20      	ldr	r3, [pc, #128]	; (8002b6c <HAL_RCC_ClockConfig+0x1b8>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	f003 0307 	and.w	r3, r3, #7
 8002af2:	683a      	ldr	r2, [r7, #0]
 8002af4:	429a      	cmp	r2, r3
 8002af6:	d001      	beq.n	8002afc <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8002af8:	2301      	movs	r3, #1
 8002afa:	e032      	b.n	8002b62 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	f003 0304 	and.w	r3, r3, #4
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d008      	beq.n	8002b1a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002b08:	4b19      	ldr	r3, [pc, #100]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002b0a:	689b      	ldr	r3, [r3, #8]
 8002b0c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	68db      	ldr	r3, [r3, #12]
 8002b14:	4916      	ldr	r1, [pc, #88]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002b16:	4313      	orrs	r3, r2
 8002b18:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f003 0308 	and.w	r3, r3, #8
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d009      	beq.n	8002b3a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8002b26:	4b12      	ldr	r3, [pc, #72]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002b28:	689b      	ldr	r3, [r3, #8]
 8002b2a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	691b      	ldr	r3, [r3, #16]
 8002b32:	00db      	lsls	r3, r3, #3
 8002b34:	490e      	ldr	r1, [pc, #56]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002b36:	4313      	orrs	r3, r2
 8002b38:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002b3a:	f000 f821 	bl	8002b80 <HAL_RCC_GetSysClockFreq>
 8002b3e:	4602      	mov	r2, r0
 8002b40:	4b0b      	ldr	r3, [pc, #44]	; (8002b70 <HAL_RCC_ClockConfig+0x1bc>)
 8002b42:	689b      	ldr	r3, [r3, #8]
 8002b44:	091b      	lsrs	r3, r3, #4
 8002b46:	f003 030f 	and.w	r3, r3, #15
 8002b4a:	490a      	ldr	r1, [pc, #40]	; (8002b74 <HAL_RCC_ClockConfig+0x1c0>)
 8002b4c:	5ccb      	ldrb	r3, [r1, r3]
 8002b4e:	fa22 f303 	lsr.w	r3, r2, r3
 8002b52:	4a09      	ldr	r2, [pc, #36]	; (8002b78 <HAL_RCC_ClockConfig+0x1c4>)
 8002b54:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8002b56:	4b09      	ldr	r3, [pc, #36]	; (8002b7c <HAL_RCC_ClockConfig+0x1c8>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	4618      	mov	r0, r3
 8002b5c:	f7fe fd86 	bl	800166c <HAL_InitTick>

  return HAL_OK;
 8002b60:	2300      	movs	r3, #0
}
 8002b62:	4618      	mov	r0, r3
 8002b64:	3710      	adds	r7, #16
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bd80      	pop	{r7, pc}
 8002b6a:	bf00      	nop
 8002b6c:	40023c00 	.word	0x40023c00
 8002b70:	40023800 	.word	0x40023800
 8002b74:	08011154 	.word	0x08011154
 8002b78:	20000000 	.word	0x20000000
 8002b7c:	20000004 	.word	0x20000004

08002b80 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002b80:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002b84:	b094      	sub	sp, #80	; 0x50
 8002b86:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8002b88:	2300      	movs	r3, #0
 8002b8a:	647b      	str	r3, [r7, #68]	; 0x44
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002b90:	2300      	movs	r3, #0
 8002b92:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8002b94:	2300      	movs	r3, #0
 8002b96:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002b98:	4b79      	ldr	r3, [pc, #484]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002b9a:	689b      	ldr	r3, [r3, #8]
 8002b9c:	f003 030c 	and.w	r3, r3, #12
 8002ba0:	2b08      	cmp	r3, #8
 8002ba2:	d00d      	beq.n	8002bc0 <HAL_RCC_GetSysClockFreq+0x40>
 8002ba4:	2b08      	cmp	r3, #8
 8002ba6:	f200 80e1 	bhi.w	8002d6c <HAL_RCC_GetSysClockFreq+0x1ec>
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d002      	beq.n	8002bb4 <HAL_RCC_GetSysClockFreq+0x34>
 8002bae:	2b04      	cmp	r3, #4
 8002bb0:	d003      	beq.n	8002bba <HAL_RCC_GetSysClockFreq+0x3a>
 8002bb2:	e0db      	b.n	8002d6c <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002bb4:	4b73      	ldr	r3, [pc, #460]	; (8002d84 <HAL_RCC_GetSysClockFreq+0x204>)
 8002bb6:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8002bb8:	e0db      	b.n	8002d72 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8002bba:	4b73      	ldr	r3, [pc, #460]	; (8002d88 <HAL_RCC_GetSysClockFreq+0x208>)
 8002bbc:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8002bbe:	e0d8      	b.n	8002d72 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002bc0:	4b6f      	ldr	r3, [pc, #444]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002bc2:	685b      	ldr	r3, [r3, #4]
 8002bc4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002bc8:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002bca:	4b6d      	ldr	r3, [pc, #436]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002bcc:	685b      	ldr	r3, [r3, #4]
 8002bce:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002bd2:	2b00      	cmp	r3, #0
 8002bd4:	d063      	beq.n	8002c9e <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002bd6:	4b6a      	ldr	r3, [pc, #424]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002bd8:	685b      	ldr	r3, [r3, #4]
 8002bda:	099b      	lsrs	r3, r3, #6
 8002bdc:	2200      	movs	r2, #0
 8002bde:	63bb      	str	r3, [r7, #56]	; 0x38
 8002be0:	63fa      	str	r2, [r7, #60]	; 0x3c
 8002be2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002be4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002be8:	633b      	str	r3, [r7, #48]	; 0x30
 8002bea:	2300      	movs	r3, #0
 8002bec:	637b      	str	r3, [r7, #52]	; 0x34
 8002bee:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8002bf2:	4622      	mov	r2, r4
 8002bf4:	462b      	mov	r3, r5
 8002bf6:	f04f 0000 	mov.w	r0, #0
 8002bfa:	f04f 0100 	mov.w	r1, #0
 8002bfe:	0159      	lsls	r1, r3, #5
 8002c00:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002c04:	0150      	lsls	r0, r2, #5
 8002c06:	4602      	mov	r2, r0
 8002c08:	460b      	mov	r3, r1
 8002c0a:	4621      	mov	r1, r4
 8002c0c:	1a51      	subs	r1, r2, r1
 8002c0e:	6139      	str	r1, [r7, #16]
 8002c10:	4629      	mov	r1, r5
 8002c12:	eb63 0301 	sbc.w	r3, r3, r1
 8002c16:	617b      	str	r3, [r7, #20]
 8002c18:	f04f 0200 	mov.w	r2, #0
 8002c1c:	f04f 0300 	mov.w	r3, #0
 8002c20:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002c24:	4659      	mov	r1, fp
 8002c26:	018b      	lsls	r3, r1, #6
 8002c28:	4651      	mov	r1, sl
 8002c2a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002c2e:	4651      	mov	r1, sl
 8002c30:	018a      	lsls	r2, r1, #6
 8002c32:	4651      	mov	r1, sl
 8002c34:	ebb2 0801 	subs.w	r8, r2, r1
 8002c38:	4659      	mov	r1, fp
 8002c3a:	eb63 0901 	sbc.w	r9, r3, r1
 8002c3e:	f04f 0200 	mov.w	r2, #0
 8002c42:	f04f 0300 	mov.w	r3, #0
 8002c46:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002c4a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002c4e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002c52:	4690      	mov	r8, r2
 8002c54:	4699      	mov	r9, r3
 8002c56:	4623      	mov	r3, r4
 8002c58:	eb18 0303 	adds.w	r3, r8, r3
 8002c5c:	60bb      	str	r3, [r7, #8]
 8002c5e:	462b      	mov	r3, r5
 8002c60:	eb49 0303 	adc.w	r3, r9, r3
 8002c64:	60fb      	str	r3, [r7, #12]
 8002c66:	f04f 0200 	mov.w	r2, #0
 8002c6a:	f04f 0300 	mov.w	r3, #0
 8002c6e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002c72:	4629      	mov	r1, r5
 8002c74:	024b      	lsls	r3, r1, #9
 8002c76:	4621      	mov	r1, r4
 8002c78:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002c7c:	4621      	mov	r1, r4
 8002c7e:	024a      	lsls	r2, r1, #9
 8002c80:	4610      	mov	r0, r2
 8002c82:	4619      	mov	r1, r3
 8002c84:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002c86:	2200      	movs	r2, #0
 8002c88:	62bb      	str	r3, [r7, #40]	; 0x28
 8002c8a:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002c8c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002c90:	f7fd fd36 	bl	8000700 <__aeabi_uldivmod>
 8002c94:	4602      	mov	r2, r0
 8002c96:	460b      	mov	r3, r1
 8002c98:	4613      	mov	r3, r2
 8002c9a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002c9c:	e058      	b.n	8002d50 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002c9e:	4b38      	ldr	r3, [pc, #224]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ca0:	685b      	ldr	r3, [r3, #4]
 8002ca2:	099b      	lsrs	r3, r3, #6
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	4618      	mov	r0, r3
 8002ca8:	4611      	mov	r1, r2
 8002caa:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002cae:	623b      	str	r3, [r7, #32]
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	627b      	str	r3, [r7, #36]	; 0x24
 8002cb4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002cb8:	4642      	mov	r2, r8
 8002cba:	464b      	mov	r3, r9
 8002cbc:	f04f 0000 	mov.w	r0, #0
 8002cc0:	f04f 0100 	mov.w	r1, #0
 8002cc4:	0159      	lsls	r1, r3, #5
 8002cc6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002cca:	0150      	lsls	r0, r2, #5
 8002ccc:	4602      	mov	r2, r0
 8002cce:	460b      	mov	r3, r1
 8002cd0:	4641      	mov	r1, r8
 8002cd2:	ebb2 0a01 	subs.w	sl, r2, r1
 8002cd6:	4649      	mov	r1, r9
 8002cd8:	eb63 0b01 	sbc.w	fp, r3, r1
 8002cdc:	f04f 0200 	mov.w	r2, #0
 8002ce0:	f04f 0300 	mov.w	r3, #0
 8002ce4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002ce8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002cec:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002cf0:	ebb2 040a 	subs.w	r4, r2, sl
 8002cf4:	eb63 050b 	sbc.w	r5, r3, fp
 8002cf8:	f04f 0200 	mov.w	r2, #0
 8002cfc:	f04f 0300 	mov.w	r3, #0
 8002d00:	00eb      	lsls	r3, r5, #3
 8002d02:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002d06:	00e2      	lsls	r2, r4, #3
 8002d08:	4614      	mov	r4, r2
 8002d0a:	461d      	mov	r5, r3
 8002d0c:	4643      	mov	r3, r8
 8002d0e:	18e3      	adds	r3, r4, r3
 8002d10:	603b      	str	r3, [r7, #0]
 8002d12:	464b      	mov	r3, r9
 8002d14:	eb45 0303 	adc.w	r3, r5, r3
 8002d18:	607b      	str	r3, [r7, #4]
 8002d1a:	f04f 0200 	mov.w	r2, #0
 8002d1e:	f04f 0300 	mov.w	r3, #0
 8002d22:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002d26:	4629      	mov	r1, r5
 8002d28:	028b      	lsls	r3, r1, #10
 8002d2a:	4621      	mov	r1, r4
 8002d2c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002d30:	4621      	mov	r1, r4
 8002d32:	028a      	lsls	r2, r1, #10
 8002d34:	4610      	mov	r0, r2
 8002d36:	4619      	mov	r1, r3
 8002d38:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002d3a:	2200      	movs	r2, #0
 8002d3c:	61bb      	str	r3, [r7, #24]
 8002d3e:	61fa      	str	r2, [r7, #28]
 8002d40:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002d44:	f7fd fcdc 	bl	8000700 <__aeabi_uldivmod>
 8002d48:	4602      	mov	r2, r0
 8002d4a:	460b      	mov	r3, r1
 8002d4c:	4613      	mov	r3, r2
 8002d4e:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8002d50:	4b0b      	ldr	r3, [pc, #44]	; (8002d80 <HAL_RCC_GetSysClockFreq+0x200>)
 8002d52:	685b      	ldr	r3, [r3, #4]
 8002d54:	0c1b      	lsrs	r3, r3, #16
 8002d56:	f003 0303 	and.w	r3, r3, #3
 8002d5a:	3301      	adds	r3, #1
 8002d5c:	005b      	lsls	r3, r3, #1
 8002d5e:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 8002d60:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8002d62:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002d64:	fbb2 f3f3 	udiv	r3, r2, r3
 8002d68:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8002d6a:	e002      	b.n	8002d72 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8002d6c:	4b05      	ldr	r3, [pc, #20]	; (8002d84 <HAL_RCC_GetSysClockFreq+0x204>)
 8002d6e:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8002d70:	bf00      	nop
    }
  }
  return sysclockfreq;
 8002d72:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8002d74:	4618      	mov	r0, r3
 8002d76:	3750      	adds	r7, #80	; 0x50
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002d7e:	bf00      	nop
 8002d80:	40023800 	.word	0x40023800
 8002d84:	00f42400 	.word	0x00f42400
 8002d88:	007a1200 	.word	0x007a1200

08002d8c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	b082      	sub	sp, #8
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d101      	bne.n	8002d9e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8002d9a:	2301      	movs	r3, #1
 8002d9c:	e07b      	b.n	8002e96 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002da2:	2b00      	cmp	r3, #0
 8002da4:	d108      	bne.n	8002db8 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	685b      	ldr	r3, [r3, #4]
 8002daa:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002dae:	d009      	beq.n	8002dc4 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	2200      	movs	r2, #0
 8002db4:	61da      	str	r2, [r3, #28]
 8002db6:	e005      	b.n	8002dc4 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	2200      	movs	r2, #0
 8002dbc:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	2200      	movs	r2, #0
 8002dc2:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	2200      	movs	r2, #0
 8002dc8:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002dd0:	b2db      	uxtb	r3, r3
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d106      	bne.n	8002de4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	2200      	movs	r2, #0
 8002dda:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8002dde:	6878      	ldr	r0, [r7, #4]
 8002de0:	f7fe fb74 	bl	80014cc <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	2202      	movs	r2, #2
 8002de8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	681a      	ldr	r2, [r3, #0]
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002dfa:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	689b      	ldr	r3, [r3, #8]
 8002e08:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8002e0c:	431a      	orrs	r2, r3
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	68db      	ldr	r3, [r3, #12]
 8002e12:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002e16:	431a      	orrs	r2, r3
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	691b      	ldr	r3, [r3, #16]
 8002e1c:	f003 0302 	and.w	r3, r3, #2
 8002e20:	431a      	orrs	r2, r3
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	695b      	ldr	r3, [r3, #20]
 8002e26:	f003 0301 	and.w	r3, r3, #1
 8002e2a:	431a      	orrs	r2, r3
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	699b      	ldr	r3, [r3, #24]
 8002e30:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002e34:	431a      	orrs	r2, r3
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	69db      	ldr	r3, [r3, #28]
 8002e3a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002e3e:	431a      	orrs	r2, r3
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	6a1b      	ldr	r3, [r3, #32]
 8002e44:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e48:	ea42 0103 	orr.w	r1, r2, r3
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e50:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	430a      	orrs	r2, r1
 8002e5a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	699b      	ldr	r3, [r3, #24]
 8002e60:	0c1b      	lsrs	r3, r3, #16
 8002e62:	f003 0104 	and.w	r1, r3, #4
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e6a:	f003 0210 	and.w	r2, r3, #16
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	430a      	orrs	r2, r1
 8002e74:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	69da      	ldr	r2, [r3, #28]
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	681b      	ldr	r3, [r3, #0]
 8002e80:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002e84:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	2200      	movs	r2, #0
 8002e8a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2201      	movs	r2, #1
 8002e90:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8002e94:	2300      	movs	r3, #0
}
 8002e96:	4618      	mov	r0, r3
 8002e98:	3708      	adds	r7, #8
 8002e9a:	46bd      	mov	sp, r7
 8002e9c:	bd80      	pop	{r7, pc}

08002e9e <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002e9e:	b580      	push	{r7, lr}
 8002ea0:	b088      	sub	sp, #32
 8002ea2:	af00      	add	r7, sp, #0
 8002ea4:	60f8      	str	r0, [r7, #12]
 8002ea6:	60b9      	str	r1, [r7, #8]
 8002ea8:	603b      	str	r3, [r7, #0]
 8002eaa:	4613      	mov	r3, r2
 8002eac:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8002eae:	2300      	movs	r3, #0
 8002eb0:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002eb8:	2b01      	cmp	r3, #1
 8002eba:	d101      	bne.n	8002ec0 <HAL_SPI_Transmit+0x22>
 8002ebc:	2302      	movs	r3, #2
 8002ebe:	e126      	b.n	800310e <HAL_SPI_Transmit+0x270>
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	2201      	movs	r2, #1
 8002ec4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8002ec8:	f7fe fc14 	bl	80016f4 <HAL_GetTick>
 8002ecc:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8002ece:	88fb      	ldrh	r3, [r7, #6]
 8002ed0:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8002ed2:	68fb      	ldr	r3, [r7, #12]
 8002ed4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002ed8:	b2db      	uxtb	r3, r3
 8002eda:	2b01      	cmp	r3, #1
 8002edc:	d002      	beq.n	8002ee4 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8002ede:	2302      	movs	r3, #2
 8002ee0:	77fb      	strb	r3, [r7, #31]
    goto error;
 8002ee2:	e10b      	b.n	80030fc <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 8002ee4:	68bb      	ldr	r3, [r7, #8]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d002      	beq.n	8002ef0 <HAL_SPI_Transmit+0x52>
 8002eea:	88fb      	ldrh	r3, [r7, #6]
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d102      	bne.n	8002ef6 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8002ef0:	2301      	movs	r3, #1
 8002ef2:	77fb      	strb	r3, [r7, #31]
    goto error;
 8002ef4:	e102      	b.n	80030fc <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	2203      	movs	r2, #3
 8002efa:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	2200      	movs	r2, #0
 8002f02:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	68ba      	ldr	r2, [r7, #8]
 8002f08:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	88fa      	ldrh	r2, [r7, #6]
 8002f0e:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	88fa      	ldrh	r2, [r7, #6]
 8002f14:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	2200      	movs	r2, #0
 8002f1a:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	2200      	movs	r2, #0
 8002f20:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	2200      	movs	r2, #0
 8002f26:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	2200      	movs	r2, #0
 8002f2c:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	2200      	movs	r2, #0
 8002f32:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	689b      	ldr	r3, [r3, #8]
 8002f38:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002f3c:	d10f      	bne.n	8002f5e <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8002f3e:	68fb      	ldr	r3, [r7, #12]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	681a      	ldr	r2, [r3, #0]
 8002f44:	68fb      	ldr	r3, [r7, #12]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002f4c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8002f4e:	68fb      	ldr	r3, [r7, #12]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	681a      	ldr	r2, [r3, #0]
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002f5c:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002f68:	2b40      	cmp	r3, #64	; 0x40
 8002f6a:	d007      	beq.n	8002f7c <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8002f6c:	68fb      	ldr	r3, [r7, #12]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	681a      	ldr	r2, [r3, #0]
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002f7a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	68db      	ldr	r3, [r3, #12]
 8002f80:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002f84:	d14b      	bne.n	800301e <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8002f86:	68fb      	ldr	r3, [r7, #12]
 8002f88:	685b      	ldr	r3, [r3, #4]
 8002f8a:	2b00      	cmp	r3, #0
 8002f8c:	d002      	beq.n	8002f94 <HAL_SPI_Transmit+0xf6>
 8002f8e:	8afb      	ldrh	r3, [r7, #22]
 8002f90:	2b01      	cmp	r3, #1
 8002f92:	d13e      	bne.n	8003012 <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8002f94:	68fb      	ldr	r3, [r7, #12]
 8002f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f98:	881a      	ldrh	r2, [r3, #0]
 8002f9a:	68fb      	ldr	r3, [r7, #12]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8002fa0:	68fb      	ldr	r3, [r7, #12]
 8002fa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fa4:	1c9a      	adds	r2, r3, #2
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002fae:	b29b      	uxth	r3, r3
 8002fb0:	3b01      	subs	r3, #1
 8002fb2:	b29a      	uxth	r2, r3
 8002fb4:	68fb      	ldr	r3, [r7, #12]
 8002fb6:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8002fb8:	e02b      	b.n	8003012 <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	689b      	ldr	r3, [r3, #8]
 8002fc0:	f003 0302 	and.w	r3, r3, #2
 8002fc4:	2b02      	cmp	r3, #2
 8002fc6:	d112      	bne.n	8002fee <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fcc:	881a      	ldrh	r2, [r3, #0]
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002fd8:	1c9a      	adds	r2, r3, #2
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002fe2:	b29b      	uxth	r3, r3
 8002fe4:	3b01      	subs	r3, #1
 8002fe6:	b29a      	uxth	r2, r3
 8002fe8:	68fb      	ldr	r3, [r7, #12]
 8002fea:	86da      	strh	r2, [r3, #54]	; 0x36
 8002fec:	e011      	b.n	8003012 <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8002fee:	f7fe fb81 	bl	80016f4 <HAL_GetTick>
 8002ff2:	4602      	mov	r2, r0
 8002ff4:	69bb      	ldr	r3, [r7, #24]
 8002ff6:	1ad3      	subs	r3, r2, r3
 8002ff8:	683a      	ldr	r2, [r7, #0]
 8002ffa:	429a      	cmp	r2, r3
 8002ffc:	d803      	bhi.n	8003006 <HAL_SPI_Transmit+0x168>
 8002ffe:	683b      	ldr	r3, [r7, #0]
 8003000:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003004:	d102      	bne.n	800300c <HAL_SPI_Transmit+0x16e>
 8003006:	683b      	ldr	r3, [r7, #0]
 8003008:	2b00      	cmp	r3, #0
 800300a:	d102      	bne.n	8003012 <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 800300c:	2303      	movs	r3, #3
 800300e:	77fb      	strb	r3, [r7, #31]
          goto error;
 8003010:	e074      	b.n	80030fc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003016:	b29b      	uxth	r3, r3
 8003018:	2b00      	cmp	r3, #0
 800301a:	d1ce      	bne.n	8002fba <HAL_SPI_Transmit+0x11c>
 800301c:	e04c      	b.n	80030b8 <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800301e:	68fb      	ldr	r3, [r7, #12]
 8003020:	685b      	ldr	r3, [r3, #4]
 8003022:	2b00      	cmp	r3, #0
 8003024:	d002      	beq.n	800302c <HAL_SPI_Transmit+0x18e>
 8003026:	8afb      	ldrh	r3, [r7, #22]
 8003028:	2b01      	cmp	r3, #1
 800302a:	d140      	bne.n	80030ae <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003030:	68fb      	ldr	r3, [r7, #12]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	330c      	adds	r3, #12
 8003036:	7812      	ldrb	r2, [r2, #0]
 8003038:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800303e:	1c5a      	adds	r2, r3, #1
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003048:	b29b      	uxth	r3, r3
 800304a:	3b01      	subs	r3, #1
 800304c:	b29a      	uxth	r2, r3
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8003052:	e02c      	b.n	80030ae <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	689b      	ldr	r3, [r3, #8]
 800305a:	f003 0302 	and.w	r3, r3, #2
 800305e:	2b02      	cmp	r3, #2
 8003060:	d113      	bne.n	800308a <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	330c      	adds	r3, #12
 800306c:	7812      	ldrb	r2, [r2, #0]
 800306e:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003074:	1c5a      	adds	r2, r3, #1
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800307a:	68fb      	ldr	r3, [r7, #12]
 800307c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800307e:	b29b      	uxth	r3, r3
 8003080:	3b01      	subs	r3, #1
 8003082:	b29a      	uxth	r2, r3
 8003084:	68fb      	ldr	r3, [r7, #12]
 8003086:	86da      	strh	r2, [r3, #54]	; 0x36
 8003088:	e011      	b.n	80030ae <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800308a:	f7fe fb33 	bl	80016f4 <HAL_GetTick>
 800308e:	4602      	mov	r2, r0
 8003090:	69bb      	ldr	r3, [r7, #24]
 8003092:	1ad3      	subs	r3, r2, r3
 8003094:	683a      	ldr	r2, [r7, #0]
 8003096:	429a      	cmp	r2, r3
 8003098:	d803      	bhi.n	80030a2 <HAL_SPI_Transmit+0x204>
 800309a:	683b      	ldr	r3, [r7, #0]
 800309c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030a0:	d102      	bne.n	80030a8 <HAL_SPI_Transmit+0x20a>
 80030a2:	683b      	ldr	r3, [r7, #0]
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d102      	bne.n	80030ae <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 80030a8:	2303      	movs	r3, #3
 80030aa:	77fb      	strb	r3, [r7, #31]
          goto error;
 80030ac:	e026      	b.n	80030fc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 80030ae:	68fb      	ldr	r3, [r7, #12]
 80030b0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80030b2:	b29b      	uxth	r3, r3
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d1cd      	bne.n	8003054 <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80030b8:	69ba      	ldr	r2, [r7, #24]
 80030ba:	6839      	ldr	r1, [r7, #0]
 80030bc:	68f8      	ldr	r0, [r7, #12]
 80030be:	f000 f8b3 	bl	8003228 <SPI_EndRxTxTransaction>
 80030c2:	4603      	mov	r3, r0
 80030c4:	2b00      	cmp	r3, #0
 80030c6:	d002      	beq.n	80030ce <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	2220      	movs	r2, #32
 80030cc:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80030ce:	68fb      	ldr	r3, [r7, #12]
 80030d0:	689b      	ldr	r3, [r3, #8]
 80030d2:	2b00      	cmp	r3, #0
 80030d4:	d10a      	bne.n	80030ec <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80030d6:	2300      	movs	r3, #0
 80030d8:	613b      	str	r3, [r7, #16]
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	68db      	ldr	r3, [r3, #12]
 80030e0:	613b      	str	r3, [r7, #16]
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	689b      	ldr	r3, [r3, #8]
 80030e8:	613b      	str	r3, [r7, #16]
 80030ea:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80030ec:	68fb      	ldr	r3, [r7, #12]
 80030ee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d002      	beq.n	80030fa <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 80030f4:	2301      	movs	r3, #1
 80030f6:	77fb      	strb	r3, [r7, #31]
 80030f8:	e000      	b.n	80030fc <HAL_SPI_Transmit+0x25e>
  }

error:
 80030fa:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	2201      	movs	r2, #1
 8003100:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	2200      	movs	r2, #0
 8003108:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 800310c:	7ffb      	ldrb	r3, [r7, #31]
}
 800310e:	4618      	mov	r0, r3
 8003110:	3720      	adds	r7, #32
 8003112:	46bd      	mov	sp, r7
 8003114:	bd80      	pop	{r7, pc}
	...

08003118 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8003118:	b580      	push	{r7, lr}
 800311a:	b088      	sub	sp, #32
 800311c:	af00      	add	r7, sp, #0
 800311e:	60f8      	str	r0, [r7, #12]
 8003120:	60b9      	str	r1, [r7, #8]
 8003122:	603b      	str	r3, [r7, #0]
 8003124:	4613      	mov	r3, r2
 8003126:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8003128:	f7fe fae4 	bl	80016f4 <HAL_GetTick>
 800312c:	4602      	mov	r2, r0
 800312e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003130:	1a9b      	subs	r3, r3, r2
 8003132:	683a      	ldr	r2, [r7, #0]
 8003134:	4413      	add	r3, r2
 8003136:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8003138:	f7fe fadc 	bl	80016f4 <HAL_GetTick>
 800313c:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800313e:	4b39      	ldr	r3, [pc, #228]	; (8003224 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	015b      	lsls	r3, r3, #5
 8003144:	0d1b      	lsrs	r3, r3, #20
 8003146:	69fa      	ldr	r2, [r7, #28]
 8003148:	fb02 f303 	mul.w	r3, r2, r3
 800314c:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800314e:	e054      	b.n	80031fa <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8003150:	683b      	ldr	r3, [r7, #0]
 8003152:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003156:	d050      	beq.n	80031fa <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8003158:	f7fe facc 	bl	80016f4 <HAL_GetTick>
 800315c:	4602      	mov	r2, r0
 800315e:	69bb      	ldr	r3, [r7, #24]
 8003160:	1ad3      	subs	r3, r2, r3
 8003162:	69fa      	ldr	r2, [r7, #28]
 8003164:	429a      	cmp	r2, r3
 8003166:	d902      	bls.n	800316e <SPI_WaitFlagStateUntilTimeout+0x56>
 8003168:	69fb      	ldr	r3, [r7, #28]
 800316a:	2b00      	cmp	r3, #0
 800316c:	d13d      	bne.n	80031ea <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	685a      	ldr	r2, [r3, #4]
 8003174:	68fb      	ldr	r3, [r7, #12]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800317c:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	685b      	ldr	r3, [r3, #4]
 8003182:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003186:	d111      	bne.n	80031ac <SPI_WaitFlagStateUntilTimeout+0x94>
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	689b      	ldr	r3, [r3, #8]
 800318c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003190:	d004      	beq.n	800319c <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	689b      	ldr	r3, [r3, #8]
 8003196:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800319a:	d107      	bne.n	80031ac <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	681a      	ldr	r2, [r3, #0]
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80031aa:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80031ac:	68fb      	ldr	r3, [r7, #12]
 80031ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031b0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80031b4:	d10f      	bne.n	80031d6 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	681a      	ldr	r2, [r3, #0]
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	681a      	ldr	r2, [r3, #0]
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80031d4:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	2201      	movs	r2, #1
 80031da:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	2200      	movs	r2, #0
 80031e2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 80031e6:	2303      	movs	r3, #3
 80031e8:	e017      	b.n	800321a <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80031ea:	697b      	ldr	r3, [r7, #20]
 80031ec:	2b00      	cmp	r3, #0
 80031ee:	d101      	bne.n	80031f4 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 80031f0:	2300      	movs	r3, #0
 80031f2:	61fb      	str	r3, [r7, #28]
      }
      count--;
 80031f4:	697b      	ldr	r3, [r7, #20]
 80031f6:	3b01      	subs	r3, #1
 80031f8:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	689a      	ldr	r2, [r3, #8]
 8003200:	68bb      	ldr	r3, [r7, #8]
 8003202:	4013      	ands	r3, r2
 8003204:	68ba      	ldr	r2, [r7, #8]
 8003206:	429a      	cmp	r2, r3
 8003208:	bf0c      	ite	eq
 800320a:	2301      	moveq	r3, #1
 800320c:	2300      	movne	r3, #0
 800320e:	b2db      	uxtb	r3, r3
 8003210:	461a      	mov	r2, r3
 8003212:	79fb      	ldrb	r3, [r7, #7]
 8003214:	429a      	cmp	r2, r3
 8003216:	d19b      	bne.n	8003150 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8003218:	2300      	movs	r3, #0
}
 800321a:	4618      	mov	r0, r3
 800321c:	3720      	adds	r7, #32
 800321e:	46bd      	mov	sp, r7
 8003220:	bd80      	pop	{r7, pc}
 8003222:	bf00      	nop
 8003224:	20000000 	.word	0x20000000

08003228 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8003228:	b580      	push	{r7, lr}
 800322a:	b088      	sub	sp, #32
 800322c:	af02      	add	r7, sp, #8
 800322e:	60f8      	str	r0, [r7, #12]
 8003230:	60b9      	str	r1, [r7, #8]
 8003232:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8003234:	4b1b      	ldr	r3, [pc, #108]	; (80032a4 <SPI_EndRxTxTransaction+0x7c>)
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	4a1b      	ldr	r2, [pc, #108]	; (80032a8 <SPI_EndRxTxTransaction+0x80>)
 800323a:	fba2 2303 	umull	r2, r3, r2, r3
 800323e:	0d5b      	lsrs	r3, r3, #21
 8003240:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003244:	fb02 f303 	mul.w	r3, r2, r3
 8003248:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	685b      	ldr	r3, [r3, #4]
 800324e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003252:	d112      	bne.n	800327a <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	9300      	str	r3, [sp, #0]
 8003258:	68bb      	ldr	r3, [r7, #8]
 800325a:	2200      	movs	r2, #0
 800325c:	2180      	movs	r1, #128	; 0x80
 800325e:	68f8      	ldr	r0, [r7, #12]
 8003260:	f7ff ff5a 	bl	8003118 <SPI_WaitFlagStateUntilTimeout>
 8003264:	4603      	mov	r3, r0
 8003266:	2b00      	cmp	r3, #0
 8003268:	d016      	beq.n	8003298 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800326e:	f043 0220 	orr.w	r2, r3, #32
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8003276:	2303      	movs	r3, #3
 8003278:	e00f      	b.n	800329a <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800327a:	697b      	ldr	r3, [r7, #20]
 800327c:	2b00      	cmp	r3, #0
 800327e:	d00a      	beq.n	8003296 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8003280:	697b      	ldr	r3, [r7, #20]
 8003282:	3b01      	subs	r3, #1
 8003284:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	689b      	ldr	r3, [r3, #8]
 800328c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003290:	2b80      	cmp	r3, #128	; 0x80
 8003292:	d0f2      	beq.n	800327a <SPI_EndRxTxTransaction+0x52>
 8003294:	e000      	b.n	8003298 <SPI_EndRxTxTransaction+0x70>
        break;
 8003296:	bf00      	nop
  }

  return HAL_OK;
 8003298:	2300      	movs	r3, #0
}
 800329a:	4618      	mov	r0, r3
 800329c:	3718      	adds	r7, #24
 800329e:	46bd      	mov	sp, r7
 80032a0:	bd80      	pop	{r7, pc}
 80032a2:	bf00      	nop
 80032a4:	20000000 	.word	0x20000000
 80032a8:	165e9f81 	.word	0x165e9f81

080032ac <TEXT_Callback>:
 80032ac:	b530      	push	{r4, r5, lr}
 80032ae:	6845      	ldr	r5, [r0, #4]
 80032b0:	4604      	mov	r4, r0
 80032b2:	b085      	sub	sp, #20
 80032b4:	4628      	mov	r0, r5
 80032b6:	4621      	mov	r1, r4
 80032b8:	f009 fcd1 	bl	800cc5e <WIDGET_HandleActive>
 80032bc:	2800      	cmp	r0, #0
 80032be:	d056      	beq.n	800336e <TEXT_Callback+0xc2>
 80032c0:	6823      	ldr	r3, [r4, #0]
 80032c2:	2b0f      	cmp	r3, #15
 80032c4:	d01e      	beq.n	8003304 <TEXT_Callback+0x58>
 80032c6:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80032ca:	d00e      	beq.n	80032ea <TEXT_Callback+0x3e>
 80032cc:	2b0b      	cmp	r3, #11
 80032ce:	d14b      	bne.n	8003368 <TEXT_Callback+0xbc>
 80032d0:	4628      	mov	r0, r5
 80032d2:	f009 f8f9 	bl	800c4c8 <GUI_ALLOC_LockH>
 80032d6:	ad04      	add	r5, sp, #16
 80032d8:	f845 0d08 	str.w	r0, [r5, #-8]!
 80032dc:	3044      	adds	r0, #68	; 0x44
 80032de:	f009 fac3 	bl	800c868 <GUI_ALLOC_FreePtr>
 80032e2:	4628      	mov	r0, r5
 80032e4:	f009 f8fe 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80032e8:	e03e      	b.n	8003368 <TEXT_Callback+0xbc>
 80032ea:	68e3      	ldr	r3, [r4, #12]
 80032ec:	b12b      	cbz	r3, 80032fa <TEXT_Callback+0x4e>
 80032ee:	7a1b      	ldrb	r3, [r3, #8]
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	bf0c      	ite	eq
 80032f4:	2102      	moveq	r1, #2
 80032f6:	2101      	movne	r1, #1
 80032f8:	e000      	b.n	80032fc <TEXT_Callback+0x50>
 80032fa:	2103      	movs	r1, #3
 80032fc:	4628      	mov	r0, r5
 80032fe:	f002 fb4a 	bl	8005996 <WM_NotifyParent>
 8003302:	e031      	b.n	8003368 <TEXT_Callback+0xbc>
 8003304:	4628      	mov	r0, r5
 8003306:	f009 f8df 	bl	800c4c8 <GUI_ALLOC_LockH>
 800330a:	9000      	str	r0, [sp, #0]
 800330c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800330e:	f006 fc2b 	bl	8009b68 <LCD_SetColor>
 8003312:	9b00      	ldr	r3, [sp, #0]
 8003314:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003316:	f008 fc7b 	bl	800bc10 <GUI_SetFont>
 800331a:	4628      	mov	r0, r5
 800331c:	f001 fef6 	bl	800510c <WM_GetHasTrans>
 8003320:	b928      	cbnz	r0, 800332e <TEXT_Callback+0x82>
 8003322:	9b00      	ldr	r3, [sp, #0]
 8003324:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8003326:	f006 fc17 	bl	8009b58 <LCD_SetBkColor>
 800332a:	f008 fa4d 	bl	800b7c8 <GUI_Clear>
 800332e:	9b00      	ldr	r3, [sp, #0]
 8003330:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003332:	b1ab      	cbz	r3, 8003360 <TEXT_Callback+0xb4>
 8003334:	2002      	movs	r0, #2
 8003336:	f008 fca1 	bl	800bc7c <GUI_SetTextMode>
 800333a:	a802      	add	r0, sp, #8
 800333c:	f002 f8ae 	bl	800549c <WM_GetClientRect>
 8003340:	9b00      	ldr	r3, [sp, #0]
 8003342:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8003344:	f009 f8c0 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003348:	9b00      	ldr	r3, [sp, #0]
 800334a:	9001      	str	r0, [sp, #4]
 800334c:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8003350:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003354:	a902      	add	r1, sp, #8
 8003356:	f008 f844 	bl	800b3e2 <GUI_DispStringInRectWrap>
 800335a:	a801      	add	r0, sp, #4
 800335c:	f009 f8c2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003360:	4668      	mov	r0, sp
 8003362:	f009 f8bf 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003366:	e002      	b.n	800336e <TEXT_Callback+0xc2>
 8003368:	4620      	mov	r0, r4
 800336a:	f003 fd8b 	bl	8006e84 <WM_DefaultProc>
 800336e:	b005      	add	sp, #20
 8003370:	bd30      	pop	{r4, r5, pc}
	...

08003374 <TEXT_CreateUser>:
 8003374:	b570      	push	{r4, r5, r6, lr}
 8003376:	b086      	sub	sp, #24
 8003378:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800337a:	9500      	str	r5, [sp, #0]
 800337c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800337e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003380:	f045 0501 	orr.w	r5, r5, #1
 8003384:	9501      	str	r5, [sp, #4]
 8003386:	4d1a      	ldr	r5, [pc, #104]	; (80033f0 <TEXT_CreateUser+0x7c>)
 8003388:	9502      	str	r5, [sp, #8]
 800338a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800338c:	3520      	adds	r5, #32
 800338e:	9503      	str	r5, [sp, #12]
 8003390:	f003 f978 	bl	8006684 <WM_CreateWindowAsChild>
 8003394:	4605      	mov	r5, r0
 8003396:	b340      	cbz	r0, 80033ea <TEXT_CreateUser+0x76>
 8003398:	b18c      	cbz	r4, 80033be <TEXT_CreateUser+0x4a>
 800339a:	4620      	mov	r0, r4
 800339c:	f7fc ff14 	bl	80001c8 <strlen>
 80033a0:	3001      	adds	r0, #1
 80033a2:	f009 fa8b 	bl	800c8bc <GUI_ALLOC_AllocZero>
 80033a6:	4606      	mov	r6, r0
 80033a8:	b150      	cbz	r0, 80033c0 <TEXT_CreateUser+0x4c>
 80033aa:	f009 f88d 	bl	800c4c8 <GUI_ALLOC_LockH>
 80033ae:	4621      	mov	r1, r4
 80033b0:	9005      	str	r0, [sp, #20]
 80033b2:	f00d fccf 	bl	8010d54 <strcpy>
 80033b6:	a805      	add	r0, sp, #20
 80033b8:	f009 f894 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80033bc:	e000      	b.n	80033c0 <TEXT_CreateUser+0x4c>
 80033be:	4626      	mov	r6, r4
 80033c0:	4628      	mov	r0, r5
 80033c2:	f009 f881 	bl	800c4c8 <GUI_ALLOC_LockH>
 80033c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80033c8:	9005      	str	r0, [sp, #20]
 80033ca:	2200      	movs	r2, #0
 80033cc:	f009 fc02 	bl	800cbd4 <WIDGET__Init>
 80033d0:	9c05      	ldr	r4, [sp, #20]
 80033d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033d4:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 80033d8:	4b06      	ldr	r3, [pc, #24]	; (80033f4 <TEXT_CreateUser+0x80>)
 80033da:	6466      	str	r6, [r4, #68]	; 0x44
 80033dc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80033de:	3434      	adds	r4, #52	; 0x34
 80033e0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80033e4:	a805      	add	r0, sp, #20
 80033e6:	f009 f87d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80033ea:	4628      	mov	r0, r5
 80033ec:	b006      	add	sp, #24
 80033ee:	bd70      	pop	{r4, r5, r6, pc}
 80033f0:	080032ad 	.word	0x080032ad
 80033f4:	2000000c 	.word	0x2000000c

080033f8 <TEXT_CreateIndirect>:
 80033f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033fa:	b087      	sub	sp, #28
 80033fc:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003400:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003404:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003408:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800340c:	9100      	str	r1, [sp, #0]
 800340e:	2102      	movs	r1, #2
 8003410:	9101      	str	r1, [sp, #4]
 8003412:	8a41      	ldrh	r1, [r0, #18]
 8003414:	9102      	str	r1, [sp, #8]
 8003416:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800341a:	9103      	str	r1, [sp, #12]
 800341c:	6844      	ldr	r4, [r0, #4]
 800341e:	9404      	str	r4, [sp, #16]
 8003420:	6984      	ldr	r4, [r0, #24]
 8003422:	9405      	str	r4, [sp, #20]
 8003424:	eb0e 0002 	add.w	r0, lr, r2
 8003428:	18f9      	adds	r1, r7, r3
 800342a:	4632      	mov	r2, r6
 800342c:	462b      	mov	r3, r5
 800342e:	f7ff ffa1 	bl	8003374 <TEXT_CreateUser>
 8003432:	b007      	add	sp, #28
 8003434:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003436 <TEXT_SetFont>:
 8003436:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003438:	460c      	mov	r4, r1
 800343a:	4605      	mov	r5, r0
 800343c:	b160      	cbz	r0, 8003458 <TEXT_SetFont+0x22>
 800343e:	f009 f843 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003442:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8003444:	9001      	str	r0, [sp, #4]
 8003446:	42a2      	cmp	r2, r4
 8003448:	d003      	beq.n	8003452 <TEXT_SetFont+0x1c>
 800344a:	6344      	str	r4, [r0, #52]	; 0x34
 800344c:	4628      	mov	r0, r5
 800344e:	f003 f8eb 	bl	8006628 <WM_InvalidateWindow>
 8003452:	a801      	add	r0, sp, #4
 8003454:	f009 f846 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003458:	b003      	add	sp, #12
 800345a:	bd30      	pop	{r4, r5, pc}

0800345c <TEXT_SetText>:
 800345c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800345e:	460c      	mov	r4, r1
 8003460:	4605      	mov	r5, r0
 8003462:	b300      	cbz	r0, 80034a6 <TEXT_SetText+0x4a>
 8003464:	f009 f830 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003468:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800346a:	9000      	str	r0, [sp, #0]
 800346c:	4668      	mov	r0, sp
 800346e:	9301      	str	r3, [sp, #4]
 8003470:	f009 f838 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003474:	4621      	mov	r1, r4
 8003476:	a801      	add	r0, sp, #4
 8003478:	f006 fc72 	bl	8009d60 <GUI__SetText>
 800347c:	f1d0 0401 	rsbs	r4, r0, #1
 8003480:	bf38      	it	cc
 8003482:	2400      	movcc	r4, #0
 8003484:	b984      	cbnz	r4, 80034a8 <TEXT_SetText+0x4c>
 8003486:	4628      	mov	r0, r5
 8003488:	f009 f81e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800348c:	9a01      	ldr	r2, [sp, #4]
 800348e:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8003490:	9000      	str	r0, [sp, #0]
 8003492:	4291      	cmp	r1, r2
 8003494:	bf18      	it	ne
 8003496:	6442      	strne	r2, [r0, #68]	; 0x44
 8003498:	4668      	mov	r0, sp
 800349a:	f009 f823 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800349e:	4628      	mov	r0, r5
 80034a0:	f003 f8c2 	bl	8006628 <WM_InvalidateWindow>
 80034a4:	e000      	b.n	80034a8 <TEXT_SetText+0x4c>
 80034a6:	2401      	movs	r4, #1
 80034a8:	4620      	mov	r0, r4
 80034aa:	b003      	add	sp, #12
 80034ac:	bd30      	pop	{r4, r5, pc}

080034ae <PROGBAR_Callback>:
 80034ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80034b0:	6845      	ldr	r5, [r0, #4]
 80034b2:	4604      	mov	r4, r0
 80034b4:	4621      	mov	r1, r4
 80034b6:	4628      	mov	r0, r5
 80034b8:	f009 fbd1 	bl	800cc5e <WIDGET_HandleActive>
 80034bc:	b310      	cbz	r0, 8003504 <PROGBAR_Callback+0x56>
 80034be:	6823      	ldr	r3, [r4, #0]
 80034c0:	2b0b      	cmp	r3, #11
 80034c2:	d010      	beq.n	80034e6 <PROGBAR_Callback+0x38>
 80034c4:	2b0f      	cmp	r3, #15
 80034c6:	d11a      	bne.n	80034fe <PROGBAR_Callback+0x50>
 80034c8:	4628      	mov	r0, r5
 80034ca:	f008 fffd 	bl	800c4c8 <GUI_ALLOC_LockH>
 80034ce:	ab02      	add	r3, sp, #8
 80034d0:	f843 0d04 	str.w	r0, [r3, #-4]!
 80034d4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80034d6:	6814      	ldr	r4, [r2, #0]
 80034d8:	4618      	mov	r0, r3
 80034da:	f009 f803 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80034de:	b18c      	cbz	r4, 8003504 <PROGBAR_Callback+0x56>
 80034e0:	4628      	mov	r0, r5
 80034e2:	47a0      	blx	r4
 80034e4:	e00e      	b.n	8003504 <PROGBAR_Callback+0x56>
 80034e6:	4628      	mov	r0, r5
 80034e8:	f008 ffee 	bl	800c4c8 <GUI_ALLOC_LockH>
 80034ec:	ad02      	add	r5, sp, #8
 80034ee:	f845 0d04 	str.w	r0, [r5, #-4]!
 80034f2:	3038      	adds	r0, #56	; 0x38
 80034f4:	f009 f9b8 	bl	800c868 <GUI_ALLOC_FreePtr>
 80034f8:	4628      	mov	r0, r5
 80034fa:	f008 fff3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80034fe:	4620      	mov	r0, r4
 8003500:	f003 fcc0 	bl	8006e84 <WM_DefaultProc>
 8003504:	b003      	add	sp, #12
 8003506:	bd30      	pop	{r4, r5, pc}

08003508 <_SetValue>:
 8003508:	b513      	push	{r0, r1, r4, lr}
 800350a:	ab02      	add	r3, sp, #8
 800350c:	6342      	str	r2, [r0, #52]	; 0x34
 800350e:	f843 1d04 	str.w	r1, [r3, #-4]!
 8003512:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8003514:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003516:	1a52      	subs	r2, r2, r1
 8003518:	2464      	movs	r4, #100	; 0x64
 800351a:	4362      	muls	r2, r4
 800351c:	1a40      	subs	r0, r0, r1
 800351e:	fb92 f0f0 	sdiv	r0, r2, r0
 8003522:	4619      	mov	r1, r3
 8003524:	f006 ff89 	bl	800a43a <GUI_AddDecMin>
 8003528:	9b01      	ldr	r3, [sp, #4]
 800352a:	1c5a      	adds	r2, r3, #1
 800352c:	9201      	str	r2, [sp, #4]
 800352e:	2225      	movs	r2, #37	; 0x25
 8003530:	701a      	strb	r2, [r3, #0]
 8003532:	9b01      	ldr	r3, [sp, #4]
 8003534:	2200      	movs	r2, #0
 8003536:	701a      	strb	r2, [r3, #0]
 8003538:	b002      	add	sp, #8
 800353a:	bd10      	pop	{r4, pc}

0800353c <PROGBAR__GetTextLocked>:
 800353c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800353e:	f008 bfc3 	b.w	800c4c8 <GUI_ALLOC_LockH>

08003542 <PROGBAR__GetTextRect>:
 8003542:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003546:	f9b0 3000 	ldrsh.w	r3, [r0]
 800354a:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 800354e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8003552:	1aff      	subs	r7, r7, r3
 8003554:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8003558:	4604      	mov	r4, r0
 800355a:	4610      	mov	r0, r2
 800355c:	ebc3 0808 	rsb	r8, r3, r8
 8003560:	460d      	mov	r5, r1
 8003562:	f007 ffdd 	bl	800b520 <GUI_GetStringDistX>
 8003566:	4606      	mov	r6, r0
 8003568:	f008 fa80 	bl	800ba6c <GUI_GetFontSizeY>
 800356c:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8003570:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003572:	f003 0303 	and.w	r3, r3, #3
 8003576:	2b01      	cmp	r3, #1
 8003578:	f107 0701 	add.w	r7, r7, #1
 800357c:	f108 0801 	add.w	r8, r8, #1
 8003580:	6812      	ldr	r2, [r2, #0]
 8003582:	d006      	beq.n	8003592 <PROGBAR__GetTextRect+0x50>
 8003584:	2b02      	cmp	r3, #2
 8003586:	d109      	bne.n	800359c <PROGBAR__GetTextRect+0x5a>
 8003588:	1bbf      	subs	r7, r7, r6
 800358a:	fb97 f3f3 	sdiv	r3, r7, r3
 800358e:	802b      	strh	r3, [r5, #0]
 8003590:	e005      	b.n	800359e <PROGBAR__GetTextRect+0x5c>
 8003592:	43d2      	mvns	r2, r2
 8003594:	4417      	add	r7, r2
 8003596:	1bbf      	subs	r7, r7, r6
 8003598:	802f      	strh	r7, [r5, #0]
 800359a:	e000      	b.n	800359e <PROGBAR__GetTextRect+0x5c>
 800359c:	802a      	strh	r2, [r5, #0]
 800359e:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 80035a0:	882b      	ldrh	r3, [r5, #0]
 80035a2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80035a4:	441a      	add	r2, r3
 80035a6:	ebc0 0808 	rsb	r8, r0, r8
 80035aa:	2302      	movs	r3, #2
 80035ac:	fb98 f3f3 	sdiv	r3, r8, r3
 80035b0:	b292      	uxth	r2, r2
 80035b2:	440b      	add	r3, r1
 80035b4:	b29b      	uxth	r3, r3
 80035b6:	802a      	strh	r2, [r5, #0]
 80035b8:	3801      	subs	r0, #1
 80035ba:	3a01      	subs	r2, #1
 80035bc:	806b      	strh	r3, [r5, #2]
 80035be:	4416      	add	r6, r2
 80035c0:	4403      	add	r3, r0
 80035c2:	80ae      	strh	r6, [r5, #4]
 80035c4:	80eb      	strh	r3, [r5, #6]
 80035c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080035ca <PROGBAR__Value2Pos>:
 80035ca:	b570      	push	{r4, r5, r6, lr}
 80035cc:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 80035d0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80035d2:	f013 0601 	ands.w	r6, r3, #1
 80035d6:	bf15      	itete	ne
 80035d8:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 80035dc:	f9b0 3000 	ldrsheq.w	r3, [r0]
 80035e0:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 80035e4:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 80035e8:	6814      	ldr	r4, [r2, #0]
 80035ea:	6c82      	ldr	r2, [r0, #72]	; 0x48
 80035ec:	1aed      	subs	r5, r5, r3
 80035ee:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80035f0:	3501      	adds	r5, #1
 80035f2:	4299      	cmp	r1, r3
 80035f4:	bfb8      	it	lt
 80035f6:	4619      	movlt	r1, r3
 80035f8:	4291      	cmp	r1, r2
 80035fa:	bfa8      	it	ge
 80035fc:	4611      	movge	r1, r2
 80035fe:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8003602:	b10e      	cbz	r6, 8003608 <PROGBAR__Value2Pos+0x3e>
 8003604:	1a51      	subs	r1, r2, r1
 8003606:	e000      	b.n	800360a <PROGBAR__Value2Pos+0x40>
 8003608:	1ac9      	subs	r1, r1, r3
 800360a:	4369      	muls	r1, r5
 800360c:	1ad3      	subs	r3, r2, r3
 800360e:	fb91 f0f3 	sdiv	r0, r1, r3
 8003612:	4420      	add	r0, r4
 8003614:	bd70      	pop	{r4, r5, r6, pc}
	...

08003618 <PROGBAR_CreateUser>:
 8003618:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800361c:	b087      	sub	sp, #28
 800361e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003620:	9400      	str	r4, [sp, #0]
 8003622:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8003624:	9401      	str	r4, [sp, #4]
 8003626:	4c27      	ldr	r4, [pc, #156]	; (80036c4 <PROGBAR_CreateUser+0xac>)
 8003628:	9402      	str	r4, [sp, #8]
 800362a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800362c:	3440      	adds	r4, #64	; 0x40
 800362e:	9403      	str	r4, [sp, #12]
 8003630:	f003 f828 	bl	8006684 <WM_CreateWindowAsChild>
 8003634:	4607      	mov	r7, r0
 8003636:	2800      	cmp	r0, #0
 8003638:	d040      	beq.n	80036bc <PROGBAR_CreateUser+0xa4>
 800363a:	2005      	movs	r0, #5
 800363c:	f009 f93e 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8003640:	4680      	mov	r8, r0
 8003642:	2800      	cmp	r0, #0
 8003644:	d03a      	beq.n	80036bc <PROGBAR_CreateUser+0xa4>
 8003646:	4638      	mov	r0, r7
 8003648:	f008 ff3e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800364c:	2200      	movs	r2, #0
 800364e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003650:	9004      	str	r0, [sp, #16]
 8003652:	f8df 907c 	ldr.w	r9, [pc, #124]	; 80036d0 <PROGBAR_CreateUser+0xb8>
 8003656:	4d1c      	ldr	r5, [pc, #112]	; (80036c8 <PROGBAR_CreateUser+0xb0>)
 8003658:	f009 fabc 	bl	800cbd4 <WIDGET__Init>
 800365c:	4638      	mov	r0, r7
 800365e:	491b      	ldr	r1, [pc, #108]	; (80036cc <PROGBAR_CreateUser+0xb4>)
 8003660:	f009 fbea 	bl	800ce38 <WIDGET_SetEffect>
 8003664:	9e04      	ldr	r6, [sp, #16]
 8003666:	f8d9 3000 	ldr.w	r3, [r9]
 800366a:	6673      	str	r3, [r6, #100]	; 0x64
 800366c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800366e:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 8003672:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003674:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003678:	2302      	movs	r3, #2
 800367a:	e884 0003 	stmia.w	r4, {r0, r1}
 800367e:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 8003682:	2364      	movs	r3, #100	; 0x64
 8003684:	64b3      	str	r3, [r6, #72]	; 0x48
 8003686:	2400      	movs	r4, #0
 8003688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800368a:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 800368e:	6474      	str	r4, [r6, #68]	; 0x44
 8003690:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8003694:	4640      	mov	r0, r8
 8003696:	f008 ff17 	bl	800c4c8 <GUI_ALLOC_LockH>
 800369a:	4622      	mov	r2, r4
 800369c:	4601      	mov	r1, r0
 800369e:	9005      	str	r0, [sp, #20]
 80036a0:	9804      	ldr	r0, [sp, #16]
 80036a2:	f7ff ff31 	bl	8003508 <_SetValue>
 80036a6:	a805      	add	r0, sp, #20
 80036a8:	f008 ff1c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80036ac:	a804      	add	r0, sp, #16
 80036ae:	f008 ff19 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80036b2:	f8d9 3000 	ldr.w	r3, [r9]
 80036b6:	4638      	mov	r0, r7
 80036b8:	685b      	ldr	r3, [r3, #4]
 80036ba:	4798      	blx	r3
 80036bc:	4638      	mov	r0, r7
 80036be:	b007      	add	sp, #28
 80036c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036c4:	080034af 	.word	0x080034af
 80036c8:	20000020 	.word	0x20000020
 80036cc:	08013db4 	.word	0x08013db4
 80036d0:	2000001c 	.word	0x2000001c

080036d4 <PROGBAR_CreateIndirect>:
 80036d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036d6:	b087      	sub	sp, #28
 80036d8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80036dc:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80036e0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80036e4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80036e8:	9100      	str	r1, [sp, #0]
 80036ea:	2100      	movs	r1, #0
 80036ec:	9101      	str	r1, [sp, #4]
 80036ee:	8a41      	ldrh	r1, [r0, #18]
 80036f0:	9102      	str	r1, [sp, #8]
 80036f2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80036f6:	9103      	str	r1, [sp, #12]
 80036f8:	6984      	ldr	r4, [r0, #24]
 80036fa:	9404      	str	r4, [sp, #16]
 80036fc:	eb0e 0002 	add.w	r0, lr, r2
 8003700:	18f9      	adds	r1, r7, r3
 8003702:	4632      	mov	r2, r6
 8003704:	462b      	mov	r3, r5
 8003706:	f7ff ff87 	bl	8003618 <PROGBAR_CreateUser>
 800370a:	b007      	add	sp, #28
 800370c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800370e <PROGBAR_SetValue>:
 800370e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003712:	460d      	mov	r5, r1
 8003714:	b087      	sub	sp, #28
 8003716:	4680      	mov	r8, r0
 8003718:	2800      	cmp	r0, #0
 800371a:	f000 80a0 	beq.w	800385e <PROGBAR_SetValue+0x150>
 800371e:	f008 fed3 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003722:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8003724:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8003726:	429d      	cmp	r5, r3
 8003728:	bfb8      	it	lt
 800372a:	461d      	movlt	r5, r3
 800372c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800372e:	af06      	add	r7, sp, #24
 8003730:	429d      	cmp	r5, r3
 8003732:	bfa8      	it	ge
 8003734:	461d      	movge	r5, r3
 8003736:	42ae      	cmp	r6, r5
 8003738:	4604      	mov	r4, r0
 800373a:	f847 0d18 	str.w	r0, [r7, #-24]!
 800373e:	f000 808b 	beq.w	8003858 <PROGBAR_SetValue+0x14a>
 8003742:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 8003746:	f019 0f01 	tst.w	r9, #1
 800374a:	d01c      	beq.n	8003786 <PROGBAR_SetValue+0x78>
 800374c:	42b5      	cmp	r5, r6
 800374e:	da07      	bge.n	8003760 <PROGBAR_SetValue+0x52>
 8003750:	4629      	mov	r1, r5
 8003752:	f7ff ff3a 	bl	80035ca <PROGBAR__Value2Pos>
 8003756:	4631      	mov	r1, r6
 8003758:	f8ad 000e 	strh.w	r0, [sp, #14]
 800375c:	4620      	mov	r0, r4
 800375e:	e006      	b.n	800376e <PROGBAR_SetValue+0x60>
 8003760:	4631      	mov	r1, r6
 8003762:	f7ff ff32 	bl	80035ca <PROGBAR__Value2Pos>
 8003766:	4629      	mov	r1, r5
 8003768:	f8ad 000e 	strh.w	r0, [sp, #14]
 800376c:	4620      	mov	r0, r4
 800376e:	f7ff ff2c 	bl	80035ca <PROGBAR__Value2Pos>
 8003772:	2300      	movs	r3, #0
 8003774:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003778:	f640 73ff 	movw	r3, #4095	; 0xfff
 800377c:	f8ad 000a 	strh.w	r0, [sp, #10]
 8003780:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003784:	e063      	b.n	800384e <PROGBAR_SetValue+0x140>
 8003786:	42b5      	cmp	r5, r6
 8003788:	da07      	bge.n	800379a <PROGBAR_SetValue+0x8c>
 800378a:	4629      	mov	r1, r5
 800378c:	f7ff ff1d 	bl	80035ca <PROGBAR__Value2Pos>
 8003790:	4631      	mov	r1, r6
 8003792:	f8ad 0008 	strh.w	r0, [sp, #8]
 8003796:	4620      	mov	r0, r4
 8003798:	e006      	b.n	80037a8 <PROGBAR_SetValue+0x9a>
 800379a:	4631      	mov	r1, r6
 800379c:	f7ff ff15 	bl	80035ca <PROGBAR__Value2Pos>
 80037a0:	4629      	mov	r1, r5
 80037a2:	f8ad 0008 	strh.w	r0, [sp, #8]
 80037a6:	4620      	mov	r0, r4
 80037a8:	f7ff ff0f 	bl	80035ca <PROGBAR__Value2Pos>
 80037ac:	2300      	movs	r3, #0
 80037ae:	f8ad 300a 	strh.w	r3, [sp, #10]
 80037b2:	f009 0202 	and.w	r2, r9, #2
 80037b6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80037ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 80037be:	f8ad 000c 	strh.w	r0, [sp, #12]
 80037c2:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 80037c6:	2a00      	cmp	r2, #0
 80037c8:	d141      	bne.n	800384e <PROGBAR_SetValue+0x140>
 80037ca:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80037cc:	9304      	str	r3, [sp, #16]
 80037ce:	9305      	str	r3, [sp, #20]
 80037d0:	f008 fea8 	bl	800c524 <GUI_ALLOC_GetSize>
 80037d4:	2804      	cmp	r0, #4
 80037d6:	dc0e      	bgt.n	80037f6 <PROGBAR_SetValue+0xe8>
 80037d8:	9b00      	ldr	r3, [sp, #0]
 80037da:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80037dc:	4668      	mov	r0, sp
 80037de:	f008 fe81 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80037e2:	4620      	mov	r0, r4
 80037e4:	2105      	movs	r1, #5
 80037e6:	f009 f881 	bl	800c8ec <GUI_ALLOC_Realloc>
 80037ea:	4604      	mov	r4, r0
 80037ec:	4640      	mov	r0, r8
 80037ee:	f008 fe6b 	bl	800c4c8 <GUI_ALLOC_LockH>
 80037f2:	9000      	str	r0, [sp, #0]
 80037f4:	6384      	str	r4, [r0, #56]	; 0x38
 80037f6:	9800      	ldr	r0, [sp, #0]
 80037f8:	f7ff fea0 	bl	800353c <PROGBAR__GetTextLocked>
 80037fc:	9001      	str	r0, [sp, #4]
 80037fe:	b338      	cbz	r0, 8003850 <PROGBAR_SetValue+0x142>
 8003800:	9b00      	ldr	r3, [sp, #0]
 8003802:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003804:	f008 fa04 	bl	800bc10 <GUI_SetFont>
 8003808:	a904      	add	r1, sp, #16
 800380a:	4606      	mov	r6, r0
 800380c:	9a01      	ldr	r2, [sp, #4]
 800380e:	9800      	ldr	r0, [sp, #0]
 8003810:	f7ff fe97 	bl	8003542 <PROGBAR__GetTextRect>
 8003814:	a802      	add	r0, sp, #8
 8003816:	aa04      	add	r2, sp, #16
 8003818:	ac06      	add	r4, sp, #24
 800381a:	4601      	mov	r1, r0
 800381c:	f008 f940 	bl	800baa0 <GUI_MergeRect>
 8003820:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8003824:	462a      	mov	r2, r5
 8003826:	f7ff fe6f 	bl	8003508 <_SetValue>
 800382a:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 800382e:	9800      	ldr	r0, [sp, #0]
 8003830:	a904      	add	r1, sp, #16
 8003832:	f7ff fe86 	bl	8003542 <PROGBAR__GetTextRect>
 8003836:	a802      	add	r0, sp, #8
 8003838:	4601      	mov	r1, r0
 800383a:	aa04      	add	r2, sp, #16
 800383c:	f008 f930 	bl	800baa0 <GUI_MergeRect>
 8003840:	4630      	mov	r0, r6
 8003842:	f008 f9e5 	bl	800bc10 <GUI_SetFont>
 8003846:	4620      	mov	r0, r4
 8003848:	f008 fe4c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800384c:	e000      	b.n	8003850 <PROGBAR_SetValue+0x142>
 800384e:	6365      	str	r5, [r4, #52]	; 0x34
 8003850:	4640      	mov	r0, r8
 8003852:	a902      	add	r1, sp, #8
 8003854:	f002 feac 	bl	80065b0 <WM_InvalidateRect>
 8003858:	4668      	mov	r0, sp
 800385a:	f008 fe43 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800385e:	b007      	add	sp, #28
 8003860:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003864 <_OnPaint>:
 8003864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003868:	ed2d 8b02 	vpush	{d8}
 800386c:	b085      	sub	sp, #20
 800386e:	460d      	mov	r5, r1
 8003870:	f008 fe2a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003874:	9000      	str	r0, [sp, #0]
 8003876:	6900      	ldr	r0, [r0, #16]
 8003878:	f008 f9ca 	bl	800bc10 <GUI_SetFont>
 800387c:	9b00      	ldr	r3, [sp, #0]
 800387e:	68d8      	ldr	r0, [r3, #12]
 8003880:	f008 f9c1 	bl	800bc06 <GUI_SetColor>
 8003884:	2002      	movs	r0, #2
 8003886:	f008 f9f9 	bl	800bc7c <GUI_SetTextMode>
 800388a:	9c00      	ldr	r4, [sp, #0]
 800388c:	8ca6      	ldrh	r6, [r4, #36]	; 0x24
 800388e:	69e3      	ldr	r3, [r4, #28]
 8003890:	f016 0601 	ands.w	r6, r6, #1
 8003894:	d01a      	beq.n	80038cc <_OnPaint+0x68>
 8003896:	2b00      	cmp	r3, #0
 8003898:	d077      	beq.n	800398a <_OnPaint+0x126>
 800389a:	68a0      	ldr	r0, [r4, #8]
 800389c:	f008 fe14 	bl	800c4c8 <GUI_ALLOC_LockH>
 80038a0:	9001      	str	r0, [sp, #4]
 80038a2:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80038a4:	6963      	ldr	r3, [r4, #20]
 80038a6:	6817      	ldr	r7, [r2, #0]
 80038a8:	441f      	add	r7, r3
 80038aa:	f001 febf 	bl	800562c <WM_GetOrgX>
 80038ae:	69a3      	ldr	r3, [r4, #24]
 80038b0:	4438      	add	r0, r7
 80038b2:	b133      	cbz	r3, 80038c2 <_OnPaint+0x5e>
 80038b4:	2b01      	cmp	r3, #1
 80038b6:	d170      	bne.n	800399a <_OnPaint+0x136>
 80038b8:	f9b5 3000 	ldrsh.w	r3, [r5]
 80038bc:	4283      	cmp	r3, r0
 80038be:	dd6c      	ble.n	800399a <_OnPaint+0x136>
 80038c0:	e01c      	b.n	80038fc <_OnPaint+0x98>
 80038c2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80038c6:	4283      	cmp	r3, r0
 80038c8:	db18      	blt.n	80038fc <_OnPaint+0x98>
 80038ca:	e066      	b.n	800399a <_OnPaint+0x136>
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d05c      	beq.n	800398a <_OnPaint+0x126>
 80038d0:	68a0      	ldr	r0, [r4, #8]
 80038d2:	f008 fdf9 	bl	800c4c8 <GUI_ALLOC_LockH>
 80038d6:	9001      	str	r0, [sp, #4]
 80038d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80038da:	f8d3 8000 	ldr.w	r8, [r3]
 80038de:	f008 f8c5 	bl	800ba6c <GUI_GetFontSizeY>
 80038e2:	6963      	ldr	r3, [r4, #20]
 80038e4:	4607      	mov	r7, r0
 80038e6:	ebc8 0903 	rsb	r9, r8, r3
 80038ea:	f001 fea7 	bl	800563c <WM_GetOrgY>
 80038ee:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80038f2:	88ea      	ldrh	r2, [r5, #6]
 80038f4:	4448      	add	r0, r9
 80038f6:	4407      	add	r7, r0
 80038f8:	428f      	cmp	r7, r1
 80038fa:	da03      	bge.n	8003904 <_OnPaint+0xa0>
 80038fc:	a801      	add	r0, sp, #4
 80038fe:	f008 fdf1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003902:	e042      	b.n	800398a <_OnPaint+0x126>
 8003904:	b212      	sxth	r2, r2
 8003906:	4290      	cmp	r0, r2
 8003908:	dcf8      	bgt.n	80038fc <_OnPaint+0x98>
 800390a:	68a0      	ldr	r0, [r4, #8]
 800390c:	a902      	add	r1, sp, #8
 800390e:	f001 ff11 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8003912:	9b01      	ldr	r3, [sp, #4]
 8003914:	f9bd b00c 	ldrsh.w	fp, [sp, #12]
 8003918:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800391a:	f8d3 a054 	ldr.w	sl, [r3, #84]	; 0x54
 800391e:	f9bd 7008 	ldrsh.w	r7, [sp, #8]
 8003922:	6a25      	ldr	r5, [r4, #32]
 8003924:	ebc2 0b0b 	rsb	fp, r2, fp
 8003928:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 800392c:	07d2      	lsls	r2, r2, #31
 800392e:	4457      	add	r7, sl
 8003930:	bf58      	it	pl
 8003932:	f8d3 608c 	ldrpl.w	r6, [r3, #140]	; 0x8c
 8003936:	443d      	add	r5, r7
 8003938:	4435      	add	r5, r6
 800393a:	42bd      	cmp	r5, r7
 800393c:	dd22      	ble.n	8003984 <_OnPaint+0x120>
 800393e:	69e3      	ldr	r3, [r4, #28]
 8003940:	1aed      	subs	r5, r5, r3
 8003942:	e7fa      	b.n	800393a <_OnPaint+0xd6>
 8003944:	42bd      	cmp	r5, r7
 8003946:	dd1b      	ble.n	8003980 <_OnPaint+0x11c>
 8003948:	69a0      	ldr	r0, [r4, #24]
 800394a:	f008 f98d 	bl	800bc68 <GUI_SetTextAlign>
 800394e:	6a23      	ldr	r3, [r4, #32]
 8003950:	edd4 7a0a 	vldr	s15, [r4, #40]	; 0x28
 8003954:	1aeb      	subs	r3, r5, r3
 8003956:	ebca 0303 	rsb	r3, sl, r3
 800395a:	ebc8 0303 	rsb	r3, r8, r3
 800395e:	1b9b      	subs	r3, r3, r6
 8003960:	ee08 3a10 	vmov	s16, r3
 8003964:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8003968:	4628      	mov	r0, r5
 800396a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800396e:	4649      	mov	r1, r9
 8003970:	f008 f8fc 	bl	800bb6c <GUI_GotoXY>
 8003974:	eeb0 0a48 	vmov.f32	s0, s16
 8003978:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
 800397c:	f006 fd5a 	bl	800a434 <GUI_DispFloatMin>
 8003980:	69e3      	ldr	r3, [r4, #28]
 8003982:	441d      	add	r5, r3
 8003984:	455d      	cmp	r5, fp
 8003986:	dddd      	ble.n	8003944 <_OnPaint+0xe0>
 8003988:	e7b8      	b.n	80038fc <_OnPaint+0x98>
 800398a:	4668      	mov	r0, sp
 800398c:	f008 fdaa 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003990:	b005      	add	sp, #20
 8003992:	ecbd 8b02 	vpop	{d8}
 8003996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800399a:	68a0      	ldr	r0, [r4, #8]
 800399c:	a902      	add	r1, sp, #8
 800399e:	f001 fec9 	bl	8005734 <WM_GetInsideRectExScrollbar>
 80039a2:	9b01      	ldr	r3, [sp, #4]
 80039a4:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80039a6:	f8d3 8058 	ldr.w	r8, [r3, #88]	; 0x58
 80039aa:	f008 f85f 	bl	800ba6c <GUI_GetFontSizeY>
 80039ae:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80039b2:	9b01      	ldr	r3, [sp, #4]
 80039b4:	f8bd a00a 	ldrh.w	sl, [sp, #10]
 80039b8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80039bc:	1b76      	subs	r6, r6, r5
 80039be:	6a25      	ldr	r5, [r4, #32]
 80039c0:	1b75      	subs	r5, r6, r5
 80039c2:	441d      	add	r5, r3
 80039c4:	42b5      	cmp	r5, r6
 80039c6:	da01      	bge.n	80039cc <_OnPaint+0x168>
 80039c8:	69e3      	ldr	r3, [r4, #28]
 80039ca:	e7fa      	b.n	80039c2 <_OnPaint+0x15e>
 80039cc:	f04f 0902 	mov.w	r9, #2
 80039d0:	fb90 f9f9 	sdiv	r9, r0, r9
 80039d4:	fa08 f38a 	sxtah	r3, r8, sl
 80039d8:	429d      	cmp	r5, r3
 80039da:	db8f      	blt.n	80038fc <_OnPaint+0x98>
 80039dc:	42b5      	cmp	r5, r6
 80039de:	dc1c      	bgt.n	8003a1a <_OnPaint+0x1b6>
 80039e0:	69a0      	ldr	r0, [r4, #24]
 80039e2:	f008 f941 	bl	800bc68 <GUI_SetTextAlign>
 80039e6:	6a23      	ldr	r3, [r4, #32]
 80039e8:	edd4 7a0a 	vldr	s15, [r4, #40]	; 0x28
 80039ec:	1b71      	subs	r1, r6, r5
 80039ee:	1ac9      	subs	r1, r1, r3
 80039f0:	9b01      	ldr	r3, [sp, #4]
 80039f2:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 80039f6:	188a      	adds	r2, r1, r2
 80039f8:	ee08 2a10 	vmov	s16, r2
 80039fc:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8003a00:	4638      	mov	r0, r7
 8003a02:	ee28 8a27 	vmul.f32	s16, s16, s15
 8003a06:	ebc9 0105 	rsb	r1, r9, r5
 8003a0a:	f008 f8af 	bl	800bb6c <GUI_GotoXY>
 8003a0e:	eeb0 0a48 	vmov.f32	s0, s16
 8003a12:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
 8003a16:	f006 fd0d 	bl	800a434 <GUI_DispFloatMin>
 8003a1a:	69e3      	ldr	r3, [r4, #28]
 8003a1c:	1aed      	subs	r5, r5, r3
 8003a1e:	e7d9      	b.n	80039d4 <_OnPaint+0x170>

08003a20 <GRAPH_SCALE_Create>:
 8003a20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a24:	4681      	mov	r9, r0
 8003a26:	2030      	movs	r0, #48	; 0x30
 8003a28:	4688      	mov	r8, r1
 8003a2a:	4617      	mov	r7, r2
 8003a2c:	461e      	mov	r6, r3
 8003a2e:	f008 ff45 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8003a32:	4682      	mov	sl, r0
 8003a34:	b1d0      	cbz	r0, 8003a6c <GRAPH_SCALE_Create+0x4c>
 8003a36:	f008 fd47 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003a3a:	ad02      	add	r5, sp, #8
 8003a3c:	4a0d      	ldr	r2, [pc, #52]	; (8003a74 <GRAPH_SCALE_Create+0x54>)
 8003a3e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8003a42:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8003a46:	6283      	str	r3, [r0, #40]	; 0x28
 8003a48:	f8c0 9014 	str.w	r9, [r0, #20]
 8003a4c:	f8c0 8018 	str.w	r8, [r0, #24]
 8003a50:	8487      	strh	r7, [r0, #36]	; 0x24
 8003a52:	61c6      	str	r6, [r0, #28]
 8003a54:	f100 030c 	add.w	r3, r0, #12
 8003a58:	4604      	mov	r4, r0
 8003a5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003a5e:	e883 0003 	stmia.w	r3, {r0, r1}
 8003a62:	4b05      	ldr	r3, [pc, #20]	; (8003a78 <GRAPH_SCALE_Create+0x58>)
 8003a64:	6023      	str	r3, [r4, #0]
 8003a66:	4628      	mov	r0, r5
 8003a68:	f008 fd3c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003a6c:	4650      	mov	r0, sl
 8003a6e:	b002      	add	sp, #8
 8003a70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a74:	20000038 	.word	0x20000038
 8003a78:	08003865 	.word	0x08003865

08003a7c <GRAPH_SCALE_SetOff>:
 8003a7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003a7e:	460d      	mov	r5, r1
 8003a80:	4604      	mov	r4, r0
 8003a82:	b160      	cbz	r0, 8003a9e <GRAPH_SCALE_SetOff+0x22>
 8003a84:	f008 fd20 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003a88:	6a04      	ldr	r4, [r0, #32]
 8003a8a:	9001      	str	r0, [sp, #4]
 8003a8c:	42ac      	cmp	r4, r5
 8003a8e:	d003      	beq.n	8003a98 <GRAPH_SCALE_SetOff+0x1c>
 8003a90:	6205      	str	r5, [r0, #32]
 8003a92:	6880      	ldr	r0, [r0, #8]
 8003a94:	f002 fdc8 	bl	8006628 <WM_InvalidateWindow>
 8003a98:	a801      	add	r0, sp, #4
 8003a9a:	f008 fd23 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003a9e:	4620      	mov	r0, r4
 8003aa0:	b003      	add	sp, #12
 8003aa2:	bd30      	pop	{r4, r5, pc}

08003aa4 <GRAPH_SCALE_SetTickDist>:
 8003aa4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003aa6:	460d      	mov	r5, r1
 8003aa8:	4604      	mov	r4, r0
 8003aaa:	b160      	cbz	r0, 8003ac6 <GRAPH_SCALE_SetTickDist+0x22>
 8003aac:	f008 fd0c 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003ab0:	69c4      	ldr	r4, [r0, #28]
 8003ab2:	9001      	str	r0, [sp, #4]
 8003ab4:	42ac      	cmp	r4, r5
 8003ab6:	d003      	beq.n	8003ac0 <GRAPH_SCALE_SetTickDist+0x1c>
 8003ab8:	61c5      	str	r5, [r0, #28]
 8003aba:	6880      	ldr	r0, [r0, #8]
 8003abc:	f002 fdb4 	bl	8006628 <WM_InvalidateWindow>
 8003ac0:	a801      	add	r0, sp, #4
 8003ac2:	f008 fd0f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	b003      	add	sp, #12
 8003aca:	bd30      	pop	{r4, r5, pc}

08003acc <GRAPH_SCALE_SetTextColor>:
 8003acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003ace:	460d      	mov	r5, r1
 8003ad0:	4604      	mov	r4, r0
 8003ad2:	b160      	cbz	r0, 8003aee <GRAPH_SCALE_SetTextColor+0x22>
 8003ad4:	f008 fcf8 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003ad8:	68c4      	ldr	r4, [r0, #12]
 8003ada:	9001      	str	r0, [sp, #4]
 8003adc:	42ac      	cmp	r4, r5
 8003ade:	d003      	beq.n	8003ae8 <GRAPH_SCALE_SetTextColor+0x1c>
 8003ae0:	60c5      	str	r5, [r0, #12]
 8003ae2:	6880      	ldr	r0, [r0, #8]
 8003ae4:	f002 fda0 	bl	8006628 <WM_InvalidateWindow>
 8003ae8:	a801      	add	r0, sp, #4
 8003aea:	f008 fcfb 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003aee:	4620      	mov	r0, r4
 8003af0:	b003      	add	sp, #12
 8003af2:	bd30      	pop	{r4, r5, pc}

08003af4 <GRAPH_SCALE_SetFactor>:
 8003af4:	b500      	push	{lr}
 8003af6:	ed2d 8b02 	vpush	{d8}
 8003afa:	eef0 8a40 	vmov.f32	s17, s0
 8003afe:	b083      	sub	sp, #12
 8003b00:	b190      	cbz	r0, 8003b28 <GRAPH_SCALE_SetFactor+0x34>
 8003b02:	f008 fce1 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003b06:	ed90 8a0a 	vldr	s16, [r0, #40]	; 0x28
 8003b0a:	9001      	str	r0, [sp, #4]
 8003b0c:	eeb4 8a68 	vcmp.f32	s16, s17
 8003b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b14:	d004      	beq.n	8003b20 <GRAPH_SCALE_SetFactor+0x2c>
 8003b16:	edc0 8a0a 	vstr	s17, [r0, #40]	; 0x28
 8003b1a:	6880      	ldr	r0, [r0, #8]
 8003b1c:	f002 fd84 	bl	8006628 <WM_InvalidateWindow>
 8003b20:	a801      	add	r0, sp, #4
 8003b22:	f008 fcdf 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003b26:	e001      	b.n	8003b2c <GRAPH_SCALE_SetFactor+0x38>
 8003b28:	ed9f 8a04 	vldr	s16, [pc, #16]	; 8003b3c <GRAPH_SCALE_SetFactor+0x48>
 8003b2c:	eeb0 0a48 	vmov.f32	s0, s16
 8003b30:	b003      	add	sp, #12
 8003b32:	ecbd 8b02 	vpop	{d8}
 8003b36:	f85d fb04 	ldr.w	pc, [sp], #4
 8003b3a:	bf00      	nop
 8003b3c:	00000000 	.word	0x00000000

08003b40 <GRAPH_SCALE_SetNumDecs>:
 8003b40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003b42:	460d      	mov	r5, r1
 8003b44:	4604      	mov	r4, r0
 8003b46:	b160      	cbz	r0, 8003b62 <GRAPH_SCALE_SetNumDecs+0x22>
 8003b48:	f008 fcbe 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003b4c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003b4e:	9001      	str	r0, [sp, #4]
 8003b50:	42ac      	cmp	r4, r5
 8003b52:	d003      	beq.n	8003b5c <GRAPH_SCALE_SetNumDecs+0x1c>
 8003b54:	62c5      	str	r5, [r0, #44]	; 0x2c
 8003b56:	6880      	ldr	r0, [r0, #8]
 8003b58:	f002 fd66 	bl	8006628 <WM_InvalidateWindow>
 8003b5c:	a801      	add	r0, sp, #4
 8003b5e:	f008 fcc1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003b62:	4620      	mov	r0, r4
 8003b64:	b003      	add	sp, #12
 8003b66:	bd30      	pop	{r4, r5, pc}

08003b68 <_OnDelete>:
 8003b68:	b513      	push	{r0, r1, r4, lr}
 8003b6a:	4604      	mov	r4, r0
 8003b6c:	f008 fcac 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003b70:	9001      	str	r0, [sp, #4]
 8003b72:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003b74:	b120      	cbz	r0, 8003b80 <_OnDelete+0x18>
 8003b76:	f008 fce1 	bl	800c53c <GUI_ALLOC_Free>
 8003b7a:	9b01      	ldr	r3, [sp, #4]
 8003b7c:	2200      	movs	r2, #0
 8003b7e:	625a      	str	r2, [r3, #36]	; 0x24
 8003b80:	a801      	add	r0, sp, #4
 8003b82:	f008 fcaf 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003b86:	4620      	mov	r0, r4
 8003b88:	f008 fcd8 	bl	800c53c <GUI_ALLOC_Free>
 8003b8c:	b002      	add	sp, #8
 8003b8e:	bd10      	pop	{r4, pc}

08003b90 <_OnPaint>:
 8003b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003b94:	b08b      	sub	sp, #44	; 0x2c
 8003b96:	f008 fc97 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003b9a:	9007      	str	r0, [sp, #28]
 8003b9c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003b9e:	2800      	cmp	r0, #0
 8003ba0:	d060      	beq.n	8003c64 <_OnPaint+0xd4>
 8003ba2:	f008 fc91 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003ba6:	9b07      	ldr	r3, [sp, #28]
 8003ba8:	9005      	str	r0, [sp, #20]
 8003baa:	4606      	mov	r6, r0
 8003bac:	6898      	ldr	r0, [r3, #8]
 8003bae:	f008 fc8b 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003bb2:	9b07      	ldr	r3, [sp, #28]
 8003bb4:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 8003bb8:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8003bba:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8003bbc:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8003bbe:	9006      	str	r0, [sp, #24]
 8003bc0:	a908      	add	r1, sp, #32
 8003bc2:	6898      	ldr	r0, [r3, #8]
 8003bc4:	f001 fdb6 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8003bc8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8003bcc:	9a07      	ldr	r2, [sp, #28]
 8003bce:	9806      	ldr	r0, [sp, #24]
 8003bd0:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8003bd4:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8003bd8:	441f      	add	r7, r3
 8003bda:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8003bde:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8003be2:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 8003be6:	1b1c      	subs	r4, r3, r4
 8003be8:	1b7f      	subs	r7, r7, r5
 8003bea:	6913      	ldr	r3, [r2, #16]
 8003bec:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 8003bf0:	1b5d      	subs	r5, r3, r5
 8003bf2:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 8003bf6:	4441      	add	r1, r8
 8003bf8:	b289      	uxth	r1, r1
 8003bfa:	b2a4      	uxth	r4, r4
 8003bfc:	b2bf      	uxth	r7, r7
 8003bfe:	2b01      	cmp	r3, #1
 8003c00:	f8ad 1020 	strh.w	r1, [sp, #32]
 8003c04:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 8003c08:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 8003c0c:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 8003c10:	b209      	sxth	r1, r1
 8003c12:	d008      	beq.n	8003c26 <_OnPaint+0x96>
 8003c14:	b224      	sxth	r4, r4
 8003c16:	1b64      	subs	r4, r4, r5
 8003c18:	3401      	adds	r4, #1
 8003c1a:	42a1      	cmp	r1, r4
 8003c1c:	dd04      	ble.n	8003c28 <_OnPaint+0x98>
 8003c1e:	1b0c      	subs	r4, r1, r4
 8003c20:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 8003c24:	1b2d      	subs	r5, r5, r4
 8003c26:	460c      	mov	r4, r1
 8003c28:	2d00      	cmp	r5, #0
 8003c2a:	dd15      	ble.n	8003c58 <_OnPaint+0xc8>
 8003c2c:	6990      	ldr	r0, [r2, #24]
 8003c2e:	f007 ffea 	bl	800bc06 <GUI_SetColor>
 8003c32:	f04f 32ff 	mov.w	r2, #4294967295
 8003c36:	2301      	movs	r3, #1
 8003c38:	e88d 000c 	stmia.w	sp, {r2, r3}
 8003c3c:	9a07      	ldr	r2, [sp, #28]
 8003c3e:	b23f      	sxth	r7, r7
 8003c40:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8003c44:	9302      	str	r3, [sp, #8]
 8003c46:	ebc9 0907 	rsb	r9, r9, r7
 8003c4a:	4630      	mov	r0, r6
 8003c4c:	4629      	mov	r1, r5
 8003c4e:	4622      	mov	r2, r4
 8003c50:	eb09 0308 	add.w	r3, r9, r8
 8003c54:	f007 f954 	bl	800af00 <GUI_DrawGraphEx>
 8003c58:	a806      	add	r0, sp, #24
 8003c5a:	f008 fc43 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003c5e:	a805      	add	r0, sp, #20
 8003c60:	f008 fc40 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003c64:	a807      	add	r0, sp, #28
 8003c66:	f008 fc3d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003c6a:	b00b      	add	sp, #44	; 0x2c
 8003c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003c70 <_InvalidateNewItem>:
 8003c70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003c72:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8003c76:	2b01      	cmp	r3, #1
 8003c78:	4604      	mov	r4, r0
 8003c7a:	6880      	ldr	r0, [r0, #8]
 8003c7c:	d127      	bne.n	8003cce <_InvalidateNewItem+0x5e>
 8003c7e:	a902      	add	r1, sp, #8
 8003c80:	f001 fd58 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8003c84:	68a0      	ldr	r0, [r4, #8]
 8003c86:	f008 fc1f 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003c8a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8003c8e:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8003c90:	9001      	str	r0, [sp, #4]
 8003c92:	4413      	add	r3, r2
 8003c94:	f8ad 300a 	strh.w	r3, [sp, #10]
 8003c98:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8003c9c:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003c9e:	1ad3      	subs	r3, r2, r3
 8003ca0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003ca4:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8003ca6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8003caa:	4413      	add	r3, r2
 8003cac:	6922      	ldr	r2, [r4, #16]
 8003cae:	4413      	add	r3, r2
 8003cb0:	b29b      	uxth	r3, r3
 8003cb2:	1e9a      	subs	r2, r3, #2
 8003cb4:	a801      	add	r0, sp, #4
 8003cb6:	3b01      	subs	r3, #1
 8003cb8:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003cbc:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003cc0:	f008 fc10 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003cc4:	68a0      	ldr	r0, [r4, #8]
 8003cc6:	a902      	add	r1, sp, #8
 8003cc8:	f002 fc72 	bl	80065b0 <WM_InvalidateRect>
 8003ccc:	e001      	b.n	8003cd2 <_InvalidateNewItem+0x62>
 8003cce:	f000 fb74 	bl	80043ba <GRAPH__InvalidateGraph>
 8003cd2:	b004      	add	sp, #16
 8003cd4:	bd10      	pop	{r4, pc}
	...

08003cd8 <GRAPH_DATA_YT_Create>:
 8003cd8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003cdc:	4680      	mov	r8, r0
 8003cde:	202c      	movs	r0, #44	; 0x2c
 8003ce0:	460e      	mov	r6, r1
 8003ce2:	4617      	mov	r7, r2
 8003ce4:	461d      	mov	r5, r3
 8003ce6:	f008 fde9 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8003cea:	4604      	mov	r4, r0
 8003cec:	b320      	cbz	r0, 8003d38 <GRAPH_DATA_YT_Create+0x60>
 8003cee:	0070      	lsls	r0, r6, #1
 8003cf0:	f008 fde4 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8003cf4:	4681      	mov	r9, r0
 8003cf6:	b160      	cbz	r0, 8003d12 <GRAPH_DATA_YT_Create+0x3a>
 8003cf8:	b15f      	cbz	r7, 8003d12 <GRAPH_DATA_YT_Create+0x3a>
 8003cfa:	b155      	cbz	r5, 8003d12 <GRAPH_DATA_YT_Create+0x3a>
 8003cfc:	f008 fbe4 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003d00:	4b0f      	ldr	r3, [pc, #60]	; (8003d40 <GRAPH_DATA_YT_Create+0x68>)
 8003d02:	9001      	str	r0, [sp, #4]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4639      	mov	r1, r7
 8003d08:	006a      	lsls	r2, r5, #1
 8003d0a:	4798      	blx	r3
 8003d0c:	a801      	add	r0, sp, #4
 8003d0e:	f008 fbe9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003d12:	4620      	mov	r0, r4
 8003d14:	f008 fbd8 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003d18:	4b0a      	ldr	r3, [pc, #40]	; (8003d44 <GRAPH_DATA_YT_Create+0x6c>)
 8003d1a:	9001      	str	r0, [sp, #4]
 8003d1c:	60c3      	str	r3, [r0, #12]
 8003d1e:	4b0a      	ldr	r3, [pc, #40]	; (8003d48 <GRAPH_DATA_YT_Create+0x70>)
 8003d20:	6003      	str	r3, [r0, #0]
 8003d22:	4b0a      	ldr	r3, [pc, #40]	; (8003d4c <GRAPH_DATA_YT_Create+0x74>)
 8003d24:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 8003d28:	f8c0 8018 	str.w	r8, [r0, #24]
 8003d2c:	6146      	str	r6, [r0, #20]
 8003d2e:	6105      	str	r5, [r0, #16]
 8003d30:	6043      	str	r3, [r0, #4]
 8003d32:	a801      	add	r0, sp, #4
 8003d34:	f008 fbd6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003d38:	4620      	mov	r0, r4
 8003d3a:	b003      	add	sp, #12
 8003d3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003d40:	200000b0 	.word	0x200000b0
 8003d44:	08003c71 	.word	0x08003c71
 8003d48:	08003b91 	.word	0x08003b91
 8003d4c:	08003b69 	.word	0x08003b69

08003d50 <GRAPH_DATA_YT_AddValue>:
 8003d50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003d52:	f8ad 1006 	strh.w	r1, [sp, #6]
 8003d56:	f008 fbb7 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003d5a:	9002      	str	r0, [sp, #8]
 8003d5c:	b168      	cbz	r0, 8003d7a <GRAPH_DATA_YT_AddValue+0x2a>
 8003d5e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003d60:	f008 fbb2 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003d64:	f10d 0206 	add.w	r2, sp, #6
 8003d68:	4601      	mov	r1, r0
 8003d6a:	9003      	str	r0, [sp, #12]
 8003d6c:	2302      	movs	r3, #2
 8003d6e:	9802      	ldr	r0, [sp, #8]
 8003d70:	f000 fb52 	bl	8004418 <GRAPH__AddValue>
 8003d74:	a803      	add	r0, sp, #12
 8003d76:	f008 fbb5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003d7a:	a802      	add	r0, sp, #8
 8003d7c:	f008 fbb2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003d80:	b005      	add	sp, #20
 8003d82:	f85d fb04 	ldr.w	pc, [sp], #4

08003d86 <GRAPH_DATA_YT_SetAlign>:
 8003d86:	b513      	push	{r0, r1, r4, lr}
 8003d88:	460c      	mov	r4, r1
 8003d8a:	f008 fb9d 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003d8e:	9001      	str	r0, [sp, #4]
 8003d90:	b140      	cbz	r0, 8003da4 <GRAPH_DATA_YT_SetAlign+0x1e>
 8003d92:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8003d96:	42a3      	cmp	r3, r4
 8003d98:	d004      	beq.n	8003da4 <GRAPH_DATA_YT_SetAlign+0x1e>
 8003d9a:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8003d9e:	6880      	ldr	r0, [r0, #8]
 8003da0:	f002 fc42 	bl	8006628 <WM_InvalidateWindow>
 8003da4:	a801      	add	r0, sp, #4
 8003da6:	f008 fb9d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003daa:	b002      	add	sp, #8
 8003dac:	bd10      	pop	{r4, pc}

08003dae <GRAPH_DATA_YT_Clear>:
 8003dae:	b513      	push	{r0, r1, r4, lr}
 8003db0:	b160      	cbz	r0, 8003dcc <GRAPH_DATA_YT_Clear+0x1e>
 8003db2:	f008 fb89 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003db6:	ac02      	add	r4, sp, #8
 8003db8:	2300      	movs	r3, #0
 8003dba:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003dbe:	6103      	str	r3, [r0, #16]
 8003dc0:	6880      	ldr	r0, [r0, #8]
 8003dc2:	f002 fc31 	bl	8006628 <WM_InvalidateWindow>
 8003dc6:	4620      	mov	r0, r4
 8003dc8:	f008 fb8c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003dcc:	b002      	add	sp, #8
 8003dce:	bd10      	pop	{r4, pc}

08003dd0 <_ManageScrollbars>:
 8003dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003dd2:	b08b      	sub	sp, #44	; 0x2c
 8003dd4:	a902      	add	r1, sp, #8
 8003dd6:	4604      	mov	r4, r0
 8003dd8:	f001 fcac 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8003ddc:	4620      	mov	r0, r4
 8003dde:	f008 fb73 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003de2:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8003de6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8003dea:	9001      	str	r0, [sp, #4]
 8003dec:	1ab6      	subs	r6, r6, r2
 8003dee:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8003df0:	6d45      	ldr	r5, [r0, #84]	; 0x54
 8003df2:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 8003df4:	1ab6      	subs	r6, r6, r2
 8003df6:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8003df8:	1ab6      	subs	r6, r6, r2
 8003dfa:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 8003dfe:	0751      	lsls	r1, r2, #29
 8003e00:	d407      	bmi.n	8003e12 <_ManageScrollbars+0x42>
 8003e02:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8003e04:	42b1      	cmp	r1, r6
 8003e06:	4620      	mov	r0, r4
 8003e08:	bfd4      	ite	le
 8003e0a:	2100      	movle	r1, #0
 8003e0c:	2101      	movgt	r1, #1
 8003e0e:	f001 f9b9 	bl	8005184 <WM_SetScrollbarV>
 8003e12:	9b01      	ldr	r3, [sp, #4]
 8003e14:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8003e18:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8003e1a:	67da      	str	r2, [r3, #124]	; 0x7c
 8003e1c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8003e20:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 8003e24:	1a8a      	subs	r2, r1, r2
 8003e26:	1b55      	subs	r5, r2, r5
 8003e28:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 8003e2c:	0792      	lsls	r2, r2, #30
 8003e2e:	ebc7 0505 	rsb	r5, r7, r5
 8003e32:	d407      	bmi.n	8003e44 <_ManageScrollbars+0x74>
 8003e34:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8003e36:	42a9      	cmp	r1, r5
 8003e38:	4620      	mov	r0, r4
 8003e3a:	bfd4      	ite	le
 8003e3c:	2100      	movle	r1, #0
 8003e3e:	2101      	movgt	r1, #1
 8003e40:	f001 f99e 	bl	8005180 <WM_SetScrollbarH>
 8003e44:	9801      	ldr	r0, [sp, #4]
 8003e46:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003e48:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8003e4c:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 8003e50:	307c      	adds	r0, #124	; 0x7c
 8003e52:	f001 fb4b 	bl	80054ec <WM_CheckScrollBounds>
 8003e56:	9801      	ldr	r0, [sp, #4]
 8003e58:	3088      	adds	r0, #136	; 0x88
 8003e5a:	f001 fb47 	bl	80054ec <WM_CheckScrollBounds>
 8003e5e:	9b01      	ldr	r3, [sp, #4]
 8003e60:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8003e64:	ca07      	ldmia	r2, {r0, r1, r2}
 8003e66:	3388      	adds	r3, #136	; 0x88
 8003e68:	ae07      	add	r6, sp, #28
 8003e6a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8003e6e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003e72:	ad04      	add	r5, sp, #16
 8003e74:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8003e78:	a801      	add	r0, sp, #4
 8003e7a:	f008 fb33 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003e7e:	4620      	mov	r0, r4
 8003e80:	4631      	mov	r1, r6
 8003e82:	462a      	mov	r2, r5
 8003e84:	f008 ff8b 	bl	800cd9e <WIDGET__SetScrollState>
 8003e88:	b00b      	add	sp, #44	; 0x2c
 8003e8a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003e8c <_OnScrollValueChanged>:
 8003e8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003e8e:	460c      	mov	r4, r1
 8003e90:	4606      	mov	r6, r0
 8003e92:	f008 fb19 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003e96:	9001      	str	r0, [sp, #4]
 8003e98:	4620      	mov	r0, r4
 8003e9a:	f009 fabf 	bl	800d41c <SCROLLBAR_GetValue>
 8003e9e:	4605      	mov	r5, r0
 8003ea0:	4620      	mov	r0, r4
 8003ea2:	f001 fb4b 	bl	800553c <WM_GetId>
 8003ea6:	9b01      	ldr	r3, [sp, #4]
 8003ea8:	28fe      	cmp	r0, #254	; 0xfe
 8003eaa:	bf0c      	ite	eq
 8003eac:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8003eb0:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8003eb4:	4630      	mov	r0, r6
 8003eb6:	f002 fbb7 	bl	8006628 <WM_InvalidateWindow>
 8003eba:	a801      	add	r0, sp, #4
 8003ebc:	f008 fb12 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8003ec0:	b002      	add	sp, #8
 8003ec2:	bd70      	pop	{r4, r5, r6, pc}

08003ec4 <GRAPH_Callback>:
 8003ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ec8:	6844      	ldr	r4, [r0, #4]
 8003eca:	6806      	ldr	r6, [r0, #0]
 8003ecc:	4605      	mov	r5, r0
 8003ece:	b097      	sub	sp, #92	; 0x5c
 8003ed0:	4620      	mov	r0, r4
 8003ed2:	4629      	mov	r1, r5
 8003ed4:	f008 fec3 	bl	800cc5e <WIDGET_HandleActive>
 8003ed8:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 8003edc:	4607      	mov	r7, r0
 8003ede:	d102      	bne.n	8003ee6 <GRAPH_Callback+0x22>
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	f7ff ff75 	bl	8003dd0 <_ManageScrollbars>
 8003ee6:	2f00      	cmp	r7, #0
 8003ee8:	f000 8264 	beq.w	80043b4 <GRAPH_Callback+0x4f0>
 8003eec:	682b      	ldr	r3, [r5, #0]
 8003eee:	2b0b      	cmp	r3, #11
 8003ef0:	f000 8200 	beq.w	80042f4 <GRAPH_Callback+0x430>
 8003ef4:	dc06      	bgt.n	8003f04 <GRAPH_Callback+0x40>
 8003ef6:	2b05      	cmp	r3, #5
 8003ef8:	f040 8259 	bne.w	80043ae <GRAPH_Callback+0x4ea>
 8003efc:	4620      	mov	r0, r4
 8003efe:	f7ff ff67 	bl	8003dd0 <_ManageScrollbars>
 8003f02:	e254      	b.n	80043ae <GRAPH_Callback+0x4ea>
 8003f04:	2b0f      	cmp	r3, #15
 8003f06:	d003      	beq.n	8003f10 <GRAPH_Callback+0x4c>
 8003f08:	2b26      	cmp	r3, #38	; 0x26
 8003f0a:	f000 823d 	beq.w	8004388 <GRAPH_Callback+0x4c4>
 8003f0e:	e24e      	b.n	80043ae <GRAPH_Callback+0x4ea>
 8003f10:	68ed      	ldr	r5, [r5, #12]
 8003f12:	9502      	str	r5, [sp, #8]
 8003f14:	4620      	mov	r0, r4
 8003f16:	f008 fad7 	bl	800c4c8 <GUI_ALLOC_LockH>
 8003f1a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8003f1c:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 8003f24:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 8003f28:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 8003f2c:	900d      	str	r0, [sp, #52]	; 0x34
 8003f2e:	ad0e      	add	r5, sp, #56	; 0x38
 8003f30:	4628      	mov	r0, r5
 8003f32:	9303      	str	r3, [sp, #12]
 8003f34:	9101      	str	r1, [sp, #4]
 8003f36:	f001 fab1 	bl	800549c <WM_GetClientRect>
 8003f3a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003f3c:	4629      	mov	r1, r5
 8003f3e:	f008 ff5f 	bl	800ce00 <WIDGET__EFFECT_DrawDownRect>
 8003f42:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003f46:	ab12      	add	r3, sp, #72	; 0x48
 8003f48:	e883 0003 	stmia.w	r3, {r0, r1}
 8003f4c:	9803      	ldr	r0, [sp, #12]
 8003f4e:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 8003f52:	b282      	uxth	r2, r0
 8003f54:	4459      	add	r1, fp
 8003f56:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 8003f5a:	4411      	add	r1, r2
 8003f5c:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 8003f60:	eb02 010a 	add.w	r1, r2, sl
 8003f64:	1a41      	subs	r1, r0, r1
 8003f66:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 8003f6a:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8003f6e:	4411      	add	r1, r2
 8003f70:	4449      	add	r1, r9
 8003f72:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8003f76:	9901      	ldr	r1, [sp, #4]
 8003f78:	440a      	add	r2, r1
 8003f7a:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8003f7e:	1a8a      	subs	r2, r1, r2
 8003f80:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8003f84:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003f88:	aa10      	add	r2, sp, #64	; 0x40
 8003f8a:	e882 0003 	stmia.w	r2, {r0, r1}
 8003f8e:	4610      	mov	r0, r2
 8003f90:	f001 fd8a 	bl	8005aa8 <WM_SetUserClipRect>
 8003f94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003f96:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003f98:	f007 fe33 	bl	800bc02 <GUI_SetBkColor>
 8003f9c:	f007 fc14 	bl	800b7c8 <GUI_Clear>
 8003fa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003fa2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003fa6:	b113      	cbz	r3, 8003fae <GRAPH_Callback+0xea>
 8003fa8:	4620      	mov	r0, r4
 8003faa:	2100      	movs	r1, #0
 8003fac:	4798      	blx	r3
 8003fae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8003fb0:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	f000 808d 	beq.w	80040d4 <GRAPH_Callback+0x210>
 8003fba:	4620      	mov	r0, r4
 8003fbc:	a914      	add	r1, sp, #80	; 0x50
 8003fbe:	f001 fbb9 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8003fc2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003fc4:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8003fce:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 8003fd2:	9304      	str	r3, [sp, #16]
 8003fd4:	9007      	str	r0, [sp, #28]
 8003fd6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8003fda:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8003fdc:	9205      	str	r2, [sp, #20]
 8003fde:	9306      	str	r3, [sp, #24]
 8003fe0:	9108      	str	r1, [sp, #32]
 8003fe2:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 8003fe4:	6caf      	ldr	r7, [r5, #72]	; 0x48
 8003fe6:	f007 fe0e 	bl	800bc06 <GUI_SetColor>
 8003fea:	f007 fd41 	bl	800ba70 <GUI_GetLineStyle>
 8003fee:	9009      	str	r0, [sp, #36]	; 0x24
 8003ff0:	b916      	cbnz	r6, 8003ff8 <GRAPH_Callback+0x134>
 8003ff2:	2f00      	cmp	r7, #0
 8003ff4:	d14b      	bne.n	800408e <GRAPH_Callback+0x1ca>
 8003ff6:	e046      	b.n	8004086 <GRAPH_Callback+0x1c2>
 8003ff8:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8003ffa:	eb06 0c03 	add.w	ip, r6, r3
 8003ffe:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 8004002:	07db      	lsls	r3, r3, #31
 8004004:	bf54      	ite	pl
 8004006:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 800400a:	2300      	movmi	r3, #0
 800400c:	eb0c 0803 	add.w	r8, ip, r3
 8004010:	45b0      	cmp	r8, r6
 8004012:	db02      	blt.n	800401a <GRAPH_Callback+0x156>
 8004014:	ebc6 0808 	rsb	r8, r6, r8
 8004018:	e7fa      	b.n	8004010 <GRAPH_Callback+0x14c>
 800401a:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 800401e:	f007 fe01 	bl	800bc24 <GUI_SetLineStyle>
 8004022:	9805      	ldr	r0, [sp, #20]
 8004024:	9a01      	ldr	r2, [sp, #4]
 8004026:	b203      	sxth	r3, r0
 8004028:	9806      	ldr	r0, [sp, #24]
 800402a:	444a      	add	r2, r9
 800402c:	b201      	sxth	r1, r0
 800402e:	f1c2 0201 	rsb	r2, r2, #1
 8004032:	1a5b      	subs	r3, r3, r1
 8004034:	4413      	add	r3, r2
 8004036:	4598      	cmp	r8, r3
 8004038:	dadb      	bge.n	8003ff2 <GRAPH_Callback+0x12e>
 800403a:	9804      	ldr	r0, [sp, #16]
 800403c:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8004040:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8004044:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 8004048:	4448      	add	r0, r9
 800404a:	4440      	add	r0, r8
 800404c:	4459      	add	r1, fp
 800404e:	ebca 0303 	rsb	r3, sl, r3
 8004052:	b11a      	cbz	r2, 800405c <GRAPH_Callback+0x198>
 8004054:	4602      	mov	r2, r0
 8004056:	f006 fe8b 	bl	800ad70 <GUI_DrawLine>
 800405a:	e002      	b.n	8004062 <GRAPH_Callback+0x19e>
 800405c:	461a      	mov	r2, r3
 800405e:	f006 feff 	bl	800ae60 <GUI_DrawVLine>
 8004062:	44b0      	add	r8, r6
 8004064:	e7dd      	b.n	8004022 <GRAPH_Callback+0x15e>
 8004066:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 800406a:	f007 fddb 	bl	800bc24 <GUI_SetLineStyle>
 800406e:	9907      	ldr	r1, [sp, #28]
 8004070:	9808      	ldr	r0, [sp, #32]
 8004072:	b20b      	sxth	r3, r1
 8004074:	eb0b 020a 	add.w	r2, fp, sl
 8004078:	b201      	sxth	r1, r0
 800407a:	f1c2 0201 	rsb	r2, r2, #1
 800407e:	1a5b      	subs	r3, r3, r1
 8004080:	4413      	add	r3, r2
 8004082:	429e      	cmp	r6, r3
 8004084:	db0c      	blt.n	80040a0 <GRAPH_Callback+0x1dc>
 8004086:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004088:	f007 fdcc 	bl	800bc24 <GUI_SetLineStyle>
 800408c:	e022      	b.n	80040d4 <GRAPH_Callback+0x210>
 800408e:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8004090:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8004094:	443e      	add	r6, r7
 8004096:	1af6      	subs	r6, r6, r3
 8004098:	42be      	cmp	r6, r7
 800409a:	dbe4      	blt.n	8004066 <GRAPH_Callback+0x1a2>
 800409c:	1bf6      	subs	r6, r6, r7
 800409e:	e7fb      	b.n	8004098 <GRAPH_Callback+0x1d4>
 80040a0:	9801      	ldr	r0, [sp, #4]
 80040a2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80040a6:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 80040aa:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 80040ae:	1a12      	subs	r2, r2, r0
 80040b0:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 80040b4:	ebca 0101 	rsb	r1, sl, r1
 80040b8:	1b89      	subs	r1, r1, r6
 80040ba:	444b      	add	r3, r9
 80040bc:	b120      	cbz	r0, 80040c8 <GRAPH_Callback+0x204>
 80040be:	4618      	mov	r0, r3
 80040c0:	460b      	mov	r3, r1
 80040c2:	f006 fe55 	bl	800ad70 <GUI_DrawLine>
 80040c6:	e003      	b.n	80040d0 <GRAPH_Callback+0x20c>
 80040c8:	4608      	mov	r0, r1
 80040ca:	4619      	mov	r1, r3
 80040cc:	f006 fe6e 	bl	800adac <GUI_DrawHLine>
 80040d0:	443e      	add	r6, r7
 80040d2:	e7cc      	b.n	800406e <GRAPH_Callback+0x1aa>
 80040d4:	9a03      	ldr	r2, [sp, #12]
 80040d6:	a812      	add	r0, sp, #72	; 0x48
 80040d8:	a90e      	add	r1, sp, #56	; 0x38
 80040da:	f005 fdec 	bl	8009cb6 <GUI__ReduceRect>
 80040de:	a812      	add	r0, sp, #72	; 0x48
 80040e0:	f001 fce2 	bl	8005aa8 <WM_SetUserClipRect>
 80040e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80040e6:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 80040ea:	2aff      	cmp	r2, #255	; 0xff
 80040ec:	f000 80a3 	beq.w	8004236 <GRAPH_Callback+0x372>
 80040f0:	f1b9 0f00 	cmp.w	r9, #0
 80040f4:	d108      	bne.n	8004108 <GRAPH_Callback+0x244>
 80040f6:	f1bb 0f00 	cmp.w	fp, #0
 80040fa:	d105      	bne.n	8004108 <GRAPH_Callback+0x244>
 80040fc:	9901      	ldr	r1, [sp, #4]
 80040fe:	b919      	cbnz	r1, 8004108 <GRAPH_Callback+0x244>
 8004100:	f1ba 0f00 	cmp.w	sl, #0
 8004104:	f000 8097 	beq.w	8004236 <GRAPH_Callback+0x372>
 8004108:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800410a:	a914      	add	r1, sp, #80	; 0x50
 800410c:	4620      	mov	r0, r4
 800410e:	6815      	ldr	r5, [r2, #0]
 8004110:	9300      	str	r3, [sp, #0]
 8004112:	f001 fb0f 	bl	8005734 <WM_GetInsideRectExScrollbar>
 8004116:	f001 fa89 	bl	800562c <WM_GetOrgX>
 800411a:	9004      	str	r0, [sp, #16]
 800411c:	f001 fa8e 	bl	800563c <WM_GetOrgY>
 8004120:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 8004124:	9b00      	ldr	r3, [sp, #0]
 8004126:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 800412a:	9005      	str	r0, [sp, #20]
 800412c:	445a      	add	r2, fp
 800412e:	9203      	str	r2, [sp, #12]
 8004130:	9a01      	ldr	r2, [sp, #4]
 8004132:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8004134:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 8004138:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 800413c:	1ab6      	subs	r6, r6, r2
 800413e:	f007 fd60 	bl	800bc02 <GUI_SetBkColor>
 8004142:	9b00      	ldr	r3, [sp, #0]
 8004144:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8004146:	444f      	add	r7, r9
 8004148:	ebca 0808 	rsb	r8, sl, r8
 800414c:	f007 fd5b 	bl	800bc06 <GUI_SetColor>
 8004150:	f1b9 0f00 	cmp.w	r9, #0
 8004154:	d01b      	beq.n	800418e <GRAPH_Callback+0x2ca>
 8004156:	9802      	ldr	r0, [sp, #8]
 8004158:	9904      	ldr	r1, [sp, #16]
 800415a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800415e:	f109 32ff 	add.w	r2, r9, #4294967295
 8004162:	442a      	add	r2, r5
 8004164:	1a5b      	subs	r3, r3, r1
 8004166:	4293      	cmp	r3, r2
 8004168:	dc11      	bgt.n	800418e <GRAPH_Callback+0x2ca>
 800416a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800416e:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8004172:	ebca 0303 	rsb	r3, sl, r3
 8004176:	eb05 010b 	add.w	r1, r5, fp
 800417a:	3301      	adds	r3, #1
 800417c:	f007 faf2 	bl	800b764 <GUI_ClearRect>
 8004180:	9a03      	ldr	r2, [sp, #12]
 8004182:	1e78      	subs	r0, r7, #1
 8004184:	1e51      	subs	r1, r2, #1
 8004186:	f108 0201 	add.w	r2, r8, #1
 800418a:	f006 fe69 	bl	800ae60 <GUI_DrawVLine>
 800418e:	f1bb 0f00 	cmp.w	fp, #0
 8004192:	d017      	beq.n	80041c4 <GRAPH_Callback+0x300>
 8004194:	9802      	ldr	r0, [sp, #8]
 8004196:	9905      	ldr	r1, [sp, #20]
 8004198:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800419c:	f10b 33ff 	add.w	r3, fp, #4294967295
 80041a0:	442b      	add	r3, r5
 80041a2:	1a52      	subs	r2, r2, r1
 80041a4:	429a      	cmp	r2, r3
 80041a6:	dc0d      	bgt.n	80041c4 <GRAPH_Callback+0x300>
 80041a8:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80041ac:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 80041b0:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80041b4:	f007 fad6 	bl	800b764 <GUI_ClearRect>
 80041b8:	9a03      	ldr	r2, [sp, #12]
 80041ba:	1e79      	subs	r1, r7, #1
 80041bc:	1e50      	subs	r0, r2, #1
 80041be:	1c72      	adds	r2, r6, #1
 80041c0:	f006 fdf4 	bl	800adac <GUI_DrawHLine>
 80041c4:	9b01      	ldr	r3, [sp, #4]
 80041c6:	b1d3      	cbz	r3, 80041fe <GRAPH_Callback+0x33a>
 80041c8:	9902      	ldr	r1, [sp, #8]
 80041ca:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80041ce:	1ad0      	subs	r0, r2, r3
 80041d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80041d4:	9904      	ldr	r1, [sp, #16]
 80041d6:	3001      	adds	r0, #1
 80041d8:	1a5b      	subs	r3, r3, r1
 80041da:	4283      	cmp	r3, r0
 80041dc:	db0f      	blt.n	80041fe <GRAPH_Callback+0x33a>
 80041de:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80041e2:	ebca 0303 	rsb	r3, sl, r3
 80041e6:	eb05 010b 	add.w	r1, r5, fp
 80041ea:	3301      	adds	r3, #1
 80041ec:	f007 faba 	bl	800b764 <GUI_ClearRect>
 80041f0:	9a03      	ldr	r2, [sp, #12]
 80041f2:	1c70      	adds	r0, r6, #1
 80041f4:	1e51      	subs	r1, r2, #1
 80041f6:	f108 0201 	add.w	r2, r8, #1
 80041fa:	f006 fe31 	bl	800ae60 <GUI_DrawVLine>
 80041fe:	f1ba 0f00 	cmp.w	sl, #0
 8004202:	d018      	beq.n	8004236 <GRAPH_Callback+0x372>
 8004204:	9802      	ldr	r0, [sp, #8]
 8004206:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800420a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800420e:	9805      	ldr	r0, [sp, #20]
 8004210:	ebca 0103 	rsb	r1, sl, r3
 8004214:	3101      	adds	r1, #1
 8004216:	ebc0 0a02 	rsb	sl, r0, r2
 800421a:	458a      	cmp	sl, r1
 800421c:	db0b      	blt.n	8004236 <GRAPH_Callback+0x372>
 800421e:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8004222:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8004226:	f007 fa9d 	bl	800b764 <GUI_ClearRect>
 800422a:	f108 0001 	add.w	r0, r8, #1
 800422e:	1e79      	subs	r1, r7, #1
 8004230:	1c72      	adds	r2, r6, #1
 8004232:	f006 fdbb 	bl	800adac <GUI_DrawHLine>
 8004236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004238:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800423c:	b113      	cbz	r3, 8004244 <GRAPH_Callback+0x380>
 800423e:	4620      	mov	r0, r4
 8004240:	2101      	movs	r1, #1
 8004242:	4798      	blx	r3
 8004244:	a810      	add	r0, sp, #64	; 0x40
 8004246:	f001 fc2f 	bl	8005aa8 <WM_SetUserClipRect>
 800424a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800424c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800424e:	f009 fa75 	bl	800d73c <GUI_ARRAY_GetNumItems>
 8004252:	2500      	movs	r5, #0
 8004254:	4607      	mov	r7, r0
 8004256:	42bd      	cmp	r5, r7
 8004258:	d01a      	beq.n	8004290 <GRAPH_Callback+0x3cc>
 800425a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800425c:	4629      	mov	r1, r5
 800425e:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8004260:	f009 faee 	bl	800d840 <GUI_ARRAY_GethItem>
 8004264:	f008 f930 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004268:	9014      	str	r0, [sp, #80]	; 0x50
 800426a:	b178      	cbz	r0, 800428c <GRAPH_Callback+0x3c8>
 800426c:	6806      	ldr	r6, [r0, #0]
 800426e:	4630      	mov	r0, r6
 8004270:	f008 f92a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004274:	900c      	str	r0, [sp, #48]	; 0x30
 8004276:	b130      	cbz	r0, 8004286 <GRAPH_Callback+0x3c2>
 8004278:	6803      	ldr	r3, [r0, #0]
 800427a:	9902      	ldr	r1, [sp, #8]
 800427c:	4630      	mov	r0, r6
 800427e:	4798      	blx	r3
 8004280:	a80c      	add	r0, sp, #48	; 0x30
 8004282:	f008 f92f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004286:	a814      	add	r0, sp, #80	; 0x50
 8004288:	f008 f92c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800428c:	3501      	adds	r5, #1
 800428e:	e7e2      	b.n	8004256 <GRAPH_Callback+0x392>
 8004290:	a812      	add	r0, sp, #72	; 0x48
 8004292:	f001 fc09 	bl	8005aa8 <WM_SetUserClipRect>
 8004296:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004298:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800429a:	f009 fa4f 	bl	800d73c <GUI_ARRAY_GetNumItems>
 800429e:	2500      	movs	r5, #0
 80042a0:	4607      	mov	r7, r0
 80042a2:	42bd      	cmp	r5, r7
 80042a4:	d01a      	beq.n	80042dc <GRAPH_Callback+0x418>
 80042a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80042a8:	4629      	mov	r1, r5
 80042aa:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80042ac:	f009 fac8 	bl	800d840 <GUI_ARRAY_GethItem>
 80042b0:	f008 f90a 	bl	800c4c8 <GUI_ALLOC_LockH>
 80042b4:	9014      	str	r0, [sp, #80]	; 0x50
 80042b6:	b178      	cbz	r0, 80042d8 <GRAPH_Callback+0x414>
 80042b8:	6806      	ldr	r6, [r0, #0]
 80042ba:	4630      	mov	r0, r6
 80042bc:	f008 f904 	bl	800c4c8 <GUI_ALLOC_LockH>
 80042c0:	900b      	str	r0, [sp, #44]	; 0x2c
 80042c2:	b130      	cbz	r0, 80042d2 <GRAPH_Callback+0x40e>
 80042c4:	6803      	ldr	r3, [r0, #0]
 80042c6:	9902      	ldr	r1, [sp, #8]
 80042c8:	4630      	mov	r0, r6
 80042ca:	4798      	blx	r3
 80042cc:	a80b      	add	r0, sp, #44	; 0x2c
 80042ce:	f008 f909 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80042d2:	a814      	add	r0, sp, #80	; 0x50
 80042d4:	f008 f906 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80042d8:	3501      	adds	r5, #1
 80042da:	e7e2      	b.n	80042a2 <GRAPH_Callback+0x3de>
 80042dc:	2000      	movs	r0, #0
 80042de:	f001 fbe3 	bl	8005aa8 <WM_SetUserClipRect>
 80042e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80042e4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80042e8:	b113      	cbz	r3, 80042f0 <GRAPH_Callback+0x42c>
 80042ea:	4620      	mov	r0, r4
 80042ec:	2102      	movs	r1, #2
 80042ee:	4798      	blx	r3
 80042f0:	a80d      	add	r0, sp, #52	; 0x34
 80042f2:	e046      	b.n	8004382 <GRAPH_Callback+0x4be>
 80042f4:	4620      	mov	r0, r4
 80042f6:	f008 f8e7 	bl	800c4c8 <GUI_ALLOC_LockH>
 80042fa:	9012      	str	r0, [sp, #72]	; 0x48
 80042fc:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80042fe:	f009 fa1d 	bl	800d73c <GUI_ARRAY_GetNumItems>
 8004302:	2400      	movs	r4, #0
 8004304:	4606      	mov	r6, r0
 8004306:	42b4      	cmp	r4, r6
 8004308:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800430a:	da18      	bge.n	800433e <GRAPH_Callback+0x47a>
 800430c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800430e:	4621      	mov	r1, r4
 8004310:	f009 fa96 	bl	800d840 <GUI_ARRAY_GethItem>
 8004314:	f008 f8d8 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004318:	9014      	str	r0, [sp, #80]	; 0x50
 800431a:	b170      	cbz	r0, 800433a <GRAPH_Callback+0x476>
 800431c:	6805      	ldr	r5, [r0, #0]
 800431e:	4628      	mov	r0, r5
 8004320:	f008 f8d2 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004324:	9010      	str	r0, [sp, #64]	; 0x40
 8004326:	b128      	cbz	r0, 8004334 <GRAPH_Callback+0x470>
 8004328:	6847      	ldr	r7, [r0, #4]
 800432a:	a810      	add	r0, sp, #64	; 0x40
 800432c:	f008 f8da 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004330:	4628      	mov	r0, r5
 8004332:	47b8      	blx	r7
 8004334:	a814      	add	r0, sp, #80	; 0x50
 8004336:	f008 f8d5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800433a:	3401      	adds	r4, #1
 800433c:	e7e3      	b.n	8004306 <GRAPH_Callback+0x442>
 800433e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8004340:	f009 f9fc 	bl	800d73c <GUI_ARRAY_GetNumItems>
 8004344:	2400      	movs	r4, #0
 8004346:	4605      	mov	r5, r0
 8004348:	42ac      	cmp	r4, r5
 800434a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800434c:	da0f      	bge.n	800436e <GRAPH_Callback+0x4aa>
 800434e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8004350:	4621      	mov	r1, r4
 8004352:	f009 fa75 	bl	800d840 <GUI_ARRAY_GethItem>
 8004356:	f008 f8b7 	bl	800c4c8 <GUI_ALLOC_LockH>
 800435a:	9014      	str	r0, [sp, #80]	; 0x50
 800435c:	b128      	cbz	r0, 800436a <GRAPH_Callback+0x4a6>
 800435e:	6800      	ldr	r0, [r0, #0]
 8004360:	f008 f8ec 	bl	800c53c <GUI_ALLOC_Free>
 8004364:	a814      	add	r0, sp, #80	; 0x50
 8004366:	f008 f8bd 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800436a:	3401      	adds	r4, #1
 800436c:	e7ec      	b.n	8004348 <GRAPH_Callback+0x484>
 800436e:	ac16      	add	r4, sp, #88	; 0x58
 8004370:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8004372:	f009 fa3c 	bl	800d7ee <GUI_ARRAY_Delete>
 8004376:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 800437a:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800437c:	f009 fa37 	bl	800d7ee <GUI_ARRAY_Delete>
 8004380:	4620      	mov	r0, r4
 8004382:	f008 f8af 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004386:	e015      	b.n	80043b4 <GRAPH_Callback+0x4f0>
 8004388:	68eb      	ldr	r3, [r5, #12]
 800438a:	2b05      	cmp	r3, #5
 800438c:	d10f      	bne.n	80043ae <GRAPH_Callback+0x4ea>
 800438e:	4620      	mov	r0, r4
 8004390:	68ae      	ldr	r6, [r5, #8]
 8004392:	f001 f9ab 	bl	80056ec <WM_GetScrollbarV>
 8004396:	4286      	cmp	r6, r0
 8004398:	d005      	beq.n	80043a6 <GRAPH_Callback+0x4e2>
 800439a:	4620      	mov	r0, r4
 800439c:	68ae      	ldr	r6, [r5, #8]
 800439e:	f001 f9a0 	bl	80056e2 <WM_GetScrollbarH>
 80043a2:	4286      	cmp	r6, r0
 80043a4:	d103      	bne.n	80043ae <GRAPH_Callback+0x4ea>
 80043a6:	6868      	ldr	r0, [r5, #4]
 80043a8:	68a9      	ldr	r1, [r5, #8]
 80043aa:	f7ff fd6f 	bl	8003e8c <_OnScrollValueChanged>
 80043ae:	4628      	mov	r0, r5
 80043b0:	f002 fd68 	bl	8006e84 <WM_DefaultProc>
 80043b4:	b017      	add	sp, #92	; 0x5c
 80043b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080043ba <GRAPH__InvalidateGraph>:
 80043ba:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80043be:	4604      	mov	r4, r0
 80043c0:	f008 f882 	bl	800c4c8 <GUI_ALLOC_LockH>
 80043c4:	4603      	mov	r3, r0
 80043c6:	a804      	add	r0, sp, #16
 80043c8:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 80043cc:	f840 3d0c 	str.w	r3, [r0, #-12]!
 80043d0:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 80043d2:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 80043d4:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80043d6:	f008 f885 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80043da:	4620      	mov	r0, r4
 80043dc:	a902      	add	r1, sp, #8
 80043de:	f001 f9a9 	bl	8005734 <WM_GetInsideRectExScrollbar>
 80043e2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80043e6:	4498      	add	r8, r3
 80043e8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80043ec:	f8ad 8008 	strh.w	r8, [sp, #8]
 80043f0:	441f      	add	r7, r3
 80043f2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80043f6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80043fa:	1b9e      	subs	r6, r3, r6
 80043fc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8004400:	f8ad 600c 	strh.w	r6, [sp, #12]
 8004404:	1b5d      	subs	r5, r3, r5
 8004406:	4620      	mov	r0, r4
 8004408:	a902      	add	r1, sp, #8
 800440a:	f8ad 500e 	strh.w	r5, [sp, #14]
 800440e:	f002 f8cf 	bl	80065b0 <WM_InvalidateRect>
 8004412:	b004      	add	sp, #16
 8004414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004418 <GRAPH__AddValue>:
 8004418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800441a:	461d      	mov	r5, r3
 800441c:	6883      	ldr	r3, [r0, #8]
 800441e:	4604      	mov	r4, r0
 8004420:	460e      	mov	r6, r1
 8004422:	4617      	mov	r7, r2
 8004424:	b323      	cbz	r3, 8004470 <GRAPH__AddValue+0x58>
 8004426:	6900      	ldr	r0, [r0, #16]
 8004428:	6963      	ldr	r3, [r4, #20]
 800442a:	4298      	cmp	r0, r3
 800442c:	d10e      	bne.n	800444c <GRAPH__AddValue+0x34>
 800442e:	1e42      	subs	r2, r0, #1
 8004430:	436a      	muls	r2, r5
 8004432:	4608      	mov	r0, r1
 8004434:	4429      	add	r1, r5
 8004436:	f00c fc6b 	bl	8010d10 <memmove>
 800443a:	6920      	ldr	r0, [r4, #16]
 800443c:	3801      	subs	r0, #1
 800443e:	fb00 6005 	mla	r0, r0, r5, r6
 8004442:	4639      	mov	r1, r7
 8004444:	462a      	mov	r2, r5
 8004446:	f00c fc63 	bl	8010d10 <memmove>
 800444a:	e00c      	b.n	8004466 <GRAPH__AddValue+0x4e>
 800444c:	1c43      	adds	r3, r0, #1
 800444e:	6123      	str	r3, [r4, #16]
 8004450:	fb00 1005 	mla	r0, r0, r5, r1
 8004454:	4611      	mov	r1, r2
 8004456:	462a      	mov	r2, r5
 8004458:	f00c fc5a 	bl	8010d10 <memmove>
 800445c:	68e3      	ldr	r3, [r4, #12]
 800445e:	b113      	cbz	r3, 8004466 <GRAPH__AddValue+0x4e>
 8004460:	4620      	mov	r0, r4
 8004462:	4798      	blx	r3
 8004464:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004466:	68a0      	ldr	r0, [r4, #8]
 8004468:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800446c:	f7ff bfa5 	b.w	80043ba <GRAPH__InvalidateGraph>
 8004470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004474 <GRAPH_CreateUser>:
 8004474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004476:	b087      	sub	sp, #28
 8004478:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800447a:	9400      	str	r4, [sp, #0]
 800447c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800447e:	9401      	str	r4, [sp, #4]
 8004480:	4c17      	ldr	r4, [pc, #92]	; (80044e0 <GRAPH_CreateUser+0x6c>)
 8004482:	9402      	str	r4, [sp, #8]
 8004484:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8004486:	346c      	adds	r4, #108	; 0x6c
 8004488:	9403      	str	r4, [sp, #12]
 800448a:	f002 f8fb 	bl	8006684 <WM_CreateWindowAsChild>
 800448e:	4606      	mov	r6, r0
 8004490:	b318      	cbz	r0, 80044da <GRAPH_CreateUser+0x66>
 8004492:	f009 f9e8 	bl	800d866 <GUI_ARRAY_Create>
 8004496:	4605      	mov	r5, r0
 8004498:	f009 f9e5 	bl	800d866 <GUI_ARRAY_Create>
 800449c:	4604      	mov	r4, r0
 800449e:	4630      	mov	r0, r6
 80044a0:	f008 f812 	bl	800c4c8 <GUI_ALLOC_LockH>
 80044a4:	6645      	str	r5, [r0, #100]	; 0x64
 80044a6:	4d0f      	ldr	r5, [pc, #60]	; (80044e4 <GRAPH_CreateUser+0x70>)
 80044a8:	6684      	str	r4, [r0, #104]	; 0x68
 80044aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80044ac:	9005      	str	r0, [sp, #20]
 80044ae:	2200      	movs	r2, #0
 80044b0:	f008 fb90 	bl	800cbd4 <WIDGET__Init>
 80044b4:	af06      	add	r7, sp, #24
 80044b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80044b8:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 80044bc:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 80044c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80044c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80044c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80044c6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80044ca:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80044ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80044d0:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 80044d4:	4638      	mov	r0, r7
 80044d6:	f008 f805 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80044da:	4630      	mov	r0, r6
 80044dc:	b007      	add	sp, #28
 80044de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044e0:	08003ec5 	.word	0x08003ec5
 80044e4:	20000040 	.word	0x20000040

080044e8 <GRAPH_CreateIndirect>:
 80044e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044ea:	b087      	sub	sp, #28
 80044ec:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80044f0:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80044f4:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80044f8:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80044fc:	9100      	str	r1, [sp, #0]
 80044fe:	2100      	movs	r1, #0
 8004500:	9101      	str	r1, [sp, #4]
 8004502:	8a41      	ldrh	r1, [r0, #18]
 8004504:	9102      	str	r1, [sp, #8]
 8004506:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800450a:	9103      	str	r1, [sp, #12]
 800450c:	6984      	ldr	r4, [r0, #24]
 800450e:	9404      	str	r4, [sp, #16]
 8004510:	eb0e 0002 	add.w	r0, lr, r2
 8004514:	18f9      	adds	r1, r7, r3
 8004516:	4632      	mov	r2, r6
 8004518:	462b      	mov	r3, r5
 800451a:	f7ff ffab 	bl	8004474 <GRAPH_CreateUser>
 800451e:	b007      	add	sp, #28
 8004520:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004522 <GRAPH_AttachData>:
 8004522:	b530      	push	{r4, r5, lr}
 8004524:	b085      	sub	sp, #20
 8004526:	4604      	mov	r4, r0
 8004528:	9101      	str	r1, [sp, #4]
 800452a:	b1d0      	cbz	r0, 8004562 <GRAPH_AttachData+0x40>
 800452c:	f007 ffcc 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004530:	ab04      	add	r3, sp, #16
 8004532:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8004534:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004538:	4618      	mov	r0, r3
 800453a:	f007 ffd3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800453e:	9801      	ldr	r0, [sp, #4]
 8004540:	f007 ffc2 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004544:	4602      	mov	r2, r0
 8004546:	a804      	add	r0, sp, #16
 8004548:	6094      	str	r4, [r2, #8]
 800454a:	f840 2d08 	str.w	r2, [r0, #-8]!
 800454e:	f007 ffc9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004552:	4628      	mov	r0, r5
 8004554:	a901      	add	r1, sp, #4
 8004556:	2204      	movs	r2, #4
 8004558:	f009 f8ff 	bl	800d75a <GUI_ARRAY_AddItem>
 800455c:	4620      	mov	r0, r4
 800455e:	f002 f863 	bl	8006628 <WM_InvalidateWindow>
 8004562:	b005      	add	sp, #20
 8004564:	bd30      	pop	{r4, r5, pc}

08004566 <GRAPH_AttachScale>:
 8004566:	b530      	push	{r4, r5, lr}
 8004568:	b085      	sub	sp, #20
 800456a:	4604      	mov	r4, r0
 800456c:	9101      	str	r1, [sp, #4]
 800456e:	b1d0      	cbz	r0, 80045a6 <GRAPH_AttachScale+0x40>
 8004570:	f007 ffaa 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004574:	ab04      	add	r3, sp, #16
 8004576:	6e85      	ldr	r5, [r0, #104]	; 0x68
 8004578:	f843 0d04 	str.w	r0, [r3, #-4]!
 800457c:	4618      	mov	r0, r3
 800457e:	f007 ffb1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004582:	9801      	ldr	r0, [sp, #4]
 8004584:	f007 ffa0 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004588:	4602      	mov	r2, r0
 800458a:	a804      	add	r0, sp, #16
 800458c:	6094      	str	r4, [r2, #8]
 800458e:	f840 2d08 	str.w	r2, [r0, #-8]!
 8004592:	f007 ffa7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004596:	4628      	mov	r0, r5
 8004598:	a901      	add	r1, sp, #4
 800459a:	2204      	movs	r2, #4
 800459c:	f009 f8dd 	bl	800d75a <GUI_ARRAY_AddItem>
 80045a0:	4620      	mov	r0, r4
 80045a2:	f002 f841 	bl	8006628 <WM_InvalidateWindow>
 80045a6:	b005      	add	sp, #20
 80045a8:	bd30      	pop	{r4, r5, pc}

080045aa <GRAPH_SetColor>:
 80045aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80045ac:	460d      	mov	r5, r1
 80045ae:	4614      	mov	r4, r2
 80045b0:	4606      	mov	r6, r0
 80045b2:	b198      	cbz	r0, 80045dc <GRAPH_SetColor+0x32>
 80045b4:	f007 ff88 	bl	800c4c8 <GUI_ALLOC_LockH>
 80045b8:	2c03      	cmp	r4, #3
 80045ba:	9001      	str	r0, [sp, #4]
 80045bc:	d809      	bhi.n	80045d2 <GRAPH_SetColor+0x28>
 80045be:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 80045c2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80045c4:	42ac      	cmp	r4, r5
 80045c6:	d005      	beq.n	80045d4 <GRAPH_SetColor+0x2a>
 80045c8:	6345      	str	r5, [r0, #52]	; 0x34
 80045ca:	4630      	mov	r0, r6
 80045cc:	f002 f82c 	bl	8006628 <WM_InvalidateWindow>
 80045d0:	e000      	b.n	80045d4 <GRAPH_SetColor+0x2a>
 80045d2:	2400      	movs	r4, #0
 80045d4:	a801      	add	r0, sp, #4
 80045d6:	f007 ff85 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80045da:	e000      	b.n	80045de <GRAPH_SetColor+0x34>
 80045dc:	4604      	mov	r4, r0
 80045de:	4620      	mov	r0, r4
 80045e0:	b002      	add	sp, #8
 80045e2:	bd70      	pop	{r4, r5, r6, pc}

080045e4 <GRAPH_SetGridVis>:
 80045e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80045e6:	460e      	mov	r6, r1
 80045e8:	4605      	mov	r5, r0
 80045ea:	b178      	cbz	r0, 800460c <GRAPH_SetGridVis+0x28>
 80045ec:	f007 ff6c 	bl	800c4c8 <GUI_ALLOC_LockH>
 80045f0:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 80045f4:	9001      	str	r0, [sp, #4]
 80045f6:	42b4      	cmp	r4, r6
 80045f8:	d004      	beq.n	8004604 <GRAPH_SetGridVis+0x20>
 80045fa:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 80045fe:	4628      	mov	r0, r5
 8004600:	f002 f812 	bl	8006628 <WM_InvalidateWindow>
 8004604:	a801      	add	r0, sp, #4
 8004606:	f007 ff6d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800460a:	e000      	b.n	800460e <GRAPH_SetGridVis+0x2a>
 800460c:	4604      	mov	r4, r0
 800460e:	4620      	mov	r0, r4
 8004610:	b002      	add	sp, #8
 8004612:	bd70      	pop	{r4, r5, r6, pc}

08004614 <GRAPH_SetGridDistY>:
 8004614:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004616:	460e      	mov	r6, r1
 8004618:	4605      	mov	r5, r0
 800461a:	b168      	cbz	r0, 8004638 <GRAPH_SetGridDistY+0x24>
 800461c:	f007 ff54 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004620:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8004622:	9001      	str	r0, [sp, #4]
 8004624:	42b4      	cmp	r4, r6
 8004626:	d003      	beq.n	8004630 <GRAPH_SetGridDistY+0x1c>
 8004628:	6486      	str	r6, [r0, #72]	; 0x48
 800462a:	4628      	mov	r0, r5
 800462c:	f001 fffc 	bl	8006628 <WM_InvalidateWindow>
 8004630:	a801      	add	r0, sp, #4
 8004632:	f007 ff57 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004636:	e000      	b.n	800463a <GRAPH_SetGridDistY+0x26>
 8004638:	4604      	mov	r4, r0
 800463a:	4620      	mov	r0, r4
 800463c:	b002      	add	sp, #8
 800463e:	bd70      	pop	{r4, r5, r6, pc}

08004640 <GRAPH_SetBorder>:
 8004640:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004644:	460f      	mov	r7, r1
 8004646:	4690      	mov	r8, r2
 8004648:	461d      	mov	r5, r3
 800464a:	4606      	mov	r6, r0
 800464c:	b198      	cbz	r0, 8004676 <GRAPH_SetBorder+0x36>
 800464e:	f007 ff3b 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004652:	4604      	mov	r4, r0
 8004654:	a802      	add	r0, sp, #8
 8004656:	9b08      	ldr	r3, [sp, #32]
 8004658:	6623      	str	r3, [r4, #96]	; 0x60
 800465a:	f840 4d04 	str.w	r4, [r0, #-4]!
 800465e:	6567      	str	r7, [r4, #84]	; 0x54
 8004660:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 8004664:	65e5      	str	r5, [r4, #92]	; 0x5c
 8004666:	f007 ff3d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800466a:	4630      	mov	r0, r6
 800466c:	f7ff fbb0 	bl	8003dd0 <_ManageScrollbars>
 8004670:	4630      	mov	r0, r6
 8004672:	f001 ffd9 	bl	8006628 <WM_InvalidateWindow>
 8004676:	b002      	add	sp, #8
 8004678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800467c <FRAMEWIN__GetBorderSize>:
 800467c:	b570      	push	{r4, r5, r6, lr}
 800467e:	b08a      	sub	sp, #40	; 0x28
 8004680:	4605      	mov	r5, r0
 8004682:	460c      	mov	r4, r1
 8004684:	f007 ff20 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004688:	ab0a      	add	r3, sp, #40	; 0x28
 800468a:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800468c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8004690:	4668      	mov	r0, sp
 8004692:	6896      	ldr	r6, [r2, #8]
 8004694:	f007 ff26 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004698:	9501      	str	r5, [sp, #4]
 800469a:	2c03      	cmp	r4, #3
 800469c:	d80b      	bhi.n	80046b6 <FRAMEWIN__GetBorderSize+0x3a>
 800469e:	e8df f004 	tbb	[pc, r4]
 80046a2:	0402      	.short	0x0402
 80046a4:	0806      	.short	0x0806
 80046a6:	2318      	movs	r3, #24
 80046a8:	e004      	b.n	80046b4 <FRAMEWIN__GetBorderSize+0x38>
 80046aa:	2316      	movs	r3, #22
 80046ac:	e002      	b.n	80046b4 <FRAMEWIN__GetBorderSize+0x38>
 80046ae:	2315      	movs	r3, #21
 80046b0:	e000      	b.n	80046b4 <FRAMEWIN__GetBorderSize+0x38>
 80046b2:	2317      	movs	r3, #23
 80046b4:	9302      	str	r3, [sp, #8]
 80046b6:	6873      	ldr	r3, [r6, #4]
 80046b8:	a801      	add	r0, sp, #4
 80046ba:	4798      	blx	r3
 80046bc:	b00a      	add	sp, #40	; 0x28
 80046be:	bd70      	pop	{r4, r5, r6, pc}

080046c0 <_SetActive>:
 80046c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80046c2:	4604      	mov	r4, r0
 80046c4:	460d      	mov	r5, r1
 80046c6:	f007 feff 	bl	800c4c8 <GUI_ALLOC_LockH>
 80046ca:	9001      	str	r0, [sp, #4]
 80046cc:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 80046d0:	b125      	cbz	r5, 80046dc <_SetActive+0x1c>
 80046d2:	0711      	lsls	r1, r2, #28
 80046d4:	d40b      	bmi.n	80046ee <_SetActive+0x2e>
 80046d6:	f042 0208 	orr.w	r2, r2, #8
 80046da:	e003      	b.n	80046e4 <_SetActive+0x24>
 80046dc:	0713      	lsls	r3, r2, #28
 80046de:	d506      	bpl.n	80046ee <_SetActive+0x2e>
 80046e0:	f022 0208 	bic.w	r2, r2, #8
 80046e4:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 80046e8:	4620      	mov	r0, r4
 80046ea:	f001 ff9d 	bl	8006628 <WM_InvalidateWindow>
 80046ee:	a801      	add	r0, sp, #4
 80046f0:	f007 fef8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80046f4:	b003      	add	sp, #12
 80046f6:	bd30      	pop	{r4, r5, pc}

080046f8 <FRAMEWIN__cbClient>:
 80046f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80046fc:	6845      	ldr	r5, [r0, #4]
 80046fe:	b087      	sub	sp, #28
 8004700:	4604      	mov	r4, r0
 8004702:	4628      	mov	r0, r5
 8004704:	f000 ffa2 	bl	800564c <WM_GetParent>
 8004708:	4681      	mov	r9, r0
 800470a:	f007 fedd 	bl	800c4c8 <GUI_ALLOC_LockH>
 800470e:	4603      	mov	r3, r0
 8004710:	a806      	add	r0, sp, #24
 8004712:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8004714:	f840 3d14 	str.w	r3, [r0, #-20]!
 8004718:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 800471a:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 800471e:	f007 fee1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004722:	6823      	ldr	r3, [r4, #0]
 8004724:	2b17      	cmp	r3, #23
 8004726:	d053      	beq.n	80047d0 <FRAMEWIN__cbClient+0xd8>
 8004728:	dc09      	bgt.n	800473e <FRAMEWIN__cbClient+0x46>
 800472a:	2b0f      	cmp	r3, #15
 800472c:	d014      	beq.n	8004758 <FRAMEWIN__cbClient+0x60>
 800472e:	dc02      	bgt.n	8004736 <FRAMEWIN__cbClient+0x3e>
 8004730:	2b0e      	cmp	r3, #14
 8004732:	d034      	beq.n	800479e <FRAMEWIN__cbClient+0xa6>
 8004734:	e046      	b.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 8004736:	3b14      	subs	r3, #20
 8004738:	2b01      	cmp	r3, #1
 800473a:	d949      	bls.n	80047d0 <FRAMEWIN__cbClient+0xd8>
 800473c:	e042      	b.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 800473e:	2b1f      	cmp	r3, #31
 8004740:	d028      	beq.n	8004794 <FRAMEWIN__cbClient+0x9c>
 8004742:	dc02      	bgt.n	800474a <FRAMEWIN__cbClient+0x52>
 8004744:	2b1e      	cmp	r3, #30
 8004746:	d01a      	beq.n	800477e <FRAMEWIN__cbClient+0x86>
 8004748:	e03c      	b.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 800474a:	2b22      	cmp	r3, #34	; 0x22
 800474c:	d038      	beq.n	80047c0 <FRAMEWIN__cbClient+0xc8>
 800474e:	2b31      	cmp	r3, #49	; 0x31
 8004750:	d138      	bne.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 8004752:	2300      	movs	r3, #0
 8004754:	60e3      	str	r3, [r4, #12]
 8004756:	e03e      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 8004758:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800475c:	429e      	cmp	r6, r3
 800475e:	d004      	beq.n	800476a <FRAMEWIN__cbClient+0x72>
 8004760:	4630      	mov	r0, r6
 8004762:	f005 f9f9 	bl	8009b58 <LCD_SetBkColor>
 8004766:	f007 f82f 	bl	800b7c8 <GUI_Clear>
 800476a:	2f00      	cmp	r7, #0
 800476c:	d033      	beq.n	80047d6 <FRAMEWIN__cbClient+0xde>
 800476e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8004772:	ae02      	add	r6, sp, #8
 8004774:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8004778:	9503      	str	r5, [sp, #12]
 800477a:	4630      	mov	r0, r6
 800477c:	e026      	b.n	80047cc <FRAMEWIN__cbClient+0xd4>
 800477e:	68e3      	ldr	r3, [r4, #12]
 8004780:	b34b      	cbz	r3, 80047d6 <FRAMEWIN__cbClient+0xde>
 8004782:	f1b8 0f00 	cmp.w	r8, #0
 8004786:	d017      	beq.n	80047b8 <FRAMEWIN__cbClient+0xc0>
 8004788:	45a8      	cmp	r8, r5
 800478a:	d015      	beq.n	80047b8 <FRAMEWIN__cbClient+0xc0>
 800478c:	4640      	mov	r0, r8
 800478e:	f001 f90d 	bl	80059ac <WM_SetFocus>
 8004792:	e020      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 8004794:	4648      	mov	r0, r9
 8004796:	4621      	mov	r1, r4
 8004798:	f008 fa61 	bl	800cc5e <WIDGET_HandleActive>
 800479c:	e01b      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 800479e:	68e3      	ldr	r3, [r4, #12]
 80047a0:	685a      	ldr	r2, [r3, #4]
 80047a2:	2a00      	cmp	r2, #0
 80047a4:	dd0e      	ble.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	2b09      	cmp	r3, #9
 80047aa:	d005      	beq.n	80047b8 <FRAMEWIN__cbClient+0xc0>
 80047ac:	2b0a      	cmp	r3, #10
 80047ae:	d109      	bne.n	80047c4 <FRAMEWIN__cbClient+0xcc>
 80047b0:	4628      	mov	r0, r5
 80047b2:	f000 fcf8 	bl	80051a6 <WM_SetFocusOnPrevChild>
 80047b6:	e00e      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 80047b8:	4628      	mov	r0, r5
 80047ba:	f000 fd23 	bl	8005204 <WM_SetFocusOnNextChild>
 80047be:	e00a      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 80047c0:	60e6      	str	r6, [r4, #12]
 80047c2:	e008      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 80047c4:	b127      	cbz	r7, 80047d0 <FRAMEWIN__cbClient+0xd8>
 80047c6:	f8c4 9004 	str.w	r9, [r4, #4]
 80047ca:	4620      	mov	r0, r4
 80047cc:	47b8      	blx	r7
 80047ce:	e002      	b.n	80047d6 <FRAMEWIN__cbClient+0xde>
 80047d0:	4620      	mov	r0, r4
 80047d2:	f002 fb57 	bl	8006e84 <WM_DefaultProc>
 80047d6:	b007      	add	sp, #28
 80047d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080047dc <FRAMEWIN__CalcTitleHeight>:
 80047dc:	b508      	push	{r3, lr}
 80047de:	4603      	mov	r3, r0
 80047e0:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 80047e2:	f000 0020 	and.w	r0, r0, #32
 80047e6:	b280      	uxth	r0, r0
 80047e8:	b130      	cbz	r0, 80047f8 <FRAMEWIN__CalcTitleHeight+0x1c>
 80047ea:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 80047ee:	b918      	cbnz	r0, 80047f8 <FRAMEWIN__CalcTitleHeight+0x1c>
 80047f0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80047f2:	f007 f951 	bl	800ba98 <GUI_GetYSizeOfFont>
 80047f6:	3002      	adds	r0, #2
 80047f8:	bd08      	pop	{r3, pc}

080047fa <FRAMEWIN__GetTitleLimits>:
 80047fa:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80047fe:	4607      	mov	r7, r0
 8004800:	460d      	mov	r5, r1
 8004802:	4616      	mov	r6, r2
 8004804:	f007 fe60 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004808:	4603      	mov	r3, r0
 800480a:	a802      	add	r0, sp, #8
 800480c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800480e:	f840 3d08 	str.w	r3, [r0, #-8]!
 8004812:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8004816:	f8b3 8000 	ldrh.w	r8, [r3]
 800481a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800481e:	4668      	mov	r0, sp
 8004820:	f007 fe60 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004824:	f8da 3000 	ldr.w	r3, [sl]
 8004828:	4638      	mov	r0, r7
 800482a:	2100      	movs	r1, #0
 800482c:	4798      	blx	r3
 800482e:	4682      	mov	sl, r0
 8004830:	4638      	mov	r0, r7
 8004832:	f000 fe6a 	bl	800550a <WM_GetFirstChild>
 8004836:	4604      	mov	r4, r0
 8004838:	b340      	cbz	r0, 800488c <FRAMEWIN__GetTitleLimits+0x92>
 800483a:	4620      	mov	r0, r4
 800483c:	f007 fe44 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004840:	4603      	mov	r3, r0
 8004842:	fa0f f289 	sxth.w	r2, r9
 8004846:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 800484a:	9001      	str	r0, [sp, #4]
 800484c:	1aba      	subs	r2, r7, r2
 800484e:	4552      	cmp	r2, sl
 8004850:	8800      	ldrh	r0, [r0, #0]
 8004852:	8899      	ldrh	r1, [r3, #4]
 8004854:	d113      	bne.n	800487e <FRAMEWIN__GetTitleLimits+0x84>
 8004856:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004858:	061b      	lsls	r3, r3, #24
 800485a:	fa0f f288 	sxth.w	r2, r8
 800485e:	d507      	bpl.n	8004870 <FRAMEWIN__GetTitleLimits+0x76>
 8004860:	b203      	sxth	r3, r0
 8004862:	1a9a      	subs	r2, r3, r2
 8004864:	6833      	ldr	r3, [r6, #0]
 8004866:	429a      	cmp	r2, r3
 8004868:	dc09      	bgt.n	800487e <FRAMEWIN__GetTitleLimits+0x84>
 800486a:	3a01      	subs	r2, #1
 800486c:	6032      	str	r2, [r6, #0]
 800486e:	e006      	b.n	800487e <FRAMEWIN__GetTitleLimits+0x84>
 8004870:	b20b      	sxth	r3, r1
 8004872:	1a9b      	subs	r3, r3, r2
 8004874:	682a      	ldr	r2, [r5, #0]
 8004876:	4293      	cmp	r3, r2
 8004878:	bfa4      	itt	ge
 800487a:	3301      	addge	r3, #1
 800487c:	602b      	strge	r3, [r5, #0]
 800487e:	a801      	add	r0, sp, #4
 8004880:	f007 fe30 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004884:	4620      	mov	r0, r4
 8004886:	f000 feb8 	bl	80055fa <WM_GetNextSibling>
 800488a:	e7d4      	b.n	8004836 <FRAMEWIN__GetTitleLimits+0x3c>
 800488c:	b002      	add	sp, #8
 800488e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004892 <FRAMEWIN__CalcPositions>:
 8004892:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004896:	b087      	sub	sp, #28
 8004898:	4604      	mov	r4, r0
 800489a:	460f      	mov	r7, r1
 800489c:	f007 fe14 	bl	800c4c8 <GUI_ALLOC_LockH>
 80048a0:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80048a2:	9003      	str	r0, [sp, #12]
 80048a4:	6895      	ldr	r5, [r2, #8]
 80048a6:	2101      	movs	r1, #1
 80048a8:	682a      	ldr	r2, [r5, #0]
 80048aa:	4620      	mov	r0, r4
 80048ac:	4790      	blx	r2
 80048ae:	682a      	ldr	r2, [r5, #0]
 80048b0:	2103      	movs	r1, #3
 80048b2:	4683      	mov	fp, r0
 80048b4:	4620      	mov	r0, r4
 80048b6:	4790      	blx	r2
 80048b8:	682a      	ldr	r2, [r5, #0]
 80048ba:	2102      	movs	r1, #2
 80048bc:	4681      	mov	r9, r0
 80048be:	4620      	mov	r0, r4
 80048c0:	4790      	blx	r2
 80048c2:	682a      	ldr	r2, [r5, #0]
 80048c4:	9001      	str	r0, [sp, #4]
 80048c6:	2100      	movs	r1, #0
 80048c8:	4620      	mov	r0, r4
 80048ca:	4790      	blx	r2
 80048cc:	4605      	mov	r5, r0
 80048ce:	9803      	ldr	r0, [sp, #12]
 80048d0:	f001 f94c 	bl	8005b6c <WM__GetWindowSizeX>
 80048d4:	4682      	mov	sl, r0
 80048d6:	9803      	ldr	r0, [sp, #12]
 80048d8:	f001 f94f 	bl	8005b7a <WM__GetWindowSizeY>
 80048dc:	4680      	mov	r8, r0
 80048de:	9803      	ldr	r0, [sp, #12]
 80048e0:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 80048e2:	f006 0620 	and.w	r6, r6, #32
 80048e6:	b2b6      	uxth	r6, r6
 80048e8:	b10e      	cbz	r6, 80048ee <FRAMEWIN__CalcPositions+0x5c>
 80048ea:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 80048ee:	f7ff ff75 	bl	80047dc <FRAMEWIN__CalcTitleHeight>
 80048f2:	9903      	ldr	r1, [sp, #12]
 80048f4:	4602      	mov	r2, r0
 80048f6:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 80048f8:	b118      	cbz	r0, 8004902 <FRAMEWIN__CalcPositions+0x70>
 80048fa:	9200      	str	r2, [sp, #0]
 80048fc:	f001 f959 	bl	8005bb2 <WM_GetWindowSizeY>
 8004900:	9a00      	ldr	r2, [sp, #0]
 8004902:	803a      	strh	r2, [r7, #0]
 8004904:	b292      	uxth	r2, r2
 8004906:	b2a9      	uxth	r1, r5
 8004908:	4416      	add	r6, r2
 800490a:	440e      	add	r6, r1
 800490c:	8078      	strh	r0, [r7, #2]
 800490e:	4430      	add	r0, r6
 8004910:	80f8      	strh	r0, [r7, #6]
 8004912:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004916:	9801      	ldr	r0, [sp, #4]
 8004918:	81fd      	strh	r5, [r7, #14]
 800491a:	3901      	subs	r1, #1
 800491c:	ebc9 090a 	rsb	r9, r9, sl
 8004920:	f108 38ff 	add.w	r8, r8, #4294967295
 8004924:	ebc0 0308 	rsb	r3, r0, r8
 8004928:	440a      	add	r2, r1
 800492a:	fa1f fb8b 	uxth.w	fp, fp
 800492e:	fa1f f989 	uxth.w	r9, r9
 8004932:	817b      	strh	r3, [r7, #10]
 8004934:	827a      	strh	r2, [r7, #18]
 8004936:	f8a7 b004 	strh.w	fp, [r7, #4]
 800493a:	f8a7 9008 	strh.w	r9, [r7, #8]
 800493e:	f8a7 b00c 	strh.w	fp, [r7, #12]
 8004942:	f8a7 9010 	strh.w	r9, [r7, #16]
 8004946:	a803      	add	r0, sp, #12
 8004948:	f007 fdcc 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800494c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004950:	9204      	str	r2, [sp, #16]
 8004952:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8004956:	9205      	str	r2, [sp, #20]
 8004958:	4620      	mov	r0, r4
 800495a:	aa05      	add	r2, sp, #20
 800495c:	a904      	add	r1, sp, #16
 800495e:	f7ff ff4c 	bl	80047fa <FRAMEWIN__GetTitleLimits>
 8004962:	9a04      	ldr	r2, [sp, #16]
 8004964:	81ba      	strh	r2, [r7, #12]
 8004966:	9a05      	ldr	r2, [sp, #20]
 8004968:	823a      	strh	r2, [r7, #16]
 800496a:	b007      	add	sp, #28
 800496c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004970 <FRAMEWIN_SetText>:
 8004970:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004972:	460d      	mov	r5, r1
 8004974:	4604      	mov	r4, r0
 8004976:	b1c0      	cbz	r0, 80049aa <FRAMEWIN_SetText+0x3a>
 8004978:	f007 fda6 	bl	800c4c8 <GUI_ALLOC_LockH>
 800497c:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800497e:	9000      	str	r0, [sp, #0]
 8004980:	4668      	mov	r0, sp
 8004982:	9301      	str	r3, [sp, #4]
 8004984:	f007 fdae 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004988:	a801      	add	r0, sp, #4
 800498a:	4629      	mov	r1, r5
 800498c:	f005 f9e8 	bl	8009d60 <GUI__SetText>
 8004990:	b158      	cbz	r0, 80049aa <FRAMEWIN_SetText+0x3a>
 8004992:	4620      	mov	r0, r4
 8004994:	f007 fd98 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004998:	9b01      	ldr	r3, [sp, #4]
 800499a:	9000      	str	r0, [sp, #0]
 800499c:	6703      	str	r3, [r0, #112]	; 0x70
 800499e:	4668      	mov	r0, sp
 80049a0:	f007 fda0 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80049a4:	4620      	mov	r0, r4
 80049a6:	f001 fe3f 	bl	8006628 <WM_InvalidateWindow>
 80049aa:	b003      	add	sp, #12
 80049ac:	bd30      	pop	{r4, r5, pc}
	...

080049b0 <FRAMEWIN_CreateUser>:
 80049b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80049b4:	b08b      	sub	sp, #44	; 0x2c
 80049b6:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 80049ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80049bc:	9400      	str	r4, [sp, #0]
 80049be:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 80049c2:	9401      	str	r4, [sp, #4]
 80049c4:	4c33      	ldr	r4, [pc, #204]	; (8004a94 <FRAMEWIN_CreateUser+0xe4>)
 80049c6:	9402      	str	r4, [sp, #8]
 80049c8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80049ca:	3460      	adds	r4, #96	; 0x60
 80049cc:	9403      	str	r4, [sp, #12]
 80049ce:	f001 fe59 	bl	8006684 <WM_CreateWindowAsChild>
 80049d2:	4606      	mov	r6, r0
 80049d4:	2800      	cmp	r0, #0
 80049d6:	d058      	beq.n	8004a8a <FRAMEWIN_CreateUser+0xda>
 80049d8:	f007 fd76 	bl	800c4c8 <GUI_ALLOC_LockH>
 80049dc:	4d2e      	ldr	r5, [pc, #184]	; (8004a98 <FRAMEWIN_CreateUser+0xe8>)
 80049de:	9915      	ldr	r1, [sp, #84]	; 0x54
 80049e0:	9004      	str	r0, [sp, #16]
 80049e2:	2230      	movs	r2, #48	; 0x30
 80049e4:	f008 f8f6 	bl	800cbd4 <WIDGET__Init>
 80049e8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80049ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80049ee:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 80049f2:	f107 0434 	add.w	r4, r7, #52	; 0x34
 80049f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80049f8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80049fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80049fc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8004a00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004a02:	4d26      	ldr	r5, [pc, #152]	; (8004a9c <FRAMEWIN_CreateUser+0xec>)
 8004a04:	e884 0003 	stmia.w	r4, {r0, r1}
 8004a08:	667b      	str	r3, [r7, #100]	; 0x64
 8004a0a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004a0c:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 8004a10:	2400      	movs	r4, #0
 8004a12:	682b      	ldr	r3, [r5, #0]
 8004a14:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004a16:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8004a1a:	66fc      	str	r4, [r7, #108]	; 0x6c
 8004a1c:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8004a20:	4640      	mov	r0, r8
 8004a22:	f007 fd5f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004a26:	4630      	mov	r0, r6
 8004a28:	a905      	add	r1, sp, #20
 8004a2a:	f7ff ff32 	bl	8004892 <FRAMEWIN__CalcPositions>
 8004a2e:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8004a32:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8004a36:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8004a3a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8004a3e:	9403      	str	r4, [sp, #12]
 8004a40:	f241 7782 	movw	r7, #6018	; 0x1782
 8004a44:	1a5b      	subs	r3, r3, r1
 8004a46:	1a12      	subs	r2, r2, r0
 8004a48:	9701      	str	r7, [sp, #4]
 8004a4a:	4f15      	ldr	r7, [pc, #84]	; (8004aa0 <FRAMEWIN_CreateUser+0xf0>)
 8004a4c:	9600      	str	r6, [sp, #0]
 8004a4e:	3201      	adds	r2, #1
 8004a50:	3301      	adds	r3, #1
 8004a52:	9702      	str	r7, [sp, #8]
 8004a54:	f001 fe16 	bl	8006684 <WM_CreateWindowAsChild>
 8004a58:	682b      	ldr	r3, [r5, #0]
 8004a5a:	4604      	mov	r4, r0
 8004a5c:	685b      	ldr	r3, [r3, #4]
 8004a5e:	4630      	mov	r0, r6
 8004a60:	4798      	blx	r3
 8004a62:	4630      	mov	r0, r6
 8004a64:	f007 fd30 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004a68:	9004      	str	r0, [sp, #16]
 8004a6a:	6684      	str	r4, [r0, #104]	; 0x68
 8004a6c:	4640      	mov	r0, r8
 8004a6e:	f007 fd39 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004a72:	f242 0304 	movw	r3, #8196	; 0x2004
 8004a76:	ea09 0303 	and.w	r3, r9, r3
 8004a7a:	b913      	cbnz	r3, 8004a82 <FRAMEWIN_CreateUser+0xd2>
 8004a7c:	4630      	mov	r0, r6
 8004a7e:	f000 fcfd 	bl	800547c <WM_DisableMemdev>
 8004a82:	4630      	mov	r0, r6
 8004a84:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004a86:	f7ff ff73 	bl	8004970 <FRAMEWIN_SetText>
 8004a8a:	4630      	mov	r0, r6
 8004a8c:	b00b      	add	sp, #44	; 0x2c
 8004a8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004a92:	bf00      	nop
 8004a94:	08004aef 	.word	0x08004aef
 8004a98:	20000070 	.word	0x20000070
 8004a9c:	20000098 	.word	0x20000098
 8004aa0:	080046f9 	.word	0x080046f9

08004aa4 <FRAMEWIN_CreateIndirect>:
 8004aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004aa6:	b089      	sub	sp, #36	; 0x24
 8004aa8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8004aac:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8004ab0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8004ab4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8004ab8:	9100      	str	r1, [sp, #0]
 8004aba:	2100      	movs	r1, #0
 8004abc:	9101      	str	r1, [sp, #4]
 8004abe:	8a41      	ldrh	r1, [r0, #18]
 8004ac0:	9102      	str	r1, [sp, #8]
 8004ac2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8004ac6:	9103      	str	r1, [sp, #12]
 8004ac8:	6844      	ldr	r4, [r0, #4]
 8004aca:	9404      	str	r4, [sp, #16]
 8004acc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8004ace:	9405      	str	r4, [sp, #20]
 8004ad0:	6984      	ldr	r4, [r0, #24]
 8004ad2:	9406      	str	r4, [sp, #24]
 8004ad4:	eb0e 0002 	add.w	r0, lr, r2
 8004ad8:	18f9      	adds	r1, r7, r3
 8004ada:	4632      	mov	r2, r6
 8004adc:	462b      	mov	r3, r5
 8004ade:	f7ff ff67 	bl	80049b0 <FRAMEWIN_CreateUser>
 8004ae2:	b009      	add	sp, #36	; 0x24
 8004ae4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004ae6 <FRAMEWIN_SetActive>:
 8004ae6:	b108      	cbz	r0, 8004aec <FRAMEWIN_SetActive+0x6>
 8004ae8:	f7ff bdea 	b.w	80046c0 <_SetActive>
 8004aec:	4770      	bx	lr

08004aee <FRAMEWIN_Callback>:
 8004aee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004af2:	6844      	ldr	r4, [r0, #4]
 8004af4:	b086      	sub	sp, #24
 8004af6:	4605      	mov	r5, r0
 8004af8:	4620      	mov	r0, r4
 8004afa:	f007 fce5 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004afe:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8004b00:	9000      	str	r0, [sp, #0]
 8004b02:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8004b06:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8004b0a:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 8004b0e:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 8004b12:	b113      	cbz	r3, 8004b1a <FRAMEWIN_Callback+0x2c>
 8004b14:	f8d3 a000 	ldr.w	sl, [r3]
 8004b18:	e000      	b.n	8004b1c <FRAMEWIN_Callback+0x2e>
 8004b1a:	469a      	mov	sl, r3
 8004b1c:	4668      	mov	r0, sp
 8004b1e:	f007 fce1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004b22:	b13f      	cbz	r7, 8004b34 <FRAMEWIN_Callback+0x46>
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	4628      	mov	r0, r5
 8004b28:	4798      	blx	r3
 8004b2a:	2800      	cmp	r0, #0
 8004b2c:	f040 811d 	bne.w	8004d6a <FRAMEWIN_Callback+0x27c>
 8004b30:	683f      	ldr	r7, [r7, #0]
 8004b32:	e7f6      	b.n	8004b22 <FRAMEWIN_Callback+0x34>
 8004b34:	682b      	ldr	r3, [r5, #0]
 8004b36:	2b17      	cmp	r3, #23
 8004b38:	f000 808a 	beq.w	8004c50 <FRAMEWIN_Callback+0x162>
 8004b3c:	dc18      	bgt.n	8004b70 <FRAMEWIN_Callback+0x82>
 8004b3e:	2b0f      	cmp	r3, #15
 8004b40:	d043      	beq.n	8004bca <FRAMEWIN_Callback+0xdc>
 8004b42:	dc06      	bgt.n	8004b52 <FRAMEWIN_Callback+0x64>
 8004b44:	2b0b      	cmp	r3, #11
 8004b46:	f000 80fe 	beq.w	8004d46 <FRAMEWIN_Callback+0x258>
 8004b4a:	2b0d      	cmp	r3, #13
 8004b4c:	f000 80c0 	beq.w	8004cd0 <FRAMEWIN_Callback+0x1e2>
 8004b50:	e103      	b.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004b52:	2b11      	cmp	r3, #17
 8004b54:	d01b      	beq.n	8004b8e <FRAMEWIN_Callback+0xa0>
 8004b56:	2b14      	cmp	r3, #20
 8004b58:	f040 80ff 	bne.w	8004d5a <FRAMEWIN_Callback+0x26c>
 8004b5c:	4620      	mov	r0, r4
 8004b5e:	a901      	add	r1, sp, #4
 8004b60:	f7ff fe97 	bl	8004892 <FRAMEWIN__CalcPositions>
 8004b64:	ab02      	add	r3, sp, #8
 8004b66:	cb03      	ldmia	r3!, {r0, r1}
 8004b68:	68ea      	ldr	r2, [r5, #12]
 8004b6a:	6010      	str	r0, [r2, #0]
 8004b6c:	6051      	str	r1, [r2, #4]
 8004b6e:	e0fc      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004b70:	2b26      	cmp	r3, #38	; 0x26
 8004b72:	d070      	beq.n	8004c56 <FRAMEWIN_Callback+0x168>
 8004b74:	dc05      	bgt.n	8004b82 <FRAMEWIN_Callback+0x94>
 8004b76:	2b1e      	cmp	r3, #30
 8004b78:	d07b      	beq.n	8004c72 <FRAMEWIN_Callback+0x184>
 8004b7a:	2b20      	cmp	r3, #32
 8004b7c:	f000 80b6 	beq.w	8004cec <FRAMEWIN_Callback+0x1fe>
 8004b80:	e0eb      	b.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004b82:	2b2a      	cmp	r3, #42	; 0x2a
 8004b84:	d013      	beq.n	8004bae <FRAMEWIN_Callback+0xc0>
 8004b86:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8004b8a:	d025      	beq.n	8004bd8 <FRAMEWIN_Callback+0xea>
 8004b8c:	e0e5      	b.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004b8e:	4620      	mov	r0, r4
 8004b90:	68ee      	ldr	r6, [r5, #12]
 8004b92:	f007 fc99 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004b96:	9001      	str	r0, [sp, #4]
 8004b98:	8933      	ldrh	r3, [r6, #8]
 8004b9a:	2b01      	cmp	r3, #1
 8004b9c:	d105      	bne.n	8004baa <FRAMEWIN_Callback+0xbc>
 8004b9e:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8004ba2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ba6:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8004baa:	a801      	add	r0, sp, #4
 8004bac:	e0d3      	b.n	8004d56 <FRAMEWIN_Callback+0x268>
 8004bae:	4620      	mov	r0, r4
 8004bb0:	f007 fc8a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004bb4:	68eb      	ldr	r3, [r5, #12]
 8004bb6:	9000      	str	r0, [sp, #0]
 8004bb8:	b113      	cbz	r3, 8004bc0 <FRAMEWIN_Callback+0xd2>
 8004bba:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 8004bbe:	e002      	b.n	8004bc6 <FRAMEWIN_Callback+0xd8>
 8004bc0:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8004bc4:	60eb      	str	r3, [r5, #12]
 8004bc6:	4668      	mov	r0, sp
 8004bc8:	e03f      	b.n	8004c4a <FRAMEWIN_Callback+0x15c>
 8004bca:	f1ba 0f00 	cmp.w	sl, #0
 8004bce:	f000 80c4 	beq.w	8004d5a <FRAMEWIN_Callback+0x26c>
 8004bd2:	4620      	mov	r0, r4
 8004bd4:	47d0      	blx	sl
 8004bd6:	e0c0      	b.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004bd8:	4620      	mov	r0, r4
 8004bda:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8004bde:	f007 fc73 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004be2:	ae06      	add	r6, sp, #24
 8004be4:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8004be8:	f846 0d14 	str.w	r0, [r6, #-20]!
 8004bec:	4630      	mov	r0, r6
 8004bee:	f007 fc79 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004bf2:	68eb      	ldr	r3, [r5, #12]
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	f000 80b8 	beq.w	8004d6a <FRAMEWIN_Callback+0x27c>
 8004bfa:	f898 3008 	ldrb.w	r3, [r8, #8]
 8004bfe:	b1cb      	cbz	r3, 8004c34 <FRAMEWIN_Callback+0x146>
 8004c00:	073b      	lsls	r3, r7, #28
 8004c02:	d402      	bmi.n	8004c0a <FRAMEWIN_Callback+0x11c>
 8004c04:	4620      	mov	r0, r4
 8004c06:	f000 fed1 	bl	80059ac <WM_SetFocus>
 8004c0a:	4620      	mov	r0, r4
 8004c0c:	f000 ffe8 	bl	8005be0 <WM_BringToTop>
 8004c10:	f407 7388 	and.w	r3, r7, #272	; 0x110
 8004c14:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8004c18:	f040 80a7 	bne.w	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c1c:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8004c20:	b2bb      	uxth	r3, r7
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	f040 80a1 	bne.w	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c28:	4620      	mov	r0, r4
 8004c2a:	4641      	mov	r1, r8
 8004c2c:	2205      	movs	r2, #5
 8004c2e:	f000 fb17 	bl	8005260 <WM_SetCaptureMove>
 8004c32:	e09a      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c34:	4620      	mov	r0, r4
 8004c36:	f007 fc47 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004c3a:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8004c3e:	9001      	str	r0, [sp, #4]
 8004c40:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004c44:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8004c48:	4630      	mov	r0, r6
 8004c4a:	f007 fc4b 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004c4e:	e08c      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c50:	f8c5 800c 	str.w	r8, [r5, #12]
 8004c54:	e089      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c56:	68eb      	ldr	r3, [r5, #12]
 8004c58:	2b02      	cmp	r3, #2
 8004c5a:	f040 8086 	bne.w	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c5e:	a906      	add	r1, sp, #24
 8004c60:	9304      	str	r3, [sp, #16]
 8004c62:	2327      	movs	r3, #39	; 0x27
 8004c64:	f841 3d14 	str.w	r3, [r1, #-20]!
 8004c68:	68a8      	ldr	r0, [r5, #8]
 8004c6a:	9403      	str	r4, [sp, #12]
 8004c6c:	f000 f968 	bl	8004f40 <WM__SendMessage>
 8004c70:	e07b      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004c72:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8004c76:	f1b9 0f01 	cmp.w	r9, #1
 8004c7a:	d124      	bne.n	8004cc6 <FRAMEWIN_Callback+0x1d8>
 8004c7c:	4630      	mov	r0, r6
 8004c7e:	f000 fde2 	bl	8005846 <WM_IsWindow>
 8004c82:	b158      	cbz	r0, 8004c9c <FRAMEWIN_Callback+0x1ae>
 8004c84:	4630      	mov	r0, r6
 8004c86:	f000 fe91 	bl	80059ac <WM_SetFocus>
 8004c8a:	4630      	mov	r0, r6
 8004c8c:	f000 fdb4 	bl	80057f8 <WM_HasFocus>
 8004c90:	b188      	cbz	r0, 8004cb6 <FRAMEWIN_Callback+0x1c8>
 8004c92:	4630      	mov	r0, r6
 8004c94:	4649      	mov	r1, r9
 8004c96:	f007 ffb7 	bl	800cc08 <WIDGET_OrState>
 8004c9a:	e00c      	b.n	8004cb6 <FRAMEWIN_Callback+0x1c8>
 8004c9c:	4640      	mov	r0, r8
 8004c9e:	f000 fab1 	bl	8005204 <WM_SetFocusOnNextChild>
 8004ca2:	4606      	mov	r6, r0
 8004ca4:	4620      	mov	r0, r4
 8004ca6:	f007 fc0f 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004caa:	9000      	str	r0, [sp, #0]
 8004cac:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 8004cb0:	4668      	mov	r0, sp
 8004cb2:	f007 fc17 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004cb6:	4620      	mov	r0, r4
 8004cb8:	2101      	movs	r1, #1
 8004cba:	f7ff ff14 	bl	8004ae6 <FRAMEWIN_SetActive>
 8004cbe:	2e00      	cmp	r6, #0
 8004cc0:	d153      	bne.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004cc2:	60ee      	str	r6, [r5, #12]
 8004cc4:	e051      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004cc6:	4620      	mov	r0, r4
 8004cc8:	4639      	mov	r1, r7
 8004cca:	f7ff ff0c 	bl	8004ae6 <FRAMEWIN_SetActive>
 8004cce:	e04c      	b.n	8004d6a <FRAMEWIN_Callback+0x27c>
 8004cd0:	f019 0f08 	tst.w	r9, #8
 8004cd4:	d141      	bne.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004cd6:	68eb      	ldr	r3, [r5, #12]
 8004cd8:	68db      	ldr	r3, [r3, #12]
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d03d      	beq.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004cde:	7a1b      	ldrb	r3, [r3, #8]
 8004ce0:	2b00      	cmp	r3, #0
 8004ce2:	d03a      	beq.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004ce4:	4620      	mov	r0, r4
 8004ce6:	f000 fe61 	bl	80059ac <WM_SetFocus>
 8004cea:	e036      	b.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004cec:	68ee      	ldr	r6, [r5, #12]
 8004cee:	2e00      	cmp	r6, #0
 8004cf0:	d033      	beq.n	8004d5a <FRAMEWIN_Callback+0x26c>
 8004cf2:	6870      	ldr	r0, [r6, #4]
 8004cf4:	4621      	mov	r1, r4
 8004cf6:	f000 f8ed 	bl	8004ed4 <WM__IsAncestorOrSelf>
 8004cfa:	b180      	cbz	r0, 8004d1e <FRAMEWIN_Callback+0x230>
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	2101      	movs	r1, #1
 8004d00:	f7ff fcde 	bl	80046c0 <_SetActive>
 8004d04:	6870      	ldr	r0, [r6, #4]
 8004d06:	4621      	mov	r1, r4
 8004d08:	f000 f8d3 	bl	8004eb2 <WM__IsAncestor>
 8004d0c:	b328      	cbz	r0, 8004d5a <FRAMEWIN_Callback+0x26c>
 8004d0e:	4620      	mov	r0, r4
 8004d10:	f007 fbda 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004d14:	ab06      	add	r3, sp, #24
 8004d16:	6872      	ldr	r2, [r6, #4]
 8004d18:	f843 0d14 	str.w	r0, [r3, #-20]!
 8004d1c:	e00f      	b.n	8004d3e <FRAMEWIN_Callback+0x250>
 8004d1e:	4620      	mov	r0, r4
 8004d20:	4639      	mov	r1, r7
 8004d22:	f7ff fccd 	bl	80046c0 <_SetActive>
 8004d26:	6830      	ldr	r0, [r6, #0]
 8004d28:	4621      	mov	r1, r4
 8004d2a:	f000 f8c2 	bl	8004eb2 <WM__IsAncestor>
 8004d2e:	b1a0      	cbz	r0, 8004d5a <FRAMEWIN_Callback+0x26c>
 8004d30:	4620      	mov	r0, r4
 8004d32:	f007 fbc9 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004d36:	ab06      	add	r3, sp, #24
 8004d38:	6832      	ldr	r2, [r6, #0]
 8004d3a:	f843 0d14 	str.w	r0, [r3, #-20]!
 8004d3e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8004d42:	4618      	mov	r0, r3
 8004d44:	e007      	b.n	8004d56 <FRAMEWIN_Callback+0x268>
 8004d46:	4620      	mov	r0, r4
 8004d48:	f007 fbbe 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004d4c:	9000      	str	r0, [sp, #0]
 8004d4e:	3070      	adds	r0, #112	; 0x70
 8004d50:	f007 fd8a 	bl	800c868 <GUI_ALLOC_FreePtr>
 8004d54:	4668      	mov	r0, sp
 8004d56:	f007 fbc5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004d5a:	4620      	mov	r0, r4
 8004d5c:	4629      	mov	r1, r5
 8004d5e:	f007 ff7e 	bl	800cc5e <WIDGET_HandleActive>
 8004d62:	b110      	cbz	r0, 8004d6a <FRAMEWIN_Callback+0x27c>
 8004d64:	4628      	mov	r0, r5
 8004d66:	f002 f88d 	bl	8006e84 <WM_DefaultProc>
 8004d6a:	b006      	add	sp, #24
 8004d6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004d70 <FRAMEWIN_GetActive>:
 8004d70:	b513      	push	{r0, r1, r4, lr}
 8004d72:	4604      	mov	r4, r0
 8004d74:	b158      	cbz	r0, 8004d8e <FRAMEWIN_GetActive+0x1e>
 8004d76:	f007 fba7 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004d7a:	ab02      	add	r3, sp, #8
 8004d7c:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8004d80:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004d84:	4618      	mov	r0, r3
 8004d86:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8004d8a:	f007 fbab 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004d8e:	4620      	mov	r0, r4
 8004d90:	b002      	add	sp, #8
 8004d92:	bd10      	pop	{r4, pc}

08004d94 <GUI_CreateDialogBox>:
 8004d94:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004d98:	4606      	mov	r6, r0
 8004d9a:	4688      	mov	r8, r1
 8004d9c:	4614      	mov	r4, r2
 8004d9e:	461d      	mov	r5, r3
 8004da0:	b913      	cbnz	r3, 8004da8 <GUI_CreateDialogBox+0x14>
 8004da2:	f000 fb97 	bl	80054d4 <WM_GetDesktopWindow>
 8004da6:	4605      	mov	r5, r0
 8004da8:	9400      	str	r4, [sp, #0]
 8004daa:	4630      	mov	r0, r6
 8004dac:	6834      	ldr	r4, [r6, #0]
 8004dae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004db0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004db2:	4629      	mov	r1, r5
 8004db4:	47a0      	blx	r4
 8004db6:	4604      	mov	r4, r0
 8004db8:	2800      	cmp	r0, #0
 8004dba:	d039      	beq.n	8004e30 <GUI_CreateDialogBox+0x9c>
 8004dbc:	f000 fb7c 	bl	80054b8 <WM_GetClientWindow>
 8004dc0:	8a71      	ldrh	r1, [r6, #18]
 8004dc2:	4607      	mov	r7, r0
 8004dc4:	4620      	mov	r0, r4
 8004dc6:	f007 ff1f 	bl	800cc08 <WIDGET_OrState>
 8004dca:	4620      	mov	r0, r4
 8004dcc:	f000 fe8b 	bl	8005ae6 <WM_ShowWindow>
 8004dd0:	4638      	mov	r0, r7
 8004dd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8004dd6:	f000 fe86 	bl	8005ae6 <WM_ShowWindow>
 8004dda:	f1b8 0f00 	cmp.w	r8, #0
 8004dde:	dd0f      	ble.n	8004e00 <GUI_CreateDialogBox+0x6c>
 8004de0:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8004de4:	2200      	movs	r2, #0
 8004de6:	9200      	str	r2, [sp, #0]
 8004de8:	4630      	mov	r0, r6
 8004dea:	4639      	mov	r1, r7
 8004dec:	4613      	mov	r3, r2
 8004dee:	47e0      	blx	ip
 8004df0:	4681      	mov	r9, r0
 8004df2:	2800      	cmp	r0, #0
 8004df4:	d1ed      	bne.n	8004dd2 <GUI_CreateDialogBox+0x3e>
 8004df6:	4620      	mov	r0, r4
 8004df8:	f001 fcee 	bl	80067d8 <WM_DeleteWindow>
 8004dfc:	4648      	mov	r0, r9
 8004dfe:	e018      	b.n	8004e32 <GUI_CreateDialogBox+0x9e>
 8004e00:	4638      	mov	r0, r7
 8004e02:	211d      	movs	r1, #29
 8004e04:	f000 fdb7 	bl	8005976 <WM_SendMessageNoPara>
 8004e08:	1c6b      	adds	r3, r5, #1
 8004e0a:	d011      	beq.n	8004e30 <GUI_CreateDialogBox+0x9c>
 8004e0c:	f000 fb8c 	bl	8005528 <WM_GetFocusedWindow>
 8004e10:	b150      	cbz	r0, 8004e28 <GUI_CreateDialogBox+0x94>
 8004e12:	f007 fb4f 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004e16:	6980      	ldr	r0, [r0, #24]
 8004e18:	42a0      	cmp	r0, r4
 8004e1a:	d00a      	beq.n	8004e32 <GUI_CreateDialogBox+0x9e>
 8004e1c:	2800      	cmp	r0, #0
 8004e1e:	d1f8      	bne.n	8004e12 <GUI_CreateDialogBox+0x7e>
 8004e20:	4620      	mov	r0, r4
 8004e22:	f000 f9ef 	bl	8005204 <WM_SetFocusOnNextChild>
 8004e26:	e003      	b.n	8004e30 <GUI_CreateDialogBox+0x9c>
 8004e28:	42a5      	cmp	r5, r4
 8004e2a:	d1f9      	bne.n	8004e20 <GUI_CreateDialogBox+0x8c>
 8004e2c:	4628      	mov	r0, r5
 8004e2e:	e000      	b.n	8004e32 <GUI_CreateDialogBox+0x9e>
 8004e30:	4620      	mov	r0, r4
 8004e32:	b003      	add	sp, #12
 8004e34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004e38 <WM__ForEachDesc>:
 8004e38:	b570      	push	{r4, r5, r6, lr}
 8004e3a:	460d      	mov	r5, r1
 8004e3c:	4616      	mov	r6, r2
 8004e3e:	f007 fb39 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004e42:	69c4      	ldr	r4, [r0, #28]
 8004e44:	b164      	cbz	r4, 8004e60 <WM__ForEachDesc+0x28>
 8004e46:	4620      	mov	r0, r4
 8004e48:	4631      	mov	r1, r6
 8004e4a:	47a8      	blx	r5
 8004e4c:	4620      	mov	r0, r4
 8004e4e:	4629      	mov	r1, r5
 8004e50:	4632      	mov	r2, r6
 8004e52:	f7ff fff1 	bl	8004e38 <WM__ForEachDesc>
 8004e56:	4620      	mov	r0, r4
 8004e58:	f007 fb2c 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004e5c:	6a04      	ldr	r4, [r0, #32]
 8004e5e:	e7f1      	b.n	8004e44 <WM__ForEachDesc+0xc>
 8004e60:	bd70      	pop	{r4, r5, r6, pc}

08004e62 <WM__GetFirstSibling>:
 8004e62:	b508      	push	{r3, lr}
 8004e64:	f000 fbf2 	bl	800564c <WM_GetParent>
 8004e68:	b118      	cbz	r0, 8004e72 <WM__GetFirstSibling+0x10>
 8004e6a:	f007 fb23 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004e6e:	69c0      	ldr	r0, [r0, #28]
 8004e70:	bd08      	pop	{r3, pc}
 8004e72:	bd08      	pop	{r3, pc}

08004e74 <WM__GetLastSibling>:
 8004e74:	b510      	push	{r4, lr}
 8004e76:	4604      	mov	r4, r0
 8004e78:	b130      	cbz	r0, 8004e88 <WM__GetLastSibling+0x14>
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	f007 fb1a 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004e80:	6a03      	ldr	r3, [r0, #32]
 8004e82:	b10b      	cbz	r3, 8004e88 <WM__GetLastSibling+0x14>
 8004e84:	461c      	mov	r4, r3
 8004e86:	e7f8      	b.n	8004e7a <WM__GetLastSibling+0x6>
 8004e88:	4620      	mov	r0, r4
 8004e8a:	bd10      	pop	{r4, pc}

08004e8c <WM__GetPrevSibling>:
 8004e8c:	b538      	push	{r3, r4, r5, lr}
 8004e8e:	4605      	mov	r5, r0
 8004e90:	f7ff ffe7 	bl	8004e62 <WM__GetFirstSibling>
 8004e94:	4604      	mov	r4, r0
 8004e96:	b154      	cbz	r4, 8004eae <WM__GetPrevSibling+0x22>
 8004e98:	42ac      	cmp	r4, r5
 8004e9a:	d007      	beq.n	8004eac <WM__GetPrevSibling+0x20>
 8004e9c:	4620      	mov	r0, r4
 8004e9e:	f007 fb09 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004ea2:	6a03      	ldr	r3, [r0, #32]
 8004ea4:	42ab      	cmp	r3, r5
 8004ea6:	d002      	beq.n	8004eae <WM__GetPrevSibling+0x22>
 8004ea8:	461c      	mov	r4, r3
 8004eaa:	e7f4      	b.n	8004e96 <WM__GetPrevSibling+0xa>
 8004eac:	2400      	movs	r4, #0
 8004eae:	4620      	mov	r0, r4
 8004eb0:	bd38      	pop	{r3, r4, r5, pc}

08004eb2 <WM__IsAncestor>:
 8004eb2:	b510      	push	{r4, lr}
 8004eb4:	460c      	mov	r4, r1
 8004eb6:	b908      	cbnz	r0, 8004ebc <WM__IsAncestor+0xa>
 8004eb8:	2000      	movs	r0, #0
 8004eba:	bd10      	pop	{r4, pc}
 8004ebc:	2900      	cmp	r1, #0
 8004ebe:	d0fb      	beq.n	8004eb8 <WM__IsAncestor+0x6>
 8004ec0:	f007 faf8 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004ec4:	6980      	ldr	r0, [r0, #24]
 8004ec6:	42a0      	cmp	r0, r4
 8004ec8:	d002      	beq.n	8004ed0 <WM__IsAncestor+0x1e>
 8004eca:	2800      	cmp	r0, #0
 8004ecc:	d1f8      	bne.n	8004ec0 <WM__IsAncestor+0xe>
 8004ece:	e7f3      	b.n	8004eb8 <WM__IsAncestor+0x6>
 8004ed0:	2001      	movs	r0, #1
 8004ed2:	bd10      	pop	{r4, pc}

08004ed4 <WM__IsAncestorOrSelf>:
 8004ed4:	4288      	cmp	r0, r1
 8004ed6:	d001      	beq.n	8004edc <WM__IsAncestorOrSelf+0x8>
 8004ed8:	f7ff bfeb 	b.w	8004eb2 <WM__IsAncestor>
 8004edc:	2001      	movs	r0, #1
 8004ede:	4770      	bx	lr

08004ee0 <WM__IsChild>:
 8004ee0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004ee2:	460d      	mov	r5, r1
 8004ee4:	4604      	mov	r4, r0
 8004ee6:	b160      	cbz	r0, 8004f02 <WM__IsChild+0x22>
 8004ee8:	f007 faee 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004eec:	9001      	str	r0, [sp, #4]
 8004eee:	b120      	cbz	r0, 8004efa <WM__IsChild+0x1a>
 8004ef0:	6984      	ldr	r4, [r0, #24]
 8004ef2:	1b63      	subs	r3, r4, r5
 8004ef4:	425c      	negs	r4, r3
 8004ef6:	415c      	adcs	r4, r3
 8004ef8:	e000      	b.n	8004efc <WM__IsChild+0x1c>
 8004efa:	4604      	mov	r4, r0
 8004efc:	a801      	add	r0, sp, #4
 8004efe:	f007 faf1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8004f02:	4620      	mov	r0, r4
 8004f04:	b003      	add	sp, #12
 8004f06:	bd30      	pop	{r4, r5, pc}

08004f08 <WM__GetFocusedChild>:
 8004f08:	b538      	push	{r3, r4, r5, lr}
 8004f0a:	4d06      	ldr	r5, [pc, #24]	; (8004f24 <WM__GetFocusedChild+0x1c>)
 8004f0c:	4c06      	ldr	r4, [pc, #24]	; (8004f28 <WM__GetFocusedChild+0x20>)
 8004f0e:	682b      	ldr	r3, [r5, #0]
 8004f10:	4601      	mov	r1, r0
 8004f12:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004f16:	f7ff ffe3 	bl	8004ee0 <WM__IsChild>
 8004f1a:	b110      	cbz	r0, 8004f22 <WM__GetFocusedChild+0x1a>
 8004f1c:	682b      	ldr	r3, [r5, #0]
 8004f1e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004f22:	bd38      	pop	{r3, r4, r5, pc}
 8004f24:	20002cac 	.word	0x20002cac
 8004f28:	20002c9c 	.word	0x20002c9c

08004f2c <WM__Screen2Client>:
 8004f2c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004f30:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8004f34:	4608      	mov	r0, r1
 8004f36:	4252      	negs	r2, r2
 8004f38:	4259      	negs	r1, r3
 8004f3a:	f006 bddc 	b.w	800baf6 <GUI_MoveRect>
	...

08004f40 <WM__SendMessage>:
 8004f40:	b570      	push	{r4, r5, r6, lr}
 8004f42:	4c0d      	ldr	r4, [pc, #52]	; (8004f78 <WM__SendMessage+0x38>)
 8004f44:	6823      	ldr	r3, [r4, #0]
 8004f46:	2b13      	cmp	r3, #19
 8004f48:	4606      	mov	r6, r0
 8004f4a:	460d      	mov	r5, r1
 8004f4c:	dc12      	bgt.n	8004f74 <WM__SendMessage+0x34>
 8004f4e:	f007 fab1 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004f52:	6903      	ldr	r3, [r0, #16]
 8004f54:	606e      	str	r6, [r5, #4]
 8004f56:	b143      	cbz	r3, 8004f6a <WM__SendMessage+0x2a>
 8004f58:	6822      	ldr	r2, [r4, #0]
 8004f5a:	4628      	mov	r0, r5
 8004f5c:	3201      	adds	r2, #1
 8004f5e:	6022      	str	r2, [r4, #0]
 8004f60:	4798      	blx	r3
 8004f62:	6823      	ldr	r3, [r4, #0]
 8004f64:	3b01      	subs	r3, #1
 8004f66:	6023      	str	r3, [r4, #0]
 8004f68:	bd70      	pop	{r4, r5, r6, pc}
 8004f6a:	4628      	mov	r0, r5
 8004f6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f70:	f001 bf88 	b.w	8006e84 <WM_DefaultProc>
 8004f74:	bd70      	pop	{r4, r5, r6, pc}
 8004f76:	bf00      	nop
 8004f78:	20002acc 	.word	0x20002acc

08004f7c <WM__SendMessageNoPara>:
 8004f7c:	b530      	push	{r4, r5, lr}
 8004f7e:	b085      	sub	sp, #20
 8004f80:	4604      	mov	r4, r0
 8004f82:	2210      	movs	r2, #16
 8004f84:	460d      	mov	r5, r1
 8004f86:	4668      	mov	r0, sp
 8004f88:	2100      	movs	r1, #0
 8004f8a:	f00b fedb 	bl	8010d44 <memset>
 8004f8e:	4620      	mov	r0, r4
 8004f90:	f007 fa90 	bl	800c4b4 <GUI_ALLOC_h2p>
 8004f94:	6903      	ldr	r3, [r0, #16]
 8004f96:	b11b      	cbz	r3, 8004fa0 <WM__SendMessageNoPara+0x24>
 8004f98:	9401      	str	r4, [sp, #4]
 8004f9a:	9500      	str	r5, [sp, #0]
 8004f9c:	4668      	mov	r0, sp
 8004f9e:	4798      	blx	r3
 8004fa0:	b005      	add	sp, #20
 8004fa2:	bd30      	pop	{r4, r5, pc}

08004fa4 <WM__UpdateChildPositions>:
 8004fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fa8:	b087      	sub	sp, #28
 8004faa:	69c4      	ldr	r4, [r0, #28]
 8004fac:	9303      	str	r3, [sp, #12]
 8004fae:	468a      	mov	sl, r1
 8004fb0:	4693      	mov	fp, r2
 8004fb2:	2c00      	cmp	r4, #0
 8004fb4:	d06d      	beq.n	8005092 <WM__UpdateChildPositions+0xee>
 8004fb6:	4620      	mov	r0, r4
 8004fb8:	f007 fa86 	bl	800c4c8 <GUI_ALLOC_LockH>
 8004fbc:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8004fbe:	9005      	str	r0, [sp, #20]
 8004fc0:	f401 7320 	and.w	r3, r1, #640	; 0x280
 8004fc4:	2b80      	cmp	r3, #128	; 0x80
 8004fc6:	f8b0 8000 	ldrh.w	r8, [r0]
 8004fca:	8842      	ldrh	r2, [r0, #2]
 8004fcc:	8886      	ldrh	r6, [r0, #4]
 8004fce:	88c5      	ldrh	r5, [r0, #6]
 8004fd0:	d008      	beq.n	8004fe4 <WM__UpdateChildPositions+0x40>
 8004fd2:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 8004fd6:	d108      	bne.n	8004fea <WM__UpdateChildPositions+0x46>
 8004fd8:	eb08 090a 	add.w	r9, r8, sl
 8004fdc:	fa1f f989 	uxth.w	r9, r9
 8004fe0:	9b03      	ldr	r3, [sp, #12]
 8004fe2:	e008      	b.n	8004ff6 <WM__UpdateChildPositions+0x52>
 8004fe4:	9803      	ldr	r0, [sp, #12]
 8004fe6:	b283      	uxth	r3, r0
 8004fe8:	e001      	b.n	8004fee <WM__UpdateChildPositions+0x4a>
 8004fea:	fa1f f38a 	uxth.w	r3, sl
 8004fee:	eb03 0908 	add.w	r9, r3, r8
 8004ff2:	fa1f f989 	uxth.w	r9, r9
 8004ff6:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 8004ffa:	4433      	add	r3, r6
 8004ffc:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8005000:	b29b      	uxth	r3, r3
 8005002:	d008      	beq.n	8005016 <WM__UpdateChildPositions+0x72>
 8005004:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8005008:	d108      	bne.n	800501c <WM__UpdateChildPositions+0x78>
 800500a:	eb02 0c0b 	add.w	ip, r2, fp
 800500e:	fa1f fc8c 	uxth.w	ip, ip
 8005012:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005014:	e008      	b.n	8005028 <WM__UpdateChildPositions+0x84>
 8005016:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005018:	b28f      	uxth	r7, r1
 800501a:	e001      	b.n	8005020 <WM__UpdateChildPositions+0x7c>
 800501c:	fa1f f78b 	uxth.w	r7, fp
 8005020:	eb07 0c02 	add.w	ip, r7, r2
 8005024:	fa1f fc8c 	uxth.w	ip, ip
 8005028:	fa0f f989 	sxth.w	r9, r9
 800502c:	fa0f f888 	sxth.w	r8, r8
 8005030:	b212      	sxth	r2, r2
 8005032:	442f      	add	r7, r5
 8005034:	fa0f fc8c 	sxth.w	ip, ip
 8005038:	ebb9 0108 	subs.w	r1, r9, r8
 800503c:	9202      	str	r2, [sp, #8]
 800503e:	b2bf      	uxth	r7, r7
 8005040:	ebc2 020c 	rsb	r2, r2, ip
 8005044:	d100      	bne.n	8005048 <WM__UpdateChildPositions+0xa4>
 8005046:	b142      	cbz	r2, 800505a <WM__UpdateChildPositions+0xb6>
 8005048:	4620      	mov	r0, r4
 800504a:	9301      	str	r3, [sp, #4]
 800504c:	f8cd c000 	str.w	ip, [sp]
 8005050:	f000 fa12 	bl	8005478 <WM_MoveWindow>
 8005054:	f8dd c000 	ldr.w	ip, [sp]
 8005058:	9b01      	ldr	r3, [sp, #4]
 800505a:	b21b      	sxth	r3, r3
 800505c:	ebc9 0903 	rsb	r9, r9, r3
 8005060:	b236      	sxth	r6, r6
 8005062:	9b02      	ldr	r3, [sp, #8]
 8005064:	ebc6 0808 	rsb	r8, r6, r8
 8005068:	b23f      	sxth	r7, r7
 800506a:	b22d      	sxth	r5, r5
 800506c:	ebcc 0c07 	rsb	ip, ip, r7
 8005070:	1b5d      	subs	r5, r3, r5
 8005072:	eb19 0108 	adds.w	r1, r9, r8
 8005076:	eb0c 0205 	add.w	r2, ip, r5
 800507a:	d100      	bne.n	800507e <WM__UpdateChildPositions+0xda>
 800507c:	b112      	cbz	r2, 8005084 <WM__UpdateChildPositions+0xe0>
 800507e:	4620      	mov	r0, r4
 8005080:	f000 fbfe 	bl	8005880 <WM_ResizeWindow>
 8005084:	a806      	add	r0, sp, #24
 8005086:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800508a:	6a1c      	ldr	r4, [r3, #32]
 800508c:	f007 fa2a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005090:	e78f      	b.n	8004fb2 <WM__UpdateChildPositions+0xe>
 8005092:	b007      	add	sp, #28
 8005094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005098 <WM__AddCriticalHandle>:
 8005098:	4b02      	ldr	r3, [pc, #8]	; (80050a4 <WM__AddCriticalHandle+0xc>)
 800509a:	681a      	ldr	r2, [r3, #0]
 800509c:	6002      	str	r2, [r0, #0]
 800509e:	6018      	str	r0, [r3, #0]
 80050a0:	4770      	bx	lr
 80050a2:	bf00      	nop
 80050a4:	20002cc8 	.word	0x20002cc8

080050a8 <WM__GetClientRectEx>:
 80050a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80050aa:	460d      	mov	r5, r1
 80050ac:	b158      	cbz	r0, 80050c6 <WM__GetClientRectEx+0x1e>
 80050ae:	b151      	cbz	r1, 80050c6 <WM__GetClientRectEx+0x1e>
 80050b0:	f007 fa0a 	bl	800c4c8 <GUI_ALLOC_LockH>
 80050b4:	ac02      	add	r4, sp, #8
 80050b6:	4629      	mov	r1, r5
 80050b8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80050bc:	f001 f96a 	bl	8006394 <WM__GetClientRectWin>
 80050c0:	4620      	mov	r0, r4
 80050c2:	f007 fa0f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80050c6:	b003      	add	sp, #12
 80050c8:	bd30      	pop	{r4, r5, pc}
	...

080050cc <WM_SetHasTrans>:
 80050cc:	b513      	push	{r0, r1, r4, lr}
 80050ce:	4604      	mov	r4, r0
 80050d0:	b1b8      	cbz	r0, 8005102 <WM_SetHasTrans+0x36>
 80050d2:	f007 f9f9 	bl	800c4c8 <GUI_ALLOC_LockH>
 80050d6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80050d8:	9001      	str	r0, [sp, #4]
 80050da:	07db      	lsls	r3, r3, #31
 80050dc:	d40e      	bmi.n	80050fc <WM_SetHasTrans+0x30>
 80050de:	4620      	mov	r0, r4
 80050e0:	f000 fd16 	bl	8005b10 <WM_ValidateWindow>
 80050e4:	9b01      	ldr	r3, [sp, #4]
 80050e6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80050e8:	f042 0201 	orr.w	r2, r2, #1
 80050ec:	629a      	str	r2, [r3, #40]	; 0x28
 80050ee:	4b06      	ldr	r3, [pc, #24]	; (8005108 <WM_SetHasTrans+0x3c>)
 80050f0:	681a      	ldr	r2, [r3, #0]
 80050f2:	4620      	mov	r0, r4
 80050f4:	3201      	adds	r2, #1
 80050f6:	601a      	str	r2, [r3, #0]
 80050f8:	f001 fa96 	bl	8006628 <WM_InvalidateWindow>
 80050fc:	a801      	add	r0, sp, #4
 80050fe:	f007 f9f1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005102:	b002      	add	sp, #8
 8005104:	bd10      	pop	{r4, pc}
 8005106:	bf00      	nop
 8005108:	20002cdc 	.word	0x20002cdc

0800510c <WM_GetHasTrans>:
 800510c:	b508      	push	{r3, lr}
 800510e:	b128      	cbz	r0, 800511c <WM_GetHasTrans+0x10>
 8005110:	f007 f9d0 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005114:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005116:	f000 0001 	and.w	r0, r0, #1
 800511a:	bd08      	pop	{r3, pc}
 800511c:	bd08      	pop	{r3, pc}

0800511e <_SetScrollbar>:
 800511e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005120:	460d      	mov	r5, r1
 8005122:	4611      	mov	r1, r2
 8005124:	4606      	mov	r6, r0
 8005126:	461f      	mov	r7, r3
 8005128:	f000 fa3a 	bl	80055a0 <WM_GetDialogItem>
 800512c:	4604      	mov	r4, r0
 800512e:	b1a5      	cbz	r5, 800515a <_SetScrollbar+0x3c>
 8005130:	b920      	cbnz	r0, 800513c <_SetScrollbar+0x1e>
 8005132:	4630      	mov	r0, r6
 8005134:	4639      	mov	r1, r7
 8005136:	f007 ff43 	bl	800cfc0 <SCROLLBAR_CreateAttached>
 800513a:	e014      	b.n	8005166 <_SetScrollbar+0x48>
 800513c:	f007 f9c4 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005140:	ab02      	add	r3, sp, #8
 8005142:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005144:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005148:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800514c:	f042 0202 	orr.w	r2, r2, #2
 8005150:	6282      	str	r2, [r0, #40]	; 0x28
 8005152:	4618      	mov	r0, r3
 8005154:	f007 f9c6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005158:	e005      	b.n	8005166 <_SetScrollbar+0x48>
 800515a:	b120      	cbz	r0, 8005166 <_SetScrollbar+0x48>
 800515c:	f000 fcf0 	bl	8005b40 <WM_HideWindow>
 8005160:	4620      	mov	r0, r4
 8005162:	f001 fe33 	bl	8006dcc <WM__DeleteSecure>
 8005166:	1c20      	adds	r0, r4, #0
 8005168:	bf18      	it	ne
 800516a:	2001      	movne	r0, #1
 800516c:	b003      	add	sp, #12
 800516e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005170 <WM__SetScrollbarV>:
 8005170:	22fe      	movs	r2, #254	; 0xfe
 8005172:	2308      	movs	r3, #8
 8005174:	f7ff bfd3 	b.w	800511e <_SetScrollbar>

08005178 <WM__SetScrollbarH>:
 8005178:	22ff      	movs	r2, #255	; 0xff
 800517a:	2300      	movs	r3, #0
 800517c:	f7ff bfcf 	b.w	800511e <_SetScrollbar>

08005180 <WM_SetScrollbarH>:
 8005180:	f7ff bffa 	b.w	8005178 <WM__SetScrollbarH>

08005184 <WM_SetScrollbarV>:
 8005184:	f7ff bff4 	b.w	8005170 <WM__SetScrollbarV>

08005188 <_GetPrevChild>:
 8005188:	b510      	push	{r4, lr}
 800518a:	4604      	mov	r4, r0
 800518c:	b918      	cbnz	r0, 8005196 <_GetPrevChild+0xe>
 800518e:	4620      	mov	r0, r4
 8005190:	f7ff fe70 	bl	8004e74 <WM__GetLastSibling>
 8005194:	e003      	b.n	800519e <_GetPrevChild+0x16>
 8005196:	f7ff fe79 	bl	8004e8c <WM__GetPrevSibling>
 800519a:	2800      	cmp	r0, #0
 800519c:	d0f7      	beq.n	800518e <_GetPrevChild+0x6>
 800519e:	42a0      	cmp	r0, r4
 80051a0:	bf08      	it	eq
 80051a2:	2000      	moveq	r0, #0
 80051a4:	bd10      	pop	{r4, pc}

080051a6 <WM_SetFocusOnPrevChild>:
 80051a6:	b538      	push	{r3, r4, r5, lr}
 80051a8:	4604      	mov	r4, r0
 80051aa:	b1b0      	cbz	r0, 80051da <WM_SetFocusOnPrevChild+0x34>
 80051ac:	f7ff feac 	bl	8004f08 <WM__GetFocusedChild>
 80051b0:	f7ff ffea 	bl	8005188 <_GetPrevChild>
 80051b4:	4605      	mov	r5, r0
 80051b6:	4604      	mov	r4, r0
 80051b8:	4620      	mov	r0, r4
 80051ba:	f000 fb2b 	bl	8005814 <WM_IsFocusable>
 80051be:	b930      	cbnz	r0, 80051ce <WM_SetFocusOnPrevChild+0x28>
 80051c0:	b12c      	cbz	r4, 80051ce <WM_SetFocusOnPrevChild+0x28>
 80051c2:	4620      	mov	r0, r4
 80051c4:	f7ff ffe0 	bl	8005188 <_GetPrevChild>
 80051c8:	42a8      	cmp	r0, r5
 80051ca:	4604      	mov	r4, r0
 80051cc:	d1f4      	bne.n	80051b8 <WM_SetFocusOnPrevChild+0x12>
 80051ce:	4620      	mov	r0, r4
 80051d0:	f000 fbec 	bl	80059ac <WM_SetFocus>
 80051d4:	2800      	cmp	r0, #0
 80051d6:	bf18      	it	ne
 80051d8:	2400      	movne	r4, #0
 80051da:	4620      	mov	r0, r4
 80051dc:	bd38      	pop	{r3, r4, r5, pc}

080051de <_GetNextChild>:
 80051de:	b538      	push	{r3, r4, r5, lr}
 80051e0:	4605      	mov	r5, r0
 80051e2:	460c      	mov	r4, r1
 80051e4:	b921      	cbnz	r1, 80051f0 <_GetNextChild+0x12>
 80051e6:	4628      	mov	r0, r5
 80051e8:	f007 f964 	bl	800c4b4 <GUI_ALLOC_h2p>
 80051ec:	69c0      	ldr	r0, [r0, #28]
 80051ee:	e005      	b.n	80051fc <_GetNextChild+0x1e>
 80051f0:	4608      	mov	r0, r1
 80051f2:	f007 f95f 	bl	800c4b4 <GUI_ALLOC_h2p>
 80051f6:	6a00      	ldr	r0, [r0, #32]
 80051f8:	2800      	cmp	r0, #0
 80051fa:	d0f4      	beq.n	80051e6 <_GetNextChild+0x8>
 80051fc:	42a0      	cmp	r0, r4
 80051fe:	bf08      	it	eq
 8005200:	2000      	moveq	r0, #0
 8005202:	bd38      	pop	{r3, r4, r5, pc}

08005204 <WM_SetFocusOnNextChild>:
 8005204:	b570      	push	{r4, r5, r6, lr}
 8005206:	4605      	mov	r5, r0
 8005208:	b328      	cbz	r0, 8005256 <WM_SetFocusOnNextChild+0x52>
 800520a:	f7ff fe7d 	bl	8004f08 <WM__GetFocusedChild>
 800520e:	4601      	mov	r1, r0
 8005210:	4628      	mov	r0, r5
 8005212:	f7ff ffe4 	bl	80051de <_GetNextChild>
 8005216:	4606      	mov	r6, r0
 8005218:	4604      	mov	r4, r0
 800521a:	4620      	mov	r0, r4
 800521c:	f000 fafa 	bl	8005814 <WM_IsFocusable>
 8005220:	b938      	cbnz	r0, 8005232 <WM_SetFocusOnNextChild+0x2e>
 8005222:	b13c      	cbz	r4, 8005234 <WM_SetFocusOnNextChild+0x30>
 8005224:	4621      	mov	r1, r4
 8005226:	4628      	mov	r0, r5
 8005228:	f7ff ffd9 	bl	80051de <_GetNextChild>
 800522c:	42b0      	cmp	r0, r6
 800522e:	4604      	mov	r4, r0
 8005230:	d1f3      	bne.n	800521a <WM_SetFocusOnNextChild+0x16>
 8005232:	b90c      	cbnz	r4, 8005238 <WM_SetFocusOnNextChild+0x34>
 8005234:	2400      	movs	r4, #0
 8005236:	e00f      	b.n	8005258 <WM_SetFocusOnNextChild+0x54>
 8005238:	4d08      	ldr	r5, [pc, #32]	; (800525c <WM_SetFocusOnNextChild+0x58>)
 800523a:	4620      	mov	r0, r4
 800523c:	682e      	ldr	r6, [r5, #0]
 800523e:	f001 f8b5 	bl	80063ac <WM__GetTopLevelLayer>
 8005242:	1c43      	adds	r3, r0, #1
 8005244:	d008      	beq.n	8005258 <WM_SetFocusOnNextChild+0x54>
 8005246:	6028      	str	r0, [r5, #0]
 8005248:	4620      	mov	r0, r4
 800524a:	f000 fbaf 	bl	80059ac <WM_SetFocus>
 800524e:	602e      	str	r6, [r5, #0]
 8005250:	2800      	cmp	r0, #0
 8005252:	d1ef      	bne.n	8005234 <WM_SetFocusOnNextChild+0x30>
 8005254:	e000      	b.n	8005258 <WM_SetFocusOnNextChild+0x54>
 8005256:	4604      	mov	r4, r0
 8005258:	4620      	mov	r0, r4
 800525a:	bd70      	pop	{r4, r5, r6, pc}
 800525c:	20002cac 	.word	0x20002cac

08005260 <WM_SetCaptureMove>:
 8005260:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005264:	b085      	sub	sp, #20
 8005266:	4604      	mov	r4, r0
 8005268:	460d      	mov	r5, r1
 800526a:	4691      	mov	r9, r2
 800526c:	4698      	mov	r8, r3
 800526e:	f000 fab5 	bl	80057dc <WM_HasCaptured>
 8005272:	4e21      	ldr	r6, [pc, #132]	; (80052f8 <WM_SetCaptureMove+0x98>)
 8005274:	b940      	cbnz	r0, 8005288 <WM_SetCaptureMove+0x28>
 8005276:	4620      	mov	r0, r4
 8005278:	2101      	movs	r1, #1
 800527a:	f000 f859 	bl	8005330 <WM_SetCapture>
 800527e:	682b      	ldr	r3, [r5, #0]
 8005280:	8033      	strh	r3, [r6, #0]
 8005282:	686b      	ldr	r3, [r5, #4]
 8005284:	8073      	strh	r3, [r6, #2]
 8005286:	e034      	b.n	80052f2 <WM_SetCaptureMove+0x92>
 8005288:	682b      	ldr	r3, [r5, #0]
 800528a:	f9b6 7000 	ldrsh.w	r7, [r6]
 800528e:	686d      	ldr	r5, [r5, #4]
 8005290:	1bdf      	subs	r7, r3, r7
 8005292:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8005296:	4620      	mov	r0, r4
 8005298:	1aed      	subs	r5, r5, r3
 800529a:	f1b9 0f00 	cmp.w	r9, #0
 800529e:	d102      	bne.n	80052a6 <WM_SetCaptureMove+0x46>
 80052a0:	f1b8 0f00 	cmp.w	r8, #0
 80052a4:	d021      	beq.n	80052ea <WM_SetCaptureMove+0x8a>
 80052a6:	4669      	mov	r1, sp
 80052a8:	f000 fa39 	bl	800571e <WM_GetWindowRectEx>
 80052ac:	f1b8 0f00 	cmp.w	r8, #0
 80052b0:	d005      	beq.n	80052be <WM_SetCaptureMove+0x5e>
 80052b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80052b6:	3b01      	subs	r3, #1
 80052b8:	4498      	add	r8, r3
 80052ba:	f8ad 8006 	strh.w	r8, [sp, #6]
 80052be:	4620      	mov	r0, r4
 80052c0:	f000 f9c4 	bl	800564c <WM_GetParent>
 80052c4:	a902      	add	r1, sp, #8
 80052c6:	f000 fa2a 	bl	800571e <WM_GetWindowRectEx>
 80052ca:	4668      	mov	r0, sp
 80052cc:	4639      	mov	r1, r7
 80052ce:	462a      	mov	r2, r5
 80052d0:	f006 fc11 	bl	800baf6 <GUI_MoveRect>
 80052d4:	a802      	add	r0, sp, #8
 80052d6:	4601      	mov	r1, r0
 80052d8:	464a      	mov	r2, r9
 80052da:	f004 fcec 	bl	8009cb6 <GUI__ReduceRect>
 80052de:	4668      	mov	r0, sp
 80052e0:	a902      	add	r1, sp, #8
 80052e2:	f006 fc53 	bl	800bb8c <GUI_RectsIntersect>
 80052e6:	b120      	cbz	r0, 80052f2 <WM_SetCaptureMove+0x92>
 80052e8:	4620      	mov	r0, r4
 80052ea:	4639      	mov	r1, r7
 80052ec:	462a      	mov	r2, r5
 80052ee:	f000 f8c3 	bl	8005478 <WM_MoveWindow>
 80052f2:	b005      	add	sp, #20
 80052f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80052f8:	20002ad0 	.word	0x20002ad0

080052fc <WM__ReleaseCapture>:
 80052fc:	b530      	push	{r4, r5, lr}
 80052fe:	4d0a      	ldr	r5, [pc, #40]	; (8005328 <WM__ReleaseCapture+0x2c>)
 8005300:	4c0a      	ldr	r4, [pc, #40]	; (800532c <WM__ReleaseCapture+0x30>)
 8005302:	682b      	ldr	r3, [r5, #0]
 8005304:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8005308:	b085      	sub	sp, #20
 800530a:	b150      	cbz	r0, 8005322 <WM__ReleaseCapture+0x26>
 800530c:	a904      	add	r1, sp, #16
 800530e:	2318      	movs	r3, #24
 8005310:	f841 3d10 	str.w	r3, [r1, #-16]!
 8005314:	4669      	mov	r1, sp
 8005316:	f7ff fe13 	bl	8004f40 <WM__SendMessage>
 800531a:	682b      	ldr	r3, [r5, #0]
 800531c:	2200      	movs	r2, #0
 800531e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8005322:	b005      	add	sp, #20
 8005324:	bd30      	pop	{r4, r5, pc}
 8005326:	bf00      	nop
 8005328:	20002cac 	.word	0x20002cac
 800532c:	20002cd0 	.word	0x20002cd0

08005330 <WM_SetCapture>:
 8005330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005332:	4b09      	ldr	r3, [pc, #36]	; (8005358 <WM_SetCapture+0x28>)
 8005334:	4a09      	ldr	r2, [pc, #36]	; (800535c <WM_SetCapture+0x2c>)
 8005336:	4604      	mov	r4, r0
 8005338:	6818      	ldr	r0, [r3, #0]
 800533a:	460f      	mov	r7, r1
 800533c:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8005340:	42a1      	cmp	r1, r4
 8005342:	4615      	mov	r5, r2
 8005344:	461e      	mov	r6, r3
 8005346:	d001      	beq.n	800534c <WM_SetCapture+0x1c>
 8005348:	f7ff ffd8 	bl	80052fc <WM__ReleaseCapture>
 800534c:	6833      	ldr	r3, [r6, #0]
 800534e:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 8005352:	4b03      	ldr	r3, [pc, #12]	; (8005360 <WM_SetCapture+0x30>)
 8005354:	701f      	strb	r7, [r3, #0]
 8005356:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005358:	20002cac 	.word	0x20002cac
 800535c:	20002cd0 	.word	0x20002cd0
 8005360:	20002cb0 	.word	0x20002cb0

08005364 <_MoveDescendents>:
 8005364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005368:	b088      	sub	sp, #32
 800536a:	4606      	mov	r6, r0
 800536c:	460c      	mov	r4, r1
 800536e:	4615      	mov	r5, r2
 8005370:	a804      	add	r0, sp, #16
 8005372:	2100      	movs	r1, #0
 8005374:	2210      	movs	r2, #16
 8005376:	f00b fce5 	bl	8010d44 <memset>
 800537a:	b336      	cbz	r6, 80053ca <_MoveDescendents+0x66>
 800537c:	4630      	mov	r0, r6
 800537e:	f007 f8a3 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005382:	4621      	mov	r1, r4
 8005384:	462a      	mov	r2, r5
 8005386:	9001      	str	r0, [sp, #4]
 8005388:	f006 fbb5 	bl	800baf6 <GUI_MoveRect>
 800538c:	9801      	ldr	r0, [sp, #4]
 800538e:	4621      	mov	r1, r4
 8005390:	3008      	adds	r0, #8
 8005392:	462a      	mov	r2, r5
 8005394:	f006 fbaf 	bl	800baf6 <GUI_MoveRect>
 8005398:	a808      	add	r0, sp, #32
 800539a:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800539e:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80053a2:	6a17      	ldr	r7, [r2, #32]
 80053a4:	f007 f89e 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80053a8:	4640      	mov	r0, r8
 80053aa:	4621      	mov	r1, r4
 80053ac:	462a      	mov	r2, r5
 80053ae:	f7ff ffd9 	bl	8005364 <_MoveDescendents>
 80053b2:	2303      	movs	r3, #3
 80053b4:	9304      	str	r3, [sp, #16]
 80053b6:	4630      	mov	r0, r6
 80053b8:	ab02      	add	r3, sp, #8
 80053ba:	a904      	add	r1, sp, #16
 80053bc:	9307      	str	r3, [sp, #28]
 80053be:	9402      	str	r4, [sp, #8]
 80053c0:	9503      	str	r5, [sp, #12]
 80053c2:	463e      	mov	r6, r7
 80053c4:	f7ff fdbc 	bl	8004f40 <WM__SendMessage>
 80053c8:	e7d7      	b.n	800537a <_MoveDescendents+0x16>
 80053ca:	b008      	add	sp, #32
 80053cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080053d0 <WM__MoveWindow>:
 80053d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80053d4:	b08b      	sub	sp, #44	; 0x2c
 80053d6:	4606      	mov	r6, r0
 80053d8:	460d      	mov	r5, r1
 80053da:	4614      	mov	r4, r2
 80053dc:	a806      	add	r0, sp, #24
 80053de:	2100      	movs	r1, #0
 80053e0:	2210      	movs	r2, #16
 80053e2:	f00b fcaf 	bl	8010d44 <memset>
 80053e6:	2e00      	cmp	r6, #0
 80053e8:	d043      	beq.n	8005472 <WM__MoveWindow+0xa2>
 80053ea:	b90d      	cbnz	r5, 80053f0 <WM__MoveWindow+0x20>
 80053ec:	2c00      	cmp	r4, #0
 80053ee:	d040      	beq.n	8005472 <WM__MoveWindow+0xa2>
 80053f0:	4630      	mov	r0, r6
 80053f2:	f007 f869 	bl	800c4c8 <GUI_ALLOC_LockH>
 80053f6:	4603      	mov	r3, r0
 80053f8:	9001      	str	r0, [sp, #4]
 80053fa:	c803      	ldmia	r0, {r0, r1}
 80053fc:	f10d 0808 	add.w	r8, sp, #8
 8005400:	e888 0003 	stmia.w	r8, {r0, r1}
 8005404:	4622      	mov	r2, r4
 8005406:	4618      	mov	r0, r3
 8005408:	4629      	mov	r1, r5
 800540a:	f006 fb74 	bl	800baf6 <GUI_MoveRect>
 800540e:	9801      	ldr	r0, [sp, #4]
 8005410:	af0a      	add	r7, sp, #40	; 0x28
 8005412:	4629      	mov	r1, r5
 8005414:	4622      	mov	r2, r4
 8005416:	3008      	adds	r0, #8
 8005418:	f006 fb6d 	bl	800baf6 <GUI_MoveRect>
 800541c:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8005420:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8005424:	4638      	mov	r0, r7
 8005426:	f007 f85d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800542a:	4622      	mov	r2, r4
 800542c:	4648      	mov	r0, r9
 800542e:	4629      	mov	r1, r5
 8005430:	f7ff ff98 	bl	8005364 <_MoveDescendents>
 8005434:	4630      	mov	r0, r6
 8005436:	f007 f847 	bl	800c4c8 <GUI_ALLOC_LockH>
 800543a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800543c:	9001      	str	r0, [sp, #4]
 800543e:	0792      	lsls	r2, r2, #30
 8005440:	d50a      	bpl.n	8005458 <WM__MoveWindow+0x88>
 8005442:	6981      	ldr	r1, [r0, #24]
 8005444:	b141      	cbz	r1, 8005458 <WM__MoveWindow+0x88>
 8005446:	6a02      	ldr	r2, [r0, #32]
 8005448:	f001 f885 	bl	8006556 <WM__InvalidateParent>
 800544c:	9b01      	ldr	r3, [sp, #4]
 800544e:	4640      	mov	r0, r8
 8005450:	6999      	ldr	r1, [r3, #24]
 8005452:	6a1a      	ldr	r2, [r3, #32]
 8005454:	f001 f87f 	bl	8006556 <WM__InvalidateParent>
 8005458:	4638      	mov	r0, r7
 800545a:	f007 f843 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800545e:	2303      	movs	r3, #3
 8005460:	9306      	str	r3, [sp, #24]
 8005462:	4630      	mov	r0, r6
 8005464:	ab04      	add	r3, sp, #16
 8005466:	a906      	add	r1, sp, #24
 8005468:	9309      	str	r3, [sp, #36]	; 0x24
 800546a:	9504      	str	r5, [sp, #16]
 800546c:	9405      	str	r4, [sp, #20]
 800546e:	f7ff fd67 	bl	8004f40 <WM__SendMessage>
 8005472:	b00b      	add	sp, #44	; 0x2c
 8005474:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08005478 <WM_MoveWindow>:
 8005478:	f7ff bfaa 	b.w	80053d0 <WM__MoveWindow>

0800547c <WM_DisableMemdev>:
 800547c:	b508      	push	{r3, lr}
 800547e:	b138      	cbz	r0, 8005490 <WM_DisableMemdev+0x14>
 8005480:	f007 f818 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005484:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005486:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800548a:	f023 0304 	bic.w	r3, r3, #4
 800548e:	6283      	str	r3, [r0, #40]	; 0x28
 8005490:	bd08      	pop	{r3, pc}

08005492 <WM_ForEachDesc>:
 8005492:	f7ff bcd1 	b.w	8004e38 <WM__ForEachDesc>

08005496 <WM_GetClientRectEx>:
 8005496:	f7ff be07 	b.w	80050a8 <WM__GetClientRectEx>
	...

0800549c <WM_GetClientRect>:
 800549c:	4b04      	ldr	r3, [pc, #16]	; (80054b0 <WM_GetClientRect+0x14>)
 800549e:	4601      	mov	r1, r0
 80054a0:	6818      	ldr	r0, [r3, #0]
 80054a2:	b910      	cbnz	r0, 80054aa <WM_GetClientRect+0xe>
 80054a4:	4b03      	ldr	r3, [pc, #12]	; (80054b4 <WM_GetClientRect+0x18>)
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80054aa:	f7ff bdfd 	b.w	80050a8 <WM__GetClientRectEx>
 80054ae:	bf00      	nop
 80054b0:	20002c88 	.word	0x20002c88
 80054b4:	200000c0 	.word	0x200000c0

080054b8 <WM_GetClientWindow>:
 80054b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80054ba:	2300      	movs	r3, #0
 80054bc:	a904      	add	r1, sp, #16
 80054be:	9303      	str	r3, [sp, #12]
 80054c0:	2317      	movs	r3, #23
 80054c2:	f841 3d10 	str.w	r3, [r1, #-16]!
 80054c6:	4669      	mov	r1, sp
 80054c8:	f000 ff55 	bl	8006376 <WM_SendMessage>
 80054cc:	9803      	ldr	r0, [sp, #12]
 80054ce:	b005      	add	sp, #20
 80054d0:	f85d fb04 	ldr.w	pc, [sp], #4

080054d4 <WM_GetDesktopWindow>:
 80054d4:	4b03      	ldr	r3, [pc, #12]	; (80054e4 <WM_GetDesktopWindow+0x10>)
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	7c5a      	ldrb	r2, [r3, #17]
 80054da:	4b03      	ldr	r3, [pc, #12]	; (80054e8 <WM_GetDesktopWindow+0x14>)
 80054dc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80054e0:	4770      	bx	lr
 80054e2:	bf00      	nop
 80054e4:	200000c0 	.word	0x200000c0
 80054e8:	20002c8c 	.word	0x20002c8c

080054ec <WM_CheckScrollBounds>:
 80054ec:	6802      	ldr	r2, [r0, #0]
 80054ee:	6883      	ldr	r3, [r0, #8]
 80054f0:	1ad3      	subs	r3, r2, r3
 80054f2:	6842      	ldr	r2, [r0, #4]
 80054f4:	2a00      	cmp	r2, #0
 80054f6:	bfbc      	itt	lt
 80054f8:	2200      	movlt	r2, #0
 80054fa:	6042      	strlt	r2, [r0, #4]
 80054fc:	6842      	ldr	r2, [r0, #4]
 80054fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8005502:	429a      	cmp	r2, r3
 8005504:	bfc8      	it	gt
 8005506:	6043      	strgt	r3, [r0, #4]
 8005508:	4770      	bx	lr

0800550a <WM_GetFirstChild>:
 800550a:	b508      	push	{r3, lr}
 800550c:	4603      	mov	r3, r0
 800550e:	b110      	cbz	r0, 8005516 <WM_GetFirstChild+0xc>
 8005510:	f006 ffd0 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005514:	69c3      	ldr	r3, [r0, #28]
 8005516:	4618      	mov	r0, r3
 8005518:	bd08      	pop	{r3, pc}

0800551a <WM_GetFlags>:
 800551a:	b508      	push	{r3, lr}
 800551c:	b118      	cbz	r0, 8005526 <WM_GetFlags+0xc>
 800551e:	f006 ffc9 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005522:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8005524:	bd08      	pop	{r3, pc}
 8005526:	bd08      	pop	{r3, pc}

08005528 <WM_GetFocusedWindow>:
 8005528:	4b02      	ldr	r3, [pc, #8]	; (8005534 <WM_GetFocusedWindow+0xc>)
 800552a:	681a      	ldr	r2, [r3, #0]
 800552c:	4b02      	ldr	r3, [pc, #8]	; (8005538 <WM_GetFocusedWindow+0x10>)
 800552e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8005532:	4770      	bx	lr
 8005534:	20002cac 	.word	0x20002cac
 8005538:	20002c9c 	.word	0x20002c9c

0800553c <WM_GetId>:
 800553c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800553e:	4604      	mov	r4, r0
 8005540:	2210      	movs	r2, #16
 8005542:	4668      	mov	r0, sp
 8005544:	2100      	movs	r1, #0
 8005546:	f00b fbfd 	bl	8010d44 <memset>
 800554a:	2315      	movs	r3, #21
 800554c:	4620      	mov	r0, r4
 800554e:	4669      	mov	r1, sp
 8005550:	9300      	str	r3, [sp, #0]
 8005552:	f000 ff10 	bl	8006376 <WM_SendMessage>
 8005556:	9803      	ldr	r0, [sp, #12]
 8005558:	b004      	add	sp, #16
 800555a:	bd10      	pop	{r4, pc}

0800555c <_GetDialogItem>:
 800555c:	b570      	push	{r4, r5, r6, lr}
 800555e:	4606      	mov	r6, r0
 8005560:	460d      	mov	r5, r1
 8005562:	f006 ffa7 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005566:	69c4      	ldr	r4, [r0, #28]
 8005568:	b14c      	cbz	r4, 800557e <_GetDialogItem+0x22>
 800556a:	4620      	mov	r0, r4
 800556c:	f7ff ffe6 	bl	800553c <WM_GetId>
 8005570:	42a8      	cmp	r0, r5
 8005572:	4620      	mov	r0, r4
 8005574:	d013      	beq.n	800559e <_GetDialogItem+0x42>
 8005576:	f006 ff9d 	bl	800c4b4 <GUI_ALLOC_h2p>
 800557a:	6a04      	ldr	r4, [r0, #32]
 800557c:	e7f4      	b.n	8005568 <_GetDialogItem+0xc>
 800557e:	4630      	mov	r0, r6
 8005580:	f006 ff98 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005584:	69c4      	ldr	r4, [r0, #28]
 8005586:	4620      	mov	r0, r4
 8005588:	b144      	cbz	r4, 800559c <_GetDialogItem+0x40>
 800558a:	4629      	mov	r1, r5
 800558c:	f7ff ffe6 	bl	800555c <_GetDialogItem>
 8005590:	b928      	cbnz	r0, 800559e <_GetDialogItem+0x42>
 8005592:	4620      	mov	r0, r4
 8005594:	f006 ff8e 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005598:	6a04      	ldr	r4, [r0, #32]
 800559a:	e7f4      	b.n	8005586 <_GetDialogItem+0x2a>
 800559c:	bd70      	pop	{r4, r5, r6, pc}
 800559e:	bd70      	pop	{r4, r5, r6, pc}

080055a0 <WM_GetDialogItem>:
 80055a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055a2:	460d      	mov	r5, r1
 80055a4:	4604      	mov	r4, r0
 80055a6:	b1c8      	cbz	r0, 80055dc <WM_GetDialogItem+0x3c>
 80055a8:	f006 ff8e 	bl	800c4c8 <GUI_ALLOC_LockH>
 80055ac:	ab02      	add	r3, sp, #8
 80055ae:	69c4      	ldr	r4, [r0, #28]
 80055b0:	f843 0d04 	str.w	r0, [r3, #-4]!
 80055b4:	4618      	mov	r0, r3
 80055b6:	f006 ff95 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80055ba:	b17c      	cbz	r4, 80055dc <WM_GetDialogItem+0x3c>
 80055bc:	4620      	mov	r0, r4
 80055be:	f7ff ffbd 	bl	800553c <WM_GetId>
 80055c2:	42a8      	cmp	r0, r5
 80055c4:	d00a      	beq.n	80055dc <WM_GetDialogItem+0x3c>
 80055c6:	4620      	mov	r0, r4
 80055c8:	4629      	mov	r1, r5
 80055ca:	f7ff ffc7 	bl	800555c <_GetDialogItem>
 80055ce:	b920      	cbnz	r0, 80055da <WM_GetDialogItem+0x3a>
 80055d0:	4620      	mov	r0, r4
 80055d2:	f006 ff6f 	bl	800c4b4 <GUI_ALLOC_h2p>
 80055d6:	6a04      	ldr	r4, [r0, #32]
 80055d8:	e7ef      	b.n	80055ba <WM_GetDialogItem+0x1a>
 80055da:	4604      	mov	r4, r0
 80055dc:	4620      	mov	r0, r4
 80055de:	b003      	add	sp, #12
 80055e0:	bd30      	pop	{r4, r5, pc}

080055e2 <WM_GetInsideRectEx>:
 80055e2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80055e4:	9103      	str	r1, [sp, #12]
 80055e6:	a904      	add	r1, sp, #16
 80055e8:	2314      	movs	r3, #20
 80055ea:	f841 3d10 	str.w	r3, [r1, #-16]!
 80055ee:	4669      	mov	r1, sp
 80055f0:	f000 fec1 	bl	8006376 <WM_SendMessage>
 80055f4:	b005      	add	sp, #20
 80055f6:	f85d fb04 	ldr.w	pc, [sp], #4

080055fa <WM_GetNextSibling>:
 80055fa:	b508      	push	{r3, lr}
 80055fc:	4603      	mov	r3, r0
 80055fe:	b110      	cbz	r0, 8005606 <WM_GetNextSibling+0xc>
 8005600:	f006 ff58 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005604:	6a03      	ldr	r3, [r0, #32]
 8005606:	4618      	mov	r0, r3
 8005608:	bd08      	pop	{r3, pc}

0800560a <WM_GetWindowOrgX>:
 800560a:	b508      	push	{r3, lr}
 800560c:	b120      	cbz	r0, 8005618 <WM_GetWindowOrgX+0xe>
 800560e:	f006 ff51 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005612:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005616:	bd08      	pop	{r3, pc}
 8005618:	bd08      	pop	{r3, pc}

0800561a <WM_GetWindowOrgY>:
 800561a:	b508      	push	{r3, lr}
 800561c:	b120      	cbz	r0, 8005628 <WM_GetWindowOrgY+0xe>
 800561e:	f006 ff49 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005622:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8005626:	bd08      	pop	{r3, pc}
 8005628:	bd08      	pop	{r3, pc}
	...

0800562c <WM_GetOrgX>:
 800562c:	4b02      	ldr	r3, [pc, #8]	; (8005638 <WM_GetOrgX+0xc>)
 800562e:	681b      	ldr	r3, [r3, #0]
 8005630:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005632:	f7ff bfea 	b.w	800560a <WM_GetWindowOrgX>
 8005636:	bf00      	nop
 8005638:	200000c0 	.word	0x200000c0

0800563c <WM_GetOrgY>:
 800563c:	4b02      	ldr	r3, [pc, #8]	; (8005648 <WM_GetOrgY+0xc>)
 800563e:	681b      	ldr	r3, [r3, #0]
 8005640:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005642:	f7ff bfea 	b.w	800561a <WM_GetWindowOrgY>
 8005646:	bf00      	nop
 8005648:	200000c0 	.word	0x200000c0

0800564c <WM_GetParent>:
 800564c:	b508      	push	{r3, lr}
 800564e:	4603      	mov	r3, r0
 8005650:	b110      	cbz	r0, 8005658 <WM_GetParent+0xc>
 8005652:	f006 ff2f 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005656:	6983      	ldr	r3, [r0, #24]
 8005658:	4618      	mov	r0, r3
 800565a:	bd08      	pop	{r3, pc}

0800565c <WM_BringToBottom>:
 800565c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005660:	4604      	mov	r4, r0
 8005662:	b087      	sub	sp, #28
 8005664:	2800      	cmp	r0, #0
 8005666:	d039      	beq.n	80056dc <WM_BringToBottom+0x80>
 8005668:	f006 ff2e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800566c:	4603      	mov	r3, r0
 800566e:	9001      	str	r0, [sp, #4]
 8005670:	c803      	ldmia	r0, {r0, r1}
 8005672:	ad04      	add	r5, sp, #16
 8005674:	e885 0003 	stmia.w	r5, {r0, r1}
 8005678:	a801      	add	r0, sp, #4
 800567a:	6a1e      	ldr	r6, [r3, #32]
 800567c:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8005680:	f006 ff30 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005684:	4620      	mov	r0, r4
 8005686:	f7ff fc01 	bl	8004e8c <WM__GetPrevSibling>
 800568a:	4607      	mov	r7, r0
 800568c:	b330      	cbz	r0, 80056dc <WM_BringToBottom+0x80>
 800568e:	4620      	mov	r0, r4
 8005690:	f7ff ffdc 	bl	800564c <WM_GetParent>
 8005694:	f019 0f02 	tst.w	r9, #2
 8005698:	4680      	mov	r8, r0
 800569a:	d004      	beq.n	80056a6 <WM_BringToBottom+0x4a>
 800569c:	4628      	mov	r0, r5
 800569e:	4641      	mov	r1, r8
 80056a0:	4632      	mov	r2, r6
 80056a2:	f000 ff6d 	bl	8006580 <WM__InvalidateRectEx>
 80056a6:	4620      	mov	r0, r4
 80056a8:	f006 ff0e 	bl	800c4c8 <GUI_ALLOC_LockH>
 80056ac:	9001      	str	r0, [sp, #4]
 80056ae:	4640      	mov	r0, r8
 80056b0:	f006 ff0a 	bl	800c4c8 <GUI_ALLOC_LockH>
 80056b4:	9003      	str	r0, [sp, #12]
 80056b6:	4638      	mov	r0, r7
 80056b8:	f006 ff06 	bl	800c4c8 <GUI_ALLOC_LockH>
 80056bc:	9b03      	ldr	r3, [sp, #12]
 80056be:	9a01      	ldr	r2, [sp, #4]
 80056c0:	69d9      	ldr	r1, [r3, #28]
 80056c2:	6206      	str	r6, [r0, #32]
 80056c4:	9002      	str	r0, [sp, #8]
 80056c6:	6211      	str	r1, [r2, #32]
 80056c8:	a801      	add	r0, sp, #4
 80056ca:	61dc      	str	r4, [r3, #28]
 80056cc:	f006 ff0a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80056d0:	a803      	add	r0, sp, #12
 80056d2:	f006 ff07 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80056d6:	a802      	add	r0, sp, #8
 80056d8:	f006 ff04 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80056dc:	b007      	add	sp, #28
 80056de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080056e2 <WM_GetScrollbarH>:
 80056e2:	b110      	cbz	r0, 80056ea <WM_GetScrollbarH+0x8>
 80056e4:	21ff      	movs	r1, #255	; 0xff
 80056e6:	f7ff bf39 	b.w	800555c <_GetDialogItem>
 80056ea:	4770      	bx	lr

080056ec <WM_GetScrollbarV>:
 80056ec:	b110      	cbz	r0, 80056f4 <WM_GetScrollbarV+0x8>
 80056ee:	21fe      	movs	r1, #254	; 0xfe
 80056f0:	f7ff bf34 	b.w	800555c <_GetDialogItem>
 80056f4:	4770      	bx	lr

080056f6 <WM_GetScrollPartner>:
 80056f6:	b538      	push	{r3, r4, r5, lr}
 80056f8:	4605      	mov	r5, r0
 80056fa:	f7ff ff1f 	bl	800553c <WM_GetId>
 80056fe:	28ff      	cmp	r0, #255	; 0xff
 8005700:	4604      	mov	r4, r0
 8005702:	d003      	beq.n	800570c <WM_GetScrollPartner+0x16>
 8005704:	28fe      	cmp	r0, #254	; 0xfe
 8005706:	bf08      	it	eq
 8005708:	24ff      	moveq	r4, #255	; 0xff
 800570a:	e000      	b.n	800570e <WM_GetScrollPartner+0x18>
 800570c:	24fe      	movs	r4, #254	; 0xfe
 800570e:	4628      	mov	r0, r5
 8005710:	f7ff ff9c 	bl	800564c <WM_GetParent>
 8005714:	4621      	mov	r1, r4
 8005716:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800571a:	f7ff bf41 	b.w	80055a0 <WM_GetDialogItem>

0800571e <WM_GetWindowRectEx>:
 800571e:	b510      	push	{r4, lr}
 8005720:	460c      	mov	r4, r1
 8005722:	b130      	cbz	r0, 8005732 <WM_GetWindowRectEx+0x14>
 8005724:	b129      	cbz	r1, 8005732 <WM_GetWindowRectEx+0x14>
 8005726:	f006 fec5 	bl	800c4b4 <GUI_ALLOC_h2p>
 800572a:	4603      	mov	r3, r0
 800572c:	cb03      	ldmia	r3!, {r0, r1}
 800572e:	6020      	str	r0, [r4, #0]
 8005730:	6061      	str	r1, [r4, #4]
 8005732:	bd10      	pop	{r4, pc}

08005734 <WM_GetInsideRectExScrollbar>:
 8005734:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005736:	460c      	mov	r4, r1
 8005738:	b087      	sub	sp, #28
 800573a:	4606      	mov	r6, r0
 800573c:	2800      	cmp	r0, #0
 800573e:	d04b      	beq.n	80057d8 <WM_GetInsideRectExScrollbar+0xa4>
 8005740:	2900      	cmp	r1, #0
 8005742:	d049      	beq.n	80057d8 <WM_GetInsideRectExScrollbar+0xa4>
 8005744:	21ff      	movs	r1, #255	; 0xff
 8005746:	f7ff ff2b 	bl	80055a0 <WM_GetDialogItem>
 800574a:	21fe      	movs	r1, #254	; 0xfe
 800574c:	4605      	mov	r5, r0
 800574e:	4630      	mov	r0, r6
 8005750:	f7ff ff26 	bl	80055a0 <WM_GetDialogItem>
 8005754:	4669      	mov	r1, sp
 8005756:	4607      	mov	r7, r0
 8005758:	4630      	mov	r0, r6
 800575a:	f7ff ffe0 	bl	800571e <WM_GetWindowRectEx>
 800575e:	4630      	mov	r0, r6
 8005760:	a902      	add	r1, sp, #8
 8005762:	f7ff ff3e 	bl	80055e2 <WM_GetInsideRectEx>
 8005766:	b1c7      	cbz	r7, 800579a <WM_GetInsideRectExScrollbar+0x66>
 8005768:	4638      	mov	r0, r7
 800576a:	a904      	add	r1, sp, #16
 800576c:	f7ff ffd7 	bl	800571e <WM_GetWindowRectEx>
 8005770:	f9bd 1000 	ldrsh.w	r1, [sp]
 8005774:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8005778:	a804      	add	r0, sp, #16
 800577a:	4249      	negs	r1, r1
 800577c:	4252      	negs	r2, r2
 800577e:	f006 f9ba 	bl	800baf6 <GUI_MoveRect>
 8005782:	4638      	mov	r0, r7
 8005784:	f7ff fec9 	bl	800551a <WM_GetFlags>
 8005788:	f000 0082 	and.w	r0, r0, #130	; 0x82
 800578c:	2882      	cmp	r0, #130	; 0x82
 800578e:	d104      	bne.n	800579a <WM_GetInsideRectExScrollbar+0x66>
 8005790:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8005794:	3b01      	subs	r3, #1
 8005796:	f8ad 300c 	strh.w	r3, [sp, #12]
 800579a:	b1cd      	cbz	r5, 80057d0 <WM_GetInsideRectExScrollbar+0x9c>
 800579c:	4628      	mov	r0, r5
 800579e:	a904      	add	r1, sp, #16
 80057a0:	f7ff ffbd 	bl	800571e <WM_GetWindowRectEx>
 80057a4:	f9bd 1000 	ldrsh.w	r1, [sp]
 80057a8:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 80057ac:	a804      	add	r0, sp, #16
 80057ae:	4249      	negs	r1, r1
 80057b0:	4252      	negs	r2, r2
 80057b2:	f006 f9a0 	bl	800baf6 <GUI_MoveRect>
 80057b6:	4628      	mov	r0, r5
 80057b8:	f7ff feaf 	bl	800551a <WM_GetFlags>
 80057bc:	f400 7081 	and.w	r0, r0, #258	; 0x102
 80057c0:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 80057c4:	d104      	bne.n	80057d0 <WM_GetInsideRectExScrollbar+0x9c>
 80057c6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80057ca:	3b01      	subs	r3, #1
 80057cc:	f8ad 300e 	strh.w	r3, [sp, #14]
 80057d0:	ab02      	add	r3, sp, #8
 80057d2:	cb03      	ldmia	r3!, {r0, r1}
 80057d4:	6020      	str	r0, [r4, #0]
 80057d6:	6061      	str	r1, [r4, #4]
 80057d8:	b007      	add	sp, #28
 80057da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080057dc <WM_HasCaptured>:
 80057dc:	4b04      	ldr	r3, [pc, #16]	; (80057f0 <WM_HasCaptured+0x14>)
 80057de:	681a      	ldr	r2, [r3, #0]
 80057e0:	4b04      	ldr	r3, [pc, #16]	; (80057f4 <WM_HasCaptured+0x18>)
 80057e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80057e6:	1ac3      	subs	r3, r0, r3
 80057e8:	4258      	negs	r0, r3
 80057ea:	4158      	adcs	r0, r3
 80057ec:	4770      	bx	lr
 80057ee:	bf00      	nop
 80057f0:	20002cac 	.word	0x20002cac
 80057f4:	20002cd0 	.word	0x20002cd0

080057f8 <WM_HasFocus>:
 80057f8:	4b04      	ldr	r3, [pc, #16]	; (800580c <WM_HasFocus+0x14>)
 80057fa:	681a      	ldr	r2, [r3, #0]
 80057fc:	4b04      	ldr	r3, [pc, #16]	; (8005810 <WM_HasFocus+0x18>)
 80057fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005802:	1ac3      	subs	r3, r0, r3
 8005804:	4258      	negs	r0, r3
 8005806:	4158      	adcs	r0, r3
 8005808:	4770      	bx	lr
 800580a:	bf00      	nop
 800580c:	20002cac 	.word	0x20002cac
 8005810:	20002c9c 	.word	0x20002c9c

08005814 <WM_IsFocusable>:
 8005814:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005816:	4604      	mov	r4, r0
 8005818:	b908      	cbnz	r0, 800581e <WM_IsFocusable+0xa>
 800581a:	2000      	movs	r0, #0
 800581c:	e011      	b.n	8005842 <WM_IsFocusable+0x2e>
 800581e:	f006 fe49 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005822:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005824:	079a      	lsls	r2, r3, #30
 8005826:	d5f8      	bpl.n	800581a <WM_IsFocusable+0x6>
 8005828:	f013 0310 	ands.w	r3, r3, #16
 800582c:	d1f5      	bne.n	800581a <WM_IsFocusable+0x6>
 800582e:	a904      	add	r1, sp, #16
 8005830:	9303      	str	r3, [sp, #12]
 8005832:	231f      	movs	r3, #31
 8005834:	f841 3d10 	str.w	r3, [r1, #-16]!
 8005838:	4620      	mov	r0, r4
 800583a:	4669      	mov	r1, sp
 800583c:	f000 fd9b 	bl	8006376 <WM_SendMessage>
 8005840:	9803      	ldr	r0, [sp, #12]
 8005842:	b004      	add	sp, #16
 8005844:	bd10      	pop	{r4, pc}

08005846 <WM_IsWindow>:
 8005846:	f000 bd4d 	b.w	80062e4 <WM__IsWindow>
	...

0800584c <WM_OnKey>:
 800584c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800584e:	4a0a      	ldr	r2, [pc, #40]	; (8005878 <WM_OnKey+0x2c>)
 8005850:	4603      	mov	r3, r0
 8005852:	6810      	ldr	r0, [r2, #0]
 8005854:	4a09      	ldr	r2, [pc, #36]	; (800587c <WM_OnKey+0x30>)
 8005856:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800585a:	b148      	cbz	r0, 8005870 <WM_OnKey+0x24>
 800585c:	9300      	str	r3, [sp, #0]
 800585e:	230e      	movs	r3, #14
 8005860:	9101      	str	r1, [sp, #4]
 8005862:	9302      	str	r3, [sp, #8]
 8005864:	a902      	add	r1, sp, #8
 8005866:	ab00      	add	r3, sp, #0
 8005868:	9305      	str	r3, [sp, #20]
 800586a:	f7ff fb69 	bl	8004f40 <WM__SendMessage>
 800586e:	2001      	movs	r0, #1
 8005870:	b007      	add	sp, #28
 8005872:	f85d fb04 	ldr.w	pc, [sp], #4
 8005876:	bf00      	nop
 8005878:	20002cac 	.word	0x20002cac
 800587c:	20002c9c 	.word	0x20002c9c

08005880 <WM_ResizeWindow>:
 8005880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005884:	ea51 0302 	orrs.w	r3, r1, r2
 8005888:	b08a      	sub	sp, #40	; 0x28
 800588a:	4680      	mov	r8, r0
 800588c:	460e      	mov	r6, r1
 800588e:	4617      	mov	r7, r2
 8005890:	d06e      	beq.n	8005970 <WM_ResizeWindow+0xf0>
 8005892:	2800      	cmp	r0, #0
 8005894:	d06c      	beq.n	8005970 <WM_ResizeWindow+0xf0>
 8005896:	f006 fe17 	bl	800c4c8 <GUI_ALLOC_LockH>
 800589a:	4603      	mov	r3, r0
 800589c:	9003      	str	r0, [sp, #12]
 800589e:	c803      	ldmia	r0, {r0, r1}
 80058a0:	ad04      	add	r5, sp, #16
 80058a2:	ac06      	add	r4, sp, #24
 80058a4:	e885 0003 	stmia.w	r5, {r0, r1}
 80058a8:	e884 0003 	stmia.w	r4, {r0, r1}
 80058ac:	b17e      	cbz	r6, 80058ce <WM_ResizeWindow+0x4e>
 80058ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80058b0:	f402 7220 	and.w	r2, r2, #640	; 0x280
 80058b4:	2a80      	cmp	r2, #128	; 0x80
 80058b6:	d105      	bne.n	80058c4 <WM_ResizeWindow+0x44>
 80058b8:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 80058bc:	1b96      	subs	r6, r2, r6
 80058be:	f8ad 6018 	strh.w	r6, [sp, #24]
 80058c2:	e004      	b.n	80058ce <WM_ResizeWindow+0x4e>
 80058c4:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 80058c8:	4416      	add	r6, r2
 80058ca:	f8ad 601c 	strh.w	r6, [sp, #28]
 80058ce:	b187      	cbz	r7, 80058f2 <WM_ResizeWindow+0x72>
 80058d0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80058d2:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 80058d6:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 80058da:	d105      	bne.n	80058e8 <WM_ResizeWindow+0x68>
 80058dc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80058e0:	1bd7      	subs	r7, r2, r7
 80058e2:	f8ad 701a 	strh.w	r7, [sp, #26]
 80058e6:	e004      	b.n	80058f2 <WM_ResizeWindow+0x72>
 80058e8:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80058ec:	4417      	add	r7, r2
 80058ee:	f8ad 701e 	strh.w	r7, [sp, #30]
 80058f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80058f4:	03da      	lsls	r2, r3, #15
 80058f6:	d502      	bpl.n	80058fe <WM_ResizeWindow+0x7e>
 80058f8:	4640      	mov	r0, r8
 80058fa:	f000 fd03 	bl	8006304 <WM__InvalidateDrawAndDescs>
 80058fe:	e894 0003 	ldmia.w	r4, {r0, r1}
 8005902:	9b03      	ldr	r3, [sp, #12]
 8005904:	e883 0003 	stmia.w	r3, {r0, r1}
 8005908:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800590a:	079b      	lsls	r3, r3, #30
 800590c:	d50a      	bpl.n	8005924 <WM_ResizeWindow+0xa4>
 800590e:	a808      	add	r0, sp, #32
 8005910:	4629      	mov	r1, r5
 8005912:	4622      	mov	r2, r4
 8005914:	f006 f8c4 	bl	800baa0 <GUI_MergeRect>
 8005918:	9b03      	ldr	r3, [sp, #12]
 800591a:	a808      	add	r0, sp, #32
 800591c:	6999      	ldr	r1, [r3, #24]
 800591e:	6a1a      	ldr	r2, [r3, #32]
 8005920:	f000 fe2e 	bl	8006580 <WM__InvalidateRectEx>
 8005924:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8005928:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800592c:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8005930:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8005934:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8005938:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800593c:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8005940:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8005944:	1ae3      	subs	r3, r4, r3
 8005946:	1a38      	subs	r0, r7, r0
 8005948:	ac0a      	add	r4, sp, #40	; 0x28
 800594a:	1aaa      	subs	r2, r5, r2
 800594c:	9000      	str	r0, [sp, #0]
 800594e:	1a71      	subs	r1, r6, r1
 8005950:	9803      	ldr	r0, [sp, #12]
 8005952:	f7ff fb27 	bl	8004fa4 <WM__UpdateChildPositions>
 8005956:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 800595a:	f101 0008 	add.w	r0, r1, #8
 800595e:	f004 f92c 	bl	8009bba <GUI__IntersectRect>
 8005962:	4640      	mov	r0, r8
 8005964:	2105      	movs	r1, #5
 8005966:	f000 fd0a 	bl	800637e <WM__SendMsgNoData>
 800596a:	4620      	mov	r0, r4
 800596c:	f006 fdba 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005970:	b00a      	add	sp, #40	; 0x28
 8005972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005976 <WM_SendMessageNoPara>:
 8005976:	f7ff bb01 	b.w	8004f7c <WM__SendMessageNoPara>

0800597a <WM_SendToParent>:
 800597a:	b538      	push	{r3, r4, r5, lr}
 800597c:	4605      	mov	r5, r0
 800597e:	460c      	mov	r4, r1
 8005980:	b141      	cbz	r1, 8005994 <WM_SendToParent+0x1a>
 8005982:	f7ff fe63 	bl	800564c <WM_GetParent>
 8005986:	b128      	cbz	r0, 8005994 <WM_SendToParent+0x1a>
 8005988:	60a5      	str	r5, [r4, #8]
 800598a:	4621      	mov	r1, r4
 800598c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005990:	f7ff bad6 	b.w	8004f40 <WM__SendMessage>
 8005994:	bd38      	pop	{r3, r4, r5, pc}

08005996 <WM_NotifyParent>:
 8005996:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005998:	2326      	movs	r3, #38	; 0x26
 800599a:	9103      	str	r1, [sp, #12]
 800599c:	4669      	mov	r1, sp
 800599e:	9300      	str	r3, [sp, #0]
 80059a0:	f7ff ffeb 	bl	800597a <WM_SendToParent>
 80059a4:	b005      	add	sp, #20
 80059a6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080059ac <WM_SetFocus>:
 80059ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059ae:	b087      	sub	sp, #28
 80059b0:	4604      	mov	r4, r0
 80059b2:	2100      	movs	r1, #0
 80059b4:	a802      	add	r0, sp, #8
 80059b6:	2210      	movs	r2, #16
 80059b8:	f00b f9c4 	bl	8010d44 <memset>
 80059bc:	2c00      	cmp	r4, #0
 80059be:	d03a      	beq.n	8005a36 <WM_SetFocus+0x8a>
 80059c0:	4b1f      	ldr	r3, [pc, #124]	; (8005a40 <WM_SetFocus+0x94>)
 80059c2:	4a20      	ldr	r2, [pc, #128]	; (8005a44 <WM_SetFocus+0x98>)
 80059c4:	6819      	ldr	r1, [r3, #0]
 80059c6:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 80059ca:	4284      	cmp	r4, r0
 80059cc:	4616      	mov	r6, r2
 80059ce:	461f      	mov	r7, r3
 80059d0:	d031      	beq.n	8005a36 <WM_SetFocus+0x8a>
 80059d2:	231e      	movs	r3, #30
 80059d4:	e88d 0011 	stmia.w	sp, {r0, r4}
 80059d8:	9302      	str	r3, [sp, #8]
 80059da:	b110      	cbz	r0, 80059e2 <WM_SetFocus+0x36>
 80059dc:	a902      	add	r1, sp, #8
 80059de:	f7ff faaf 	bl	8004f40 <WM__SendMessage>
 80059e2:	2301      	movs	r3, #1
 80059e4:	4620      	mov	r0, r4
 80059e6:	a902      	add	r1, sp, #8
 80059e8:	9305      	str	r3, [sp, #20]
 80059ea:	f7ff faa9 	bl	8004f40 <WM__SendMessage>
 80059ee:	9d05      	ldr	r5, [sp, #20]
 80059f0:	bb15      	cbnz	r5, 8005a38 <WM_SetFocus+0x8c>
 80059f2:	683b      	ldr	r3, [r7, #0]
 80059f4:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 80059f8:	4620      	mov	r0, r4
 80059fa:	f7ff fe27 	bl	800564c <WM_GetParent>
 80059fe:	4604      	mov	r4, r0
 8005a00:	b138      	cbz	r0, 8005a12 <WM_SetFocus+0x66>
 8005a02:	2320      	movs	r3, #32
 8005a04:	9302      	str	r3, [sp, #8]
 8005a06:	a902      	add	r1, sp, #8
 8005a08:	ab00      	add	r3, sp, #0
 8005a0a:	9305      	str	r3, [sp, #20]
 8005a0c:	f7ff fa98 	bl	8004f40 <WM__SendMessage>
 8005a10:	e7f2      	b.n	80059f8 <WM_SetFocus+0x4c>
 8005a12:	9c00      	ldr	r4, [sp, #0]
 8005a14:	4620      	mov	r0, r4
 8005a16:	f000 fc65 	bl	80062e4 <WM__IsWindow>
 8005a1a:	b168      	cbz	r0, 8005a38 <WM_SetFocus+0x8c>
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f7ff fe15 	bl	800564c <WM_GetParent>
 8005a22:	4604      	mov	r4, r0
 8005a24:	b140      	cbz	r0, 8005a38 <WM_SetFocus+0x8c>
 8005a26:	2320      	movs	r3, #32
 8005a28:	9302      	str	r3, [sp, #8]
 8005a2a:	a902      	add	r1, sp, #8
 8005a2c:	ab00      	add	r3, sp, #0
 8005a2e:	9305      	str	r3, [sp, #20]
 8005a30:	f7ff fa86 	bl	8004f40 <WM__SendMessage>
 8005a34:	e7f2      	b.n	8005a1c <WM_SetFocus+0x70>
 8005a36:	2501      	movs	r5, #1
 8005a38:	4628      	mov	r0, r5
 8005a3a:	b007      	add	sp, #28
 8005a3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a3e:	bf00      	nop
 8005a40:	20002cac 	.word	0x20002cac
 8005a44:	20002c9c 	.word	0x20002c9c

08005a48 <WM_SetScrollState>:
 8005a48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005a4a:	b130      	cbz	r0, 8005a5a <WM_SetScrollState+0x12>
 8005a4c:	b129      	cbz	r1, 8005a5a <WM_SetScrollState+0x12>
 8005a4e:	2324      	movs	r3, #36	; 0x24
 8005a50:	9103      	str	r1, [sp, #12]
 8005a52:	4669      	mov	r1, sp
 8005a54:	9300      	str	r3, [sp, #0]
 8005a56:	f000 fc8e 	bl	8006376 <WM_SendMessage>
 8005a5a:	b005      	add	sp, #20
 8005a5c:	f85d fb04 	ldr.w	pc, [sp], #4

08005a60 <WM_SetSize>:
 8005a60:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8005a64:	460e      	mov	r6, r1
 8005a66:	4690      	mov	r8, r2
 8005a68:	4607      	mov	r7, r0
 8005a6a:	b1d0      	cbz	r0, 8005aa2 <WM_SetSize+0x42>
 8005a6c:	f006 fd2c 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005a70:	4603      	mov	r3, r0
 8005a72:	a802      	add	r0, sp, #8
 8005a74:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005a78:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005a7c:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8005a80:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005a84:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005a88:	1a8a      	subs	r2, r1, r2
 8005a8a:	1aed      	subs	r5, r5, r3
 8005a8c:	43d2      	mvns	r2, r2
 8005a8e:	43ed      	mvns	r5, r5
 8005a90:	4416      	add	r6, r2
 8005a92:	4445      	add	r5, r8
 8005a94:	f006 fd26 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005a98:	4638      	mov	r0, r7
 8005a9a:	4631      	mov	r1, r6
 8005a9c:	462a      	mov	r2, r5
 8005a9e:	f7ff feef 	bl	8005880 <WM_ResizeWindow>
 8005aa2:	b003      	add	sp, #12
 8005aa4:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

08005aa8 <WM_SetUserClipRect>:
 8005aa8:	4b04      	ldr	r3, [pc, #16]	; (8005abc <WM_SetUserClipRect+0x14>)
 8005aaa:	b510      	push	{r4, lr}
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 8005ab0:	6458      	str	r0, [r3, #68]	; 0x44
 8005ab2:	f000 fbf3 	bl	800629c <WM__ActivateClipRect>
 8005ab6:	4620      	mov	r0, r4
 8005ab8:	bd10      	pop	{r4, pc}
 8005aba:	bf00      	nop
 8005abc:	200000c0 	.word	0x200000c0

08005ac0 <WM_InvalidateWindowAndDescs>:
 8005ac0:	b510      	push	{r4, lr}
 8005ac2:	4604      	mov	r4, r0
 8005ac4:	b170      	cbz	r0, 8005ae4 <WM_InvalidateWindowAndDescs+0x24>
 8005ac6:	f000 fdaf 	bl	8006628 <WM_InvalidateWindow>
 8005aca:	4620      	mov	r0, r4
 8005acc:	f7ff fd1d 	bl	800550a <WM_GetFirstChild>
 8005ad0:	4604      	mov	r4, r0
 8005ad2:	b13c      	cbz	r4, 8005ae4 <WM_InvalidateWindowAndDescs+0x24>
 8005ad4:	4620      	mov	r0, r4
 8005ad6:	f7ff fff3 	bl	8005ac0 <WM_InvalidateWindowAndDescs>
 8005ada:	4620      	mov	r0, r4
 8005adc:	f006 fcea 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005ae0:	6a04      	ldr	r4, [r0, #32]
 8005ae2:	e7f6      	b.n	8005ad2 <WM_InvalidateWindowAndDescs+0x12>
 8005ae4:	bd10      	pop	{r4, pc}

08005ae6 <WM_ShowWindow>:
 8005ae6:	b513      	push	{r0, r1, r4, lr}
 8005ae8:	4604      	mov	r4, r0
 8005aea:	b170      	cbz	r0, 8005b0a <WM_ShowWindow+0x24>
 8005aec:	f006 fcec 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005af0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005af2:	9001      	str	r0, [sp, #4]
 8005af4:	0793      	lsls	r3, r2, #30
 8005af6:	d405      	bmi.n	8005b04 <WM_ShowWindow+0x1e>
 8005af8:	f042 0202 	orr.w	r2, r2, #2
 8005afc:	6282      	str	r2, [r0, #40]	; 0x28
 8005afe:	4620      	mov	r0, r4
 8005b00:	f7ff ffde 	bl	8005ac0 <WM_InvalidateWindowAndDescs>
 8005b04:	a801      	add	r0, sp, #4
 8005b06:	f006 fced 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005b0a:	b002      	add	sp, #8
 8005b0c:	bd10      	pop	{r4, pc}
	...

08005b10 <WM_ValidateWindow>:
 8005b10:	b507      	push	{r0, r1, r2, lr}
 8005b12:	b178      	cbz	r0, 8005b34 <WM_ValidateWindow+0x24>
 8005b14:	f006 fcd8 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005b18:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005b1a:	9001      	str	r0, [sp, #4]
 8005b1c:	069a      	lsls	r2, r3, #26
 8005b1e:	d506      	bpl.n	8005b2e <WM_ValidateWindow+0x1e>
 8005b20:	f023 0320 	bic.w	r3, r3, #32
 8005b24:	6283      	str	r3, [r0, #40]	; 0x28
 8005b26:	4b05      	ldr	r3, [pc, #20]	; (8005b3c <WM_ValidateWindow+0x2c>)
 8005b28:	881a      	ldrh	r2, [r3, #0]
 8005b2a:	3a01      	subs	r2, #1
 8005b2c:	801a      	strh	r2, [r3, #0]
 8005b2e:	a801      	add	r0, sp, #4
 8005b30:	f006 fcd8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005b34:	b003      	add	sp, #12
 8005b36:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b3a:	bf00      	nop
 8005b3c:	20002ca4 	.word	0x20002ca4

08005b40 <WM_HideWindow>:
 8005b40:	b513      	push	{r0, r1, r4, lr}
 8005b42:	b188      	cbz	r0, 8005b68 <WM_HideWindow+0x28>
 8005b44:	f006 fcc0 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005b48:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005b4a:	ac02      	add	r4, sp, #8
 8005b4c:	0791      	lsls	r1, r2, #30
 8005b4e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005b52:	d506      	bpl.n	8005b62 <WM_HideWindow+0x22>
 8005b54:	f022 0202 	bic.w	r2, r2, #2
 8005b58:	6282      	str	r2, [r0, #40]	; 0x28
 8005b5a:	6981      	ldr	r1, [r0, #24]
 8005b5c:	6a02      	ldr	r2, [r0, #32]
 8005b5e:	f000 fd0f 	bl	8006580 <WM__InvalidateRectEx>
 8005b62:	4620      	mov	r0, r4
 8005b64:	f006 fcbe 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005b68:	b002      	add	sp, #8
 8005b6a:	bd10      	pop	{r4, pc}

08005b6c <WM__GetWindowSizeX>:
 8005b6c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8005b70:	f9b0 3000 	ldrsh.w	r3, [r0]
 8005b74:	1ad0      	subs	r0, r2, r3
 8005b76:	3001      	adds	r0, #1
 8005b78:	4770      	bx	lr

08005b7a <WM__GetWindowSizeY>:
 8005b7a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8005b7e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005b82:	1ad0      	subs	r0, r2, r3
 8005b84:	3001      	adds	r0, #1
 8005b86:	4770      	bx	lr

08005b88 <WM_GetWindowSizeX>:
 8005b88:	b513      	push	{r0, r1, r4, lr}
 8005b8a:	b908      	cbnz	r0, 8005b90 <WM_GetWindowSizeX+0x8>
 8005b8c:	f000 fef0 	bl	8006970 <WM_GetActiveWindow>
 8005b90:	f006 fc9a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005b94:	ab02      	add	r3, sp, #8
 8005b96:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005b9a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005b9e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8005ba2:	4618      	mov	r0, r3
 8005ba4:	1aa4      	subs	r4, r4, r2
 8005ba6:	f006 fc9d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005baa:	3401      	adds	r4, #1
 8005bac:	4620      	mov	r0, r4
 8005bae:	b002      	add	sp, #8
 8005bb0:	bd10      	pop	{r4, pc}

08005bb2 <WM_GetWindowSizeY>:
 8005bb2:	b513      	push	{r0, r1, r4, lr}
 8005bb4:	b908      	cbnz	r0, 8005bba <WM_GetWindowSizeY+0x8>
 8005bb6:	f000 fedb 	bl	8006970 <WM_GetActiveWindow>
 8005bba:	f006 fc85 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005bbe:	ab02      	add	r3, sp, #8
 8005bc0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005bc4:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005bc8:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8005bcc:	4618      	mov	r0, r3
 8005bce:	1aa4      	subs	r4, r4, r2
 8005bd0:	f006 fc88 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005bd4:	3401      	adds	r4, #1
 8005bd6:	4620      	mov	r0, r4
 8005bd8:	b002      	add	sp, #8
 8005bda:	bd10      	pop	{r4, pc}

08005bdc <_cbInvalidateOne>:
 8005bdc:	f000 bd24 	b.w	8006628 <WM_InvalidateWindow>

08005be0 <WM_BringToTop>:
 8005be0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005be2:	4605      	mov	r5, r0
 8005be4:	2800      	cmp	r0, #0
 8005be6:	d032      	beq.n	8005c4e <WM_BringToTop+0x6e>
 8005be8:	f006 fc6e 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005bec:	ac02      	add	r4, sp, #8
 8005bee:	4603      	mov	r3, r0
 8005bf0:	f844 0d08 	str.w	r0, [r4, #-8]!
 8005bf4:	6a00      	ldr	r0, [r0, #32]
 8005bf6:	b908      	cbnz	r0, 8005bfc <WM_BringToTop+0x1c>
 8005bf8:	4668      	mov	r0, sp
 8005bfa:	e00e      	b.n	8005c1a <WM_BringToTop+0x3a>
 8005bfc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bfe:	071a      	lsls	r2, r3, #28
 8005c00:	d411      	bmi.n	8005c26 <WM_BringToTop+0x46>
 8005c02:	f006 fc61 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005c06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005c08:	ae02      	add	r6, sp, #8
 8005c0a:	071b      	lsls	r3, r3, #28
 8005c0c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005c10:	d506      	bpl.n	8005c20 <WM_BringToTop+0x40>
 8005c12:	4668      	mov	r0, sp
 8005c14:	f006 fc66 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005c18:	4630      	mov	r0, r6
 8005c1a:	f006 fc63 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005c1e:	e016      	b.n	8005c4e <WM_BringToTop+0x6e>
 8005c20:	4630      	mov	r0, r6
 8005c22:	f006 fc5f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005c26:	9b00      	ldr	r3, [sp, #0]
 8005c28:	4668      	mov	r0, sp
 8005c2a:	699e      	ldr	r6, [r3, #24]
 8005c2c:	f006 fc5a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005c30:	4628      	mov	r0, r5
 8005c32:	f000 fae5 	bl	8006200 <WM__RemoveWindowFromList>
 8005c36:	4631      	mov	r1, r6
 8005c38:	4628      	mov	r0, r5
 8005c3a:	f000 fa8f 	bl	800615c <WM__InsertWindowIntoList>
 8005c3e:	4628      	mov	r0, r5
 8005c40:	f000 fcf2 	bl	8006628 <WM_InvalidateWindow>
 8005c44:	4628      	mov	r0, r5
 8005c46:	4903      	ldr	r1, [pc, #12]	; (8005c54 <WM_BringToTop+0x74>)
 8005c48:	2200      	movs	r2, #0
 8005c4a:	f7ff fc22 	bl	8005492 <WM_ForEachDesc>
 8005c4e:	b002      	add	sp, #8
 8005c50:	bd70      	pop	{r4, r5, r6, pc}
 8005c52:	bf00      	nop
 8005c54:	08005bdd 	.word	0x08005bdd

08005c58 <_OnExit>:
 8005c58:	b538      	push	{r3, r4, r5, lr}
 8005c5a:	4b19      	ldr	r3, [pc, #100]	; (8005cc0 <_OnExit+0x68>)
 8005c5c:	4d19      	ldr	r5, [pc, #100]	; (8005cc4 <_OnExit+0x6c>)
 8005c5e:	4a1a      	ldr	r2, [pc, #104]	; (8005cc8 <_OnExit+0x70>)
 8005c60:	481a      	ldr	r0, [pc, #104]	; (8005ccc <_OnExit+0x74>)
 8005c62:	2400      	movs	r4, #0
 8005c64:	701c      	strb	r4, [r3, #0]
 8005c66:	4b1a      	ldr	r3, [pc, #104]	; (8005cd0 <_OnExit+0x78>)
 8005c68:	6014      	str	r4, [r2, #0]
 8005c6a:	601c      	str	r4, [r3, #0]
 8005c6c:	4b19      	ldr	r3, [pc, #100]	; (8005cd4 <_OnExit+0x7c>)
 8005c6e:	6054      	str	r4, [r2, #4]
 8005c70:	601c      	str	r4, [r3, #0]
 8005c72:	4b19      	ldr	r3, [pc, #100]	; (8005cd8 <_OnExit+0x80>)
 8005c74:	601c      	str	r4, [r3, #0]
 8005c76:	605c      	str	r4, [r3, #4]
 8005c78:	4b18      	ldr	r3, [pc, #96]	; (8005cdc <_OnExit+0x84>)
 8005c7a:	601c      	str	r4, [r3, #0]
 8005c7c:	4b18      	ldr	r3, [pc, #96]	; (8005ce0 <_OnExit+0x88>)
 8005c7e:	601c      	str	r4, [r3, #0]
 8005c80:	4b18      	ldr	r3, [pc, #96]	; (8005ce4 <_OnExit+0x8c>)
 8005c82:	601c      	str	r4, [r3, #0]
 8005c84:	4b18      	ldr	r3, [pc, #96]	; (8005ce8 <_OnExit+0x90>)
 8005c86:	601c      	str	r4, [r3, #0]
 8005c88:	4b18      	ldr	r3, [pc, #96]	; (8005cec <_OnExit+0x94>)
 8005c8a:	4621      	mov	r1, r4
 8005c8c:	601c      	str	r4, [r3, #0]
 8005c8e:	2218      	movs	r2, #24
 8005c90:	682b      	ldr	r3, [r5, #0]
 8005c92:	4798      	blx	r3
 8005c94:	4b16      	ldr	r3, [pc, #88]	; (8005cf0 <_OnExit+0x98>)
 8005c96:	4817      	ldr	r0, [pc, #92]	; (8005cf4 <_OnExit+0x9c>)
 8005c98:	601c      	str	r4, [r3, #0]
 8005c9a:	4b17      	ldr	r3, [pc, #92]	; (8005cf8 <_OnExit+0xa0>)
 8005c9c:	4621      	mov	r1, r4
 8005c9e:	601c      	str	r4, [r3, #0]
 8005ca0:	605c      	str	r4, [r3, #4]
 8005ca2:	2210      	movs	r2, #16
 8005ca4:	682b      	ldr	r3, [r5, #0]
 8005ca6:	4798      	blx	r3
 8005ca8:	682b      	ldr	r3, [r5, #0]
 8005caa:	4814      	ldr	r0, [pc, #80]	; (8005cfc <_OnExit+0xa4>)
 8005cac:	4621      	mov	r1, r4
 8005cae:	2210      	movs	r2, #16
 8005cb0:	4798      	blx	r3
 8005cb2:	682b      	ldr	r3, [r5, #0]
 8005cb4:	4812      	ldr	r0, [pc, #72]	; (8005d00 <_OnExit+0xa8>)
 8005cb6:	4621      	mov	r1, r4
 8005cb8:	2210      	movs	r2, #16
 8005cba:	4798      	blx	r3
 8005cbc:	bd38      	pop	{r3, r4, r5, pc}
 8005cbe:	bf00      	nop
 8005cc0:	20002afc 	.word	0x20002afc
 8005cc4:	200000ac 	.word	0x200000ac
 8005cc8:	20002c9c 	.word	0x20002c9c
 8005ccc:	20002ae0 	.word	0x20002ae0
 8005cd0:	20002adc 	.word	0x20002adc
 8005cd4:	20002cc8 	.word	0x20002cc8
 8005cd8:	20002cd0 	.word	0x20002cd0
 8005cdc:	20002cdc 	.word	0x20002cdc
 8005ce0:	20002c88 	.word	0x20002c88
 8005ce4:	20002cbc 	.word	0x20002cbc
 8005ce8:	20002ccc 	.word	0x20002ccc
 8005cec:	20002af8 	.word	0x20002af8
 8005cf0:	20002c98 	.word	0x20002c98
 8005cf4:	20002e24 	.word	0x20002e24
 8005cf8:	20002c8c 	.word	0x20002c8c
 8005cfc:	20002e14 	.word	0x20002e14
 8005d00:	20002e04 	.word	0x20002e04

08005d04 <_Paint1>:
 8005d04:	b510      	push	{r4, lr}
 8005d06:	4604      	mov	r4, r0
 8005d08:	f006 fbd4 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005d0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005d0e:	4a04      	ldr	r2, [pc, #16]	; (8005d20 <_Paint1+0x1c>)
 8005d10:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8005d14:	4b03      	ldr	r3, [pc, #12]	; (8005d24 <_Paint1+0x20>)
 8005d16:	4620      	mov	r0, r4
 8005d18:	bf08      	it	eq
 8005d1a:	4613      	moveq	r3, r2
 8005d1c:	4798      	blx	r3
 8005d1e:	bd10      	pop	{r4, pc}
 8005d20:	08006c11 	.word	0x08006c11
 8005d24:	0800719d 	.word	0x0800719d

08005d28 <_Findy1>:
 8005d28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d2a:	4605      	mov	r5, r0
 8005d2c:	b085      	sub	sp, #20
 8005d2e:	460c      	mov	r4, r1
 8005d30:	4616      	mov	r6, r2
 8005d32:	2d00      	cmp	r5, #0
 8005d34:	d04c      	beq.n	8005dd0 <_Findy1+0xa8>
 8005d36:	4628      	mov	r0, r5
 8005d38:	f006 fbc6 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005d3c:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8005d3e:	9001      	str	r0, [sp, #4]
 8005d40:	07bb      	lsls	r3, r7, #30
 8005d42:	4601      	mov	r1, r0
 8005d44:	d53d      	bpl.n	8005dc2 <_Findy1+0x9a>
 8005d46:	ad02      	add	r5, sp, #8
 8005d48:	b126      	cbz	r6, 8005d54 <_Findy1+0x2c>
 8005d4a:	4628      	mov	r0, r5
 8005d4c:	4632      	mov	r2, r6
 8005d4e:	f003 ff52 	bl	8009bf6 <GUI__IntersectRects>
 8005d52:	e002      	b.n	8005d5a <_Findy1+0x32>
 8005d54:	c803      	ldmia	r0, {r0, r1}
 8005d56:	e885 0003 	stmia.w	r5, {r0, r1}
 8005d5a:	4620      	mov	r0, r4
 8005d5c:	4629      	mov	r1, r5
 8005d5e:	f005 ff15 	bl	800bb8c <GUI_RectsIntersect>
 8005d62:	b370      	cbz	r0, 8005dc2 <_Findy1+0x9a>
 8005d64:	f017 0f01 	tst.w	r7, #1
 8005d68:	9b01      	ldr	r3, [sp, #4]
 8005d6a:	d11e      	bne.n	8005daa <_Findy1+0x82>
 8005d6c:	b13e      	cbz	r6, 8005d7e <_Findy1+0x56>
 8005d6e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8005d72:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8005d76:	429a      	cmp	r2, r3
 8005d78:	bfa8      	it	ge
 8005d7a:	4613      	movge	r3, r2
 8005d7c:	e001      	b.n	8005d82 <_Findy1+0x5a>
 8005d7e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005d82:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8005d86:	4293      	cmp	r3, r2
 8005d88:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8005d8c:	dd06      	ble.n	8005d9c <_Findy1+0x74>
 8005d8e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8005d92:	b219      	sxth	r1, r3
 8005d94:	428a      	cmp	r2, r1
 8005d96:	db14      	blt.n	8005dc2 <_Findy1+0x9a>
 8005d98:	3b01      	subs	r3, #1
 8005d9a:	e004      	b.n	8005da6 <_Findy1+0x7e>
 8005d9c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8005da0:	b219      	sxth	r1, r3
 8005da2:	428a      	cmp	r2, r1
 8005da4:	dd0d      	ble.n	8005dc2 <_Findy1+0x9a>
 8005da6:	80e3      	strh	r3, [r4, #6]
 8005da8:	e00b      	b.n	8005dc2 <_Findy1+0x9a>
 8005daa:	69df      	ldr	r7, [r3, #28]
 8005dac:	b14f      	cbz	r7, 8005dc2 <_Findy1+0x9a>
 8005dae:	4638      	mov	r0, r7
 8005db0:	4621      	mov	r1, r4
 8005db2:	462a      	mov	r2, r5
 8005db4:	f7ff ffb8 	bl	8005d28 <_Findy1>
 8005db8:	4638      	mov	r0, r7
 8005dba:	f006 fb7b 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005dbe:	6a07      	ldr	r7, [r0, #32]
 8005dc0:	e7f4      	b.n	8005dac <_Findy1+0x84>
 8005dc2:	a804      	add	r0, sp, #16
 8005dc4:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005dc8:	6a1d      	ldr	r5, [r3, #32]
 8005dca:	f006 fb8b 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005dce:	e7b0      	b.n	8005d32 <_Findy1+0xa>
 8005dd0:	b005      	add	sp, #20
 8005dd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005dd4 <_Findx0>:
 8005dd4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005dd8:	4604      	mov	r4, r0
 8005dda:	460f      	mov	r7, r1
 8005ddc:	4690      	mov	r8, r2
 8005dde:	2500      	movs	r5, #0
 8005de0:	2c00      	cmp	r4, #0
 8005de2:	d037      	beq.n	8005e54 <_Findx0+0x80>
 8005de4:	4620      	mov	r0, r4
 8005de6:	f006 fb6f 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005dea:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005dec:	9001      	str	r0, [sp, #4]
 8005dee:	07b2      	lsls	r2, r6, #30
 8005df0:	4601      	mov	r1, r0
 8005df2:	d528      	bpl.n	8005e46 <_Findx0+0x72>
 8005df4:	ac02      	add	r4, sp, #8
 8005df6:	f1b8 0f00 	cmp.w	r8, #0
 8005dfa:	d004      	beq.n	8005e06 <_Findx0+0x32>
 8005dfc:	4620      	mov	r0, r4
 8005dfe:	4642      	mov	r2, r8
 8005e00:	f003 fef9 	bl	8009bf6 <GUI__IntersectRects>
 8005e04:	e002      	b.n	8005e0c <_Findx0+0x38>
 8005e06:	c803      	ldmia	r0, {r0, r1}
 8005e08:	e884 0003 	stmia.w	r4, {r0, r1}
 8005e0c:	4638      	mov	r0, r7
 8005e0e:	4621      	mov	r1, r4
 8005e10:	f005 febc 	bl	800bb8c <GUI_RectsIntersect>
 8005e14:	b1b8      	cbz	r0, 8005e46 <_Findx0+0x72>
 8005e16:	07f3      	lsls	r3, r6, #31
 8005e18:	d405      	bmi.n	8005e26 <_Findx0+0x52>
 8005e1a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8005e1e:	3301      	adds	r3, #1
 8005e20:	803b      	strh	r3, [r7, #0]
 8005e22:	2501      	movs	r5, #1
 8005e24:	e00f      	b.n	8005e46 <_Findx0+0x72>
 8005e26:	9b01      	ldr	r3, [sp, #4]
 8005e28:	69de      	ldr	r6, [r3, #28]
 8005e2a:	b166      	cbz	r6, 8005e46 <_Findx0+0x72>
 8005e2c:	4630      	mov	r0, r6
 8005e2e:	4639      	mov	r1, r7
 8005e30:	4622      	mov	r2, r4
 8005e32:	f7ff ffcf 	bl	8005dd4 <_Findx0>
 8005e36:	2800      	cmp	r0, #0
 8005e38:	4630      	mov	r0, r6
 8005e3a:	bf18      	it	ne
 8005e3c:	2501      	movne	r5, #1
 8005e3e:	f006 fb39 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005e42:	6a06      	ldr	r6, [r0, #32]
 8005e44:	e7f1      	b.n	8005e2a <_Findx0+0x56>
 8005e46:	a804      	add	r0, sp, #16
 8005e48:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005e4c:	6a1c      	ldr	r4, [r3, #32]
 8005e4e:	f006 fb49 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005e52:	e7c5      	b.n	8005de0 <_Findx0+0xc>
 8005e54:	4628      	mov	r0, r5
 8005e56:	b004      	add	sp, #16
 8005e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005e5c <_Findx1>:
 8005e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e5e:	4604      	mov	r4, r0
 8005e60:	b085      	sub	sp, #20
 8005e62:	460e      	mov	r6, r1
 8005e64:	4617      	mov	r7, r2
 8005e66:	2c00      	cmp	r4, #0
 8005e68:	d031      	beq.n	8005ece <_Findx1+0x72>
 8005e6a:	4620      	mov	r0, r4
 8005e6c:	f006 fb2c 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005e70:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8005e72:	9001      	str	r0, [sp, #4]
 8005e74:	07aa      	lsls	r2, r5, #30
 8005e76:	4601      	mov	r1, r0
 8005e78:	d522      	bpl.n	8005ec0 <_Findx1+0x64>
 8005e7a:	ac02      	add	r4, sp, #8
 8005e7c:	b127      	cbz	r7, 8005e88 <_Findx1+0x2c>
 8005e7e:	4620      	mov	r0, r4
 8005e80:	463a      	mov	r2, r7
 8005e82:	f003 feb8 	bl	8009bf6 <GUI__IntersectRects>
 8005e86:	e002      	b.n	8005e8e <_Findx1+0x32>
 8005e88:	c803      	ldmia	r0, {r0, r1}
 8005e8a:	e884 0003 	stmia.w	r4, {r0, r1}
 8005e8e:	4630      	mov	r0, r6
 8005e90:	4621      	mov	r1, r4
 8005e92:	f005 fe7b 	bl	800bb8c <GUI_RectsIntersect>
 8005e96:	b198      	cbz	r0, 8005ec0 <_Findx1+0x64>
 8005e98:	07eb      	lsls	r3, r5, #31
 8005e9a:	d404      	bmi.n	8005ea6 <_Findx1+0x4a>
 8005e9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005ea0:	3b01      	subs	r3, #1
 8005ea2:	80b3      	strh	r3, [r6, #4]
 8005ea4:	e00c      	b.n	8005ec0 <_Findx1+0x64>
 8005ea6:	9b01      	ldr	r3, [sp, #4]
 8005ea8:	69dd      	ldr	r5, [r3, #28]
 8005eaa:	b14d      	cbz	r5, 8005ec0 <_Findx1+0x64>
 8005eac:	4628      	mov	r0, r5
 8005eae:	4631      	mov	r1, r6
 8005eb0:	4622      	mov	r2, r4
 8005eb2:	f7ff ffd3 	bl	8005e5c <_Findx1>
 8005eb6:	4628      	mov	r0, r5
 8005eb8:	f006 fafc 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005ebc:	6a05      	ldr	r5, [r0, #32]
 8005ebe:	e7f4      	b.n	8005eaa <_Findx1+0x4e>
 8005ec0:	a804      	add	r0, sp, #16
 8005ec2:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005ec6:	6a1c      	ldr	r4, [r3, #32]
 8005ec8:	f006 fb0c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005ecc:	e7cb      	b.n	8005e66 <_Findx1+0xa>
 8005ece:	b005      	add	sp, #20
 8005ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08005ed4 <_Paint1Trans>:
 8005ed4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005ed8:	4d21      	ldr	r5, [pc, #132]	; (8005f60 <_Paint1Trans+0x8c>)
 8005eda:	682b      	ldr	r3, [r5, #0]
 8005edc:	4606      	mov	r6, r0
 8005ede:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005ee0:	f006 faf2 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005ee4:	9000      	str	r0, [sp, #0]
 8005ee6:	4630      	mov	r0, r6
 8005ee8:	f006 faee 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005eec:	ac02      	add	r4, sp, #8
 8005eee:	4601      	mov	r1, r0
 8005ef0:	9001      	str	r0, [sp, #4]
 8005ef2:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 8005ef6:	3008      	adds	r0, #8
 8005ef8:	f005 fe48 	bl	800bb8c <GUI_RectsIntersect>
 8005efc:	4607      	mov	r7, r0
 8005efe:	b328      	cbz	r0, 8005f4c <_Paint1Trans+0x78>
 8005f00:	9901      	ldr	r1, [sp, #4]
 8005f02:	9a00      	ldr	r2, [sp, #0]
 8005f04:	682b      	ldr	r3, [r5, #0]
 8005f06:	4c17      	ldr	r4, [pc, #92]	; (8005f64 <_Paint1Trans+0x90>)
 8005f08:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 8005f0a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8005f0e:	f101 0008 	add.w	r0, r1, #8
 8005f12:	3208      	adds	r2, #8
 8005f14:	f003 fe6f 	bl	8009bf6 <GUI__IntersectRects>
 8005f18:	4668      	mov	r0, sp
 8005f1a:	f006 fae3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005f1e:	9a01      	ldr	r2, [sp, #4]
 8005f20:	682b      	ldr	r3, [r5, #0]
 8005f22:	f9b2 1000 	ldrsh.w	r1, [r2]
 8005f26:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8005f2a:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005f2c:	651a      	str	r2, [r3, #80]	; 0x50
 8005f2e:	a801      	add	r0, sp, #4
 8005f30:	6026      	str	r6, [r4, #0]
 8005f32:	f006 fad7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005f36:	4630      	mov	r0, r6
 8005f38:	f7ff fee4 	bl	8005d04 <_Paint1>
 8005f3c:	2300      	movs	r3, #0
 8005f3e:	6023      	str	r3, [r4, #0]
 8005f40:	682b      	ldr	r3, [r5, #0]
 8005f42:	651f      	str	r7, [r3, #80]	; 0x50
 8005f44:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8005f48:	2701      	movs	r7, #1
 8005f4a:	e005      	b.n	8005f58 <_Paint1Trans+0x84>
 8005f4c:	4668      	mov	r0, sp
 8005f4e:	f006 fac9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005f52:	a801      	add	r0, sp, #4
 8005f54:	f006 fac6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005f58:	4638      	mov	r0, r7
 8005f5a:	b002      	add	sp, #8
 8005f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f60:	200000c0 	.word	0x200000c0
 8005f64:	20002c88 	.word	0x20002c88

08005f68 <_PaintTransChildren>:
 8005f68:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005f6c:	4606      	mov	r6, r0
 8005f6e:	f006 faab 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005f72:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005f74:	9001      	str	r0, [sp, #4]
 8005f76:	079b      	lsls	r3, r3, #30
 8005f78:	d405      	bmi.n	8005f86 <_PaintTransChildren+0x1e>
 8005f7a:	a801      	add	r0, sp, #4
 8005f7c:	f006 fab2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005f80:	b002      	add	sp, #8
 8005f82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f86:	69c4      	ldr	r4, [r0, #28]
 8005f88:	2c00      	cmp	r4, #0
 8005f8a:	d0f6      	beq.n	8005f7a <_PaintTransChildren+0x12>
 8005f8c:	4620      	mov	r0, r4
 8005f8e:	f006 fa9b 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005f92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005f94:	ad02      	add	r5, sp, #8
 8005f96:	f003 0303 	and.w	r3, r3, #3
 8005f9a:	2b03      	cmp	r3, #3
 8005f9c:	f845 0d08 	str.w	r0, [r5, #-8]!
 8005fa0:	d137      	bne.n	8006012 <_PaintTransChildren+0xaa>
 8005fa2:	9901      	ldr	r1, [sp, #4]
 8005fa4:	3108      	adds	r1, #8
 8005fa6:	f005 fdf1 	bl	800bb8c <GUI_RectsIntersect>
 8005faa:	2800      	cmp	r0, #0
 8005fac:	d031      	beq.n	8006012 <_PaintTransChildren+0xaa>
 8005fae:	a802      	add	r0, sp, #8
 8005fb0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8005fb4:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 8005fb8:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 8005fbc:	899f      	ldrh	r7, [r3, #12]
 8005fbe:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 8005fc2:	f006 fa8f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005fc6:	4668      	mov	r0, sp
 8005fc8:	f006 fa8c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8005fcc:	4620      	mov	r0, r4
 8005fce:	f7ff ff81 	bl	8005ed4 <_Paint1Trans>
 8005fd2:	b170      	cbz	r0, 8005ff2 <_PaintTransChildren+0x8a>
 8005fd4:	4620      	mov	r0, r4
 8005fd6:	f006 fa6d 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005fda:	9000      	str	r0, [sp, #0]
 8005fdc:	4620      	mov	r0, r4
 8005fde:	f7ff ffc3 	bl	8005f68 <_PaintTransChildren>
 8005fe2:	4620      	mov	r0, r4
 8005fe4:	f006 fa66 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005fe8:	9000      	str	r0, [sp, #0]
 8005fea:	4630      	mov	r0, r6
 8005fec:	f006 fa62 	bl	800c4b4 <GUI_ALLOC_h2p>
 8005ff0:	9001      	str	r0, [sp, #4]
 8005ff2:	4630      	mov	r0, r6
 8005ff4:	f006 fa68 	bl	800c4c8 <GUI_ALLOC_LockH>
 8005ff8:	9001      	str	r0, [sp, #4]
 8005ffa:	4620      	mov	r0, r4
 8005ffc:	f006 fa64 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006000:	9b01      	ldr	r3, [sp, #4]
 8006002:	9000      	str	r0, [sp, #0]
 8006004:	f8a3 9008 	strh.w	r9, [r3, #8]
 8006008:	f8a3 800a 	strh.w	r8, [r3, #10]
 800600c:	819f      	strh	r7, [r3, #12]
 800600e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 8006012:	9b00      	ldr	r3, [sp, #0]
 8006014:	4668      	mov	r0, sp
 8006016:	6a1c      	ldr	r4, [r3, #32]
 8006018:	f006 fa64 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800601c:	e7b4      	b.n	8005f88 <_PaintTransChildren+0x20>
	...

08006020 <WM__PaintWinAndOverlays>:
 8006020:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006022:	4604      	mov	r4, r0
 8006024:	f006 fa50 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006028:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800602a:	9001      	str	r0, [sp, #4]
 800602c:	f640 0301 	movw	r3, #2049	; 0x801
 8006030:	4013      	ands	r3, r2
 8006032:	2b01      	cmp	r3, #1
 8006034:	d005      	beq.n	8006042 <WM__PaintWinAndOverlays+0x22>
 8006036:	a801      	add	r0, sp, #4
 8006038:	f006 fa54 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800603c:	4620      	mov	r0, r4
 800603e:	f7ff fe61 	bl	8005d04 <_Paint1>
 8006042:	4b14      	ldr	r3, [pc, #80]	; (8006094 <WM__PaintWinAndOverlays+0x74>)
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	b313      	cbz	r3, 800608e <WM__PaintWinAndOverlays+0x6e>
 8006048:	4620      	mov	r0, r4
 800604a:	f7ff ff8d 	bl	8005f68 <_PaintTransChildren>
 800604e:	4620      	mov	r0, r4
 8006050:	f006 fa30 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006054:	6985      	ldr	r5, [r0, #24]
 8006056:	6a04      	ldr	r4, [r0, #32]
 8006058:	b1cd      	cbz	r5, 800608e <WM__PaintWinAndOverlays+0x6e>
 800605a:	b194      	cbz	r4, 8006082 <WM__PaintWinAndOverlays+0x62>
 800605c:	4620      	mov	r0, r4
 800605e:	f006 fa29 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006062:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006064:	f003 0303 	and.w	r3, r3, #3
 8006068:	2b03      	cmp	r3, #3
 800606a:	d102      	bne.n	8006072 <WM__PaintWinAndOverlays+0x52>
 800606c:	4620      	mov	r0, r4
 800606e:	f7ff ff31 	bl	8005ed4 <_Paint1Trans>
 8006072:	4620      	mov	r0, r4
 8006074:	f7ff ff78 	bl	8005f68 <_PaintTransChildren>
 8006078:	4620      	mov	r0, r4
 800607a:	f006 fa1b 	bl	800c4b4 <GUI_ALLOC_h2p>
 800607e:	6a04      	ldr	r4, [r0, #32]
 8006080:	e7eb      	b.n	800605a <WM__PaintWinAndOverlays+0x3a>
 8006082:	4628      	mov	r0, r5
 8006084:	f006 fa16 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006088:	6a04      	ldr	r4, [r0, #32]
 800608a:	6985      	ldr	r5, [r0, #24]
 800608c:	e7e4      	b.n	8006058 <WM__PaintWinAndOverlays+0x38>
 800608e:	b003      	add	sp, #12
 8006090:	bd30      	pop	{r4, r5, pc}
 8006092:	bf00      	nop
 8006094:	20002cdc 	.word	0x20002cdc

08006098 <_cbPaintMemDev>:
 8006098:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800609c:	4d17      	ldr	r5, [pc, #92]	; (80060fc <_cbPaintMemDev+0x64>)
 800609e:	682b      	ldr	r3, [r5, #0]
 80060a0:	4606      	mov	r6, r0
 80060a2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80060a4:	f006 fa10 	bl	800c4c8 <GUI_ALLOC_LockH>
 80060a8:	682a      	ldr	r2, [r5, #0]
 80060aa:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 80060ae:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 80060b2:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 80060b6:	89c7      	ldrh	r7, [r0, #14]
 80060b8:	ac02      	add	r4, sp, #8
 80060ba:	3208      	adds	r2, #8
 80060bc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80060c0:	f100 0308 	add.w	r3, r0, #8
 80060c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80060c8:	e883 0003 	stmia.w	r3, {r0, r1}
 80060cc:	4620      	mov	r0, r4
 80060ce:	f006 fa09 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80060d2:	6830      	ldr	r0, [r6, #0]
 80060d4:	f7ff ffa4 	bl	8006020 <WM__PaintWinAndOverlays>
 80060d8:	682b      	ldr	r3, [r5, #0]
 80060da:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80060dc:	f006 f9f4 	bl	800c4c8 <GUI_ALLOC_LockH>
 80060e0:	9001      	str	r0, [sp, #4]
 80060e2:	f8a0 a008 	strh.w	sl, [r0, #8]
 80060e6:	f8a0 900a 	strh.w	r9, [r0, #10]
 80060ea:	f8a0 800c 	strh.w	r8, [r0, #12]
 80060ee:	81c7      	strh	r7, [r0, #14]
 80060f0:	4620      	mov	r0, r4
 80060f2:	f006 f9f7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80060f6:	b002      	add	sp, #8
 80060f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060fc:	200000c0 	.word	0x200000c0

08006100 <WM__ClipAtParentBorders>:
 8006100:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006102:	4607      	mov	r7, r0
 8006104:	460d      	mov	r5, r1
 8006106:	4628      	mov	r0, r5
 8006108:	f006 f9de 	bl	800c4c8 <GUI_ALLOC_LockH>
 800610c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800610e:	ac02      	add	r4, sp, #8
 8006110:	f013 0602 	ands.w	r6, r3, #2
 8006114:	4601      	mov	r1, r0
 8006116:	f844 0d04 	str.w	r0, [r4, #-4]!
 800611a:	d104      	bne.n	8006126 <WM__ClipAtParentBorders+0x26>
 800611c:	4620      	mov	r0, r4
 800611e:	f006 f9e1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006122:	4630      	mov	r0, r6
 8006124:	e016      	b.n	8006154 <WM__ClipAtParentBorders+0x54>
 8006126:	4638      	mov	r0, r7
 8006128:	f003 fd47 	bl	8009bba <GUI__IntersectRect>
 800612c:	9b01      	ldr	r3, [sp, #4]
 800612e:	699e      	ldr	r6, [r3, #24]
 8006130:	4620      	mov	r0, r4
 8006132:	b956      	cbnz	r6, 800614a <WM__ClipAtParentBorders+0x4a>
 8006134:	f006 f9d6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006138:	4b07      	ldr	r3, [pc, #28]	; (8006158 <WM__ClipAtParentBorders+0x58>)
 800613a:	681a      	ldr	r2, [r3, #0]
 800613c:	4295      	cmp	r5, r2
 800613e:	d008      	beq.n	8006152 <WM__ClipAtParentBorders+0x52>
 8006140:	6858      	ldr	r0, [r3, #4]
 8006142:	1a2b      	subs	r3, r5, r0
 8006144:	4258      	negs	r0, r3
 8006146:	4158      	adcs	r0, r3
 8006148:	e004      	b.n	8006154 <WM__ClipAtParentBorders+0x54>
 800614a:	f006 f9cb 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800614e:	4635      	mov	r5, r6
 8006150:	e7d9      	b.n	8006106 <WM__ClipAtParentBorders+0x6>
 8006152:	2001      	movs	r0, #1
 8006154:	b003      	add	sp, #12
 8006156:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006158:	20002c8c 	.word	0x20002c8c

0800615c <WM__InsertWindowIntoList>:
 800615c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800615e:	4604      	mov	r4, r0
 8006160:	b085      	sub	sp, #20
 8006162:	460d      	mov	r5, r1
 8006164:	2900      	cmp	r1, #0
 8006166:	d049      	beq.n	80061fc <WM__InsertWindowIntoList+0xa0>
 8006168:	f006 f9ae 	bl	800c4c8 <GUI_ALLOC_LockH>
 800616c:	2300      	movs	r3, #0
 800616e:	6203      	str	r3, [r0, #32]
 8006170:	6185      	str	r5, [r0, #24]
 8006172:	9001      	str	r0, [sp, #4]
 8006174:	4628      	mov	r0, r5
 8006176:	f006 f9a7 	bl	800c4c8 <GUI_ALLOC_LockH>
 800617a:	9b01      	ldr	r3, [sp, #4]
 800617c:	69c5      	ldr	r5, [r0, #28]
 800617e:	9002      	str	r0, [sp, #8]
 8006180:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 8006182:	b92d      	cbnz	r5, 8006190 <WM__InsertWindowIntoList+0x34>
 8006184:	61c4      	str	r4, [r0, #28]
 8006186:	a801      	add	r0, sp, #4
 8006188:	f006 f9ac 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800618c:	a802      	add	r0, sp, #8
 800618e:	e033      	b.n	80061f8 <WM__InsertWindowIntoList+0x9c>
 8006190:	4628      	mov	r0, r5
 8006192:	f006 f999 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006196:	ae04      	add	r6, sp, #16
 8006198:	f007 0708 	and.w	r7, r7, #8
 800619c:	f846 0d04 	str.w	r0, [r6, #-4]!
 80061a0:	b977      	cbnz	r7, 80061c0 <WM__InsertWindowIntoList+0x64>
 80061a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80061a4:	071a      	lsls	r2, r3, #28
 80061a6:	d50b      	bpl.n	80061c0 <WM__InsertWindowIntoList+0x64>
 80061a8:	9b01      	ldr	r3, [sp, #4]
 80061aa:	621d      	str	r5, [r3, #32]
 80061ac:	9b02      	ldr	r3, [sp, #8]
 80061ae:	a801      	add	r0, sp, #4
 80061b0:	61dc      	str	r4, [r3, #28]
 80061b2:	f006 f997 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80061b6:	a802      	add	r0, sp, #8
 80061b8:	f006 f994 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80061bc:	4630      	mov	r0, r6
 80061be:	e01b      	b.n	80061f8 <WM__InsertWindowIntoList+0x9c>
 80061c0:	a802      	add	r0, sp, #8
 80061c2:	f006 f98f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80061c6:	4630      	mov	r0, r6
 80061c8:	f006 f98c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80061cc:	4628      	mov	r0, r5
 80061ce:	f006 f971 	bl	800c4b4 <GUI_ALLOC_h2p>
 80061d2:	9003      	str	r0, [sp, #12]
 80061d4:	9b03      	ldr	r3, [sp, #12]
 80061d6:	6a1d      	ldr	r5, [r3, #32]
 80061d8:	b90d      	cbnz	r5, 80061de <WM__InsertWindowIntoList+0x82>
 80061da:	621c      	str	r4, [r3, #32]
 80061dc:	e00b      	b.n	80061f6 <WM__InsertWindowIntoList+0x9a>
 80061de:	4628      	mov	r0, r5
 80061e0:	f006 f968 	bl	800c4b4 <GUI_ALLOC_h2p>
 80061e4:	2f00      	cmp	r7, #0
 80061e6:	d1f4      	bne.n	80061d2 <WM__InsertWindowIntoList+0x76>
 80061e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80061ea:	071b      	lsls	r3, r3, #28
 80061ec:	d5f1      	bpl.n	80061d2 <WM__InsertWindowIntoList+0x76>
 80061ee:	9b03      	ldr	r3, [sp, #12]
 80061f0:	621c      	str	r4, [r3, #32]
 80061f2:	9b01      	ldr	r3, [sp, #4]
 80061f4:	621d      	str	r5, [r3, #32]
 80061f6:	a801      	add	r0, sp, #4
 80061f8:	f006 f974 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80061fc:	b005      	add	sp, #20
 80061fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006200 <WM__RemoveWindowFromList>:
 8006200:	b570      	push	{r4, r5, r6, lr}
 8006202:	4604      	mov	r4, r0
 8006204:	f006 f956 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006208:	4605      	mov	r5, r0
 800620a:	6980      	ldr	r0, [r0, #24]
 800620c:	b1a8      	cbz	r0, 800623a <WM__RemoveWindowFromList+0x3a>
 800620e:	f006 f951 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006212:	69c3      	ldr	r3, [r0, #28]
 8006214:	42a3      	cmp	r3, r4
 8006216:	4606      	mov	r6, r0
 8006218:	d105      	bne.n	8006226 <WM__RemoveWindowFromList+0x26>
 800621a:	4618      	mov	r0, r3
 800621c:	f006 f94a 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006220:	6a03      	ldr	r3, [r0, #32]
 8006222:	61f3      	str	r3, [r6, #28]
 8006224:	bd70      	pop	{r4, r5, r6, pc}
 8006226:	b143      	cbz	r3, 800623a <WM__RemoveWindowFromList+0x3a>
 8006228:	4618      	mov	r0, r3
 800622a:	f006 f943 	bl	800c4b4 <GUI_ALLOC_h2p>
 800622e:	6a03      	ldr	r3, [r0, #32]
 8006230:	42a3      	cmp	r3, r4
 8006232:	d1f8      	bne.n	8006226 <WM__RemoveWindowFromList+0x26>
 8006234:	6a2b      	ldr	r3, [r5, #32]
 8006236:	6203      	str	r3, [r0, #32]
 8006238:	bd70      	pop	{r4, r5, r6, pc}
 800623a:	bd70      	pop	{r4, r5, r6, pc}

0800623c <WM__Client2Screen>:
 800623c:	4603      	mov	r3, r0
 800623e:	4608      	mov	r0, r1
 8006240:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8006244:	f9b3 1000 	ldrsh.w	r1, [r3]
 8006248:	f005 bc55 	b.w	800baf6 <GUI_MoveRect>

0800624c <_SetClipRectUserIntersect>:
 800624c:	4b11      	ldr	r3, [pc, #68]	; (8006294 <_SetClipRectUserIntersect+0x48>)
 800624e:	b530      	push	{r4, r5, lr}
 8006250:	681c      	ldr	r4, [r3, #0]
 8006252:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8006254:	b085      	sub	sp, #20
 8006256:	4605      	mov	r5, r0
 8006258:	b1ba      	cbz	r2, 800628a <_SetClipRectUserIntersect+0x3e>
 800625a:	6810      	ldr	r0, [r2, #0]
 800625c:	6851      	ldr	r1, [r2, #4]
 800625e:	ab02      	add	r3, sp, #8
 8006260:	c303      	stmia	r3!, {r0, r1}
 8006262:	4b0d      	ldr	r3, [pc, #52]	; (8006298 <_SetClipRectUserIntersect+0x4c>)
 8006264:	6818      	ldr	r0, [r3, #0]
 8006266:	b900      	cbnz	r0, 800626a <_SetClipRectUserIntersect+0x1e>
 8006268:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800626a:	f006 f92d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800626e:	ac04      	add	r4, sp, #16
 8006270:	a902      	add	r1, sp, #8
 8006272:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8006276:	f7ff ffe1 	bl	800623c <WM__Client2Screen>
 800627a:	4620      	mov	r0, r4
 800627c:	f006 f932 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006280:	a802      	add	r0, sp, #8
 8006282:	4629      	mov	r1, r5
 8006284:	f003 fc99 	bl	8009bba <GUI__IntersectRect>
 8006288:	a802      	add	r0, sp, #8
 800628a:	f002 ffb1 	bl	80091f0 <LCD_SetClipRectEx>
 800628e:	b005      	add	sp, #20
 8006290:	bd30      	pop	{r4, r5, pc}
 8006292:	bf00      	nop
 8006294:	200000c0 	.word	0x200000c0
 8006298:	20002c88 	.word	0x20002c88

0800629c <WM__ActivateClipRect>:
 800629c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800629e:	4b0e      	ldr	r3, [pc, #56]	; (80062d8 <WM__ActivateClipRect+0x3c>)
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 80062a6:	b10a      	cbz	r2, 80062ac <WM__ActivateClipRect+0x10>
 80062a8:	480c      	ldr	r0, [pc, #48]	; (80062dc <WM__ActivateClipRect+0x40>)
 80062aa:	e011      	b.n	80062d0 <WM__ActivateClipRect+0x34>
 80062ac:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80062ae:	f006 f90b 	bl	800c4c8 <GUI_ALLOC_LockH>
 80062b2:	9001      	str	r0, [sp, #4]
 80062b4:	c803      	ldmia	r0, {r0, r1}
 80062b6:	ac02      	add	r4, sp, #8
 80062b8:	e884 0003 	stmia.w	r4, {r0, r1}
 80062bc:	a801      	add	r0, sp, #4
 80062be:	f006 f911 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80062c2:	4b07      	ldr	r3, [pc, #28]	; (80062e0 <WM__ActivateClipRect+0x44>)
 80062c4:	6819      	ldr	r1, [r3, #0]
 80062c6:	b111      	cbz	r1, 80062ce <WM__ActivateClipRect+0x32>
 80062c8:	4620      	mov	r0, r4
 80062ca:	f7ff ff19 	bl	8006100 <WM__ClipAtParentBorders>
 80062ce:	4620      	mov	r0, r4
 80062d0:	f7ff ffbc 	bl	800624c <_SetClipRectUserIntersect>
 80062d4:	b004      	add	sp, #16
 80062d6:	bd10      	pop	{r4, pc}
 80062d8:	200000c0 	.word	0x200000c0
 80062dc:	20002ae8 	.word	0x20002ae8
 80062e0:	20002c88 	.word	0x20002c88

080062e4 <WM__IsWindow>:
 80062e4:	4b06      	ldr	r3, [pc, #24]	; (8006300 <WM__IsWindow+0x1c>)
 80062e6:	b510      	push	{r4, lr}
 80062e8:	4604      	mov	r4, r0
 80062ea:	6818      	ldr	r0, [r3, #0]
 80062ec:	b128      	cbz	r0, 80062fa <WM__IsWindow+0x16>
 80062ee:	42a0      	cmp	r0, r4
 80062f0:	d004      	beq.n	80062fc <WM__IsWindow+0x18>
 80062f2:	f006 f8df 	bl	800c4b4 <GUI_ALLOC_h2p>
 80062f6:	6940      	ldr	r0, [r0, #20]
 80062f8:	e7f8      	b.n	80062ec <WM__IsWindow+0x8>
 80062fa:	bd10      	pop	{r4, pc}
 80062fc:	2001      	movs	r0, #1
 80062fe:	bd10      	pop	{r4, pc}
 8006300:	20002ca8 	.word	0x20002ca8

08006304 <WM__InvalidateDrawAndDescs>:
 8006304:	b513      	push	{r0, r1, r4, lr}
 8006306:	4604      	mov	r4, r0
 8006308:	b300      	cbz	r0, 800634c <WM__InvalidateDrawAndDescs+0x48>
 800630a:	f006 f8dd 	bl	800c4c8 <GUI_ALLOC_LockH>
 800630e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006310:	9001      	str	r0, [sp, #4]
 8006312:	0793      	lsls	r3, r2, #30
 8006314:	d517      	bpl.n	8006346 <WM__InvalidateDrawAndDescs+0x42>
 8006316:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8006318:	b140      	cbz	r0, 800632c <WM__InvalidateDrawAndDescs+0x28>
 800631a:	4b0d      	ldr	r3, [pc, #52]	; (8006350 <WM__InvalidateDrawAndDescs+0x4c>)
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	42a3      	cmp	r3, r4
 8006320:	d004      	beq.n	800632c <WM__InvalidateDrawAndDescs+0x28>
 8006322:	f001 fe07 	bl	8007f34 <GUI_MEMDEV_Delete>
 8006326:	9b01      	ldr	r3, [sp, #4]
 8006328:	2200      	movs	r2, #0
 800632a:	625a      	str	r2, [r3, #36]	; 0x24
 800632c:	4620      	mov	r0, r4
 800632e:	f7ff f8ec 	bl	800550a <WM_GetFirstChild>
 8006332:	4604      	mov	r4, r0
 8006334:	b13c      	cbz	r4, 8006346 <WM__InvalidateDrawAndDescs+0x42>
 8006336:	4620      	mov	r0, r4
 8006338:	f7ff ffe4 	bl	8006304 <WM__InvalidateDrawAndDescs>
 800633c:	4620      	mov	r0, r4
 800633e:	f006 f8b9 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006342:	6a04      	ldr	r4, [r0, #32]
 8006344:	e7f6      	b.n	8006334 <WM__InvalidateDrawAndDescs+0x30>
 8006346:	a801      	add	r0, sp, #4
 8006348:	f006 f8cc 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800634c:	b002      	add	sp, #8
 800634e:	bd10      	pop	{r4, pc}
 8006350:	20002cd8 	.word	0x20002cd8

08006354 <WM__RectIsNZ>:
 8006354:	f9b0 2000 	ldrsh.w	r2, [r0]
 8006358:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800635c:	429a      	cmp	r2, r3
 800635e:	dc08      	bgt.n	8006372 <WM__RectIsNZ+0x1e>
 8006360:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8006364:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8006368:	429a      	cmp	r2, r3
 800636a:	bfcc      	ite	gt
 800636c:	2000      	movgt	r0, #0
 800636e:	2001      	movle	r0, #1
 8006370:	4770      	bx	lr
 8006372:	2000      	movs	r0, #0
 8006374:	4770      	bx	lr

08006376 <WM_SendMessage>:
 8006376:	b108      	cbz	r0, 800637c <WM_SendMessage+0x6>
 8006378:	f7fe bde2 	b.w	8004f40 <WM__SendMessage>
 800637c:	4770      	bx	lr

0800637e <WM__SendMsgNoData>:
 800637e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006380:	ab04      	add	r3, sp, #16
 8006382:	9001      	str	r0, [sp, #4]
 8006384:	f843 1d10 	str.w	r1, [r3, #-16]!
 8006388:	4669      	mov	r1, sp
 800638a:	f7fe fdd9 	bl	8004f40 <WM__SendMessage>
 800638e:	b005      	add	sp, #20
 8006390:	f85d fb04 	ldr.w	pc, [sp], #4

08006394 <WM__GetClientRectWin>:
 8006394:	2300      	movs	r3, #0
 8006396:	800b      	strh	r3, [r1, #0]
 8006398:	8882      	ldrh	r2, [r0, #4]
 800639a:	804b      	strh	r3, [r1, #2]
 800639c:	8803      	ldrh	r3, [r0, #0]
 800639e:	1ad3      	subs	r3, r2, r3
 80063a0:	808b      	strh	r3, [r1, #4]
 80063a2:	88c2      	ldrh	r2, [r0, #6]
 80063a4:	8843      	ldrh	r3, [r0, #2]
 80063a6:	1ad3      	subs	r3, r2, r3
 80063a8:	80cb      	strh	r3, [r1, #6]
 80063aa:	4770      	bx	lr

080063ac <WM__GetTopLevelLayer>:
 80063ac:	b510      	push	{r4, lr}
 80063ae:	4604      	mov	r4, r0
 80063b0:	f006 f880 	bl	800c4b4 <GUI_ALLOC_h2p>
 80063b4:	6980      	ldr	r0, [r0, #24]
 80063b6:	2800      	cmp	r0, #0
 80063b8:	d1f9      	bne.n	80063ae <WM__GetTopLevelLayer+0x2>
 80063ba:	4b05      	ldr	r3, [pc, #20]	; (80063d0 <WM__GetTopLevelLayer+0x24>)
 80063bc:	681a      	ldr	r2, [r3, #0]
 80063be:	4294      	cmp	r4, r2
 80063c0:	d005      	beq.n	80063ce <WM__GetTopLevelLayer+0x22>
 80063c2:	6858      	ldr	r0, [r3, #4]
 80063c4:	4284      	cmp	r4, r0
 80063c6:	bf14      	ite	ne
 80063c8:	f04f 30ff 	movne.w	r0, #4294967295
 80063cc:	2001      	moveq	r0, #1
 80063ce:	bd10      	pop	{r4, pc}
 80063d0:	20002c8c 	.word	0x20002c8c

080063d4 <_Invalidate1Abs>:
 80063d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80063d6:	b085      	sub	sp, #20
 80063d8:	4606      	mov	r6, r0
 80063da:	460d      	mov	r5, r1
 80063dc:	4617      	mov	r7, r2
 80063de:	f006 f869 	bl	800c4b4 <GUI_ALLOC_h2p>
 80063e2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80063e4:	9001      	str	r0, [sp, #4]
 80063e6:	07a3      	lsls	r3, r4, #30
 80063e8:	d53e      	bpl.n	8006468 <_Invalidate1Abs+0x94>
 80063ea:	4628      	mov	r0, r5
 80063ec:	f7ff ffb2 	bl	8006354 <WM__RectIsNZ>
 80063f0:	2800      	cmp	r0, #0
 80063f2:	d039      	beq.n	8006468 <_Invalidate1Abs+0x94>
 80063f4:	f640 0301 	movw	r3, #2049	; 0x801
 80063f8:	4023      	ands	r3, r4
 80063fa:	2b01      	cmp	r3, #1
 80063fc:	d034      	beq.n	8006468 <_Invalidate1Abs+0x94>
 80063fe:	4630      	mov	r0, r6
 8006400:	f006 f862 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006404:	ac02      	add	r4, sp, #8
 8006406:	4602      	mov	r2, r0
 8006408:	9001      	str	r0, [sp, #4]
 800640a:	4629      	mov	r1, r5
 800640c:	4620      	mov	r0, r4
 800640e:	f003 fbf2 	bl	8009bf6 <GUI__IntersectRects>
 8006412:	4620      	mov	r0, r4
 8006414:	f7ff ff9e 	bl	8006354 <WM__RectIsNZ>
 8006418:	b318      	cbz	r0, 8006462 <_Invalidate1Abs+0x8e>
 800641a:	9b01      	ldr	r3, [sp, #4]
 800641c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800641e:	f244 0120 	movw	r1, #16416	; 0x4020
 8006422:	4011      	ands	r1, r2
 8006424:	f103 0508 	add.w	r5, r3, #8
 8006428:	b129      	cbz	r1, 8006436 <_Invalidate1Abs+0x62>
 800642a:	4628      	mov	r0, r5
 800642c:	4629      	mov	r1, r5
 800642e:	4622      	mov	r2, r4
 8006430:	f005 fb36 	bl	800baa0 <GUI_MergeRect>
 8006434:	e015      	b.n	8006462 <_Invalidate1Abs+0x8e>
 8006436:	e894 0003 	ldmia.w	r4, {r0, r1}
 800643a:	4317      	orrs	r7, r2
 800643c:	e885 0003 	stmia.w	r5, {r0, r1}
 8006440:	629f      	str	r7, [r3, #40]	; 0x28
 8006442:	4b0a      	ldr	r3, [pc, #40]	; (800646c <_Invalidate1Abs+0x98>)
 8006444:	881a      	ldrh	r2, [r3, #0]
 8006446:	4630      	mov	r0, r6
 8006448:	3201      	adds	r2, #1
 800644a:	801a      	strh	r2, [r3, #0]
 800644c:	f7ff ffae 	bl	80063ac <WM__GetTopLevelLayer>
 8006450:	4b07      	ldr	r3, [pc, #28]	; (8006470 <_Invalidate1Abs+0x9c>)
 8006452:	2201      	movs	r2, #1
 8006454:	fa02 f000 	lsl.w	r0, r2, r0
 8006458:	681a      	ldr	r2, [r3, #0]
 800645a:	4302      	orrs	r2, r0
 800645c:	601a      	str	r2, [r3, #0]
 800645e:	f003 fee3 	bl	800a228 <GUI_SignalEvent>
 8006462:	a801      	add	r0, sp, #4
 8006464:	f006 f83e 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006468:	b005      	add	sp, #20
 800646a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800646c:	20002ca4 	.word	0x20002ca4
 8006470:	20002cb4 	.word	0x20002cb4

08006474 <WM__Invalidate1Abs>:
 8006474:	2220      	movs	r2, #32
 8006476:	f7ff bfad 	b.w	80063d4 <_Invalidate1Abs>

0800647a <WM_InvalidateWindowAndDescsEx>:
 800647a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800647c:	460f      	mov	r7, r1
 800647e:	b085      	sub	sp, #20
 8006480:	4615      	mov	r5, r2
 8006482:	4606      	mov	r6, r0
 8006484:	b348      	cbz	r0, 80064da <WM_InvalidateWindowAndDescsEx+0x60>
 8006486:	f006 f81f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800648a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800648c:	ac04      	add	r4, sp, #16
 800648e:	079b      	lsls	r3, r3, #30
 8006490:	4602      	mov	r2, r0
 8006492:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8006496:	d403      	bmi.n	80064a0 <WM_InvalidateWindowAndDescsEx+0x26>
 8006498:	4620      	mov	r0, r4
 800649a:	f006 f823 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800649e:	e01c      	b.n	80064da <WM_InvalidateWindowAndDescsEx+0x60>
 80064a0:	a802      	add	r0, sp, #8
 80064a2:	4639      	mov	r1, r7
 80064a4:	f003 fba7 	bl	8009bf6 <GUI__IntersectRects>
 80064a8:	2800      	cmp	r0, #0
 80064aa:	d0f5      	beq.n	8006498 <WM_InvalidateWindowAndDescsEx+0x1e>
 80064ac:	4620      	mov	r0, r4
 80064ae:	f006 f819 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80064b2:	4630      	mov	r0, r6
 80064b4:	a902      	add	r1, sp, #8
 80064b6:	462a      	mov	r2, r5
 80064b8:	f7ff ff8c 	bl	80063d4 <_Invalidate1Abs>
 80064bc:	4630      	mov	r0, r6
 80064be:	f7ff f824 	bl	800550a <WM_GetFirstChild>
 80064c2:	4604      	mov	r4, r0
 80064c4:	b14c      	cbz	r4, 80064da <WM_InvalidateWindowAndDescsEx+0x60>
 80064c6:	4620      	mov	r0, r4
 80064c8:	a902      	add	r1, sp, #8
 80064ca:	462a      	mov	r2, r5
 80064cc:	f7ff ffd5 	bl	800647a <WM_InvalidateWindowAndDescsEx>
 80064d0:	4620      	mov	r0, r4
 80064d2:	f005 ffef 	bl	800c4b4 <GUI_ALLOC_h2p>
 80064d6:	6a04      	ldr	r4, [r0, #32]
 80064d8:	e7f4      	b.n	80064c4 <WM_InvalidateWindowAndDescsEx+0x4a>
 80064da:	b005      	add	sp, #20
 80064dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080064de <WM__InvalidateRect>:
 80064de:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80064e2:	4680      	mov	r8, r0
 80064e4:	4617      	mov	r7, r2
 80064e6:	461d      	mov	r5, r3
 80064e8:	460c      	mov	r4, r1
 80064ea:	2900      	cmp	r1, #0
 80064ec:	d030      	beq.n	8006550 <WM__InvalidateRect+0x72>
 80064ee:	4608      	mov	r0, r1
 80064f0:	f005 ffea 	bl	800c4c8 <GUI_ALLOC_LockH>
 80064f4:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80064f6:	9001      	str	r0, [sp, #4]
 80064f8:	07b3      	lsls	r3, r6, #30
 80064fa:	4602      	mov	r2, r0
 80064fc:	d525      	bpl.n	800654a <WM__InvalidateRect+0x6c>
 80064fe:	a802      	add	r0, sp, #8
 8006500:	4641      	mov	r1, r8
 8006502:	f003 fb78 	bl	8009bf6 <GUI__IntersectRects>
 8006506:	b300      	cbz	r0, 800654a <WM__InvalidateRect+0x6c>
 8006508:	f640 0301 	movw	r3, #2049	; 0x801
 800650c:	4033      	ands	r3, r6
 800650e:	2b01      	cmp	r3, #1
 8006510:	d107      	bne.n	8006522 <WM__InvalidateRect+0x44>
 8006512:	9b01      	ldr	r3, [sp, #4]
 8006514:	a802      	add	r0, sp, #8
 8006516:	6999      	ldr	r1, [r3, #24]
 8006518:	6a1a      	ldr	r2, [r3, #32]
 800651a:	462b      	mov	r3, r5
 800651c:	f7ff ffdf 	bl	80064de <WM__InvalidateRect>
 8006520:	e004      	b.n	800652c <WM__InvalidateRect+0x4e>
 8006522:	4620      	mov	r0, r4
 8006524:	a902      	add	r1, sp, #8
 8006526:	462a      	mov	r2, r5
 8006528:	f7ff ff54 	bl	80063d4 <_Invalidate1Abs>
 800652c:	9b01      	ldr	r3, [sp, #4]
 800652e:	69dc      	ldr	r4, [r3, #28]
 8006530:	b15c      	cbz	r4, 800654a <WM__InvalidateRect+0x6c>
 8006532:	42bc      	cmp	r4, r7
 8006534:	d009      	beq.n	800654a <WM__InvalidateRect+0x6c>
 8006536:	4620      	mov	r0, r4
 8006538:	a902      	add	r1, sp, #8
 800653a:	462a      	mov	r2, r5
 800653c:	f7ff ff9d 	bl	800647a <WM_InvalidateWindowAndDescsEx>
 8006540:	4620      	mov	r0, r4
 8006542:	f005 ffb7 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006546:	6a04      	ldr	r4, [r0, #32]
 8006548:	e7f2      	b.n	8006530 <WM__InvalidateRect+0x52>
 800654a:	a801      	add	r0, sp, #4
 800654c:	f005 ffca 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006550:	b004      	add	sp, #16
 8006552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006556 <WM__InvalidateParent>:
 8006556:	b570      	push	{r4, r5, r6, lr}
 8006558:	4605      	mov	r5, r0
 800655a:	4608      	mov	r0, r1
 800655c:	460c      	mov	r4, r1
 800655e:	4616      	mov	r6, r2
 8006560:	f005 ffa8 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006564:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006566:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800656a:	4628      	mov	r0, r5
 800656c:	4621      	mov	r1, r4
 800656e:	4632      	mov	r2, r6
 8006570:	bf0c      	ite	eq
 8006572:	2320      	moveq	r3, #32
 8006574:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8006578:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800657c:	f7ff bfaf 	b.w	80064de <WM__InvalidateRect>

08006580 <WM__InvalidateRectEx>:
 8006580:	2320      	movs	r3, #32
 8006582:	f7ff bfac 	b.w	80064de <WM__InvalidateRect>

08006586 <WM__DetachWindow>:
 8006586:	b513      	push	{r0, r1, r4, lr}
 8006588:	4604      	mov	r4, r0
 800658a:	f005 ff9d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800658e:	6981      	ldr	r1, [r0, #24]
 8006590:	9001      	str	r0, [sp, #4]
 8006592:	b141      	cbz	r1, 80065a6 <WM__DetachWindow+0x20>
 8006594:	6a02      	ldr	r2, [r0, #32]
 8006596:	f7ff fff3 	bl	8006580 <WM__InvalidateRectEx>
 800659a:	4620      	mov	r0, r4
 800659c:	f7ff fe30 	bl	8006200 <WM__RemoveWindowFromList>
 80065a0:	9b01      	ldr	r3, [sp, #4]
 80065a2:	2200      	movs	r2, #0
 80065a4:	619a      	str	r2, [r3, #24]
 80065a6:	a801      	add	r0, sp, #4
 80065a8:	f005 ff9c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80065ac:	b002      	add	sp, #8
 80065ae:	bd10      	pop	{r4, pc}

080065b0 <WM_InvalidateRect>:
 80065b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065b2:	460f      	mov	r7, r1
 80065b4:	b087      	sub	sp, #28
 80065b6:	4605      	mov	r5, r0
 80065b8:	2800      	cmp	r0, #0
 80065ba:	d033      	beq.n	8006624 <WM_InvalidateRect+0x74>
 80065bc:	f005 ff84 	bl	800c4c8 <GUI_ALLOC_LockH>
 80065c0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80065c2:	9001      	str	r0, [sp, #4]
 80065c4:	07b2      	lsls	r2, r6, #30
 80065c6:	d52a      	bpl.n	800661e <WM_InvalidateRect+0x6e>
 80065c8:	c803      	ldmia	r0, {r0, r1}
 80065ca:	ac04      	add	r4, sp, #16
 80065cc:	03f3      	lsls	r3, r6, #15
 80065ce:	e884 0003 	stmia.w	r4, {r0, r1}
 80065d2:	d502      	bpl.n	80065da <WM_InvalidateRect+0x2a>
 80065d4:	4628      	mov	r0, r5
 80065d6:	f7ff fe95 	bl	8006304 <WM__InvalidateDrawAndDescs>
 80065da:	b15f      	cbz	r7, 80065f4 <WM_InvalidateRect+0x44>
 80065dc:	6838      	ldr	r0, [r7, #0]
 80065de:	6879      	ldr	r1, [r7, #4]
 80065e0:	ab02      	add	r3, sp, #8
 80065e2:	c303      	stmia	r3!, {r0, r1}
 80065e4:	9801      	ldr	r0, [sp, #4]
 80065e6:	a902      	add	r1, sp, #8
 80065e8:	f7ff fe28 	bl	800623c <WM__Client2Screen>
 80065ec:	4620      	mov	r0, r4
 80065ee:	a902      	add	r1, sp, #8
 80065f0:	f003 fae3 	bl	8009bba <GUI__IntersectRect>
 80065f4:	4620      	mov	r0, r4
 80065f6:	4629      	mov	r1, r5
 80065f8:	f7ff fd82 	bl	8006100 <WM__ClipAtParentBorders>
 80065fc:	b178      	cbz	r0, 800661e <WM_InvalidateRect+0x6e>
 80065fe:	f640 0301 	movw	r3, #2049	; 0x801
 8006602:	4033      	ands	r3, r6
 8006604:	2b01      	cmp	r3, #1
 8006606:	d106      	bne.n	8006616 <WM_InvalidateRect+0x66>
 8006608:	9b01      	ldr	r3, [sp, #4]
 800660a:	4620      	mov	r0, r4
 800660c:	6999      	ldr	r1, [r3, #24]
 800660e:	6a1a      	ldr	r2, [r3, #32]
 8006610:	f7ff ffb6 	bl	8006580 <WM__InvalidateRectEx>
 8006614:	e003      	b.n	800661e <WM_InvalidateRect+0x6e>
 8006616:	4628      	mov	r0, r5
 8006618:	4621      	mov	r1, r4
 800661a:	f7ff ff2b 	bl	8006474 <WM__Invalidate1Abs>
 800661e:	a801      	add	r0, sp, #4
 8006620:	f005 ff60 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006624:	b007      	add	sp, #28
 8006626:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006628 <WM_InvalidateWindow>:
 8006628:	2100      	movs	r1, #0
 800662a:	f7ff bfc1 	b.w	80065b0 <WM_InvalidateRect>

0800662e <WM__SelectTopLevelLayer>:
 800662e:	b508      	push	{r3, lr}
 8006630:	f7ff febc 	bl	80063ac <WM__GetTopLevelLayer>
 8006634:	2800      	cmp	r0, #0
 8006636:	db03      	blt.n	8006640 <WM__SelectTopLevelLayer+0x12>
 8006638:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800663c:	f004 b926 	b.w	800a88c <GUI_SelectLayer>
 8006640:	bd08      	pop	{r3, pc}
	...

08006644 <WM_SelectWindow>:
 8006644:	4a0d      	ldr	r2, [pc, #52]	; (800667c <WM_SelectWindow+0x38>)
 8006646:	6813      	ldr	r3, [r2, #0]
 8006648:	b570      	push	{r4, r5, r6, lr}
 800664a:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800664c:	4604      	mov	r4, r0
 800664e:	4616      	mov	r6, r2
 8006650:	b908      	cbnz	r0, 8006656 <WM_SelectWindow+0x12>
 8006652:	4a0b      	ldr	r2, [pc, #44]	; (8006680 <WM_SelectWindow+0x3c>)
 8006654:	6814      	ldr	r4, [r2, #0]
 8006656:	649c      	str	r4, [r3, #72]	; 0x48
 8006658:	4620      	mov	r0, r4
 800665a:	f7ff ffe8 	bl	800662e <WM__SelectTopLevelLayer>
 800665e:	f003 f9bf 	bl	80099e0 <LCD_SetClipRectMax>
 8006662:	4620      	mov	r0, r4
 8006664:	f005 ff26 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006668:	6833      	ldr	r3, [r6, #0]
 800666a:	f9b0 1000 	ldrsh.w	r1, [r0]
 800666e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8006672:	64d9      	str	r1, [r3, #76]	; 0x4c
 8006674:	651a      	str	r2, [r3, #80]	; 0x50
 8006676:	4628      	mov	r0, r5
 8006678:	bd70      	pop	{r4, r5, r6, pc}
 800667a:	bf00      	nop
 800667c:	200000c0 	.word	0x200000c0
 8006680:	20002ca8 	.word	0x20002ca8

08006684 <WM_CreateWindowAsChild>:
 8006684:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006688:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800668a:	469b      	mov	fp, r3
 800668c:	4b4b      	ldr	r3, [pc, #300]	; (80067bc <WM_CreateWindowAsChild+0x138>)
 800668e:	4607      	mov	r7, r0
 8006690:	4688      	mov	r8, r1
 8006692:	4692      	mov	sl, r2
 8006694:	681e      	ldr	r6, [r3, #0]
 8006696:	bb65      	cbnz	r5, 80066f2 <WM_CreateWindowAsChild+0x6e>
 8006698:	4b49      	ldr	r3, [pc, #292]	; (80067c0 <WM_CreateWindowAsChild+0x13c>)
 800669a:	881b      	ldrh	r3, [r3, #0]
 800669c:	b363      	cbz	r3, 80066f8 <WM_CreateWindowAsChild+0x74>
 800669e:	4b49      	ldr	r3, [pc, #292]	; (80067c4 <WM_CreateWindowAsChild+0x140>)
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	7c5a      	ldrb	r2, [r3, #17]
 80066a4:	4b48      	ldr	r3, [pc, #288]	; (80067c8 <WM_CreateWindowAsChild+0x144>)
 80066a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80066aa:	1c5a      	adds	r2, r3, #1
 80066ac:	d024      	beq.n	80066f8 <WM_CreateWindowAsChild+0x74>
 80066ae:	b31b      	cbz	r3, 80066f8 <WM_CreateWindowAsChild+0x74>
 80066b0:	461d      	mov	r5, r3
 80066b2:	4628      	mov	r0, r5
 80066b4:	f005 ff08 	bl	800c4c8 <GUI_ALLOC_LockH>
 80066b8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80066bc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80066c0:	9001      	str	r0, [sp, #4]
 80066c2:	4417      	add	r7, r2
 80066c4:	4498      	add	r8, r3
 80066c6:	f1ba 0f00 	cmp.w	sl, #0
 80066ca:	d105      	bne.n	80066d8 <WM_CreateWindowAsChild+0x54>
 80066cc:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 80066d0:	ebc2 0a0a 	rsb	sl, r2, sl
 80066d4:	f10a 0a01 	add.w	sl, sl, #1
 80066d8:	f1bb 0f00 	cmp.w	fp, #0
 80066dc:	d105      	bne.n	80066ea <WM_CreateWindowAsChild+0x66>
 80066de:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 80066e2:	ebc3 0b0b 	rsb	fp, r3, fp
 80066e6:	f10b 0b01 	add.w	fp, fp, #1
 80066ea:	a801      	add	r0, sp, #4
 80066ec:	f005 fefa 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80066f0:	e002      	b.n	80066f8 <WM_CreateWindowAsChild+0x74>
 80066f2:	1c6b      	adds	r3, r5, #1
 80066f4:	d1dd      	bne.n	80066b2 <WM_CreateWindowAsChild+0x2e>
 80066f6:	2500      	movs	r5, #0
 80066f8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80066fa:	302c      	adds	r0, #44	; 0x2c
 80066fc:	f006 f8de 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8006700:	4604      	mov	r4, r0
 8006702:	2800      	cmp	r0, #0
 8006704:	d056      	beq.n	80067b4 <WM_CreateWindowAsChild+0x130>
 8006706:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006708:	431e      	orrs	r6, r3
 800670a:	4b2d      	ldr	r3, [pc, #180]	; (80067c0 <WM_CreateWindowAsChild+0x13c>)
 800670c:	881a      	ldrh	r2, [r3, #0]
 800670e:	3201      	adds	r2, #1
 8006710:	801a      	strh	r2, [r3, #0]
 8006712:	f005 fed9 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006716:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006718:	6103      	str	r3, [r0, #16]
 800671a:	f10d 0908 	add.w	r9, sp, #8
 800671e:	4b2b      	ldr	r3, [pc, #172]	; (80067cc <WM_CreateWindowAsChild+0x148>)
 8006720:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006722:	f849 0d08 	str.w	r0, [r9, #-8]!
 8006726:	4033      	ands	r3, r6
 8006728:	8007      	strh	r7, [r0, #0]
 800672a:	f8a0 8002 	strh.w	r8, [r0, #2]
 800672e:	4457      	add	r7, sl
 8006730:	44d8      	add	r8, fp
 8006732:	4313      	orrs	r3, r2
 8006734:	3f01      	subs	r7, #1
 8006736:	f108 38ff 	add.w	r8, r8, #4294967295
 800673a:	6283      	str	r3, [r0, #40]	; 0x28
 800673c:	8087      	strh	r7, [r0, #4]
 800673e:	f8a0 8006 	strh.w	r8, [r0, #6]
 8006742:	4668      	mov	r0, sp
 8006744:	f005 fece 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006748:	4b21      	ldr	r3, [pc, #132]	; (80067d0 <WM_CreateWindowAsChild+0x14c>)
 800674a:	6818      	ldr	r0, [r3, #0]
 800674c:	b148      	cbz	r0, 8006762 <WM_CreateWindowAsChild+0xde>
 800674e:	f005 feb1 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006752:	4607      	mov	r7, r0
 8006754:	4620      	mov	r0, r4
 8006756:	f005 fead 	bl	800c4b4 <GUI_ALLOC_h2p>
 800675a:	697b      	ldr	r3, [r7, #20]
 800675c:	6143      	str	r3, [r0, #20]
 800675e:	617c      	str	r4, [r7, #20]
 8006760:	e000      	b.n	8006764 <WM_CreateWindowAsChild+0xe0>
 8006762:	601c      	str	r4, [r3, #0]
 8006764:	4629      	mov	r1, r5
 8006766:	4620      	mov	r0, r4
 8006768:	f7ff fcf8 	bl	800615c <WM__InsertWindowIntoList>
 800676c:	06b5      	lsls	r5, r6, #26
 800676e:	d502      	bpl.n	8006776 <WM_CreateWindowAsChild+0xf2>
 8006770:	4620      	mov	r0, r4
 8006772:	f7ff ff67 	bl	8006644 <WM_SelectWindow>
 8006776:	07f0      	lsls	r0, r6, #31
 8006778:	d503      	bpl.n	8006782 <WM_CreateWindowAsChild+0xfe>
 800677a:	4b16      	ldr	r3, [pc, #88]	; (80067d4 <WM_CreateWindowAsChild+0x150>)
 800677c:	681a      	ldr	r2, [r3, #0]
 800677e:	3201      	adds	r2, #1
 8006780:	601a      	str	r2, [r3, #0]
 8006782:	0671      	lsls	r1, r6, #25
 8006784:	d502      	bpl.n	800678c <WM_CreateWindowAsChild+0x108>
 8006786:	4620      	mov	r0, r4
 8006788:	f7fe ff68 	bl	800565c <WM_BringToBottom>
 800678c:	07b2      	lsls	r2, r6, #30
 800678e:	d50d      	bpl.n	80067ac <WM_CreateWindowAsChild+0x128>
 8006790:	4620      	mov	r0, r4
 8006792:	f005 fe99 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006796:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006798:	9000      	str	r0, [sp, #0]
 800679a:	f043 0302 	orr.w	r3, r3, #2
 800679e:	6283      	str	r3, [r0, #40]	; 0x28
 80067a0:	4668      	mov	r0, sp
 80067a2:	f005 fe9f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80067a6:	4620      	mov	r0, r4
 80067a8:	f7ff ff3e 	bl	8006628 <WM_InvalidateWindow>
 80067ac:	4620      	mov	r0, r4
 80067ae:	2101      	movs	r1, #1
 80067b0:	f7ff fde5 	bl	800637e <WM__SendMsgNoData>
 80067b4:	4620      	mov	r0, r4
 80067b6:	b003      	add	sp, #12
 80067b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067bc:	20002cbc 	.word	0x20002cbc
 80067c0:	20002c84 	.word	0x20002c84
 80067c4:	200000c0 	.word	0x200000c0
 80067c8:	20002c8c 	.word	0x20002c8c
 80067cc:	003f3f9f 	.word	0x003f3f9f
 80067d0:	20002ca8 	.word	0x20002ca8
 80067d4:	20002cdc 	.word	0x20002cdc

080067d8 <WM_DeleteWindow>:
 80067d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80067da:	4604      	mov	r4, r0
 80067dc:	2800      	cmp	r0, #0
 80067de:	d06e      	beq.n	80068be <WM_DeleteWindow+0xe6>
 80067e0:	f7ff fd80 	bl	80062e4 <WM__IsWindow>
 80067e4:	2800      	cmp	r0, #0
 80067e6:	d06a      	beq.n	80068be <WM_DeleteWindow+0xe6>
 80067e8:	4620      	mov	r0, r4
 80067ea:	f7ff fddf 	bl	80063ac <WM__GetTopLevelLayer>
 80067ee:	210b      	movs	r1, #11
 80067f0:	4605      	mov	r5, r0
 80067f2:	4620      	mov	r0, r4
 80067f4:	f7ff fdc3 	bl	800637e <WM__SendMsgNoData>
 80067f8:	4620      	mov	r0, r4
 80067fa:	f007 fad7 	bl	800ddac <WM__DeleteAssocTimer>
 80067fe:	4620      	mov	r0, r4
 8006800:	f005 fe62 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006804:	9001      	str	r0, [sp, #4]
 8006806:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8006808:	b108      	cbz	r0, 800680e <WM_DeleteWindow+0x36>
 800680a:	f001 fb93 	bl	8007f34 <GUI_MEMDEV_Delete>
 800680e:	4b2d      	ldr	r3, [pc, #180]	; (80068c4 <WM_DeleteWindow+0xec>)
 8006810:	4a2d      	ldr	r2, [pc, #180]	; (80068c8 <WM_DeleteWindow+0xf0>)
 8006812:	2100      	movs	r1, #0
 8006814:	6019      	str	r1, [r3, #0]
 8006816:	4b2d      	ldr	r3, [pc, #180]	; (80068cc <WM_DeleteWindow+0xf4>)
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800681e:	42a0      	cmp	r0, r4
 8006820:	bf08      	it	eq
 8006822:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8006826:	4a2a      	ldr	r2, [pc, #168]	; (80068d0 <WM_DeleteWindow+0xf8>)
 8006828:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800682c:	42a1      	cmp	r1, r4
 800682e:	bf04      	itt	eq
 8006830:	2100      	moveq	r1, #0
 8006832:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8006836:	4b27      	ldr	r3, [pc, #156]	; (80068d4 <WM_DeleteWindow+0xfc>)
 8006838:	681b      	ldr	r3, [r3, #0]
 800683a:	b12b      	cbz	r3, 8006848 <WM_DeleteWindow+0x70>
 800683c:	685a      	ldr	r2, [r3, #4]
 800683e:	42a2      	cmp	r2, r4
 8006840:	bf04      	itt	eq
 8006842:	2200      	moveq	r2, #0
 8006844:	605a      	streq	r2, [r3, #4]
 8006846:	e7f7      	b.n	8006838 <WM_DeleteWindow+0x60>
 8006848:	4620      	mov	r0, r4
 800684a:	2107      	movs	r1, #7
 800684c:	f7ff f8a3 	bl	8005996 <WM_NotifyParent>
 8006850:	9e01      	ldr	r6, [sp, #4]
 8006852:	69f0      	ldr	r0, [r6, #28]
 8006854:	f7ff ffc0 	bl	80067d8 <WM_DeleteWindow>
 8006858:	69f3      	ldr	r3, [r6, #28]
 800685a:	2b00      	cmp	r3, #0
 800685c:	d1f9      	bne.n	8006852 <WM_DeleteWindow+0x7a>
 800685e:	4620      	mov	r0, r4
 8006860:	f7ff fe91 	bl	8006586 <WM__DetachWindow>
 8006864:	4b1c      	ldr	r3, [pc, #112]	; (80068d8 <WM_DeleteWindow+0x100>)
 8006866:	6818      	ldr	r0, [r3, #0]
 8006868:	b150      	cbz	r0, 8006880 <WM_DeleteWindow+0xa8>
 800686a:	f005 fe23 	bl	800c4b4 <GUI_ALLOC_h2p>
 800686e:	4606      	mov	r6, r0
 8006870:	6940      	ldr	r0, [r0, #20]
 8006872:	42a0      	cmp	r0, r4
 8006874:	d1f8      	bne.n	8006868 <WM_DeleteWindow+0x90>
 8006876:	4620      	mov	r0, r4
 8006878:	f005 fe1c 	bl	800c4b4 <GUI_ALLOC_h2p>
 800687c:	6943      	ldr	r3, [r0, #20]
 800687e:	6173      	str	r3, [r6, #20]
 8006880:	9b01      	ldr	r3, [sp, #4]
 8006882:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006884:	07da      	lsls	r2, r3, #31
 8006886:	d503      	bpl.n	8006890 <WM_DeleteWindow+0xb8>
 8006888:	4a14      	ldr	r2, [pc, #80]	; (80068dc <WM_DeleteWindow+0x104>)
 800688a:	6811      	ldr	r1, [r2, #0]
 800688c:	3901      	subs	r1, #1
 800688e:	6011      	str	r1, [r2, #0]
 8006890:	069b      	lsls	r3, r3, #26
 8006892:	d503      	bpl.n	800689c <WM_DeleteWindow+0xc4>
 8006894:	4b12      	ldr	r3, [pc, #72]	; (80068e0 <WM_DeleteWindow+0x108>)
 8006896:	881a      	ldrh	r2, [r3, #0]
 8006898:	3a01      	subs	r2, #1
 800689a:	801a      	strh	r2, [r3, #0]
 800689c:	a801      	add	r0, sp, #4
 800689e:	f005 fe21 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80068a2:	4b10      	ldr	r3, [pc, #64]	; (80068e4 <WM_DeleteWindow+0x10c>)
 80068a4:	881a      	ldrh	r2, [r3, #0]
 80068a6:	4620      	mov	r0, r4
 80068a8:	3a01      	subs	r2, #1
 80068aa:	801a      	strh	r2, [r3, #0]
 80068ac:	f005 fe46 	bl	800c53c <GUI_ALLOC_Free>
 80068b0:	2d00      	cmp	r5, #0
 80068b2:	db04      	blt.n	80068be <WM_DeleteWindow+0xe6>
 80068b4:	4b0c      	ldr	r3, [pc, #48]	; (80068e8 <WM_DeleteWindow+0x110>)
 80068b6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80068ba:	f7ff fec3 	bl	8006644 <WM_SelectWindow>
 80068be:	b002      	add	sp, #8
 80068c0:	bd70      	pop	{r4, r5, r6, pc}
 80068c2:	bf00      	nop
 80068c4:	20002af8 	.word	0x20002af8
 80068c8:	20002c9c 	.word	0x20002c9c
 80068cc:	20002cac 	.word	0x20002cac
 80068d0:	20002cd0 	.word	0x20002cd0
 80068d4:	20002cc8 	.word	0x20002cc8
 80068d8:	20002ca8 	.word	0x20002ca8
 80068dc:	20002cdc 	.word	0x20002cdc
 80068e0:	20002ca4 	.word	0x20002ca4
 80068e4:	20002c84 	.word	0x20002c84
 80068e8:	20002c8c 	.word	0x20002c8c

080068ec <_Exec1Input>:
 80068ec:	4b1b      	ldr	r3, [pc, #108]	; (800695c <_Exec1Input+0x70>)
 80068ee:	681a      	ldr	r2, [r3, #0]
 80068f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80068f2:	461e      	mov	r6, r3
 80068f4:	b1d2      	cbz	r2, 800692c <_Exec1Input+0x40>
 80068f6:	4b1a      	ldr	r3, [pc, #104]	; (8006960 <_Exec1Input+0x74>)
 80068f8:	681c      	ldr	r4, [r3, #0]
 80068fa:	b1b4      	cbz	r4, 800692a <_Exec1Input+0x3e>
 80068fc:	4620      	mov	r0, r4
 80068fe:	f005 fde3 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006902:	4603      	mov	r3, r0
 8006904:	a802      	add	r0, sp, #8
 8006906:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006908:	f840 3d04 	str.w	r3, [r0, #-4]!
 800690c:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8006910:	695d      	ldr	r5, [r3, #20]
 8006912:	d006      	beq.n	8006922 <_Exec1Input+0x36>
 8006914:	f005 fde6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006918:	4620      	mov	r0, r4
 800691a:	f7ff ff5d 	bl	80067d8 <WM_DeleteWindow>
 800691e:	462c      	mov	r4, r5
 8006920:	e7eb      	b.n	80068fa <_Exec1Input+0xe>
 8006922:	462c      	mov	r4, r5
 8006924:	f005 fdde 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006928:	e7e7      	b.n	80068fa <_Exec1Input+0xe>
 800692a:	6034      	str	r4, [r6, #0]
 800692c:	4b0d      	ldr	r3, [pc, #52]	; (8006964 <_Exec1Input+0x78>)
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	b103      	cbz	r3, 8006934 <_Exec1Input+0x48>
 8006932:	4798      	blx	r3
 8006934:	4b0c      	ldr	r3, [pc, #48]	; (8006968 <_Exec1Input+0x7c>)
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	b953      	cbnz	r3, 8006950 <_Exec1Input+0x64>
 800693a:	4b0c      	ldr	r3, [pc, #48]	; (800696c <_Exec1Input+0x80>)
 800693c:	681b      	ldr	r3, [r3, #0]
 800693e:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8006942:	b148      	cbz	r0, 8006958 <_Exec1Input+0x6c>
 8006944:	f003 ffc0 	bl	800a8c8 <GUI_PollKeyMsg>
 8006948:	3000      	adds	r0, #0
 800694a:	bf18      	it	ne
 800694c:	2001      	movne	r0, #1
 800694e:	e003      	b.n	8006958 <_Exec1Input+0x6c>
 8006950:	4798      	blx	r3
 8006952:	2800      	cmp	r0, #0
 8006954:	d0f1      	beq.n	800693a <_Exec1Input+0x4e>
 8006956:	2001      	movs	r0, #1
 8006958:	b002      	add	sp, #8
 800695a:	bd70      	pop	{r4, r5, r6, pc}
 800695c:	20002adc 	.word	0x20002adc
 8006960:	20002ca8 	.word	0x20002ca8
 8006964:	20002c94 	.word	0x20002c94
 8006968:	20002d40 	.word	0x20002d40
 800696c:	200000c0 	.word	0x200000c0

08006970 <WM_GetActiveWindow>:
 8006970:	4b01      	ldr	r3, [pc, #4]	; (8006978 <WM_GetActiveWindow+0x8>)
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006976:	4770      	bx	lr
 8006978:	200000c0 	.word	0x200000c0

0800697c <WM__GetNextIVR>:
 800697c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006980:	4f5d      	ldr	r7, [pc, #372]	; (8006af8 <WM__GetNextIVR+0x17c>)
 8006982:	683b      	ldr	r3, [r7, #0]
 8006984:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8006988:	2800      	cmp	r0, #0
 800698a:	f000 80b2 	beq.w	8006af2 <WM__GetNextIVR+0x176>
 800698e:	4b5b      	ldr	r3, [pc, #364]	; (8006afc <WM__GetNextIVR+0x180>)
 8006990:	695a      	ldr	r2, [r3, #20]
 8006992:	2a01      	cmp	r2, #1
 8006994:	461c      	mov	r4, r3
 8006996:	dd03      	ble.n	80069a0 <WM__GetNextIVR+0x24>
 8006998:	3a01      	subs	r2, #1
 800699a:	615a      	str	r2, [r3, #20]
 800699c:	2000      	movs	r0, #0
 800699e:	e0a8      	b.n	8006af2 <WM__GetNextIVR+0x176>
 80069a0:	f104 0608 	add.w	r6, r4, #8
 80069a4:	691b      	ldr	r3, [r3, #16]
 80069a6:	e896 0003 	ldmia.w	r6, {r0, r1}
 80069aa:	3301      	adds	r3, #1
 80069ac:	ad02      	add	r5, sp, #8
 80069ae:	6123      	str	r3, [r4, #16]
 80069b0:	e885 0003 	stmia.w	r5, {r0, r1}
 80069b4:	b923      	cbnz	r3, 80069c0 <WM__GetNextIVR+0x44>
 80069b6:	8823      	ldrh	r3, [r4, #0]
 80069b8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80069bc:	8863      	ldrh	r3, [r4, #2]
 80069be:	e011      	b.n	80069e4 <WM__GetNextIVR+0x68>
 80069c0:	89a3      	ldrh	r3, [r4, #12]
 80069c2:	8962      	ldrh	r2, [r4, #10]
 80069c4:	f8ad 200a 	strh.w	r2, [sp, #10]
 80069c8:	3301      	adds	r3, #1
 80069ca:	b29b      	uxth	r3, r3
 80069cc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80069d0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80069d4:	b21b      	sxth	r3, r3
 80069d6:	429a      	cmp	r2, r3
 80069d8:	da06      	bge.n	80069e8 <WM__GetNextIVR+0x6c>
 80069da:	8823      	ldrh	r3, [r4, #0]
 80069dc:	f8ad 3008 	strh.w	r3, [sp, #8]
 80069e0:	89e3      	ldrh	r3, [r4, #14]
 80069e2:	3301      	adds	r3, #1
 80069e4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80069e8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80069ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80069f0:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8006afc <WM__GetNextIVR+0x180>
 80069f4:	429a      	cmp	r2, r3
 80069f6:	dd04      	ble.n	8006a02 <WM__GetNextIVR+0x86>
 80069f8:	6963      	ldr	r3, [r4, #20]
 80069fa:	3b01      	subs	r3, #1
 80069fc:	2000      	movs	r0, #0
 80069fe:	6163      	str	r3, [r4, #20]
 8006a00:	e077      	b.n	8006af2 <WM__GetNextIVR+0x176>
 8006a02:	683b      	ldr	r3, [r7, #0]
 8006a04:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006a06:	f005 fd5f 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006a0a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8006a0e:	f9b8 3000 	ldrsh.w	r3, [r8]
 8006a12:	9001      	str	r0, [sp, #4]
 8006a14:	429a      	cmp	r2, r3
 8006a16:	d11c      	bne.n	8006a52 <WM__GetNextIVR+0xd6>
 8006a18:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8006a1c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006a20:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8006a24:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006a28:	4b33      	ldr	r3, [pc, #204]	; (8006af8 <WM__GetNextIVR+0x17c>)
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006a2e:	b15a      	cbz	r2, 8006a48 <WM__GetNextIVR+0xcc>
 8006a30:	4610      	mov	r0, r2
 8006a32:	f005 fd3f 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006a36:	4680      	mov	r8, r0
 8006a38:	2200      	movs	r2, #0
 8006a3a:	6a00      	ldr	r0, [r0, #32]
 8006a3c:	4629      	mov	r1, r5
 8006a3e:	f7ff f973 	bl	8005d28 <_Findy1>
 8006a42:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006a46:	e7f2      	b.n	8006a2e <WM__GetNextIVR+0xb2>
 8006a48:	9b01      	ldr	r3, [sp, #4]
 8006a4a:	4629      	mov	r1, r5
 8006a4c:	69d8      	ldr	r0, [r3, #28]
 8006a4e:	f7ff f96b 	bl	8005d28 <_Findy1>
 8006a52:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006a56:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006a5a:	683b      	ldr	r3, [r7, #0]
 8006a5c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006a5e:	b16a      	cbz	r2, 8006a7c <WM__GetNextIVR+0x100>
 8006a60:	4610      	mov	r0, r2
 8006a62:	f005 fd27 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006a66:	4629      	mov	r1, r5
 8006a68:	4680      	mov	r8, r0
 8006a6a:	2200      	movs	r2, #0
 8006a6c:	6a00      	ldr	r0, [r0, #32]
 8006a6e:	f7ff f9b1 	bl	8005dd4 <_Findx0>
 8006a72:	2800      	cmp	r0, #0
 8006a74:	d1ed      	bne.n	8006a52 <WM__GetNextIVR+0xd6>
 8006a76:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006a7a:	e7f0      	b.n	8006a5e <WM__GetNextIVR+0xe2>
 8006a7c:	9b01      	ldr	r3, [sp, #4]
 8006a7e:	4629      	mov	r1, r5
 8006a80:	69d8      	ldr	r0, [r3, #28]
 8006a82:	f7ff f9a7 	bl	8005dd4 <_Findx0>
 8006a86:	2800      	cmp	r0, #0
 8006a88:	d1e3      	bne.n	8006a52 <WM__GetNextIVR+0xd6>
 8006a8a:	88a3      	ldrh	r3, [r4, #4]
 8006a8c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8006a90:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006a94:	b21b      	sxth	r3, r3
 8006a96:	429a      	cmp	r2, r3
 8006a98:	dd07      	ble.n	8006aaa <WM__GetNextIVR+0x12e>
 8006a9a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006a9e:	e886 0003 	stmia.w	r6, {r0, r1}
 8006aa2:	a801      	add	r0, sp, #4
 8006aa4:	f005 fd1e 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006aa8:	e797      	b.n	80069da <WM__GetNextIVR+0x5e>
 8006aaa:	683b      	ldr	r3, [r7, #0]
 8006aac:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006aae:	b152      	cbz	r2, 8006ac6 <WM__GetNextIVR+0x14a>
 8006ab0:	4610      	mov	r0, r2
 8006ab2:	f005 fcff 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006ab6:	4607      	mov	r7, r0
 8006ab8:	2200      	movs	r2, #0
 8006aba:	6a00      	ldr	r0, [r0, #32]
 8006abc:	4629      	mov	r1, r5
 8006abe:	f7ff f9cd 	bl	8005e5c <_Findx1>
 8006ac2:	69ba      	ldr	r2, [r7, #24]
 8006ac4:	e7f3      	b.n	8006aae <WM__GetNextIVR+0x132>
 8006ac6:	af04      	add	r7, sp, #16
 8006ac8:	4629      	mov	r1, r5
 8006aca:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8006ace:	69d8      	ldr	r0, [r3, #28]
 8006ad0:	f7ff f9c4 	bl	8005e5c <_Findx1>
 8006ad4:	4638      	mov	r0, r7
 8006ad6:	f005 fd05 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006ada:	6923      	ldr	r3, [r4, #16]
 8006adc:	f644 6220 	movw	r2, #20000	; 0x4e20
 8006ae0:	4293      	cmp	r3, r2
 8006ae2:	dc89      	bgt.n	80069f8 <WM__GetNextIVR+0x7c>
 8006ae4:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006ae8:	e886 0003 	stmia.w	r6, {r0, r1}
 8006aec:	f7ff fbd6 	bl	800629c <WM__ActivateClipRect>
 8006af0:	2001      	movs	r0, #1
 8006af2:	b004      	add	sp, #16
 8006af4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006af8:	200000c0 	.word	0x200000c0
 8006afc:	20002ae0 	.word	0x20002ae0

08006b00 <WM__InitIVRSearch>:
 8006b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b04:	4f39      	ldr	r7, [pc, #228]	; (8006bec <WM__InitIVRSearch+0xec>)
 8006b06:	683b      	ldr	r3, [r7, #0]
 8006b08:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8006b0c:	b086      	sub	sp, #24
 8006b0e:	4606      	mov	r6, r0
 8006b10:	b912      	cbnz	r2, 8006b18 <WM__InitIVRSearch+0x18>
 8006b12:	f7ff fbc3 	bl	800629c <WM__ActivateClipRect>
 8006b16:	e064      	b.n	8006be2 <WM__InitIVRSearch+0xe2>
 8006b18:	4d35      	ldr	r5, [pc, #212]	; (8006bf0 <WM__InitIVRSearch+0xf0>)
 8006b1a:	696a      	ldr	r2, [r5, #20]
 8006b1c:	3201      	adds	r2, #1
 8006b1e:	2a01      	cmp	r2, #1
 8006b20:	616a      	str	r2, [r5, #20]
 8006b22:	462c      	mov	r4, r5
 8006b24:	dc5d      	bgt.n	8006be2 <WM__InitIVRSearch+0xe2>
 8006b26:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006b28:	f005 fcce 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006b2c:	f04f 32ff 	mov.w	r2, #4294967295
 8006b30:	612a      	str	r2, [r5, #16]
 8006b32:	4a30      	ldr	r2, [pc, #192]	; (8006bf4 <WM__InitIVRSearch+0xf4>)
 8006b34:	9000      	str	r0, [sp, #0]
 8006b36:	7812      	ldrb	r2, [r2, #0]
 8006b38:	b12a      	cbz	r2, 8006b46 <WM__InitIVRSearch+0x46>
 8006b3a:	f100 0308 	add.w	r3, r0, #8
 8006b3e:	aa02      	add	r2, sp, #8
 8006b40:	e893 0003 	ldmia.w	r3, {r0, r1}
 8006b44:	e005      	b.n	8006b52 <WM__InitIVRSearch+0x52>
 8006b46:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006b48:	f012 0802 	ands.w	r8, r2, #2
 8006b4c:	d00a      	beq.n	8006b64 <WM__InitIVRSearch+0x64>
 8006b4e:	c803      	ldmia	r0, {r0, r1}
 8006b50:	aa02      	add	r2, sp, #8
 8006b52:	e882 0003 	stmia.w	r2, {r0, r1}
 8006b56:	ad02      	add	r5, sp, #8
 8006b58:	b166      	cbz	r6, 8006b74 <WM__InitIVRSearch+0x74>
 8006b5a:	4628      	mov	r0, r5
 8006b5c:	4631      	mov	r1, r6
 8006b5e:	f003 f82c 	bl	8009bba <GUI__IntersectRect>
 8006b62:	e007      	b.n	8006b74 <WM__InitIVRSearch+0x74>
 8006b64:	696b      	ldr	r3, [r5, #20]
 8006b66:	4668      	mov	r0, sp
 8006b68:	3b01      	subs	r3, #1
 8006b6a:	616b      	str	r3, [r5, #20]
 8006b6c:	f005 fcba 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006b70:	4640      	mov	r0, r8
 8006b72:	e037      	b.n	8006be4 <WM__InitIVRSearch+0xe4>
 8006b74:	683b      	ldr	r3, [r7, #0]
 8006b76:	4e20      	ldr	r6, [pc, #128]	; (8006bf8 <WM__InitIVRSearch+0xf8>)
 8006b78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006b7a:	b1c2      	cbz	r2, 8006bae <WM__InitIVRSearch+0xae>
 8006b7c:	9b00      	ldr	r3, [sp, #0]
 8006b7e:	6810      	ldr	r0, [r2, #0]
 8006b80:	6851      	ldr	r1, [r2, #4]
 8006b82:	9301      	str	r3, [sp, #4]
 8006b84:	ab04      	add	r3, sp, #16
 8006b86:	c303      	stmia	r3!, {r0, r1}
 8006b88:	6833      	ldr	r3, [r6, #0]
 8006b8a:	b133      	cbz	r3, 8006b9a <WM__InitIVRSearch+0x9a>
 8006b8c:	a801      	add	r0, sp, #4
 8006b8e:	f005 fca9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006b92:	6830      	ldr	r0, [r6, #0]
 8006b94:	f005 fc98 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006b98:	9001      	str	r0, [sp, #4]
 8006b9a:	9801      	ldr	r0, [sp, #4]
 8006b9c:	a904      	add	r1, sp, #16
 8006b9e:	f7ff fb4d 	bl	800623c <WM__Client2Screen>
 8006ba2:	4628      	mov	r0, r5
 8006ba4:	a904      	add	r1, sp, #16
 8006ba6:	f003 f808 	bl	8009bba <GUI__IntersectRect>
 8006baa:	a801      	add	r0, sp, #4
 8006bac:	e000      	b.n	8006bb0 <WM__InitIVRSearch+0xb0>
 8006bae:	4668      	mov	r0, sp
 8006bb0:	f005 fc98 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006bb4:	6831      	ldr	r1, [r6, #0]
 8006bb6:	b119      	cbz	r1, 8006bc0 <WM__InitIVRSearch+0xc0>
 8006bb8:	4628      	mov	r0, r5
 8006bba:	f7ff faa1 	bl	8006100 <WM__ClipAtParentBorders>
 8006bbe:	b128      	cbz	r0, 8006bcc <WM__InitIVRSearch+0xcc>
 8006bc0:	683b      	ldr	r3, [r7, #0]
 8006bc2:	4628      	mov	r0, r5
 8006bc4:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8006bc6:	f7ff fa9b 	bl	8006100 <WM__ClipAtParentBorders>
 8006bca:	b918      	cbnz	r0, 8006bd4 <WM__InitIVRSearch+0xd4>
 8006bcc:	6963      	ldr	r3, [r4, #20]
 8006bce:	3b01      	subs	r3, #1
 8006bd0:	6163      	str	r3, [r4, #20]
 8006bd2:	e007      	b.n	8006be4 <WM__InitIVRSearch+0xe4>
 8006bd4:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006bd8:	e884 0003 	stmia.w	r4, {r0, r1}
 8006bdc:	f7ff fece 	bl	800697c <WM__GetNextIVR>
 8006be0:	e000      	b.n	8006be4 <WM__InitIVRSearch+0xe4>
 8006be2:	2001      	movs	r0, #1
 8006be4:	b006      	add	sp, #24
 8006be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006bea:	bf00      	nop
 8006bec:	200000c0 	.word	0x200000c0
 8006bf0:	20002ae0 	.word	0x20002ae0
 8006bf4:	20002cb8 	.word	0x20002cb8
 8006bf8:	20002c88 	.word	0x20002c88

08006bfc <WM_SetDefault>:
 8006bfc:	b508      	push	{r3, lr}
 8006bfe:	f005 f847 	bl	800bc90 <GL_SetDefault>
 8006c02:	4b02      	ldr	r3, [pc, #8]	; (8006c0c <WM_SetDefault+0x10>)
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	2200      	movs	r2, #0
 8006c08:	645a      	str	r2, [r3, #68]	; 0x44
 8006c0a:	bd08      	pop	{r3, pc}
 8006c0c:	200000c0 	.word	0x200000c0

08006c10 <WM__Paint1>:
 8006c10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c12:	b089      	sub	sp, #36	; 0x24
 8006c14:	4604      	mov	r4, r0
 8006c16:	f005 fc57 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006c1a:	6907      	ldr	r7, [r0, #16]
 8006c1c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8006c1e:	9001      	str	r0, [sp, #4]
 8006c20:	3008      	adds	r0, #8
 8006c22:	c803      	ldmia	r0, {r0, r1}
 8006c24:	ad02      	add	r5, sp, #8
 8006c26:	e885 0003 	stmia.w	r5, {r0, r1}
 8006c2a:	a801      	add	r0, sp, #4
 8006c2c:	f005 fc5a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006c30:	2f00      	cmp	r7, #0
 8006c32:	d031      	beq.n	8006c98 <WM__Paint1+0x88>
 8006c34:	07b3      	lsls	r3, r6, #30
 8006c36:	d52f      	bpl.n	8006c98 <WM__Paint1+0x88>
 8006c38:	4620      	mov	r0, r4
 8006c3a:	212e      	movs	r1, #46	; 0x2e
 8006c3c:	f7fe fe9b 	bl	8005976 <WM_SendMessageNoPara>
 8006c40:	4b16      	ldr	r3, [pc, #88]	; (8006c9c <WM__Paint1+0x8c>)
 8006c42:	781a      	ldrb	r2, [r3, #0]
 8006c44:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8006c48:	f102 0201 	add.w	r2, r2, #1
 8006c4c:	701a      	strb	r2, [r3, #0]
 8006c4e:	461e      	mov	r6, r3
 8006c50:	d00a      	beq.n	8006c68 <WM__Paint1+0x58>
 8006c52:	230f      	movs	r3, #15
 8006c54:	9405      	str	r4, [sp, #20]
 8006c56:	9304      	str	r3, [sp, #16]
 8006c58:	9507      	str	r5, [sp, #28]
 8006c5a:	f7ff ffcf 	bl	8006bfc <WM_SetDefault>
 8006c5e:	4620      	mov	r0, r4
 8006c60:	a904      	add	r1, sp, #16
 8006c62:	f7fe f96d 	bl	8004f40 <WM__SendMessage>
 8006c66:	e010      	b.n	8006c8a <WM__Paint1+0x7a>
 8006c68:	4628      	mov	r0, r5
 8006c6a:	f7ff ff49 	bl	8006b00 <WM__InitIVRSearch>
 8006c6e:	b160      	cbz	r0, 8006c8a <WM__Paint1+0x7a>
 8006c70:	230f      	movs	r3, #15
 8006c72:	9304      	str	r3, [sp, #16]
 8006c74:	9405      	str	r4, [sp, #20]
 8006c76:	9507      	str	r5, [sp, #28]
 8006c78:	f7ff ffc0 	bl	8006bfc <WM_SetDefault>
 8006c7c:	4620      	mov	r0, r4
 8006c7e:	a904      	add	r1, sp, #16
 8006c80:	f7fe f95e 	bl	8004f40 <WM__SendMessage>
 8006c84:	f7ff fe7a 	bl	800697c <WM__GetNextIVR>
 8006c88:	e7f1      	b.n	8006c6e <WM__Paint1+0x5e>
 8006c8a:	7833      	ldrb	r3, [r6, #0]
 8006c8c:	4620      	mov	r0, r4
 8006c8e:	3b01      	subs	r3, #1
 8006c90:	212f      	movs	r1, #47	; 0x2f
 8006c92:	7033      	strb	r3, [r6, #0]
 8006c94:	f7fe fe6f 	bl	8005976 <WM_SendMessageNoPara>
 8006c98:	b009      	add	sp, #36	; 0x24
 8006c9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c9c:	20002cb8 	.word	0x20002cb8

08006ca0 <WM__Paint>:
 8006ca0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ca2:	b089      	sub	sp, #36	; 0x24
 8006ca4:	ac06      	add	r4, sp, #24
 8006ca6:	9003      	str	r0, [sp, #12]
 8006ca8:	f005 fc0e 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006cac:	f100 0208 	add.w	r2, r0, #8
 8006cb0:	4603      	mov	r3, r0
 8006cb2:	9005      	str	r0, [sp, #20]
 8006cb4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006cb8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8006cba:	699e      	ldr	r6, [r3, #24]
 8006cbc:	691f      	ldr	r7, [r3, #16]
 8006cbe:	e884 0003 	stmia.w	r4, {r0, r1}
 8006cc2:	a805      	add	r0, sp, #20
 8006cc4:	f005 fc0e 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006cc8:	f244 0320 	movw	r3, #16416	; 0x4020
 8006ccc:	402b      	ands	r3, r5
 8006cce:	2b00      	cmp	r3, #0
 8006cd0:	d034      	beq.n	8006d3c <WM__Paint+0x9c>
 8006cd2:	b1bf      	cbz	r7, 8006d04 <WM__Paint+0x64>
 8006cd4:	4620      	mov	r0, r4
 8006cd6:	9903      	ldr	r1, [sp, #12]
 8006cd8:	f7ff fa12 	bl	8006100 <WM__ClipAtParentBorders>
 8006cdc:	b190      	cbz	r0, 8006d04 <WM__Paint+0x64>
 8006cde:	9803      	ldr	r0, [sp, #12]
 8006ce0:	f7ff fcb0 	bl	8006644 <WM_SelectWindow>
 8006ce4:	0769      	lsls	r1, r5, #29
 8006ce6:	d50f      	bpl.n	8006d08 <WM__Paint+0x68>
 8006ce8:	b126      	cbz	r6, 8006cf4 <WM__Paint+0x54>
 8006cea:	f005 0501 	and.w	r5, r5, #1
 8006cee:	f085 0501 	eor.w	r5, r5, #1
 8006cf2:	e000      	b.n	8006cf6 <WM__Paint+0x56>
 8006cf4:	2501      	movs	r5, #1
 8006cf6:	9500      	str	r5, [sp, #0]
 8006cf8:	4620      	mov	r0, r4
 8006cfa:	4912      	ldr	r1, [pc, #72]	; (8006d44 <WM__Paint+0xa4>)
 8006cfc:	aa03      	add	r2, sp, #12
 8006cfe:	2300      	movs	r3, #0
 8006d00:	f000 faaa 	bl	8007258 <GUI_MEMDEV_Draw>
 8006d04:	2400      	movs	r4, #0
 8006d06:	e003      	b.n	8006d10 <WM__Paint+0x70>
 8006d08:	9803      	ldr	r0, [sp, #12]
 8006d0a:	f7ff f989 	bl	8006020 <WM__PaintWinAndOverlays>
 8006d0e:	2401      	movs	r4, #1
 8006d10:	9803      	ldr	r0, [sp, #12]
 8006d12:	f005 fbd9 	bl	800c4c8 <GUI_ALLOC_LockH>
 8006d16:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006d18:	9005      	str	r0, [sp, #20]
 8006d1a:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8006d1e:	f023 0320 	bic.w	r3, r3, #32
 8006d22:	0492      	lsls	r2, r2, #18
 8006d24:	bf48      	it	mi
 8006d26:	f043 0304 	orrmi.w	r3, r3, #4
 8006d2a:	6283      	str	r3, [r0, #40]	; 0x28
 8006d2c:	a805      	add	r0, sp, #20
 8006d2e:	f005 fbd9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8006d32:	4b05      	ldr	r3, [pc, #20]	; (8006d48 <WM__Paint+0xa8>)
 8006d34:	881a      	ldrh	r2, [r3, #0]
 8006d36:	3a01      	subs	r2, #1
 8006d38:	801a      	strh	r2, [r3, #0]
 8006d3a:	e000      	b.n	8006d3e <WM__Paint+0x9e>
 8006d3c:	461c      	mov	r4, r3
 8006d3e:	4620      	mov	r0, r4
 8006d40:	b009      	add	sp, #36	; 0x24
 8006d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d44:	08006099 	.word	0x08006099
 8006d48:	20002ca4 	.word	0x20002ca4

08006d4c <_Exec1Draw>:
 8006d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d50:	4b1a      	ldr	r3, [pc, #104]	; (8006dbc <_Exec1Draw+0x70>)
 8006d52:	681a      	ldr	r2, [r3, #0]
 8006d54:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8006d58:	b09c      	sub	sp, #112	; 0x70
 8006d5a:	461d      	mov	r5, r3
 8006d5c:	2800      	cmp	r0, #0
 8006d5e:	d02a      	beq.n	8006db6 <_Exec1Draw+0x6a>
 8006d60:	4b17      	ldr	r3, [pc, #92]	; (8006dc0 <_Exec1Draw+0x74>)
 8006d62:	8818      	ldrh	r0, [r3, #0]
 8006d64:	b338      	cbz	r0, 8006db6 <_Exec1Draw+0x6a>
 8006d66:	4a17      	ldr	r2, [pc, #92]	; (8006dc4 <_Exec1Draw+0x78>)
 8006d68:	6814      	ldr	r4, [r2, #0]
 8006d6a:	4616      	mov	r6, r2
 8006d6c:	b90c      	cbnz	r4, 8006d72 <_Exec1Draw+0x26>
 8006d6e:	4b16      	ldr	r3, [pc, #88]	; (8006dc8 <_Exec1Draw+0x7c>)
 8006d70:	681c      	ldr	r4, [r3, #0]
 8006d72:	4668      	mov	r0, sp
 8006d74:	f004 ff28 	bl	800bbc8 <GUI_SaveContext_W>
 8006d78:	682b      	ldr	r3, [r5, #0]
 8006d7a:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 8006d7c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8006d7e:	b924      	cbnz	r4, 8006d8a <_Exec1Draw+0x3e>
 8006d80:	2400      	movs	r4, #0
 8006d82:	e00d      	b.n	8006da0 <_Exec1Draw+0x54>
 8006d84:	f1b8 0f00 	cmp.w	r8, #0
 8006d88:	d10a      	bne.n	8006da0 <_Exec1Draw+0x54>
 8006d8a:	4620      	mov	r0, r4
 8006d8c:	f7ff ff88 	bl	8006ca0 <WM__Paint>
 8006d90:	4680      	mov	r8, r0
 8006d92:	4620      	mov	r0, r4
 8006d94:	f005 fb8e 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006d98:	6944      	ldr	r4, [r0, #20]
 8006d9a:	2c00      	cmp	r4, #0
 8006d9c:	d1f2      	bne.n	8006d84 <_Exec1Draw+0x38>
 8006d9e:	e7ef      	b.n	8006d80 <_Exec1Draw+0x34>
 8006da0:	4638      	mov	r0, r7
 8006da2:	6034      	str	r4, [r6, #0]
 8006da4:	f004 ff2f 	bl	800bc06 <GUI_SetColor>
 8006da8:	4628      	mov	r0, r5
 8006daa:	f004 ff2a 	bl	800bc02 <GUI_SetBkColor>
 8006dae:	4668      	mov	r0, sp
 8006db0:	f004 ff14 	bl	800bbdc <GUI_RestoreContext>
 8006db4:	2001      	movs	r0, #1
 8006db6:	b01c      	add	sp, #112	; 0x70
 8006db8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006dbc:	200000c0 	.word	0x200000c0
 8006dc0:	20002ca4 	.word	0x20002ca4
 8006dc4:	20002af8 	.word	0x20002af8
 8006dc8:	20002ca8 	.word	0x20002ca8

08006dcc <WM__DeleteSecure>:
 8006dcc:	b508      	push	{r3, lr}
 8006dce:	f005 fb71 	bl	800c4b4 <GUI_ALLOC_h2p>
 8006dd2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006dd4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006dd8:	6283      	str	r3, [r0, #40]	; 0x28
 8006dda:	4b02      	ldr	r3, [pc, #8]	; (8006de4 <WM__DeleteSecure+0x18>)
 8006ddc:	2201      	movs	r2, #1
 8006dde:	601a      	str	r2, [r3, #0]
 8006de0:	bd08      	pop	{r3, pc}
 8006de2:	bf00      	nop
 8006de4:	20002adc 	.word	0x20002adc

08006de8 <WM_Exec>:
 8006de8:	4b18      	ldr	r3, [pc, #96]	; (8006e4c <WM_Exec+0x64>)
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	b570      	push	{r4, r5, r6, lr}
 8006dee:	b103      	cbz	r3, 8006df2 <WM_Exec+0xa>
 8006df0:	4798      	blx	r3
 8006df2:	2500      	movs	r5, #0
 8006df4:	f7ff fd7a 	bl	80068ec <_Exec1Input>
 8006df8:	b108      	cbz	r0, 8006dfe <WM_Exec+0x16>
 8006dfa:	2501      	movs	r5, #1
 8006dfc:	e7fa      	b.n	8006df4 <WM_Exec+0xc>
 8006dfe:	4b14      	ldr	r3, [pc, #80]	; (8006e50 <WM_Exec+0x68>)
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 8006e06:	b144      	cbz	r4, 8006e1a <WM_Exec+0x32>
 8006e08:	4b12      	ldr	r3, [pc, #72]	; (8006e54 <WM_Exec+0x6c>)
 8006e0a:	881c      	ldrh	r4, [r3, #0]
 8006e0c:	b12c      	cbz	r4, 8006e1a <WM_Exec+0x32>
 8006e0e:	4b12      	ldr	r3, [pc, #72]	; (8006e58 <WM_Exec+0x70>)
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	b1a3      	cbz	r3, 8006e3e <WM_Exec+0x56>
 8006e14:	681b      	ldr	r3, [r3, #0]
 8006e16:	4798      	blx	r3
 8006e18:	2401      	movs	r4, #1
 8006e1a:	f7ff ff97 	bl	8006d4c <_Exec1Draw>
 8006e1e:	4606      	mov	r6, r0
 8006e20:	b108      	cbz	r0, 8006e26 <WM_Exec+0x3e>
 8006e22:	2501      	movs	r5, #1
 8006e24:	e7f9      	b.n	8006e1a <WM_Exec+0x32>
 8006e26:	b174      	cbz	r4, 8006e46 <WM_Exec+0x5e>
 8006e28:	4b0b      	ldr	r3, [pc, #44]	; (8006e58 <WM_Exec+0x70>)
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	b123      	cbz	r3, 8006e38 <WM_Exec+0x50>
 8006e2e:	685b      	ldr	r3, [r3, #4]
 8006e30:	4798      	blx	r3
 8006e32:	4b0a      	ldr	r3, [pc, #40]	; (8006e5c <WM_Exec+0x74>)
 8006e34:	601e      	str	r6, [r3, #0]
 8006e36:	e006      	b.n	8006e46 <WM_Exec+0x5e>
 8006e38:	f003 f844 	bl	8009ec4 <GUI__ManageCache>
 8006e3c:	e003      	b.n	8006e46 <WM_Exec+0x5e>
 8006e3e:	2001      	movs	r0, #1
 8006e40:	f003 f840 	bl	8009ec4 <GUI__ManageCache>
 8006e44:	e7e8      	b.n	8006e18 <WM_Exec+0x30>
 8006e46:	4628      	mov	r0, r5
 8006e48:	bd70      	pop	{r4, r5, r6, pc}
 8006e4a:	bf00      	nop
 8006e4c:	20002c98 	.word	0x20002c98
 8006e50:	200000c0 	.word	0x200000c0
 8006e54:	20002ca4 	.word	0x20002ca4
 8006e58:	20002ccc 	.word	0x20002ccc
 8006e5c:	20002cb4 	.word	0x20002cb4

08006e60 <WM_Activate>:
 8006e60:	4b02      	ldr	r3, [pc, #8]	; (8006e6c <WM_Activate+0xc>)
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	2201      	movs	r2, #1
 8006e66:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006e6a:	4770      	bx	lr
 8006e6c:	200000c0 	.word	0x200000c0

08006e70 <WM_Deactivate>:
 8006e70:	4b03      	ldr	r3, [pc, #12]	; (8006e80 <WM_Deactivate+0x10>)
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	2200      	movs	r2, #0
 8006e76:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006e7a:	f002 bdb1 	b.w	80099e0 <LCD_SetClipRectMax>
 8006e7e:	bf00      	nop
 8006e80:	200000c0 	.word	0x200000c0

08006e84 <WM_DefaultProc>:
 8006e84:	b510      	push	{r4, lr}
 8006e86:	4604      	mov	r4, r0
 8006e88:	6840      	ldr	r0, [r0, #4]
 8006e8a:	6823      	ldr	r3, [r4, #0]
 8006e8c:	68e1      	ldr	r1, [r4, #12]
 8006e8e:	2b17      	cmp	r3, #23
 8006e90:	d00f      	beq.n	8006eb2 <WM_DefaultProc+0x2e>
 8006e92:	dc06      	bgt.n	8006ea2 <WM_DefaultProc+0x1e>
 8006e94:	2b0e      	cmp	r3, #14
 8006e96:	d00e      	beq.n	8006eb6 <WM_DefaultProc+0x32>
 8006e98:	2b14      	cmp	r3, #20
 8006e9a:	d114      	bne.n	8006ec6 <WM_DefaultProc+0x42>
 8006e9c:	f7fe f904 	bl	80050a8 <WM__GetClientRectEx>
 8006ea0:	e011      	b.n	8006ec6 <WM_DefaultProc+0x42>
 8006ea2:	2b22      	cmp	r3, #34	; 0x22
 8006ea4:	d00c      	beq.n	8006ec0 <WM_DefaultProc+0x3c>
 8006ea6:	2b28      	cmp	r3, #40	; 0x28
 8006ea8:	d10d      	bne.n	8006ec6 <WM_DefaultProc+0x42>
 8006eaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006eae:	f7ff bbbb 	b.w	8006628 <WM_InvalidateWindow>
 8006eb2:	60e0      	str	r0, [r4, #12]
 8006eb4:	bd10      	pop	{r4, pc}
 8006eb6:	4621      	mov	r1, r4
 8006eb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006ebc:	f7fe bd5d 	b.w	800597a <WM_SendToParent>
 8006ec0:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006ec4:	e000      	b.n	8006ec8 <WM_DefaultProc+0x44>
 8006ec6:	2300      	movs	r3, #0
 8006ec8:	60e3      	str	r3, [r4, #12]
 8006eca:	bd10      	pop	{r4, pc}

08006ecc <_cbBackWin>:
 8006ecc:	6803      	ldr	r3, [r0, #0]
 8006ece:	2b0e      	cmp	r3, #14
 8006ed0:	b510      	push	{r4, lr}
 8006ed2:	4604      	mov	r4, r0
 8006ed4:	d002      	beq.n	8006edc <_cbBackWin+0x10>
 8006ed6:	2b0f      	cmp	r3, #15
 8006ed8:	d009      	beq.n	8006eee <_cbBackWin+0x22>
 8006eda:	e020      	b.n	8006f1e <_cbBackWin+0x52>
 8006edc:	68c3      	ldr	r3, [r0, #12]
 8006ede:	685a      	ldr	r2, [r3, #4]
 8006ee0:	2a01      	cmp	r2, #1
 8006ee2:	d121      	bne.n	8006f28 <_cbBackWin+0x5c>
 8006ee4:	6818      	ldr	r0, [r3, #0]
 8006ee6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006eea:	f003 bce5 	b.w	800a8b8 <GUI_StoreKey>
 8006eee:	4a0f      	ldr	r2, [pc, #60]	; (8006f2c <_cbBackWin+0x60>)
 8006ef0:	6843      	ldr	r3, [r0, #4]
 8006ef2:	6811      	ldr	r1, [r2, #0]
 8006ef4:	428b      	cmp	r3, r1
 8006ef6:	d006      	beq.n	8006f06 <_cbBackWin+0x3a>
 8006ef8:	6852      	ldr	r2, [r2, #4]
 8006efa:	4293      	cmp	r3, r2
 8006efc:	bf14      	ite	ne
 8006efe:	f04f 33ff 	movne.w	r3, #4294967295
 8006f02:	2301      	moveq	r3, #1
 8006f04:	e000      	b.n	8006f08 <_cbBackWin+0x3c>
 8006f06:	2300      	movs	r3, #0
 8006f08:	4a09      	ldr	r2, [pc, #36]	; (8006f30 <_cbBackWin+0x64>)
 8006f0a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8006f0e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006f12:	4298      	cmp	r0, r3
 8006f14:	d003      	beq.n	8006f1e <_cbBackWin+0x52>
 8006f16:	f004 fe74 	bl	800bc02 <GUI_SetBkColor>
 8006f1a:	f004 fc55 	bl	800b7c8 <GUI_Clear>
 8006f1e:	4620      	mov	r0, r4
 8006f20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006f24:	f7ff bfae 	b.w	8006e84 <WM_DefaultProc>
 8006f28:	bd10      	pop	{r4, pc}
 8006f2a:	bf00      	nop
 8006f2c:	20002c8c 	.word	0x20002c8c
 8006f30:	20002cc0 	.word	0x20002cc0

08006f34 <WM_Init>:
 8006f34:	b530      	push	{r4, r5, lr}
 8006f36:	4b2b      	ldr	r3, [pc, #172]	; (8006fe4 <WM_Init+0xb0>)
 8006f38:	7818      	ldrb	r0, [r3, #0]
 8006f3a:	b085      	sub	sp, #20
 8006f3c:	461d      	mov	r5, r3
 8006f3e:	2800      	cmp	r0, #0
 8006f40:	d14d      	bne.n	8006fde <WM_Init+0xaa>
 8006f42:	4b29      	ldr	r3, [pc, #164]	; (8006fe8 <WM_Init+0xb4>)
 8006f44:	6018      	str	r0, [r3, #0]
 8006f46:	4b29      	ldr	r3, [pc, #164]	; (8006fec <WM_Init+0xb8>)
 8006f48:	6018      	str	r0, [r3, #0]
 8006f4a:	4b29      	ldr	r3, [pc, #164]	; (8006ff0 <WM_Init+0xbc>)
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	6458      	str	r0, [r3, #68]	; 0x44
 8006f50:	4b28      	ldr	r3, [pc, #160]	; (8006ff4 <WM_Init+0xc0>)
 8006f52:	8018      	strh	r0, [r3, #0]
 8006f54:	4b28      	ldr	r3, [pc, #160]	; (8006ff8 <WM_Init+0xc4>)
 8006f56:	4604      	mov	r4, r0
 8006f58:	8018      	strh	r0, [r3, #0]
 8006f5a:	4620      	mov	r0, r4
 8006f5c:	f004 faea 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8006f60:	b1c0      	cbz	r0, 8006f94 <WM_Init+0x60>
 8006f62:	f04f 32ff 	mov.w	r2, #4294967295
 8006f66:	2302      	movs	r3, #2
 8006f68:	e88d 000c 	stmia.w	sp, {r2, r3}
 8006f6c:	2000      	movs	r0, #0
 8006f6e:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8006f72:	4b22      	ldr	r3, [pc, #136]	; (8006ffc <WM_Init+0xc8>)
 8006f74:	9302      	str	r3, [sp, #8]
 8006f76:	9003      	str	r0, [sp, #12]
 8006f78:	4613      	mov	r3, r2
 8006f7a:	4601      	mov	r1, r0
 8006f7c:	f7ff fb82 	bl	8006684 <WM_CreateWindowAsChild>
 8006f80:	4b1f      	ldr	r3, [pc, #124]	; (8007000 <WM_Init+0xcc>)
 8006f82:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8006f86:	4b1f      	ldr	r3, [pc, #124]	; (8007004 <WM_Init+0xd0>)
 8006f88:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006f8c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8006f90:	f7ff fb4a 	bl	8006628 <WM_InvalidateWindow>
 8006f94:	3401      	adds	r4, #1
 8006f96:	2c02      	cmp	r4, #2
 8006f98:	d1df      	bne.n	8006f5a <WM_Init+0x26>
 8006f9a:	481b      	ldr	r0, [pc, #108]	; (8007008 <WM_Init+0xd4>)
 8006f9c:	f7fe f87c 	bl	8005098 <WM__AddCriticalHandle>
 8006fa0:	481a      	ldr	r0, [pc, #104]	; (800700c <WM_Init+0xd8>)
 8006fa2:	f7fe f879 	bl	8005098 <WM__AddCriticalHandle>
 8006fa6:	481a      	ldr	r0, [pc, #104]	; (8007010 <WM_Init+0xdc>)
 8006fa8:	f7fe f876 	bl	8005098 <WM__AddCriticalHandle>
 8006fac:	4819      	ldr	r0, [pc, #100]	; (8007014 <WM_Init+0xe0>)
 8006fae:	f7fe f873 	bl	8005098 <WM__AddCriticalHandle>
 8006fb2:	4819      	ldr	r0, [pc, #100]	; (8007018 <WM_Init+0xe4>)
 8006fb4:	f7fe f870 	bl	8005098 <WM__AddCriticalHandle>
 8006fb8:	4818      	ldr	r0, [pc, #96]	; (800701c <WM_Init+0xe8>)
 8006fba:	f7fe f86d 	bl	8005098 <WM__AddCriticalHandle>
 8006fbe:	4b10      	ldr	r3, [pc, #64]	; (8007000 <WM_Init+0xcc>)
 8006fc0:	6818      	ldr	r0, [r3, #0]
 8006fc2:	f7ff fb3f 	bl	8006644 <WM_SelectWindow>
 8006fc6:	f7ff ff4b 	bl	8006e60 <WM_Activate>
 8006fca:	2301      	movs	r3, #1
 8006fcc:	702b      	strb	r3, [r5, #0]
 8006fce:	4814      	ldr	r0, [pc, #80]	; (8007020 <WM_Init+0xec>)
 8006fd0:	4b14      	ldr	r3, [pc, #80]	; (8007024 <WM_Init+0xf0>)
 8006fd2:	6003      	str	r3, [r0, #0]
 8006fd4:	b005      	add	sp, #20
 8006fd6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006fda:	f004 bc05 	b.w	800b7e8 <GUI__RegisterExit>
 8006fde:	b005      	add	sp, #20
 8006fe0:	bd30      	pop	{r4, r5, pc}
 8006fe2:	bf00      	nop
 8006fe4:	20002afc 	.word	0x20002afc
 8006fe8:	20002ca8 	.word	0x20002ca8
 8006fec:	20002af8 	.word	0x20002af8
 8006ff0:	200000c0 	.word	0x200000c0
 8006ff4:	20002ca4 	.word	0x20002ca4
 8006ff8:	20002c84 	.word	0x20002c84
 8006ffc:	08006ecd 	.word	0x08006ecd
 8007000:	20002c8c 	.word	0x20002c8c
 8007004:	20002cc0 	.word	0x20002cc0
 8007008:	20002e24 	.word	0x20002e24
 800700c:	20002e14 	.word	0x20002e14
 8007010:	20002e04 	.word	0x20002e04
 8007014:	20002e2c 	.word	0x20002e2c
 8007018:	20002e1c 	.word	0x20002e1c
 800701c:	20002e0c 	.word	0x20002e0c
 8007020:	20002ad4 	.word	0x20002ad4
 8007024:	08005c59 	.word	0x08005c59

08007028 <_CreateStaticDevice>:
 8007028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800702c:	b087      	sub	sp, #28
 800702e:	4604      	mov	r4, r0
 8007030:	f005 fa4a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007034:	af06      	add	r7, sp, #24
 8007036:	f8b0 8000 	ldrh.w	r8, [r0]
 800703a:	8886      	ldrh	r6, [r0, #4]
 800703c:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8007040:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 8007044:	f847 0d04 	str.w	r0, [r7, #-4]!
 8007048:	fa0f f888 	sxth.w	r8, r8
 800704c:	b236      	sxth	r6, r6
 800704e:	ebc8 0606 	rsb	r6, r8, r6
 8007052:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 8007056:	3601      	adds	r6, #1
 8007058:	4638      	mov	r0, r7
 800705a:	fa0f f989 	sxth.w	r9, r9
 800705e:	fa0f f58b 	sxth.w	r5, fp
 8007062:	f005 fa3f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007066:	ebc9 0505 	rsb	r5, r9, r5
 800706a:	2e00      	cmp	r6, #0
 800706c:	f105 0501 	add.w	r5, r5, #1
 8007070:	dd4d      	ble.n	800710e <_CreateStaticDevice+0xe6>
 8007072:	2d00      	cmp	r5, #0
 8007074:	dd4b      	ble.n	800710e <_CreateStaticDevice+0xe6>
 8007076:	f1ba 0f00 	cmp.w	sl, #0
 800707a:	d04a      	beq.n	8007112 <_CreateStaticDevice+0xea>
 800707c:	4650      	mov	r0, sl
 800707e:	f005 fa23 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007082:	ab06      	add	r3, sp, #24
 8007084:	8886      	ldrh	r6, [r0, #4]
 8007086:	f843 0d08 	str.w	r0, [r3, #-8]!
 800708a:	88c5      	ldrh	r5, [r0, #6]
 800708c:	b236      	sxth	r6, r6
 800708e:	4618      	mov	r0, r3
 8007090:	f005 fa28 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007094:	4546      	cmp	r6, r8
 8007096:	d102      	bne.n	800709e <_CreateStaticDevice+0x76>
 8007098:	b22d      	sxth	r5, r5
 800709a:	454d      	cmp	r5, r9
 800709c:	d032      	beq.n	8007104 <_CreateStaticDevice+0xdc>
 800709e:	4650      	mov	r0, sl
 80070a0:	4641      	mov	r1, r8
 80070a2:	464a      	mov	r2, r9
 80070a4:	f000 f888 	bl	80071b8 <GUI_MEMDEV_SetOrg>
 80070a8:	e02c      	b.n	8007104 <_CreateStaticDevice+0xdc>
 80070aa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80070ac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80070b0:	6283      	str	r3, [r0, #40]	; 0x28
 80070b2:	4638      	mov	r0, r7
 80070b4:	f005 fa16 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80070b8:	4640      	mov	r0, r8
 80070ba:	f000 ff99 	bl	8007ff0 <GUI_MEMDEV_Select>
 80070be:	4607      	mov	r7, r0
 80070c0:	4650      	mov	r0, sl
 80070c2:	f003 fbd1 	bl	800a868 <GUI__AlphaPreserveTrans>
 80070c6:	4640      	mov	r0, r8
 80070c8:	f000 f8b6 	bl	8007238 <GUI_MEMDEV_GetDataPtr>
 80070cc:	4a2d      	ldr	r2, [pc, #180]	; (8007184 <_CreateStaticDevice+0x15c>)
 80070ce:	4b2e      	ldr	r3, [pc, #184]	; (8007188 <_CreateStaticDevice+0x160>)
 80070d0:	7811      	ldrb	r1, [r2, #0]
 80070d2:	681b      	ldr	r3, [r3, #0]
 80070d4:	4375      	muls	r5, r6
 80070d6:	00aa      	lsls	r2, r5, #2
 80070d8:	4e2c      	ldr	r6, [pc, #176]	; (800718c <_CreateStaticDevice+0x164>)
 80070da:	4d2d      	ldr	r5, [pc, #180]	; (8007190 <_CreateStaticDevice+0x168>)
 80070dc:	4798      	blx	r3
 80070de:	4620      	mov	r0, r4
 80070e0:	f8d5 8000 	ldr.w	r8, [r5]
 80070e4:	6034      	str	r4, [r6, #0]
 80070e6:	f7fe fa90 	bl	800560a <WM_GetWindowOrgX>
 80070ea:	6028      	str	r0, [r5, #0]
 80070ec:	4620      	mov	r0, r4
 80070ee:	f7ff fd8f 	bl	8006c10 <WM__Paint1>
 80070f2:	2000      	movs	r0, #0
 80070f4:	f8c5 8000 	str.w	r8, [r5]
 80070f8:	6030      	str	r0, [r6, #0]
 80070fa:	f003 fbb5 	bl	800a868 <GUI__AlphaPreserveTrans>
 80070fe:	4638      	mov	r0, r7
 8007100:	f000 ff76 	bl	8007ff0 <GUI_MEMDEV_Select>
 8007104:	4620      	mov	r0, r4
 8007106:	f005 f9d5 	bl	800c4b4 <GUI_ALLOC_h2p>
 800710a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800710c:	e037      	b.n	800717e <_CreateStaticDevice+0x156>
 800710e:	2000      	movs	r0, #0
 8007110:	e035      	b.n	800717e <_CreateStaticDevice+0x156>
 8007112:	f7fe f9df 	bl	80054d4 <WM_GetDesktopWindow>
 8007116:	4284      	cmp	r4, r0
 8007118:	d112      	bne.n	8007140 <_CreateStaticDevice+0x118>
 800711a:	f002 f8fb 	bl	8009314 <LCD_GetXSize>
 800711e:	4682      	mov	sl, r0
 8007120:	f002 f900 	bl	8009324 <LCD_GetYSize>
 8007124:	4556      	cmp	r6, sl
 8007126:	dc02      	bgt.n	800712e <_CreateStaticDevice+0x106>
 8007128:	4285      	cmp	r5, r0
 800712a:	dd09      	ble.n	8007140 <_CreateStaticDevice+0x118>
 800712c:	e000      	b.n	8007130 <_CreateStaticDevice+0x108>
 800712e:	4656      	mov	r6, sl
 8007130:	4285      	cmp	r5, r0
 8007132:	bfa8      	it	ge
 8007134:	4605      	movge	r5, r0
 8007136:	4631      	mov	r1, r6
 8007138:	4620      	mov	r0, r4
 800713a:	462a      	mov	r2, r5
 800713c:	f7fe fc90 	bl	8005a60 <WM_SetSize>
 8007140:	4b14      	ldr	r3, [pc, #80]	; (8007194 <_CreateStaticDevice+0x16c>)
 8007142:	9301      	str	r3, [sp, #4]
 8007144:	f04f 0a01 	mov.w	sl, #1
 8007148:	4b13      	ldr	r3, [pc, #76]	; (8007198 <_CreateStaticDevice+0x170>)
 800714a:	9302      	str	r3, [sp, #8]
 800714c:	4640      	mov	r0, r8
 800714e:	4649      	mov	r1, r9
 8007150:	4632      	mov	r2, r6
 8007152:	462b      	mov	r3, r5
 8007154:	f8cd a000 	str.w	sl, [sp]
 8007158:	f000 fe54 	bl	8007e04 <GUI_MEMDEV__CreateFixed>
 800715c:	4680      	mov	r8, r0
 800715e:	4620      	mov	r0, r4
 8007160:	f005 f9b2 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007164:	9005      	str	r0, [sp, #20]
 8007166:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800716a:	f1b8 0f00 	cmp.w	r8, #0
 800716e:	d19c      	bne.n	80070aa <_CreateStaticDevice+0x82>
 8007170:	4638      	mov	r0, r7
 8007172:	f005 f9b7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007176:	4620      	mov	r0, r4
 8007178:	f7ff fd4a 	bl	8006c10 <WM__Paint1>
 800717c:	4640      	mov	r0, r8
 800717e:	b007      	add	sp, #28
 8007180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007184:	2000009c 	.word	0x2000009c
 8007188:	200000ac 	.word	0x200000ac
 800718c:	20002cd8 	.word	0x20002cd8
 8007190:	20002cf0 	.word	0x20002cf0
 8007194:	080111a4 	.word	0x080111a4
 8007198:	08013d9c 	.word	0x08013d9c

0800719c <GUI_MEMDEV_Paint1Static>:
 800719c:	b538      	push	{r3, r4, r5, lr}
 800719e:	4605      	mov	r5, r0
 80071a0:	2405      	movs	r4, #5
 80071a2:	4628      	mov	r0, r5
 80071a4:	f7ff ff40 	bl	8007028 <_CreateStaticDevice>
 80071a8:	b910      	cbnz	r0, 80071b0 <GUI_MEMDEV_Paint1Static+0x14>
 80071aa:	3c01      	subs	r4, #1
 80071ac:	d1f9      	bne.n	80071a2 <GUI_MEMDEV_Paint1Static+0x6>
 80071ae:	bd38      	pop	{r3, r4, r5, pc}
 80071b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80071b4:	f007 bb30 	b.w	800e818 <GUI_MEMDEV_Write>

080071b8 <GUI_MEMDEV_SetOrg>:
 80071b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80071ba:	460d      	mov	r5, r1
 80071bc:	4614      	mov	r4, r2
 80071be:	b918      	cbnz	r0, 80071c8 <GUI_MEMDEV_SetOrg+0x10>
 80071c0:	4b11      	ldr	r3, [pc, #68]	; (8007208 <GUI_MEMDEV_SetOrg+0x50>)
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80071c6:	b1e8      	cbz	r0, 8007204 <GUI_MEMDEV_SetOrg+0x4c>
 80071c8:	f005 f97e 	bl	800c4c8 <GUI_ALLOC_LockH>
 80071cc:	b2a4      	uxth	r4, r4
 80071ce:	b2ad      	uxth	r5, r5
 80071d0:	80c4      	strh	r4, [r0, #6]
 80071d2:	8085      	strh	r5, [r0, #4]
 80071d4:	9000      	str	r0, [sp, #0]
 80071d6:	f002 fc03 	bl	80099e0 <LCD_SetClipRectMax>
 80071da:	9b00      	ldr	r3, [sp, #0]
 80071dc:	6958      	ldr	r0, [r3, #20]
 80071de:	b170      	cbz	r0, 80071fe <GUI_MEMDEV_SetOrg+0x46>
 80071e0:	f005 f972 	bl	800c4c8 <GUI_ALLOC_LockH>
 80071e4:	9b00      	ldr	r3, [sp, #0]
 80071e6:	9001      	str	r0, [sp, #4]
 80071e8:	891a      	ldrh	r2, [r3, #8]
 80071ea:	895b      	ldrh	r3, [r3, #10]
 80071ec:	8082      	strh	r2, [r0, #4]
 80071ee:	80c3      	strh	r3, [r0, #6]
 80071f0:	b112      	cbz	r2, 80071f8 <GUI_MEMDEV_SetOrg+0x40>
 80071f2:	b10b      	cbz	r3, 80071f8 <GUI_MEMDEV_SetOrg+0x40>
 80071f4:	8005      	strh	r5, [r0, #0]
 80071f6:	8044      	strh	r4, [r0, #2]
 80071f8:	a801      	add	r0, sp, #4
 80071fa:	f005 f973 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80071fe:	4668      	mov	r0, sp
 8007200:	f005 f970 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007204:	b003      	add	sp, #12
 8007206:	bd30      	pop	{r4, r5, pc}
 8007208:	200000c0 	.word	0x200000c0

0800720c <GUI_MEMDEV_GetYSize>:
 800720c:	b513      	push	{r0, r1, r4, lr}
 800720e:	b920      	cbnz	r0, 800721a <GUI_MEMDEV_GetYSize+0xe>
 8007210:	4b08      	ldr	r3, [pc, #32]	; (8007234 <GUI_MEMDEV_GetYSize+0x28>)
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8007216:	4604      	mov	r4, r0
 8007218:	b148      	cbz	r0, 800722e <GUI_MEMDEV_GetYSize+0x22>
 800721a:	f005 f955 	bl	800c4c8 <GUI_ALLOC_LockH>
 800721e:	ab02      	add	r3, sp, #8
 8007220:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8007224:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007228:	4618      	mov	r0, r3
 800722a:	f005 f95b 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800722e:	4620      	mov	r0, r4
 8007230:	b002      	add	sp, #8
 8007232:	bd10      	pop	{r4, pc}
 8007234:	200000c0 	.word	0x200000c0

08007238 <GUI_MEMDEV_GetDataPtr>:
 8007238:	b513      	push	{r0, r1, r4, lr}
 800723a:	b150      	cbz	r0, 8007252 <GUI_MEMDEV_GetDataPtr+0x1a>
 800723c:	f005 f944 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007240:	4604      	mov	r4, r0
 8007242:	a802      	add	r0, sp, #8
 8007244:	f840 4d04 	str.w	r4, [r0, #-4]!
 8007248:	f005 f94c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800724c:	f104 0018 	add.w	r0, r4, #24
 8007250:	e7ff      	b.n	8007252 <GUI_MEMDEV_GetDataPtr+0x1a>
 8007252:	b002      	add	sp, #8
 8007254:	bd10      	pop	{r4, pc}
	...

08007258 <GUI_MEMDEV_Draw>:
 8007258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800725c:	461e      	mov	r6, r3
 800725e:	b089      	sub	sp, #36	; 0x24
 8007260:	4b4e      	ldr	r3, [pc, #312]	; (800739c <GUI_MEMDEV_Draw+0x144>)
 8007262:	9204      	str	r2, [sp, #16]
 8007264:	681a      	ldr	r2, [r3, #0]
 8007266:	9103      	str	r1, [sp, #12]
 8007268:	7c54      	ldrb	r4, [r2, #17]
 800726a:	4a4d      	ldr	r2, [pc, #308]	; (80073a0 <GUI_MEMDEV_Draw+0x148>)
 800726c:	5712      	ldrsb	r2, [r2, r4]
 800726e:	2a01      	cmp	r2, #1
 8007270:	4605      	mov	r5, r0
 8007272:	469b      	mov	fp, r3
 8007274:	4620      	mov	r0, r4
 8007276:	dd06      	ble.n	8007286 <GUI_MEMDEV_Draw+0x2e>
 8007278:	f002 f83a 	bl	80092f0 <LCD_GetXSizeEx>
 800727c:	4607      	mov	r7, r0
 800727e:	4620      	mov	r0, r4
 8007280:	f002 f839 	bl	80092f6 <LCD_GetYSizeEx>
 8007284:	e005      	b.n	8007292 <GUI_MEMDEV_Draw+0x3a>
 8007286:	f002 f839 	bl	80092fc <LCD_GetVXSizeEx>
 800728a:	4607      	mov	r7, r0
 800728c:	4620      	mov	r0, r4
 800728e:	f002 f838 	bl	8009302 <LCD_GetVYSizeEx>
 8007292:	4604      	mov	r4, r0
 8007294:	b325      	cbz	r5, 80072e0 <GUI_MEMDEV_Draw+0x88>
 8007296:	a806      	add	r0, sp, #24
 8007298:	a907      	add	r1, sp, #28
 800729a:	f004 fbef 	bl	800ba7c <GUI_GetOrg>
 800729e:	9b06      	ldr	r3, [sp, #24]
 80072a0:	f9b5 a000 	ldrsh.w	sl, [r5]
 80072a4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80072a8:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 80072ac:	441f      	add	r7, r3
 80072ae:	9b07      	ldr	r3, [sp, #28]
 80072b0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80072b4:	3f01      	subs	r7, #1
 80072b6:	4297      	cmp	r7, r2
 80072b8:	bfd4      	ite	le
 80072ba:	ebca 0707 	rsble	r7, sl, r7
 80072be:	ebca 0702 	rsbgt	r7, sl, r2
 80072c2:	441c      	add	r4, r3
 80072c4:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80072c8:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80072cc:	3c01      	subs	r4, #1
 80072ce:	4294      	cmp	r4, r2
 80072d0:	bfd4      	ite	le
 80072d2:	ebc8 0404 	rsble	r4, r8, r4
 80072d6:	ebc8 0402 	rsbgt	r4, r8, r2
 80072da:	3701      	adds	r7, #1
 80072dc:	3401      	adds	r4, #1
 80072de:	e001      	b.n	80072e4 <GUI_MEMDEV_Draw+0x8c>
 80072e0:	46a8      	mov	r8, r5
 80072e2:	46aa      	mov	sl, r5
 80072e4:	b906      	cbnz	r6, 80072e8 <GUI_MEMDEV_Draw+0x90>
 80072e6:	4266      	negs	r6, r4
 80072e8:	2f00      	cmp	r7, #0
 80072ea:	dd52      	ble.n	8007392 <GUI_MEMDEV_Draw+0x13a>
 80072ec:	2c00      	cmp	r4, #0
 80072ee:	dd50      	ble.n	8007392 <GUI_MEMDEV_Draw+0x13a>
 80072f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80072f2:	9300      	str	r3, [sp, #0]
 80072f4:	4650      	mov	r0, sl
 80072f6:	4641      	mov	r1, r8
 80072f8:	463a      	mov	r2, r7
 80072fa:	4633      	mov	r3, r6
 80072fc:	f000 fe3c 	bl	8007f78 <GUI_MEMDEV_CreateEx>
 8007300:	4605      	mov	r5, r0
 8007302:	b920      	cbnz	r0, 800730e <GUI_MEMDEV_Draw+0xb6>
 8007304:	9804      	ldr	r0, [sp, #16]
 8007306:	9b03      	ldr	r3, [sp, #12]
 8007308:	4798      	blx	r3
 800730a:	2001      	movs	r0, #1
 800730c:	e042      	b.n	8007394 <GUI_MEMDEV_Draw+0x13c>
 800730e:	f7ff ff7d 	bl	800720c <GUI_MEMDEV_GetYSize>
 8007312:	42a0      	cmp	r0, r4
 8007314:	4606      	mov	r6, r0
 8007316:	d006      	beq.n	8007326 <GUI_MEMDEV_Draw+0xce>
 8007318:	f8db 3000 	ldr.w	r3, [fp]
 800731c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800731e:	b110      	cbz	r0, 8007326 <GUI_MEMDEV_Draw+0xce>
 8007320:	2132      	movs	r1, #50	; 0x32
 8007322:	f7fd fe2b 	bl	8004f7c <WM__SendMessageNoPara>
 8007326:	4628      	mov	r0, r5
 8007328:	f000 fe62 	bl	8007ff0 <GUI_MEMDEV_Select>
 800732c:	4273      	negs	r3, r6
 800732e:	9305      	str	r3, [sp, #20]
 8007330:	46a1      	mov	r9, r4
 8007332:	2700      	movs	r7, #0
 8007334:	45b1      	cmp	r9, r6
 8007336:	da03      	bge.n	8007340 <GUI_MEMDEV_Draw+0xe8>
 8007338:	4628      	mov	r0, r5
 800733a:	4649      	mov	r1, r9
 800733c:	f007 fb6c 	bl	800ea18 <GUI_MEMDEV_ReduceYSize>
 8007340:	b147      	cbz	r7, 8007354 <GUI_MEMDEV_Draw+0xfc>
 8007342:	4628      	mov	r0, r5
 8007344:	4651      	mov	r1, sl
 8007346:	eb07 0208 	add.w	r2, r7, r8
 800734a:	f7ff ff35 	bl	80071b8 <GUI_MEMDEV_SetOrg>
 800734e:	4628      	mov	r0, r5
 8007350:	f007 fb78 	bl	800ea44 <GUI_MEMDEV_Clear>
 8007354:	9b03      	ldr	r3, [sp, #12]
 8007356:	9804      	ldr	r0, [sp, #16]
 8007358:	4798      	blx	r3
 800735a:	4b12      	ldr	r3, [pc, #72]	; (80073a4 <GUI_MEMDEV_Draw+0x14c>)
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	b10b      	cbz	r3, 8007364 <GUI_MEMDEV_Draw+0x10c>
 8007360:	2000      	movs	r0, #0
 8007362:	4798      	blx	r3
 8007364:	4628      	mov	r0, r5
 8007366:	f000 febb 	bl	80080e0 <GUI_MEMDEV_CopyToLCD>
 800736a:	4437      	add	r7, r6
 800736c:	9b05      	ldr	r3, [sp, #20]
 800736e:	42a7      	cmp	r7, r4
 8007370:	4499      	add	r9, r3
 8007372:	dbdf      	blt.n	8007334 <GUI_MEMDEV_Draw+0xdc>
 8007374:	4628      	mov	r0, r5
 8007376:	f000 fddd 	bl	8007f34 <GUI_MEMDEV_Delete>
 800737a:	2000      	movs	r0, #0
 800737c:	f000 fe38 	bl	8007ff0 <GUI_MEMDEV_Select>
 8007380:	42a6      	cmp	r6, r4
 8007382:	d006      	beq.n	8007392 <GUI_MEMDEV_Draw+0x13a>
 8007384:	f8db 3000 	ldr.w	r3, [fp]
 8007388:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800738a:	b110      	cbz	r0, 8007392 <GUI_MEMDEV_Draw+0x13a>
 800738c:	2133      	movs	r1, #51	; 0x33
 800738e:	f7fd fdf5 	bl	8004f7c <WM__SendMessageNoPara>
 8007392:	2000      	movs	r0, #0
 8007394:	b009      	add	sp, #36	; 0x24
 8007396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800739a:	bf00      	nop
 800739c:	200000c0 	.word	0x200000c0
 80073a0:	20002ce0 	.word	0x20002ce0
 80073a4:	20002b00 	.word	0x20002b00

080073a8 <_GetDevData>:
 80073a8:	4802      	ldr	r0, [pc, #8]	; (80073b4 <_GetDevData+0xc>)
 80073aa:	2901      	cmp	r1, #1
 80073ac:	bf18      	it	ne
 80073ae:	2000      	movne	r0, #0
 80073b0:	4770      	bx	lr
 80073b2:	bf00      	nop
 80073b4:	080111a4 	.word	0x080111a4

080073b8 <_GetDevFunc>:
 80073b8:	4802      	ldr	r0, [pc, #8]	; (80073c4 <_GetDevFunc+0xc>)
 80073ba:	2916      	cmp	r1, #22
 80073bc:	bf18      	it	ne
 80073be:	2000      	movne	r0, #0
 80073c0:	4770      	bx	lr
 80073c2:	bf00      	nop
 80073c4:	0800e629 	.word	0x0800e629

080073c8 <_GetDevProp>:
 80073c8:	2908      	cmp	r1, #8
 80073ca:	bf0c      	ite	eq
 80073cc:	2020      	moveq	r0, #32
 80073ce:	2000      	movne	r0, #0
 80073d0:	4770      	bx	lr

080073d2 <_SetOrg>:
 80073d2:	b508      	push	{r3, lr}
 80073d4:	6800      	ldr	r0, [r0, #0]
 80073d6:	68c3      	ldr	r3, [r0, #12]
 80073d8:	6a1b      	ldr	r3, [r3, #32]
 80073da:	4798      	blx	r3
 80073dc:	bd08      	pop	{r3, pc}

080073de <_GetRect>:
 80073de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80073e0:	6880      	ldr	r0, [r0, #8]
 80073e2:	460c      	mov	r4, r1
 80073e4:	f005 f870 	bl	800c4c8 <GUI_ALLOC_LockH>
 80073e8:	4603      	mov	r3, r0
 80073ea:	a802      	add	r0, sp, #8
 80073ec:	8899      	ldrh	r1, [r3, #4]
 80073ee:	88da      	ldrh	r2, [r3, #6]
 80073f0:	891d      	ldrh	r5, [r3, #8]
 80073f2:	f840 3d04 	str.w	r3, [r0, #-4]!
 80073f6:	895b      	ldrh	r3, [r3, #10]
 80073f8:	8021      	strh	r1, [r4, #0]
 80073fa:	8062      	strh	r2, [r4, #2]
 80073fc:	4429      	add	r1, r5
 80073fe:	441a      	add	r2, r3
 8007400:	3901      	subs	r1, #1
 8007402:	3a01      	subs	r2, #1
 8007404:	80a1      	strh	r1, [r4, #4]
 8007406:	80e2      	strh	r2, [r4, #6]
 8007408:	f005 f86c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800740c:	b003      	add	sp, #12
 800740e:	bd30      	pop	{r4, r5, pc}

08007410 <_XY2PTR>:
 8007410:	4b0e      	ldr	r3, [pc, #56]	; (800744c <_XY2PTR+0x3c>)
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007416:	4605      	mov	r5, r0
 8007418:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800741a:	460e      	mov	r6, r1
 800741c:	f005 f854 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007420:	4603      	mov	r3, r0
 8007422:	a802      	add	r0, sp, #8
 8007424:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8007428:	f840 3d04 	str.w	r3, [r0, #-4]!
 800742c:	f103 0118 	add.w	r1, r3, #24
 8007430:	1b36      	subs	r6, r6, r4
 8007432:	68dc      	ldr	r4, [r3, #12]
 8007434:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8007438:	fb04 1406 	mla	r4, r4, r6, r1
 800743c:	1aed      	subs	r5, r5, r3
 800743e:	f005 f851 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007442:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8007446:	4620      	mov	r0, r4
 8007448:	b002      	add	sp, #8
 800744a:	bd70      	pop	{r4, r5, r6, pc}
 800744c:	200000c0 	.word	0x200000c0

08007450 <_GetPixelIndex>:
 8007450:	b508      	push	{r3, lr}
 8007452:	4608      	mov	r0, r1
 8007454:	4611      	mov	r1, r2
 8007456:	f7ff ffdb 	bl	8007410 <_XY2PTR>
 800745a:	6800      	ldr	r0, [r0, #0]
 800745c:	bd08      	pop	{r3, pc}
	...

08007460 <_XorPixel>:
 8007460:	4b15      	ldr	r3, [pc, #84]	; (80074b8 <_XorPixel+0x58>)
 8007462:	681b      	ldr	r3, [r3, #0]
 8007464:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007466:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8007468:	4615      	mov	r5, r2
 800746a:	460e      	mov	r6, r1
 800746c:	f005 f82c 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007470:	4629      	mov	r1, r5
 8007472:	9000      	str	r0, [sp, #0]
 8007474:	4630      	mov	r0, r6
 8007476:	f7ff ffcb 	bl	8007410 <_XY2PTR>
 800747a:	9b00      	ldr	r3, [sp, #0]
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	691b      	ldr	r3, [r3, #16]
 8007480:	4604      	mov	r4, r0
 8007482:	689b      	ldr	r3, [r3, #8]
 8007484:	4798      	blx	r3
 8007486:	6823      	ldr	r3, [r4, #0]
 8007488:	4058      	eors	r0, r3
 800748a:	9b00      	ldr	r3, [sp, #0]
 800748c:	6020      	str	r0, [r4, #0]
 800748e:	6958      	ldr	r0, [r3, #20]
 8007490:	b160      	cbz	r0, 80074ac <_XorPixel+0x4c>
 8007492:	f005 f819 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007496:	ac02      	add	r4, sp, #8
 8007498:	6883      	ldr	r3, [r0, #8]
 800749a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	4631      	mov	r1, r6
 80074a2:	462a      	mov	r2, r5
 80074a4:	4798      	blx	r3
 80074a6:	4620      	mov	r0, r4
 80074a8:	f005 f81c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80074ac:	4668      	mov	r0, sp
 80074ae:	f005 f819 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80074b2:	b002      	add	sp, #8
 80074b4:	bd70      	pop	{r4, r5, r6, pc}
 80074b6:	bf00      	nop
 80074b8:	200000c0 	.word	0x200000c0

080074bc <_SetPixelIndex>:
 80074bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80074be:	461c      	mov	r4, r3
 80074c0:	4b10      	ldr	r3, [pc, #64]	; (8007504 <_SetPixelIndex+0x48>)
 80074c2:	681b      	ldr	r3, [r3, #0]
 80074c4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80074c6:	460e      	mov	r6, r1
 80074c8:	4615      	mov	r5, r2
 80074ca:	f004 fffd 	bl	800c4c8 <GUI_ALLOC_LockH>
 80074ce:	4629      	mov	r1, r5
 80074d0:	9000      	str	r0, [sp, #0]
 80074d2:	4630      	mov	r0, r6
 80074d4:	f7ff ff9c 	bl	8007410 <_XY2PTR>
 80074d8:	9b00      	ldr	r3, [sp, #0]
 80074da:	6004      	str	r4, [r0, #0]
 80074dc:	6958      	ldr	r0, [r3, #20]
 80074de:	b160      	cbz	r0, 80074fa <_SetPixelIndex+0x3e>
 80074e0:	f004 fff2 	bl	800c4c8 <GUI_ALLOC_LockH>
 80074e4:	ac02      	add	r4, sp, #8
 80074e6:	6883      	ldr	r3, [r0, #8]
 80074e8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80074ec:	681b      	ldr	r3, [r3, #0]
 80074ee:	4631      	mov	r1, r6
 80074f0:	462a      	mov	r2, r5
 80074f2:	4798      	blx	r3
 80074f4:	4620      	mov	r0, r4
 80074f6:	f004 fff5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80074fa:	4668      	mov	r0, sp
 80074fc:	f004 fff2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007500:	b002      	add	sp, #8
 8007502:	bd70      	pop	{r4, r5, r6, pc}
 8007504:	200000c0 	.word	0x200000c0

08007508 <_DrawVLine>:
 8007508:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800750c:	4d2c      	ldr	r5, [pc, #176]	; (80075c0 <_DrawVLine+0xb8>)
 800750e:	461e      	mov	r6, r3
 8007510:	682b      	ldr	r3, [r5, #0]
 8007512:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8007514:	460f      	mov	r7, r1
 8007516:	4614      	mov	r4, r2
 8007518:	f004 ffd6 	bl	800c4c8 <GUI_ALLOC_LockH>
 800751c:	9000      	str	r0, [sp, #0]
 800751e:	6940      	ldr	r0, [r0, #20]
 8007520:	46a9      	mov	r9, r5
 8007522:	b108      	cbz	r0, 8007528 <_DrawVLine+0x20>
 8007524:	f004 ffd0 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007528:	9001      	str	r0, [sp, #4]
 800752a:	4621      	mov	r1, r4
 800752c:	4638      	mov	r0, r7
 800752e:	f7ff ff6f 	bl	8007410 <_XY2PTR>
 8007532:	f8d9 2000 	ldr.w	r2, [r9]
 8007536:	9b00      	ldr	r3, [sp, #0]
 8007538:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800753a:	7c12      	ldrb	r2, [r2, #16]
 800753c:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8007540:	f8d1 9000 	ldr.w	r9, [r1]
 8007544:	07d2      	lsls	r2, r2, #31
 8007546:	4605      	mov	r5, r0
 8007548:	d51f      	bpl.n	800758a <_DrawVLine+0x82>
 800754a:	681b      	ldr	r3, [r3, #0]
 800754c:	691b      	ldr	r3, [r3, #16]
 800754e:	689b      	ldr	r3, [r3, #8]
 8007550:	4798      	blx	r3
 8007552:	4680      	mov	r8, r0
 8007554:	9801      	ldr	r0, [sp, #4]
 8007556:	b128      	cbz	r0, 8007564 <_DrawVLine+0x5c>
 8007558:	6882      	ldr	r2, [r0, #8]
 800755a:	4639      	mov	r1, r7
 800755c:	f8d2 c000 	ldr.w	ip, [r2]
 8007560:	4622      	mov	r2, r4
 8007562:	47e0      	blx	ip
 8007564:	682b      	ldr	r3, [r5, #0]
 8007566:	ea83 0308 	eor.w	r3, r3, r8
 800756a:	602b      	str	r3, [r5, #0]
 800756c:	9b00      	ldr	r3, [sp, #0]
 800756e:	3401      	adds	r4, #1
 8007570:	68db      	ldr	r3, [r3, #12]
 8007572:	42b4      	cmp	r4, r6
 8007574:	441d      	add	r5, r3
 8007576:	dded      	ble.n	8007554 <_DrawVLine+0x4c>
 8007578:	4668      	mov	r0, sp
 800757a:	f004 ffb3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800757e:	9b01      	ldr	r3, [sp, #4]
 8007580:	b1d3      	cbz	r3, 80075b8 <_DrawVLine+0xb0>
 8007582:	a801      	add	r0, sp, #4
 8007584:	f004 ffae 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007588:	e016      	b.n	80075b8 <_DrawVLine+0xb0>
 800758a:	9b01      	ldr	r3, [sp, #4]
 800758c:	b163      	cbz	r3, 80075a8 <_DrawVLine+0xa0>
 800758e:	9801      	ldr	r0, [sp, #4]
 8007590:	6883      	ldr	r3, [r0, #8]
 8007592:	4622      	mov	r2, r4
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	4639      	mov	r1, r7
 8007598:	3401      	adds	r4, #1
 800759a:	4798      	blx	r3
 800759c:	42b4      	cmp	r4, r6
 800759e:	f8c5 9000 	str.w	r9, [r5]
 80075a2:	4445      	add	r5, r8
 80075a4:	ddf3      	ble.n	800758e <_DrawVLine+0x86>
 80075a6:	e7e7      	b.n	8007578 <_DrawVLine+0x70>
 80075a8:	1b34      	subs	r4, r6, r4
 80075aa:	3401      	adds	r4, #1
 80075ac:	3c01      	subs	r4, #1
 80075ae:	f8c5 9000 	str.w	r9, [r5]
 80075b2:	4445      	add	r5, r8
 80075b4:	d1fa      	bne.n	80075ac <_DrawVLine+0xa4>
 80075b6:	e7df      	b.n	8007578 <_DrawVLine+0x70>
 80075b8:	b003      	add	sp, #12
 80075ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80075be:	bf00      	nop
 80075c0:	200000c0 	.word	0x200000c0

080075c4 <_FillRect>:
 80075c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075c8:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8007678 <_FillRect+0xb4>
 80075cc:	4614      	mov	r4, r2
 80075ce:	f8db 2000 	ldr.w	r2, [fp]
 80075d2:	b085      	sub	sp, #20
 80075d4:	6e10      	ldr	r0, [r2, #96]	; 0x60
 80075d6:	460f      	mov	r7, r1
 80075d8:	461d      	mov	r5, r3
 80075da:	f004 ff75 	bl	800c4c8 <GUI_ALLOC_LockH>
 80075de:	4621      	mov	r1, r4
 80075e0:	9002      	str	r0, [sp, #8]
 80075e2:	4638      	mov	r0, r7
 80075e4:	f7ff ff14 	bl	8007410 <_XY2PTR>
 80075e8:	9a02      	ldr	r2, [sp, #8]
 80075ea:	f8db 3000 	ldr.w	r3, [fp]
 80075ee:	f8d2 900c 	ldr.w	r9, [r2, #12]
 80075f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80075f4:	4606      	mov	r6, r0
 80075f6:	6950      	ldr	r0, [r2, #20]
 80075f8:	f8d3 a000 	ldr.w	sl, [r3]
 80075fc:	1bed      	subs	r5, r5, r7
 80075fe:	3501      	adds	r5, #1
 8007600:	b338      	cbz	r0, 8007652 <_FillRect+0x8e>
 8007602:	f004 ff61 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007606:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007608:	f10d 0810 	add.w	r8, sp, #16
 800760c:	1b13      	subs	r3, r2, r4
 800760e:	f848 0d04 	str.w	r0, [r8, #-4]!
 8007612:	3301      	adds	r3, #1
 8007614:	9300      	str	r3, [sp, #0]
 8007616:	4639      	mov	r1, r7
 8007618:	4622      	mov	r2, r4
 800761a:	462b      	mov	r3, r5
 800761c:	f007 f9e6 	bl	800e9ec <GUI_USAGE_AddRect>
 8007620:	4640      	mov	r0, r8
 8007622:	f004 ff5f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007626:	e014      	b.n	8007652 <_FillRect+0x8e>
 8007628:	f8db 3000 	ldr.w	r3, [fp]
 800762c:	7c1b      	ldrb	r3, [r3, #16]
 800762e:	07db      	lsls	r3, r3, #31
 8007630:	d513      	bpl.n	800765a <_FillRect+0x96>
 8007632:	9b02      	ldr	r3, [sp, #8]
 8007634:	681b      	ldr	r3, [r3, #0]
 8007636:	691b      	ldr	r3, [r3, #16]
 8007638:	689b      	ldr	r3, [r3, #8]
 800763a:	4798      	blx	r3
 800763c:	4632      	mov	r2, r6
 800763e:	462b      	mov	r3, r5
 8007640:	6811      	ldr	r1, [r2, #0]
 8007642:	3b01      	subs	r3, #1
 8007644:	ea81 0100 	eor.w	r1, r1, r0
 8007648:	f842 1b04 	str.w	r1, [r2], #4
 800764c:	d1f8      	bne.n	8007640 <_FillRect+0x7c>
 800764e:	444e      	add	r6, r9
 8007650:	3401      	adds	r4, #1
 8007652:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007654:	429c      	cmp	r4, r3
 8007656:	dde7      	ble.n	8007628 <_FillRect+0x64>
 8007658:	e008      	b.n	800766c <_FillRect+0xa8>
 800765a:	2d00      	cmp	r5, #0
 800765c:	ddf7      	ble.n	800764e <_FillRect+0x8a>
 800765e:	462b      	mov	r3, r5
 8007660:	4632      	mov	r2, r6
 8007662:	3b01      	subs	r3, #1
 8007664:	f842 ab04 	str.w	sl, [r2], #4
 8007668:	d1fb      	bne.n	8007662 <_FillRect+0x9e>
 800766a:	e7f0      	b.n	800764e <_FillRect+0x8a>
 800766c:	a802      	add	r0, sp, #8
 800766e:	f004 ff39 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007672:	b005      	add	sp, #20
 8007674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007678:	200000c0 	.word	0x200000c0

0800767c <_DrawHLine>:
 800767c:	b507      	push	{r0, r1, r2, lr}
 800767e:	9200      	str	r2, [sp, #0]
 8007680:	f7ff ffa0 	bl	80075c4 <_FillRect>
 8007684:	b003      	add	sp, #12
 8007686:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800768c <_DrawBitmap>:
 800768c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007690:	4c90      	ldr	r4, [pc, #576]	; (80078d4 <_DrawBitmap+0x248>)
 8007692:	b091      	sub	sp, #68	; 0x44
 8007694:	469b      	mov	fp, r3
 8007696:	6823      	ldr	r3, [r4, #0]
 8007698:	9008      	str	r0, [sp, #32]
 800769a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800769c:	9207      	str	r2, [sp, #28]
 800769e:	460e      	mov	r6, r1
 80076a0:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 80076a4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80076a6:	2800      	cmp	r0, #0
 80076a8:	f000 838b 	beq.w	8007dc2 <_DrawBitmap+0x736>
 80076ac:	f004 ff0c 	bl	800c4c8 <GUI_ALLOC_LockH>
 80076b0:	900e      	str	r0, [sp, #56]	; 0x38
 80076b2:	6940      	ldr	r0, [r0, #20]
 80076b4:	b108      	cbz	r0, 80076ba <_DrawBitmap+0x2e>
 80076b6:	f004 ff07 	bl	800c4c8 <GUI_ALLOC_LockH>
 80076ba:	900f      	str	r0, [sp, #60]	; 0x3c
 80076bc:	a810      	add	r0, sp, #64	; 0x40
 80076be:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 80076c2:	68db      	ldr	r3, [r3, #12]
 80076c4:	930a      	str	r3, [sp, #40]	; 0x28
 80076c6:	f004 ff0d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80076ca:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80076cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80076ce:	4437      	add	r7, r6
 80076d0:	9704      	str	r7, [sp, #16]
 80076d2:	b150      	cbz	r0, 80076ea <_DrawBitmap+0x5e>
 80076d4:	6823      	ldr	r3, [r4, #0]
 80076d6:	7c1b      	ldrb	r3, [r3, #16]
 80076d8:	079c      	lsls	r4, r3, #30
 80076da:	d406      	bmi.n	80076ea <_DrawBitmap+0x5e>
 80076dc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80076de:	9700      	str	r7, [sp, #0]
 80076e0:	9904      	ldr	r1, [sp, #16]
 80076e2:	9a07      	ldr	r2, [sp, #28]
 80076e4:	465b      	mov	r3, fp
 80076e6:	f007 f981 	bl	800e9ec <GUI_USAGE_AddRect>
 80076ea:	9804      	ldr	r0, [sp, #16]
 80076ec:	9907      	ldr	r1, [sp, #28]
 80076ee:	f7ff fe8f 	bl	8007410 <_XY2PTR>
 80076f2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80076f4:	2f17      	cmp	r7, #23
 80076f6:	4606      	mov	r6, r0
 80076f8:	dd64      	ble.n	80077c4 <_DrawBitmap+0x138>
 80076fa:	ea4f 078b 	mov.w	r7, fp, lsl #2
 80076fe:	9706      	str	r7, [sp, #24]
 8007700:	f04f 0900 	mov.w	r9, #0
 8007704:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8007706:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007708:	45b9      	cmp	r9, r7
 800770a:	da57      	bge.n	80077bc <_DrawBitmap+0x130>
 800770c:	b130      	cbz	r0, 800771c <_DrawBitmap+0x90>
 800770e:	6883      	ldr	r3, [r0, #8]
 8007710:	9a07      	ldr	r2, [sp, #28]
 8007712:	685c      	ldr	r4, [r3, #4]
 8007714:	9904      	ldr	r1, [sp, #16]
 8007716:	444a      	add	r2, r9
 8007718:	465b      	mov	r3, fp
 800771a:	47a0      	blx	r4
 800771c:	9f08      	ldr	r7, [sp, #32]
 800771e:	693b      	ldr	r3, [r7, #16]
 8007720:	68d8      	ldr	r0, [r3, #12]
 8007722:	b130      	cbz	r0, 8007732 <_DrawBitmap+0xa6>
 8007724:	4b6c      	ldr	r3, [pc, #432]	; (80078d8 <_DrawBitmap+0x24c>)
 8007726:	9a06      	ldr	r2, [sp, #24]
 8007728:	681b      	ldr	r3, [r3, #0]
 800772a:	4630      	mov	r0, r6
 800772c:	4651      	mov	r1, sl
 800772e:	4798      	blx	r3
 8007730:	e03d      	b.n	80077ae <_DrawBitmap+0x122>
 8007732:	685b      	ldr	r3, [r3, #4]
 8007734:	4798      	blx	r3
 8007736:	0e00      	lsrs	r0, r0, #24
 8007738:	9005      	str	r0, [sp, #20]
 800773a:	4635      	mov	r5, r6
 800773c:	465f      	mov	r7, fp
 800773e:	4654      	mov	r4, sl
 8007740:	463b      	mov	r3, r7
 8007742:	4622      	mov	r2, r4
 8007744:	f04f 0800 	mov.w	r8, #0
 8007748:	f852 1b04 	ldr.w	r1, [r2], #4
 800774c:	9805      	ldr	r0, [sp, #20]
 800774e:	0e09      	lsrs	r1, r1, #24
 8007750:	4281      	cmp	r1, r0
 8007752:	9805      	ldr	r0, [sp, #20]
 8007754:	bf08      	it	eq
 8007756:	f108 0801 	addeq.w	r8, r8, #1
 800775a:	4281      	cmp	r1, r0
 800775c:	f103 33ff 	add.w	r3, r3, #4294967295
 8007760:	d012      	beq.n	8007788 <_DrawBitmap+0xfc>
 8007762:	f1b8 0f00 	cmp.w	r8, #0
 8007766:	d012      	beq.n	800778e <_DrawBitmap+0x102>
 8007768:	4a5b      	ldr	r2, [pc, #364]	; (80078d8 <_DrawBitmap+0x24c>)
 800776a:	ea4f 0388 	mov.w	r3, r8, lsl #2
 800776e:	f8d2 c000 	ldr.w	ip, [r2]
 8007772:	9303      	str	r3, [sp, #12]
 8007774:	4628      	mov	r0, r5
 8007776:	4621      	mov	r1, r4
 8007778:	461a      	mov	r2, r3
 800777a:	47e0      	blx	ip
 800777c:	9b03      	ldr	r3, [sp, #12]
 800777e:	ebc8 0707 	rsb	r7, r8, r7
 8007782:	441d      	add	r5, r3
 8007784:	441c      	add	r4, r3
 8007786:	e010      	b.n	80077aa <_DrawBitmap+0x11e>
 8007788:	2b00      	cmp	r3, #0
 800778a:	d1dd      	bne.n	8007748 <_DrawBitmap+0xbc>
 800778c:	e7e9      	b.n	8007762 <_DrawBitmap+0xd6>
 800778e:	6820      	ldr	r0, [r4, #0]
 8007790:	0e02      	lsrs	r2, r0, #24
 8007792:	2aff      	cmp	r2, #255	; 0xff
 8007794:	d006      	beq.n	80077a4 <_DrawBitmap+0x118>
 8007796:	4b51      	ldr	r3, [pc, #324]	; (80078dc <_DrawBitmap+0x250>)
 8007798:	6829      	ldr	r1, [r5, #0]
 800779a:	681b      	ldr	r3, [r3, #0]
 800779c:	43d2      	mvns	r2, r2
 800779e:	b2d2      	uxtb	r2, r2
 80077a0:	4798      	blx	r3
 80077a2:	6028      	str	r0, [r5, #0]
 80077a4:	3504      	adds	r5, #4
 80077a6:	3404      	adds	r4, #4
 80077a8:	3f01      	subs	r7, #1
 80077aa:	2f00      	cmp	r7, #0
 80077ac:	d1c8      	bne.n	8007740 <_DrawBitmap+0xb4>
 80077ae:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80077b0:	44ba      	add	sl, r7
 80077b2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80077b4:	f109 0901 	add.w	r9, r9, #1
 80077b8:	443e      	add	r6, r7
 80077ba:	e7a3      	b.n	8007704 <_DrawBitmap+0x78>
 80077bc:	2800      	cmp	r0, #0
 80077be:	f040 82fd 	bne.w	8007dbc <_DrawBitmap+0x730>
 80077c2:	e2fe      	b.n	8007dc2 <_DrawBitmap+0x736>
 80077c4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80077c6:	2f10      	cmp	r7, #16
 80077c8:	d134      	bne.n	8007834 <_DrawBitmap+0x1a8>
 80077ca:	1f06      	subs	r6, r0, #4
 80077cc:	2500      	movs	r5, #0
 80077ce:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80077d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80077d2:	42bd      	cmp	r5, r7
 80077d4:	f280 80a3 	bge.w	800791e <_DrawBitmap+0x292>
 80077d8:	9f07      	ldr	r7, [sp, #28]
 80077da:	442f      	add	r7, r5
 80077dc:	b13c      	cbz	r4, 80077ee <_DrawBitmap+0x162>
 80077de:	68a3      	ldr	r3, [r4, #8]
 80077e0:	9904      	ldr	r1, [sp, #16]
 80077e2:	f8d3 c004 	ldr.w	ip, [r3, #4]
 80077e6:	4620      	mov	r0, r4
 80077e8:	463a      	mov	r2, r7
 80077ea:	465b      	mov	r3, fp
 80077ec:	47e0      	blx	ip
 80077ee:	f1aa 0902 	sub.w	r9, sl, #2
 80077f2:	9605      	str	r6, [sp, #20]
 80077f4:	46d8      	mov	r8, fp
 80077f6:	9808      	ldr	r0, [sp, #32]
 80077f8:	9904      	ldr	r1, [sp, #16]
 80077fa:	6903      	ldr	r3, [r0, #16]
 80077fc:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8007800:	685b      	ldr	r3, [r3, #4]
 8007802:	4459      	add	r1, fp
 8007804:	ebc8 0101 	rsb	r1, r8, r1
 8007808:	9103      	str	r1, [sp, #12]
 800780a:	4798      	blx	r3
 800780c:	9b05      	ldr	r3, [sp, #20]
 800780e:	9903      	ldr	r1, [sp, #12]
 8007810:	f843 0f04 	str.w	r0, [r3, #4]!
 8007814:	9305      	str	r3, [sp, #20]
 8007816:	b124      	cbz	r4, 8007822 <_DrawBitmap+0x196>
 8007818:	68a3      	ldr	r3, [r4, #8]
 800781a:	4620      	mov	r0, r4
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	463a      	mov	r2, r7
 8007820:	4798      	blx	r3
 8007822:	f1b8 0801 	subs.w	r8, r8, #1
 8007826:	d1e6      	bne.n	80077f6 <_DrawBitmap+0x16a>
 8007828:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800782a:	44ba      	add	sl, r7
 800782c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800782e:	3501      	adds	r5, #1
 8007830:	443e      	add	r6, r7
 8007832:	e7cc      	b.n	80077ce <_DrawBitmap+0x142>
 8007834:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007836:	2f08      	cmp	r7, #8
 8007838:	f100 0604 	add.w	r6, r0, #4
 800783c:	d173      	bne.n	8007926 <_DrawBitmap+0x29a>
 800783e:	9f07      	ldr	r7, [sp, #28]
 8007840:	9907      	ldr	r1, [sp, #28]
 8007842:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8007844:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8007846:	1a7b      	subs	r3, r7, r1
 8007848:	4293      	cmp	r3, r2
 800784a:	f1a6 0004 	sub.w	r0, r6, #4
 800784e:	da66      	bge.n	800791e <_DrawBitmap+0x292>
 8007850:	4b20      	ldr	r3, [pc, #128]	; (80078d4 <_DrawBitmap+0x248>)
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	7c1b      	ldrb	r3, [r3, #16]
 8007856:	b36d      	cbz	r5, 80078b4 <_DrawBitmap+0x228>
 8007858:	f013 0303 	ands.w	r3, r3, #3
 800785c:	d005      	beq.n	800786a <_DrawBitmap+0x1de>
 800785e:	2b02      	cmp	r3, #2
 8007860:	d157      	bne.n	8007912 <_DrawBitmap+0x286>
 8007862:	46b1      	mov	r9, r6
 8007864:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8007868:	e01c      	b.n	80078a4 <_DrawBitmap+0x218>
 800786a:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800786e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8007872:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8007876:	3301      	adds	r3, #1
 8007878:	455b      	cmp	r3, fp
 800787a:	d1f6      	bne.n	800786a <_DrawBitmap+0x1de>
 800787c:	e049      	b.n	8007912 <_DrawBitmap+0x286>
 800787e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8007882:	f849 3c04 	str.w	r3, [r9, #-4]
 8007886:	b12c      	cbz	r4, 8007894 <_DrawBitmap+0x208>
 8007888:	68a3      	ldr	r3, [r4, #8]
 800788a:	4620      	mov	r0, r4
 800788c:	681b      	ldr	r3, [r3, #0]
 800788e:	4641      	mov	r1, r8
 8007890:	463a      	mov	r2, r7
 8007892:	4798      	blx	r3
 8007894:	9b04      	ldr	r3, [sp, #16]
 8007896:	f108 0801 	add.w	r8, r8, #1
 800789a:	445b      	add	r3, fp
 800789c:	4543      	cmp	r3, r8
 800789e:	f109 0904 	add.w	r9, r9, #4
 80078a2:	d036      	beq.n	8007912 <_DrawBitmap+0x286>
 80078a4:	9804      	ldr	r0, [sp, #16]
 80078a6:	ebc0 030a 	rsb	r3, r0, sl
 80078aa:	f813 3008 	ldrb.w	r3, [r3, r8]
 80078ae:	2b00      	cmp	r3, #0
 80078b0:	d0f0      	beq.n	8007894 <_DrawBitmap+0x208>
 80078b2:	e7e4      	b.n	800787e <_DrawBitmap+0x1f2>
 80078b4:	f013 0303 	ands.w	r3, r3, #3
 80078b8:	d005      	beq.n	80078c6 <_DrawBitmap+0x23a>
 80078ba:	2b02      	cmp	r3, #2
 80078bc:	d129      	bne.n	8007912 <_DrawBitmap+0x286>
 80078be:	46b1      	mov	r9, r6
 80078c0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80078c4:	e01d      	b.n	8007902 <_DrawBitmap+0x276>
 80078c6:	4b04      	ldr	r3, [pc, #16]	; (80078d8 <_DrawBitmap+0x24c>)
 80078c8:	4651      	mov	r1, sl
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	465a      	mov	r2, fp
 80078ce:	4798      	blx	r3
 80078d0:	e01f      	b.n	8007912 <_DrawBitmap+0x286>
 80078d2:	bf00      	nop
 80078d4:	200000c0 	.word	0x200000c0
 80078d8:	200000b0 	.word	0x200000b0
 80078dc:	200000b4 	.word	0x200000b4
 80078e0:	f849 3c04 	str.w	r3, [r9, #-4]
 80078e4:	b12c      	cbz	r4, 80078f2 <_DrawBitmap+0x266>
 80078e6:	68a3      	ldr	r3, [r4, #8]
 80078e8:	4620      	mov	r0, r4
 80078ea:	681b      	ldr	r3, [r3, #0]
 80078ec:	4641      	mov	r1, r8
 80078ee:	463a      	mov	r2, r7
 80078f0:	4798      	blx	r3
 80078f2:	9b04      	ldr	r3, [sp, #16]
 80078f4:	f108 0801 	add.w	r8, r8, #1
 80078f8:	445b      	add	r3, fp
 80078fa:	4543      	cmp	r3, r8
 80078fc:	f109 0904 	add.w	r9, r9, #4
 8007900:	d007      	beq.n	8007912 <_DrawBitmap+0x286>
 8007902:	9904      	ldr	r1, [sp, #16]
 8007904:	ebc1 030a 	rsb	r3, r1, sl
 8007908:	f813 3008 	ldrb.w	r3, [r3, r8]
 800790c:	2b00      	cmp	r3, #0
 800790e:	d0f0      	beq.n	80078f2 <_DrawBitmap+0x266>
 8007910:	e7e6      	b.n	80078e0 <_DrawBitmap+0x254>
 8007912:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8007914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007916:	4492      	add	sl, r2
 8007918:	3701      	adds	r7, #1
 800791a:	441e      	add	r6, r3
 800791c:	e790      	b.n	8007840 <_DrawBitmap+0x1b4>
 800791e:	2c00      	cmp	r4, #0
 8007920:	f040 824c 	bne.w	8007dbc <_DrawBitmap+0x730>
 8007924:	e24d      	b.n	8007dc2 <_DrawBitmap+0x736>
 8007926:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007928:	4bb2      	ldr	r3, [pc, #712]	; (8007bf4 <_DrawBitmap+0x568>)
 800792a:	9608      	str	r6, [sp, #32]
 800792c:	007f      	lsls	r7, r7, #1
 800792e:	970c      	str	r7, [sp, #48]	; 0x30
 8007930:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007932:	00bf      	lsls	r7, r7, #2
 8007934:	970d      	str	r7, [sp, #52]	; 0x34
 8007936:	9f07      	ldr	r7, [sp, #28]
 8007938:	9705      	str	r7, [sp, #20]
 800793a:	2d00      	cmp	r5, #0
 800793c:	bf08      	it	eq
 800793e:	461d      	moveq	r5, r3
 8007940:	9f08      	ldr	r7, [sp, #32]
 8007942:	9807      	ldr	r0, [sp, #28]
 8007944:	1f3c      	subs	r4, r7, #4
 8007946:	9f05      	ldr	r7, [sp, #20]
 8007948:	1a3b      	subs	r3, r7, r0
 800794a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800794c:	42bb      	cmp	r3, r7
 800794e:	f280 8233 	bge.w	8007db8 <_DrawBitmap+0x72c>
 8007952:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007954:	2f02      	cmp	r7, #2
 8007956:	f000 80ad 	beq.w	8007ab4 <_DrawBitmap+0x428>
 800795a:	2f04      	cmp	r7, #4
 800795c:	f000 8150 	beq.w	8007c00 <_DrawBitmap+0x574>
 8007960:	2f01      	cmp	r7, #1
 8007962:	f040 821f 	bne.w	8007da4 <_DrawBitmap+0x718>
 8007966:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8007bfc <_DrawBitmap+0x570>
 800796a:	f8d9 3000 	ldr.w	r3, [r9]
 800796e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8007970:	f004 fdaa 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007974:	f89a 3000 	ldrb.w	r3, [sl]
 8007978:	4a9f      	ldr	r2, [pc, #636]	; (8007bf8 <_DrawBitmap+0x56c>)
 800797a:	991e      	ldr	r1, [sp, #120]	; 0x78
 800797c:	5cd6      	ldrb	r6, [r2, r3]
 800797e:	f8d9 3000 	ldr.w	r3, [r9]
 8007982:	900e      	str	r0, [sp, #56]	; 0x38
 8007984:	7c1b      	ldrb	r3, [r3, #16]
 8007986:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800798a:	f003 0303 	and.w	r3, r3, #3
 800798e:	2b02      	cmp	r3, #2
 8007990:	465f      	mov	r7, fp
 8007992:	f1c1 0808 	rsb	r8, r1, #8
 8007996:	fa46 f601 	asr.w	r6, r6, r1
 800799a:	d020      	beq.n	80079de <_DrawBitmap+0x352>
 800799c:	2b03      	cmp	r3, #3
 800799e:	d061      	beq.n	8007a64 <_DrawBitmap+0x3d8>
 80079a0:	2b01      	cmp	r3, #1
 80079a2:	d05f      	beq.n	8007a64 <_DrawBitmap+0x3d8>
 80079a4:	4652      	mov	r2, sl
 80079a6:	4547      	cmp	r7, r8
 80079a8:	bf38      	it	cc
 80079aa:	46b8      	movcc	r8, r7
 80079ac:	ebc8 0707 	rsb	r7, r8, r7
 80079b0:	4643      	mov	r3, r8
 80079b2:	4621      	mov	r1, r4
 80079b4:	f006 0001 	and.w	r0, r6, #1
 80079b8:	3b01      	subs	r3, #1
 80079ba:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80079be:	f841 0b04 	str.w	r0, [r1], #4
 80079c2:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80079c6:	d1f5      	bne.n	80079b4 <_DrawBitmap+0x328>
 80079c8:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 80079cc:	2f00      	cmp	r7, #0
 80079ce:	d06d      	beq.n	8007aac <_DrawBitmap+0x420>
 80079d0:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80079d4:	4988      	ldr	r1, [pc, #544]	; (8007bf8 <_DrawBitmap+0x56c>)
 80079d6:	f04f 0808 	mov.w	r8, #8
 80079da:	5cce      	ldrb	r6, [r1, r3]
 80079dc:	e7e3      	b.n	80079a6 <_DrawBitmap+0x31a>
 80079de:	686b      	ldr	r3, [r5, #4]
 80079e0:	f8dd 9010 	ldr.w	r9, [sp, #16]
 80079e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80079e6:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80079ea:	4547      	cmp	r7, r8
 80079ec:	bf38      	it	cc
 80079ee:	46b8      	movcc	r8, r7
 80079f0:	ebc8 0707 	rsb	r7, r8, r7
 80079f4:	f1bc 0f00 	cmp.w	ip, #0
 80079f8:	d026      	beq.n	8007a48 <_DrawBitmap+0x3bc>
 80079fa:	b91e      	cbnz	r6, 8007a04 <_DrawBitmap+0x378>
 80079fc:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007a00:	44c1      	add	r9, r8
 8007a02:	e025      	b.n	8007a50 <_DrawBitmap+0x3c4>
 8007a04:	07f0      	lsls	r0, r6, #31
 8007a06:	d50c      	bpl.n	8007a22 <_DrawBitmap+0x396>
 8007a08:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8007a0c:	9a05      	ldr	r2, [sp, #20]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	f8cd c00c 	str.w	ip, [sp, #12]
 8007a14:	4660      	mov	r0, ip
 8007a16:	4649      	mov	r1, r9
 8007a18:	4798      	blx	r3
 8007a1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a1c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007a20:	6023      	str	r3, [r4, #0]
 8007a22:	f1b8 0801 	subs.w	r8, r8, #1
 8007a26:	f109 0901 	add.w	r9, r9, #1
 8007a2a:	f104 0404 	add.w	r4, r4, #4
 8007a2e:	d00f      	beq.n	8007a50 <_DrawBitmap+0x3c4>
 8007a30:	0876      	lsrs	r6, r6, #1
 8007a32:	e7e2      	b.n	80079fa <_DrawBitmap+0x36e>
 8007a34:	07f1      	lsls	r1, r6, #31
 8007a36:	bf44      	itt	mi
 8007a38:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 8007a3a:	6023      	strmi	r3, [r4, #0]
 8007a3c:	f1b8 0801 	subs.w	r8, r8, #1
 8007a40:	f104 0404 	add.w	r4, r4, #4
 8007a44:	d004      	beq.n	8007a50 <_DrawBitmap+0x3c4>
 8007a46:	0876      	lsrs	r6, r6, #1
 8007a48:	2e00      	cmp	r6, #0
 8007a4a:	d1f3      	bne.n	8007a34 <_DrawBitmap+0x3a8>
 8007a4c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007a50:	b367      	cbz	r7, 8007aac <_DrawBitmap+0x420>
 8007a52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007a54:	4a68      	ldr	r2, [pc, #416]	; (8007bf8 <_DrawBitmap+0x56c>)
 8007a56:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8007a5a:	9009      	str	r0, [sp, #36]	; 0x24
 8007a5c:	5cd6      	ldrb	r6, [r2, r3]
 8007a5e:	f04f 0808 	mov.w	r8, #8
 8007a62:	e7c2      	b.n	80079ea <_DrawBitmap+0x35e>
 8007a64:	6803      	ldr	r3, [r0, #0]
 8007a66:	691b      	ldr	r3, [r3, #16]
 8007a68:	689b      	ldr	r3, [r3, #8]
 8007a6a:	4798      	blx	r3
 8007a6c:	4651      	mov	r1, sl
 8007a6e:	4547      	cmp	r7, r8
 8007a70:	bf38      	it	cc
 8007a72:	46b8      	movcc	r8, r7
 8007a74:	ebc8 0707 	rsb	r7, r8, r7
 8007a78:	1d23      	adds	r3, r4, #4
 8007a7a:	46c6      	mov	lr, r8
 8007a7c:	07f2      	lsls	r2, r6, #31
 8007a7e:	d504      	bpl.n	8007a8a <_DrawBitmap+0x3fe>
 8007a80:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8007a84:	4042      	eors	r2, r0
 8007a86:	f843 2c04 	str.w	r2, [r3, #-4]
 8007a8a:	f1be 0e01 	subs.w	lr, lr, #1
 8007a8e:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8007a92:	f103 0304 	add.w	r3, r3, #4
 8007a96:	d1f1      	bne.n	8007a7c <_DrawBitmap+0x3f0>
 8007a98:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007a9c:	b137      	cbz	r7, 8007aac <_DrawBitmap+0x420>
 8007a9e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8007aa2:	4a55      	ldr	r2, [pc, #340]	; (8007bf8 <_DrawBitmap+0x56c>)
 8007aa4:	f04f 0808 	mov.w	r8, #8
 8007aa8:	5cd6      	ldrb	r6, [r2, r3]
 8007aaa:	e7e0      	b.n	8007a6e <_DrawBitmap+0x3e2>
 8007aac:	a80e      	add	r0, sp, #56	; 0x38
 8007aae:	f004 fd19 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007ab2:	e177      	b.n	8007da4 <_DrawBitmap+0x718>
 8007ab4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007ab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007ab8:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8007abc:	f1c7 0604 	rsb	r6, r7, #4
 8007ac0:	f89a 7000 	ldrb.w	r7, [sl]
 8007ac4:	409f      	lsls	r7, r3
 8007ac6:	4b4d      	ldr	r3, [pc, #308]	; (8007bfc <_DrawBitmap+0x570>)
 8007ac8:	681b      	ldr	r3, [r3, #0]
 8007aca:	7c1b      	ldrb	r3, [r3, #16]
 8007acc:	f003 0303 	and.w	r3, r3, #3
 8007ad0:	2b01      	cmp	r3, #1
 8007ad2:	b2f6      	uxtb	r6, r6
 8007ad4:	b2ff      	uxtb	r7, r7
 8007ad6:	d066      	beq.n	8007ba6 <_DrawBitmap+0x51a>
 8007ad8:	d308      	bcc.n	8007aec <_DrawBitmap+0x460>
 8007ada:	2b02      	cmp	r3, #2
 8007adc:	f040 8162 	bne.w	8007da4 <_DrawBitmap+0x718>
 8007ae0:	9804      	ldr	r0, [sp, #16]
 8007ae2:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8007ae6:	46d8      	mov	r8, fp
 8007ae8:	9006      	str	r0, [sp, #24]
 8007aea:	e03e      	b.n	8007b6a <_DrawBitmap+0x4de>
 8007aec:	4652      	mov	r2, sl
 8007aee:	465b      	mov	r3, fp
 8007af0:	429e      	cmp	r6, r3
 8007af2:	bfc8      	it	gt
 8007af4:	b2de      	uxtbgt	r6, r3
 8007af6:	1b9b      	subs	r3, r3, r6
 8007af8:	4631      	mov	r1, r6
 8007afa:	4620      	mov	r0, r4
 8007afc:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8007b00:	3901      	subs	r1, #1
 8007b02:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8007b06:	f840 cb04 	str.w	ip, [r0], #4
 8007b0a:	00bf      	lsls	r7, r7, #2
 8007b0c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007b10:	b2ff      	uxtb	r7, r7
 8007b12:	d1f3      	bne.n	8007afc <_DrawBitmap+0x470>
 8007b14:	3e01      	subs	r6, #1
 8007b16:	b2f6      	uxtb	r6, r6
 8007b18:	3601      	adds	r6, #1
 8007b1a:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	f000 8140 	beq.w	8007da4 <_DrawBitmap+0x718>
 8007b24:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 8007b28:	2604      	movs	r6, #4
 8007b2a:	e7e1      	b.n	8007af0 <_DrawBitmap+0x464>
 8007b2c:	9906      	ldr	r1, [sp, #24]
 8007b2e:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8007b32:	4449      	add	r1, r9
 8007b34:	d122      	bne.n	8007b7c <_DrawBitmap+0x4f0>
 8007b36:	f109 0901 	add.w	r9, r9, #1
 8007b3a:	fa5f f289 	uxtb.w	r2, r9
 8007b3e:	00bf      	lsls	r7, r7, #2
 8007b40:	4296      	cmp	r6, r2
 8007b42:	b2ff      	uxtb	r7, r7
 8007b44:	d1f2      	bne.n	8007b2c <_DrawBitmap+0x4a0>
 8007b46:	9f06      	ldr	r7, [sp, #24]
 8007b48:	3e01      	subs	r6, #1
 8007b4a:	b2f6      	uxtb	r6, r6
 8007b4c:	1c7b      	adds	r3, r7, #1
 8007b4e:	1c72      	adds	r2, r6, #1
 8007b50:	199e      	adds	r6, r3, r6
 8007b52:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8007b56:	9606      	str	r6, [sp, #24]
 8007b58:	f1b8 0f00 	cmp.w	r8, #0
 8007b5c:	f000 8122 	beq.w	8007da4 <_DrawBitmap+0x718>
 8007b60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007b62:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 8007b66:	9309      	str	r3, [sp, #36]	; 0x24
 8007b68:	2604      	movs	r6, #4
 8007b6a:	4546      	cmp	r6, r8
 8007b6c:	bfc8      	it	gt
 8007b6e:	fa5f f688 	uxtbgt.w	r6, r8
 8007b72:	ebc6 0808 	rsb	r8, r6, r8
 8007b76:	f04f 0900 	mov.w	r9, #0
 8007b7a:	e7d7      	b.n	8007b2c <_DrawBitmap+0x4a0>
 8007b7c:	09ba      	lsrs	r2, r7, #6
 8007b7e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8007b82:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 8007b86:	f1bc 0f00 	cmp.w	ip, #0
 8007b8a:	d0d4      	beq.n	8007b36 <_DrawBitmap+0x4aa>
 8007b8c:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8007b90:	6812      	ldr	r2, [r2, #0]
 8007b92:	920b      	str	r2, [sp, #44]	; 0x2c
 8007b94:	4660      	mov	r0, ip
 8007b96:	f8cd c00c 	str.w	ip, [sp, #12]
 8007b9a:	9a05      	ldr	r2, [sp, #20]
 8007b9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007b9e:	4798      	blx	r3
 8007ba0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007ba4:	e7c7      	b.n	8007b36 <_DrawBitmap+0x4aa>
 8007ba6:	4650      	mov	r0, sl
 8007ba8:	465b      	mov	r3, fp
 8007baa:	429e      	cmp	r6, r3
 8007bac:	bfc8      	it	gt
 8007bae:	b2de      	uxtbgt	r6, r3
 8007bb0:	1b9b      	subs	r3, r3, r6
 8007bb2:	1d22      	adds	r2, r4, #4
 8007bb4:	46b4      	mov	ip, r6
 8007bb6:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8007bba:	d005      	beq.n	8007bc8 <_DrawBitmap+0x53c>
 8007bbc:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8007bc0:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8007bc4:	f842 1c04 	str.w	r1, [r2, #-4]
 8007bc8:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007bcc:	00bf      	lsls	r7, r7, #2
 8007bce:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8007bd2:	b2ff      	uxtb	r7, r7
 8007bd4:	f102 0204 	add.w	r2, r2, #4
 8007bd8:	d1ed      	bne.n	8007bb6 <_DrawBitmap+0x52a>
 8007bda:	3e01      	subs	r6, #1
 8007bdc:	b2f6      	uxtb	r6, r6
 8007bde:	3601      	adds	r6, #1
 8007be0:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	f000 80dd 	beq.w	8007da4 <_DrawBitmap+0x718>
 8007bea:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8007bee:	2604      	movs	r6, #4
 8007bf0:	e7db      	b.n	8007baa <_DrawBitmap+0x51e>
 8007bf2:	bf00      	nop
 8007bf4:	08011164 	.word	0x08011164
 8007bf8:	08013c04 	.word	0x08013c04
 8007bfc:	200000c0 	.word	0x200000c0
 8007c00:	4a71      	ldr	r2, [pc, #452]	; (8007dc8 <_DrawBitmap+0x73c>)
 8007c02:	f89a 3000 	ldrb.w	r3, [sl]
 8007c06:	6812      	ldr	r2, [r2, #0]
 8007c08:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007c0a:	7c12      	ldrb	r2, [r2, #16]
 8007c0c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8007c0e:	f002 0203 	and.w	r2, r2, #3
 8007c12:	4083      	lsls	r3, r0
 8007c14:	2a01      	cmp	r2, #1
 8007c16:	b2de      	uxtb	r6, r3
 8007c18:	f000 809c 	beq.w	8007d54 <_DrawBitmap+0x6c8>
 8007c1c:	d302      	bcc.n	8007c24 <_DrawBitmap+0x598>
 8007c1e:	2a02      	cmp	r2, #2
 8007c20:	d035      	beq.n	8007c8e <_DrawBitmap+0x602>
 8007c22:	e0bf      	b.n	8007da4 <_DrawBitmap+0x718>
 8007c24:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007c26:	b15f      	cbz	r7, 8007c40 <_DrawBitmap+0x5b4>
 8007c28:	0936      	lsrs	r6, r6, #4
 8007c2a:	f10a 0201 	add.w	r2, sl, #1
 8007c2e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007c32:	6023      	str	r3, [r4, #0]
 8007c34:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8007c38:	9c08      	ldr	r4, [sp, #32]
 8007c3a:	f10b 33ff 	add.w	r3, fp, #4294967295
 8007c3e:	e001      	b.n	8007c44 <_DrawBitmap+0x5b8>
 8007c40:	465b      	mov	r3, fp
 8007c42:	4652      	mov	r2, sl
 8007c44:	2b01      	cmp	r3, #1
 8007c46:	dd1a      	ble.n	8007c7e <_DrawBitmap+0x5f2>
 8007c48:	1058      	asrs	r0, r3, #1
 8007c4a:	f104 0108 	add.w	r1, r4, #8
 8007c4e:	f003 0301 	and.w	r3, r3, #1
 8007c52:	eb02 0800 	add.w	r8, r2, r0
 8007c56:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 8007c5a:	f006 060f 	and.w	r6, r6, #15
 8007c5e:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 8007c62:	f841 7c08 	str.w	r7, [r1, #-8]
 8007c66:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8007c6a:	f841 6c04 	str.w	r6, [r1, #-4]
 8007c6e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8007c72:	4542      	cmp	r2, r8
 8007c74:	f101 0108 	add.w	r1, r1, #8
 8007c78:	d1ed      	bne.n	8007c56 <_DrawBitmap+0x5ca>
 8007c7a:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 8007c7e:	2b00      	cmp	r3, #0
 8007c80:	f000 8090 	beq.w	8007da4 <_DrawBitmap+0x718>
 8007c84:	0936      	lsrs	r6, r6, #4
 8007c86:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007c8a:	6023      	str	r3, [r4, #0]
 8007c8c:	e08a      	b.n	8007da4 <_DrawBitmap+0x718>
 8007c8e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8007c90:	b1c0      	cbz	r0, 8007cc4 <_DrawBitmap+0x638>
 8007c92:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8007c96:	d00a      	beq.n	8007cae <_DrawBitmap+0x622>
 8007c98:	0936      	lsrs	r6, r6, #4
 8007c9a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007c9e:	6023      	str	r3, [r4, #0]
 8007ca0:	b12f      	cbz	r7, 8007cae <_DrawBitmap+0x622>
 8007ca2:	68bb      	ldr	r3, [r7, #8]
 8007ca4:	9904      	ldr	r1, [sp, #16]
 8007ca6:	681b      	ldr	r3, [r3, #0]
 8007ca8:	9a05      	ldr	r2, [sp, #20]
 8007caa:	4638      	mov	r0, r7
 8007cac:	4798      	blx	r3
 8007cae:	9904      	ldr	r1, [sp, #16]
 8007cb0:	9c08      	ldr	r4, [sp, #32]
 8007cb2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8007cb6:	f101 0801 	add.w	r8, r1, #1
 8007cba:	f10b 3cff 	add.w	ip, fp, #4294967295
 8007cbe:	f10a 0901 	add.w	r9, sl, #1
 8007cc2:	e011      	b.n	8007ce8 <_DrawBitmap+0x65c>
 8007cc4:	46dc      	mov	ip, fp
 8007cc6:	46d1      	mov	r9, sl
 8007cc8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8007ccc:	e00c      	b.n	8007ce8 <_DrawBitmap+0x65c>
 8007cce:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 8007cd2:	d10d      	bne.n	8007cf0 <_DrawBitmap+0x664>
 8007cd4:	f016 060f 	ands.w	r6, r6, #15
 8007cd8:	d11b      	bne.n	8007d12 <_DrawBitmap+0x686>
 8007cda:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 8007cde:	3408      	adds	r4, #8
 8007ce0:	f108 0802 	add.w	r8, r8, #2
 8007ce4:	f1ac 0c02 	sub.w	ip, ip, #2
 8007ce8:	f1bc 0f01 	cmp.w	ip, #1
 8007cec:	dcef      	bgt.n	8007cce <_DrawBitmap+0x642>
 8007cee:	e021      	b.n	8007d34 <_DrawBitmap+0x6a8>
 8007cf0:	0933      	lsrs	r3, r6, #4
 8007cf2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8007cf6:	6023      	str	r3, [r4, #0]
 8007cf8:	2f00      	cmp	r7, #0
 8007cfa:	d0eb      	beq.n	8007cd4 <_DrawBitmap+0x648>
 8007cfc:	68bb      	ldr	r3, [r7, #8]
 8007cfe:	9a05      	ldr	r2, [sp, #20]
 8007d00:	681b      	ldr	r3, [r3, #0]
 8007d02:	f8cd c00c 	str.w	ip, [sp, #12]
 8007d06:	4638      	mov	r0, r7
 8007d08:	4641      	mov	r1, r8
 8007d0a:	4798      	blx	r3
 8007d0c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007d10:	e7e0      	b.n	8007cd4 <_DrawBitmap+0x648>
 8007d12:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007d16:	6063      	str	r3, [r4, #4]
 8007d18:	2f00      	cmp	r7, #0
 8007d1a:	d0de      	beq.n	8007cda <_DrawBitmap+0x64e>
 8007d1c:	68bb      	ldr	r3, [r7, #8]
 8007d1e:	9a05      	ldr	r2, [sp, #20]
 8007d20:	681b      	ldr	r3, [r3, #0]
 8007d22:	f8cd c00c 	str.w	ip, [sp, #12]
 8007d26:	4638      	mov	r0, r7
 8007d28:	f108 0101 	add.w	r1, r8, #1
 8007d2c:	4798      	blx	r3
 8007d2e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007d32:	e7d2      	b.n	8007cda <_DrawBitmap+0x64e>
 8007d34:	f1bc 0f00 	cmp.w	ip, #0
 8007d38:	d034      	beq.n	8007da4 <_DrawBitmap+0x718>
 8007d3a:	0936      	lsrs	r6, r6, #4
 8007d3c:	d032      	beq.n	8007da4 <_DrawBitmap+0x718>
 8007d3e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007d42:	6023      	str	r3, [r4, #0]
 8007d44:	b377      	cbz	r7, 8007da4 <_DrawBitmap+0x718>
 8007d46:	68bb      	ldr	r3, [r7, #8]
 8007d48:	9a05      	ldr	r2, [sp, #20]
 8007d4a:	681b      	ldr	r3, [r3, #0]
 8007d4c:	4638      	mov	r0, r7
 8007d4e:	4641      	mov	r1, r8
 8007d50:	4798      	blx	r3
 8007d52:	e027      	b.n	8007da4 <_DrawBitmap+0x718>
 8007d54:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007d56:	f1c7 0302 	rsb	r3, r7, #2
 8007d5a:	b2db      	uxtb	r3, r3
 8007d5c:	4657      	mov	r7, sl
 8007d5e:	465a      	mov	r2, fp
 8007d60:	4293      	cmp	r3, r2
 8007d62:	bfc8      	it	gt
 8007d64:	b2d3      	uxtbgt	r3, r2
 8007d66:	1ad2      	subs	r2, r2, r3
 8007d68:	1d20      	adds	r0, r4, #4
 8007d6a:	469c      	mov	ip, r3
 8007d6c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8007d70:	d005      	beq.n	8007d7e <_DrawBitmap+0x6f2>
 8007d72:	f850 1c04 	ldr.w	r1, [r0, #-4]
 8007d76:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8007d7a:	f840 1c04 	str.w	r1, [r0, #-4]
 8007d7e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007d82:	0136      	lsls	r6, r6, #4
 8007d84:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8007d88:	b2f6      	uxtb	r6, r6
 8007d8a:	f100 0004 	add.w	r0, r0, #4
 8007d8e:	d1ed      	bne.n	8007d6c <_DrawBitmap+0x6e0>
 8007d90:	3b01      	subs	r3, #1
 8007d92:	b2db      	uxtb	r3, r3
 8007d94:	3301      	adds	r3, #1
 8007d96:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007d9a:	b11a      	cbz	r2, 8007da4 <_DrawBitmap+0x718>
 8007d9c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8007da0:	2302      	movs	r3, #2
 8007da2:	e7dd      	b.n	8007d60 <_DrawBitmap+0x6d4>
 8007da4:	9b05      	ldr	r3, [sp, #20]
 8007da6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8007da8:	3301      	adds	r3, #1
 8007daa:	44ba      	add	sl, r7
 8007dac:	9305      	str	r3, [sp, #20]
 8007dae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007db0:	9b08      	ldr	r3, [sp, #32]
 8007db2:	443b      	add	r3, r7
 8007db4:	9308      	str	r3, [sp, #32]
 8007db6:	e5c3      	b.n	8007940 <_DrawBitmap+0x2b4>
 8007db8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007dba:	b113      	cbz	r3, 8007dc2 <_DrawBitmap+0x736>
 8007dbc:	a80f      	add	r0, sp, #60	; 0x3c
 8007dbe:	f004 fb91 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007dc2:	b011      	add	sp, #68	; 0x44
 8007dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007dc8:	200000c0 	.word	0x200000c0

08007dcc <GUI_MEMDEV__WriteToActiveAt>:
 8007dcc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007dd0:	460e      	mov	r6, r1
 8007dd2:	4690      	mov	r8, r2
 8007dd4:	4607      	mov	r7, r0
 8007dd6:	f004 fb77 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007dda:	6803      	ldr	r3, [r0, #0]
 8007ddc:	ac02      	add	r4, sp, #8
 8007dde:	68db      	ldr	r3, [r3, #12]
 8007de0:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007de4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007de6:	2000      	movs	r0, #0
 8007de8:	2116      	movs	r1, #22
 8007dea:	4798      	blx	r3
 8007dec:	4605      	mov	r5, r0
 8007dee:	4620      	mov	r0, r4
 8007df0:	f004 fb78 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007df4:	b11d      	cbz	r5, 8007dfe <GUI_MEMDEV__WriteToActiveAt+0x32>
 8007df6:	4638      	mov	r0, r7
 8007df8:	4631      	mov	r1, r6
 8007dfa:	4642      	mov	r2, r8
 8007dfc:	47a8      	blx	r5
 8007dfe:	b002      	add	sp, #8
 8007e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007e04 <GUI_MEMDEV__CreateFixed>:
 8007e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e08:	4e3e      	ldr	r6, [pc, #248]	; (8007f04 <GUI_MEMDEV__CreateFixed+0x100>)
 8007e0a:	b087      	sub	sp, #28
 8007e0c:	461d      	mov	r5, r3
 8007e0e:	6833      	ldr	r3, [r6, #0]
 8007e10:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007e12:	7c5b      	ldrb	r3, [r3, #17]
 8007e14:	4683      	mov	fp, r0
 8007e16:	468a      	mov	sl, r1
 8007e18:	4690      	mov	r8, r2
 8007e1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8007e1c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007e1e:	2200      	movs	r2, #0
 8007e20:	f003 fb9a 	bl	800b558 <GUI_DEVICE_Create>
 8007e24:	4604      	mov	r4, r0
 8007e26:	2800      	cmp	r0, #0
 8007e28:	d033      	beq.n	8007e92 <GUI_MEMDEV__CreateFixed+0x8e>
 8007e2a:	6903      	ldr	r3, [r0, #16]
 8007e2c:	689b      	ldr	r3, [r3, #8]
 8007e2e:	4798      	blx	r3
 8007e30:	f001 fb15 	bl	800945e <LCD__GetBPPDevice>
 8007e34:	fb08 f600 	mul.w	r6, r8, r0
 8007e38:	9003      	str	r0, [sp, #12]
 8007e3a:	3607      	adds	r6, #7
 8007e3c:	f004 fc84 	bl	800c748 <GUI_ALLOC_RequestSize>
 8007e40:	f017 0901 	ands.w	r9, r7, #1
 8007e44:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 8007e48:	d104      	bne.n	8007e54 <GUI_MEMDEV__CreateFixed+0x50>
 8007e4a:	2304      	movs	r3, #4
 8007e4c:	fb90 f0f3 	sdiv	r0, r0, r3
 8007e50:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8007e54:	2d00      	cmp	r5, #0
 8007e56:	dc09      	bgt.n	8007e6c <GUI_MEMDEV__CreateFixed+0x68>
 8007e58:	b11e      	cbz	r6, 8007e62 <GUI_MEMDEV__CreateFixed+0x5e>
 8007e5a:	3818      	subs	r0, #24
 8007e5c:	fbb0 f0f6 	udiv	r0, r0, r6
 8007e60:	e000      	b.n	8007e64 <GUI_MEMDEV__CreateFixed+0x60>
 8007e62:	4630      	mov	r0, r6
 8007e64:	426d      	negs	r5, r5
 8007e66:	42a8      	cmp	r0, r5
 8007e68:	bfb8      	it	lt
 8007e6a:	4605      	movlt	r5, r0
 8007e6c:	f1b9 0f00 	cmp.w	r9, #0
 8007e70:	d109      	bne.n	8007e86 <GUI_MEMDEV__CreateFixed+0x82>
 8007e72:	f8cd 9000 	str.w	r9, [sp]
 8007e76:	4658      	mov	r0, fp
 8007e78:	4651      	mov	r1, sl
 8007e7a:	4642      	mov	r2, r8
 8007e7c:	462b      	mov	r3, r5
 8007e7e:	f006 fd75 	bl	800e96c <GUI_USAGE_BM_Create>
 8007e82:	4607      	mov	r7, r0
 8007e84:	e000      	b.n	8007e88 <GUI_MEMDEV__CreateFixed+0x84>
 8007e86:	2700      	movs	r7, #0
 8007e88:	2d00      	cmp	r5, #0
 8007e8a:	dc04      	bgt.n	8007e96 <GUI_MEMDEV__CreateFixed+0x92>
 8007e8c:	4620      	mov	r0, r4
 8007e8e:	f003 fb61 	bl	800b554 <GUI_DEVICE_Delete>
 8007e92:	2000      	movs	r0, #0
 8007e94:	e032      	b.n	8007efc <GUI_MEMDEV__CreateFixed+0xf8>
 8007e96:	fb06 f005 	mul.w	r0, r6, r5
 8007e9a:	3018      	adds	r0, #24
 8007e9c:	f1b9 0f00 	cmp.w	r9, #0
 8007ea0:	d002      	beq.n	8007ea8 <GUI_MEMDEV__CreateFixed+0xa4>
 8007ea2:	f004 fcdd 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 8007ea6:	e001      	b.n	8007eac <GUI_MEMDEV__CreateFixed+0xa8>
 8007ea8:	f004 fd08 	bl	800c8bc <GUI_ALLOC_AllocZero>
 8007eac:	4681      	mov	r9, r0
 8007eae:	b940      	cbnz	r0, 8007ec2 <GUI_MEMDEV__CreateFixed+0xbe>
 8007eb0:	4620      	mov	r0, r4
 8007eb2:	f003 fb4f 	bl	800b554 <GUI_DEVICE_Delete>
 8007eb6:	2f00      	cmp	r7, #0
 8007eb8:	d0eb      	beq.n	8007e92 <GUI_MEMDEV__CreateFixed+0x8e>
 8007eba:	4638      	mov	r0, r7
 8007ebc:	f004 fb3e 	bl	800c53c <GUI_ALLOC_Free>
 8007ec0:	e01b      	b.n	8007efa <GUI_MEMDEV__CreateFixed+0xf6>
 8007ec2:	f004 fb01 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007ec6:	4603      	mov	r3, r0
 8007ec8:	a806      	add	r0, sp, #24
 8007eca:	9a03      	ldr	r2, [sp, #12]
 8007ecc:	f840 3d04 	str.w	r3, [r0, #-4]!
 8007ed0:	611a      	str	r2, [r3, #16]
 8007ed2:	601c      	str	r4, [r3, #0]
 8007ed4:	f8a3 b004 	strh.w	fp, [r3, #4]
 8007ed8:	f8a3 a006 	strh.w	sl, [r3, #6]
 8007edc:	f8a3 8008 	strh.w	r8, [r3, #8]
 8007ee0:	815d      	strh	r5, [r3, #10]
 8007ee2:	60de      	str	r6, [r3, #12]
 8007ee4:	615f      	str	r7, [r3, #20]
 8007ee6:	f004 fafd 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007eea:	4a06      	ldr	r2, [pc, #24]	; (8007f04 <GUI_MEMDEV__CreateFixed+0x100>)
 8007eec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007eee:	6123      	str	r3, [r4, #16]
 8007ef0:	6813      	ldr	r3, [r2, #0]
 8007ef2:	f8c4 9008 	str.w	r9, [r4, #8]
 8007ef6:	7c5b      	ldrb	r3, [r3, #17]
 8007ef8:	61a3      	str	r3, [r4, #24]
 8007efa:	4648      	mov	r0, r9
 8007efc:	b007      	add	sp, #28
 8007efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f02:	bf00      	nop
 8007f04:	200000c0 	.word	0x200000c0

08007f08 <GUI_MEMDEV_GetBitsPerPixel>:
 8007f08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f0a:	4605      	mov	r5, r0
 8007f0c:	b170      	cbz	r0, 8007f2c <GUI_MEMDEV_GetBitsPerPixel+0x24>
 8007f0e:	f004 fadb 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007f12:	6803      	ldr	r3, [r0, #0]
 8007f14:	ac02      	add	r4, sp, #8
 8007f16:	691b      	ldr	r3, [r3, #16]
 8007f18:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007f1c:	689b      	ldr	r3, [r3, #8]
 8007f1e:	4798      	blx	r3
 8007f20:	f001 fa9d 	bl	800945e <LCD__GetBPPDevice>
 8007f24:	4605      	mov	r5, r0
 8007f26:	4620      	mov	r0, r4
 8007f28:	f004 fadc 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007f2c:	4628      	mov	r0, r5
 8007f2e:	b003      	add	sp, #12
 8007f30:	bd30      	pop	{r4, r5, pc}
	...

08007f34 <GUI_MEMDEV_Delete>:
 8007f34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f36:	4604      	mov	r4, r0
 8007f38:	b1d0      	cbz	r0, 8007f70 <GUI_MEMDEV_Delete+0x3c>
 8007f3a:	4b0e      	ldr	r3, [pc, #56]	; (8007f74 <GUI_MEMDEV_Delete+0x40>)
 8007f3c:	681b      	ldr	r3, [r3, #0]
 8007f3e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007f40:	4283      	cmp	r3, r0
 8007f42:	d101      	bne.n	8007f48 <GUI_MEMDEV_Delete+0x14>
 8007f44:	f003 fe54 	bl	800bbf0 <GUI_SelectLCD>
 8007f48:	4620      	mov	r0, r4
 8007f4a:	f004 fabd 	bl	800c4c8 <GUI_ALLOC_LockH>
 8007f4e:	9001      	str	r0, [sp, #4]
 8007f50:	6940      	ldr	r0, [r0, #20]
 8007f52:	b108      	cbz	r0, 8007f58 <GUI_MEMDEV_Delete+0x24>
 8007f54:	f006 fd36 	bl	800e9c4 <GUI_USAGE_DecUseCnt>
 8007f58:	ad02      	add	r5, sp, #8
 8007f5a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8007f5e:	6818      	ldr	r0, [r3, #0]
 8007f60:	f003 faf8 	bl	800b554 <GUI_DEVICE_Delete>
 8007f64:	4628      	mov	r0, r5
 8007f66:	f004 fabd 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8007f6a:	4620      	mov	r0, r4
 8007f6c:	f004 fae6 	bl	800c53c <GUI_ALLOC_Free>
 8007f70:	b003      	add	sp, #12
 8007f72:	bd30      	pop	{r4, r5, pc}
 8007f74:	200000c0 	.word	0x200000c0

08007f78 <GUI_MEMDEV_CreateEx>:
 8007f78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007f7c:	469a      	mov	sl, r3
 8007f7e:	4b19      	ldr	r3, [pc, #100]	; (8007fe4 <GUI_MEMDEV_CreateEx+0x6c>)
 8007f80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	4607      	mov	r7, r0
 8007f86:	7c58      	ldrb	r0, [r3, #17]
 8007f88:	4b17      	ldr	r3, [pc, #92]	; (8007fe8 <GUI_MEMDEV_CreateEx+0x70>)
 8007f8a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8007f8e:	4688      	mov	r8, r1
 8007f90:	4691      	mov	r9, r2
 8007f92:	68e3      	ldr	r3, [r4, #12]
 8007f94:	681b      	ldr	r3, [r3, #0]
 8007f96:	2b04      	cmp	r3, #4
 8007f98:	d006      	beq.n	8007fa8 <GUI_MEMDEV_CreateEx+0x30>
 8007f9a:	6824      	ldr	r4, [r4, #0]
 8007f9c:	2c00      	cmp	r4, #0
 8007f9e:	d1f8      	bne.n	8007f92 <GUI_MEMDEV_CreateEx+0x1a>
 8007fa0:	f003 fac8 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8007fa4:	4604      	mov	r4, r0
 8007fa6:	b130      	cbz	r0, 8007fb6 <GUI_MEMDEV_CreateEx+0x3e>
 8007fa8:	68e3      	ldr	r3, [r4, #12]
 8007faa:	4620      	mov	r0, r4
 8007fac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007fae:	2101      	movs	r1, #1
 8007fb0:	4798      	blx	r3
 8007fb2:	4606      	mov	r6, r0
 8007fb4:	b908      	cbnz	r0, 8007fba <GUI_MEMDEV_CreateEx+0x42>
 8007fb6:	2000      	movs	r0, #0
 8007fb8:	e010      	b.n	8007fdc <GUI_MEMDEV_CreateEx+0x64>
 8007fba:	6924      	ldr	r4, [r4, #16]
 8007fbc:	68a3      	ldr	r3, [r4, #8]
 8007fbe:	4798      	blx	r3
 8007fc0:	3001      	adds	r0, #1
 8007fc2:	bf04      	itt	eq
 8007fc4:	f045 0501 	orreq.w	r5, r5, #1
 8007fc8:	4c08      	ldreq	r4, [pc, #32]	; (8007fec <GUI_MEMDEV_CreateEx+0x74>)
 8007fca:	9402      	str	r4, [sp, #8]
 8007fcc:	e88d 0060 	stmia.w	sp, {r5, r6}
 8007fd0:	4638      	mov	r0, r7
 8007fd2:	4641      	mov	r1, r8
 8007fd4:	464a      	mov	r2, r9
 8007fd6:	4653      	mov	r3, sl
 8007fd8:	f7ff ff14 	bl	8007e04 <GUI_MEMDEV__CreateFixed>
 8007fdc:	b004      	add	sp, #16
 8007fde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007fe2:	bf00      	nop
 8007fe4:	200000c0 	.word	0x200000c0
 8007fe8:	20002d34 	.word	0x20002d34
 8007fec:	08013d9c 	.word	0x08013d9c

08007ff0 <GUI_MEMDEV_Select>:
 8007ff0:	4b11      	ldr	r3, [pc, #68]	; (8008038 <GUI_MEMDEV_Select+0x48>)
 8007ff2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ff4:	681a      	ldr	r2, [r3, #0]
 8007ff6:	4604      	mov	r4, r0
 8007ff8:	6e16      	ldr	r6, [r2, #96]	; 0x60
 8007ffa:	461f      	mov	r7, r3
 8007ffc:	b910      	cbnz	r0, 8008004 <GUI_MEMDEV_Select+0x14>
 8007ffe:	f003 fdf7 	bl	800bbf0 <GUI_SelectLCD>
 8008002:	e016      	b.n	8008032 <GUI_MEMDEV_Select+0x42>
 8008004:	b10e      	cbz	r6, 800800a <GUI_MEMDEV_Select+0x1a>
 8008006:	f003 fdf3 	bl	800bbf0 <GUI_SelectLCD>
 800800a:	f7fe ff31 	bl	8006e70 <WM_Deactivate>
 800800e:	4620      	mov	r0, r4
 8008010:	f004 fa5a 	bl	800c4c8 <GUI_ALLOC_LockH>
 8008014:	ad02      	add	r5, sp, #8
 8008016:	683b      	ldr	r3, [r7, #0]
 8008018:	f845 0d04 	str.w	r0, [r5, #-4]!
 800801c:	661c      	str	r4, [r3, #96]	; 0x60
 800801e:	6800      	ldr	r0, [r0, #0]
 8008020:	f003 fada 	bl	800b5d8 <GUI_DEVICE_Link>
 8008024:	4628      	mov	r0, r5
 8008026:	f004 fa5d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800802a:	f001 f8cf 	bl	80091cc <LCD_UpdateColorIndices>
 800802e:	f001 fcd7 	bl	80099e0 <LCD_SetClipRectMax>
 8008032:	4630      	mov	r0, r6
 8008034:	b003      	add	sp, #12
 8008036:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008038:	200000c0 	.word	0x200000c0

0800803c <GUI_MEMDEV_CopyToLCDAt>:
 800803c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008040:	460c      	mov	r4, r1
 8008042:	b085      	sub	sp, #20
 8008044:	4615      	mov	r5, r2
 8008046:	4606      	mov	r6, r0
 8008048:	2800      	cmp	r0, #0
 800804a:	d041      	beq.n	80080d0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800804c:	2000      	movs	r0, #0
 800804e:	f003 fddc 	bl	800bc0a <GUI_SetDrawMode>
 8008052:	4b21      	ldr	r3, [pc, #132]	; (80080d8 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 8008054:	681b      	ldr	r3, [r3, #0]
 8008056:	4607      	mov	r7, r0
 8008058:	4630      	mov	r0, r6
 800805a:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800805e:	f004 fa33 	bl	800c4c8 <GUI_ALLOC_LockH>
 8008062:	6803      	ldr	r3, [r0, #0]
 8008064:	9001      	str	r0, [sp, #4]
 8008066:	6998      	ldr	r0, [r3, #24]
 8008068:	f002 fc10 	bl	800a88c <GUI_SelectLayer>
 800806c:	4b1b      	ldr	r3, [pc, #108]	; (80080dc <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800806e:	429c      	cmp	r4, r3
 8008070:	9b01      	ldr	r3, [sp, #4]
 8008072:	bf04      	itt	eq
 8008074:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8008078:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800807c:	891a      	ldrh	r2, [r3, #8]
 800807e:	895b      	ldrh	r3, [r3, #10]
 8008080:	f8ad 4008 	strh.w	r4, [sp, #8]
 8008084:	3a01      	subs	r2, #1
 8008086:	3b01      	subs	r3, #1
 8008088:	4422      	add	r2, r4
 800808a:	442b      	add	r3, r5
 800808c:	4681      	mov	r9, r0
 800808e:	f8ad 200c 	strh.w	r2, [sp, #12]
 8008092:	f8ad 300e 	strh.w	r3, [sp, #14]
 8008096:	f8ad 500a 	strh.w	r5, [sp, #10]
 800809a:	f7fe fee1 	bl	8006e60 <WM_Activate>
 800809e:	a801      	add	r0, sp, #4
 80080a0:	f004 fa20 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 80080a4:	a802      	add	r0, sp, #8
 80080a6:	f7fe fd2b 	bl	8006b00 <WM__InitIVRSearch>
 80080aa:	b948      	cbnz	r0, 80080c0 <GUI_MEMDEV_CopyToLCDAt+0x84>
 80080ac:	4648      	mov	r0, r9
 80080ae:	f002 fbed 	bl	800a88c <GUI_SelectLayer>
 80080b2:	4640      	mov	r0, r8
 80080b4:	f7ff ff9c 	bl	8007ff0 <GUI_MEMDEV_Select>
 80080b8:	4638      	mov	r0, r7
 80080ba:	f003 fda6 	bl	800bc0a <GUI_SetDrawMode>
 80080be:	e007      	b.n	80080d0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 80080c0:	4630      	mov	r0, r6
 80080c2:	4621      	mov	r1, r4
 80080c4:	462a      	mov	r2, r5
 80080c6:	f005 ff1d 	bl	800df04 <GUI_MEMDEV__WriteToActiveOpaque>
 80080ca:	f7fe fc57 	bl	800697c <WM__GetNextIVR>
 80080ce:	e7ec      	b.n	80080aa <GUI_MEMDEV_CopyToLCDAt+0x6e>
 80080d0:	b005      	add	sp, #20
 80080d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80080d6:	bf00      	nop
 80080d8:	200000c0 	.word	0x200000c0
 80080dc:	fffff001 	.word	0xfffff001

080080e0 <GUI_MEMDEV_CopyToLCD>:
 80080e0:	4901      	ldr	r1, [pc, #4]	; (80080e8 <GUI_MEMDEV_CopyToLCD+0x8>)
 80080e2:	460a      	mov	r2, r1
 80080e4:	f7ff bfaa 	b.w	800803c <GUI_MEMDEV_CopyToLCDAt>
 80080e8:	fffff001 	.word	0xfffff001

080080ec <_SetPhysRAMAddr>:
 80080ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080ee:	4604      	mov	r4, r0
 80080f0:	460e      	mov	r6, r1
 80080f2:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80080f6:	212a      	movs	r1, #42	; 0x2a
 80080f8:	4615      	mov	r5, r2
 80080fa:	4798      	blx	r3
 80080fc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80080fe:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008102:	4431      	add	r1, r6
 8008104:	4620      	mov	r0, r4
 8008106:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800810a:	4798      	blx	r3
 800810c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800810e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008112:	b2b7      	uxth	r7, r6
 8008114:	4439      	add	r1, r7
 8008116:	4620      	mov	r0, r4
 8008118:	b2c9      	uxtb	r1, r1
 800811a:	4798      	blx	r3
 800811c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800811e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008122:	4431      	add	r1, r6
 8008124:	4620      	mov	r0, r4
 8008126:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800812a:	4798      	blx	r3
 800812c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800812e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008132:	4439      	add	r1, r7
 8008134:	4620      	mov	r0, r4
 8008136:	b2c9      	uxtb	r1, r1
 8008138:	4798      	blx	r3
 800813a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800813e:	4620      	mov	r0, r4
 8008140:	212b      	movs	r1, #43	; 0x2b
 8008142:	4798      	blx	r3
 8008144:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008146:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800814a:	4429      	add	r1, r5
 800814c:	4620      	mov	r0, r4
 800814e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8008152:	4798      	blx	r3
 8008154:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008156:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800815a:	b2ae      	uxth	r6, r5
 800815c:	4431      	add	r1, r6
 800815e:	4620      	mov	r0, r4
 8008160:	b2c9      	uxtb	r1, r1
 8008162:	4798      	blx	r3
 8008164:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008166:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800816a:	4429      	add	r1, r5
 800816c:	4620      	mov	r0, r4
 800816e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8008172:	4798      	blx	r3
 8008174:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008176:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800817a:	4431      	add	r1, r6
 800817c:	4620      	mov	r0, r4
 800817e:	b2c9      	uxtb	r1, r1
 8008180:	4798      	blx	r3
 8008182:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8008186:	4620      	mov	r0, r4
 8008188:	212c      	movs	r1, #44	; 0x2c
 800818a:	4798      	blx	r3
 800818c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800818e <_SetRect>:
 800818e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008192:	4604      	mov	r4, r0
 8008194:	4688      	mov	r8, r1
 8008196:	461f      	mov	r7, r3
 8008198:	212a      	movs	r1, #42	; 0x2a
 800819a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800819e:	9d06      	ldr	r5, [sp, #24]
 80081a0:	4616      	mov	r6, r2
 80081a2:	4798      	blx	r3
 80081a4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80081a6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80081aa:	4441      	add	r1, r8
 80081ac:	4620      	mov	r0, r4
 80081ae:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80081b2:	4798      	blx	r3
 80081b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80081b6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80081ba:	4441      	add	r1, r8
 80081bc:	4620      	mov	r0, r4
 80081be:	b2c9      	uxtb	r1, r1
 80081c0:	4798      	blx	r3
 80081c2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80081c4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80081c8:	4439      	add	r1, r7
 80081ca:	4620      	mov	r0, r4
 80081cc:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80081d0:	4798      	blx	r3
 80081d2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80081d4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80081d8:	4439      	add	r1, r7
 80081da:	4620      	mov	r0, r4
 80081dc:	b2c9      	uxtb	r1, r1
 80081de:	4798      	blx	r3
 80081e0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80081e4:	4620      	mov	r0, r4
 80081e6:	212b      	movs	r1, #43	; 0x2b
 80081e8:	4798      	blx	r3
 80081ea:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80081ec:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80081f0:	4431      	add	r1, r6
 80081f2:	4620      	mov	r0, r4
 80081f4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80081f8:	4798      	blx	r3
 80081fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80081fc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008200:	4431      	add	r1, r6
 8008202:	4620      	mov	r0, r4
 8008204:	b2c9      	uxtb	r1, r1
 8008206:	4798      	blx	r3
 8008208:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800820a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800820e:	4429      	add	r1, r5
 8008210:	4620      	mov	r0, r4
 8008212:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8008216:	4798      	blx	r3
 8008218:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800821a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800821e:	4429      	add	r1, r5
 8008220:	4620      	mov	r0, r4
 8008222:	b2c9      	uxtb	r1, r1
 8008224:	4798      	blx	r3
 8008226:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800822a:	4620      	mov	r0, r4
 800822c:	212c      	movs	r1, #44	; 0x2c
 800822e:	4798      	blx	r3
 8008230:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008234 <_SetOrientation>:
 8008234:	b513      	push	{r0, r1, r4, lr}
 8008236:	4a0d      	ldr	r2, [pc, #52]	; (800826c <_SetOrientation+0x38>)
 8008238:	4604      	mov	r4, r0
 800823a:	6851      	ldr	r1, [r2, #4]
 800823c:	6810      	ldr	r0, [r2, #0]
 800823e:	466b      	mov	r3, sp
 8008240:	c303      	stmia	r3!, {r0, r1}
 8008242:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8008246:	4620      	mov	r0, r4
 8008248:	2136      	movs	r1, #54	; 0x36
 800824a:	4798      	blx	r3
 800824c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800824e:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8008250:	aa02      	add	r2, sp, #8
 8008252:	4413      	add	r3, r2
 8008254:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 8008258:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800825c:	4319      	orrs	r1, r3
 800825e:	4620      	mov	r0, r4
 8008260:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8008264:	b289      	uxth	r1, r1
 8008266:	4798      	blx	r3
 8008268:	b002      	add	sp, #8
 800826a:	bd10      	pop	{r4, pc}
 800826c:	08011048 	.word	0x08011048

08008270 <_ReadPixel_16bpp_B8>:
 8008270:	b513      	push	{r0, r1, r4, lr}
 8008272:	4604      	mov	r4, r0
 8008274:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8008278:	202e      	movs	r0, #46	; 0x2e
 800827a:	4798      	blx	r3
 800827c:	6a21      	ldr	r1, [r4, #32]
 800827e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8008282:	4668      	mov	r0, sp
 8008284:	3103      	adds	r1, #3
 8008286:	4798      	blx	r3
 8008288:	6a22      	ldr	r2, [r4, #32]
 800828a:	ab00      	add	r3, sp, #0
 800828c:	4413      	add	r3, r2
 800828e:	f81d 2002 	ldrb.w	r2, [sp, r2]
 8008292:	7859      	ldrb	r1, [r3, #1]
 8008294:	7898      	ldrb	r0, [r3, #2]
 8008296:	08d2      	lsrs	r2, r2, #3
 8008298:	0889      	lsrs	r1, r1, #2
 800829a:	02d2      	lsls	r2, r2, #11
 800829c:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 80082a0:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 80082a4:	b002      	add	sp, #8
 80082a6:	bd10      	pop	{r4, pc}

080082a8 <_ReadPixel_16bpp_B16_I>:
 80082a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80082aa:	4604      	mov	r4, r0
 80082ac:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80082b0:	202e      	movs	r0, #46	; 0x2e
 80082b2:	4798      	blx	r3
 80082b4:	6a21      	ldr	r1, [r4, #32]
 80082b6:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80082ba:	4668      	mov	r0, sp
 80082bc:	3102      	adds	r1, #2
 80082be:	4798      	blx	r3
 80082c0:	6a23      	ldr	r3, [r4, #32]
 80082c2:	a900      	add	r1, sp, #0
 80082c4:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 80082c8:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 80082cc:	8852      	ldrh	r2, [r2, #2]
 80082ce:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 80082d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80082d6:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 80082da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80082de:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 80082e2:	b004      	add	sp, #16
 80082e4:	bd10      	pop	{r4, pc}

080082e6 <_SetReg_B8>:
 80082e6:	b538      	push	{r3, r4, r5, lr}
 80082e8:	4604      	mov	r4, r0
 80082ea:	460d      	mov	r5, r1
 80082ec:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 80082f0:	0a08      	lsrs	r0, r1, #8
 80082f2:	4798      	blx	r3
 80082f4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80082f8:	b2e8      	uxtb	r0, r5
 80082fa:	4798      	blx	r3
 80082fc:	bd38      	pop	{r3, r4, r5, pc}

080082fe <_SetReg_B16>:
 80082fe:	b508      	push	{r3, lr}
 8008300:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8008304:	4608      	mov	r0, r1
 8008306:	4798      	blx	r3
 8008308:	bd08      	pop	{r3, pc}

0800830a <_WritePara_B8>:
 800830a:	b508      	push	{r3, lr}
 800830c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8008310:	b2c8      	uxtb	r0, r1
 8008312:	4798      	blx	r3
 8008314:	bd08      	pop	{r3, pc}

08008316 <_WritePara_B16>:
 8008316:	b508      	push	{r3, lr}
 8008318:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800831c:	4608      	mov	r0, r1
 800831e:	4798      	blx	r3
 8008320:	bd08      	pop	{r3, pc}
	...

08008324 <_SetInterface>:
 8008324:	2908      	cmp	r1, #8
 8008326:	d002      	beq.n	800832e <_SetInterface+0xa>
 8008328:	2910      	cmp	r1, #16
 800832a:	d005      	beq.n	8008338 <_SetInterface+0x14>
 800832c:	4770      	bx	lr
 800832e:	4b06      	ldr	r3, [pc, #24]	; (8008348 <_SetInterface+0x24>)
 8008330:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 8008334:	4b05      	ldr	r3, [pc, #20]	; (800834c <_SetInterface+0x28>)
 8008336:	e003      	b.n	8008340 <_SetInterface+0x1c>
 8008338:	4b05      	ldr	r3, [pc, #20]	; (8008350 <_SetInterface+0x2c>)
 800833a:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800833e:	4b05      	ldr	r3, [pc, #20]	; (8008354 <_SetInterface+0x30>)
 8008340:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 8008344:	4770      	bx	lr
 8008346:	bf00      	nop
 8008348:	080082e7 	.word	0x080082e7
 800834c:	0800830b 	.word	0x0800830b
 8008350:	080082ff 	.word	0x080082ff
 8008354:	08008317 	.word	0x08008317

08008358 <_ReadRect_16bpp_B8>:
 8008358:	b5f0      	push	{r4, r5, r6, r7, lr}
 800835a:	b085      	sub	sp, #20
 800835c:	6884      	ldr	r4, [r0, #8]
 800835e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008360:	9700      	str	r7, [sp, #0]
 8008362:	1abd      	subs	r5, r7, r2
 8008364:	1a58      	subs	r0, r3, r1
 8008366:	3501      	adds	r5, #1
 8008368:	fb00 5505 	mla	r5, r0, r5, r5
 800836c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008370:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8008372:	4620      	mov	r0, r4
 8008374:	47b8      	blx	r7
 8008376:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800837a:	202e      	movs	r0, #46	; 0x2e
 800837c:	4798      	blx	r3
 800837e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8008382:	6a21      	ldr	r1, [r4, #32]
 8008384:	a802      	add	r0, sp, #8
 8008386:	4798      	blx	r3
 8008388:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800838c:	a802      	add	r0, sp, #8
 800838e:	2103      	movs	r1, #3
 8008390:	4798      	blx	r3
 8008392:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8008396:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800839a:	08db      	lsrs	r3, r3, #3
 800839c:	0892      	lsrs	r2, r2, #2
 800839e:	02db      	lsls	r3, r3, #11
 80083a0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80083a4:	f89d 200a 	ldrb.w	r2, [sp, #10]
 80083a8:	3d01      	subs	r5, #1
 80083aa:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80083ae:	f826 3b02 	strh.w	r3, [r6], #2
 80083b2:	d1e9      	bne.n	8008388 <_ReadRect_16bpp_B8+0x30>
 80083b4:	b005      	add	sp, #20
 80083b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080083b8 <_ReadRect_16bpp_B16_I>:
 80083b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083ba:	b087      	sub	sp, #28
 80083bc:	6884      	ldr	r4, [r0, #8]
 80083be:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80083c0:	9700      	str	r7, [sp, #0]
 80083c2:	1abd      	subs	r5, r7, r2
 80083c4:	1a58      	subs	r0, r3, r1
 80083c6:	3501      	adds	r5, #1
 80083c8:	fb00 5505 	mla	r5, r0, r5, r5
 80083cc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80083d0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80083d2:	4620      	mov	r0, r4
 80083d4:	47b8      	blx	r7
 80083d6:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 80083da:	202e      	movs	r0, #46	; 0x2e
 80083dc:	4798      	blx	r3
 80083de:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80083e2:	6a21      	ldr	r1, [r4, #32]
 80083e4:	a802      	add	r0, sp, #8
 80083e6:	4798      	blx	r3
 80083e8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80083ec:	a802      	add	r0, sp, #8
 80083ee:	2102      	movs	r1, #2
 80083f0:	4798      	blx	r3
 80083f2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80083f6:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 80083fa:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80083fe:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 8008402:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8008406:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800840a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800840e:	3d01      	subs	r5, #1
 8008410:	f826 3b02 	strh.w	r3, [r6], #2
 8008414:	d1e8      	bne.n	80083e8 <_ReadRect_16bpp_B16_I+0x30>
 8008416:	b007      	add	sp, #28
 8008418:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800841c <GUIDRV_FlexColor_SetFunc66709>:
 800841c:	b510      	push	{r4, lr}
 800841e:	4604      	mov	r4, r0
 8008420:	f000 fde2 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8008424:	68a3      	ldr	r3, [r4, #8]
 8008426:	4a12      	ldr	r2, [pc, #72]	; (8008470 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8008428:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800842c:	4a11      	ldr	r2, [pc, #68]	; (8008474 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 800842e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8008432:	4a11      	ldr	r2, [pc, #68]	; (8008478 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 8008434:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8008438:	4a10      	ldr	r2, [pc, #64]	; (800847c <GUIDRV_FlexColor_SetFunc66709+0x60>)
 800843a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800843e:	2200      	movs	r2, #0
 8008440:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8008444:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8008448:	4a0d      	ldr	r2, [pc, #52]	; (8008480 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 800844a:	490e      	ldr	r1, [pc, #56]	; (8008484 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 800844c:	6812      	ldr	r2, [r2, #0]
 800844e:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8008452:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 8008454:	6809      	ldr	r1, [r1, #0]
 8008456:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800845a:	f022 0203 	bic.w	r2, r2, #3
 800845e:	490a      	ldr	r1, [pc, #40]	; (8008488 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 8008460:	84da      	strh	r2, [r3, #38]	; 0x26
 8008462:	4a0a      	ldr	r2, [pc, #40]	; (800848c <GUIDRV_FlexColor_SetFunc66709+0x70>)
 8008464:	f8c3 10cc 	str.w	r1, [r3, #204]	; 0xcc
 8008468:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800846c:	bd10      	pop	{r4, pc}
 800846e:	bf00      	nop
 8008470:	080080ed 	.word	0x080080ed
 8008474:	0800818f 	.word	0x0800818f
 8008478:	08008235 	.word	0x08008235
 800847c:	08008271 	.word	0x08008271
 8008480:	200000a4 	.word	0x200000a4
 8008484:	200000a0 	.word	0x200000a0
 8008488:	08008359 	.word	0x08008359
 800848c:	08008325 	.word	0x08008325

08008490 <_WriteU16_A1>:
 8008490:	b508      	push	{r3, lr}
 8008492:	0a0b      	lsrs	r3, r1, #8
 8008494:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8008498:	f880 1072 	strb.w	r1, [r0, #114]	; 0x72
 800849c:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
 80084a0:	2102      	movs	r1, #2
 80084a2:	3071      	adds	r0, #113	; 0x71
 80084a4:	4798      	blx	r3
 80084a6:	bd08      	pop	{r3, pc}

080084a8 <_WriteDataMP>:
 80084a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80084aa:	6e86      	ldr	r6, [r0, #104]	; 0x68
 80084ac:	4604      	mov	r4, r0
 80084ae:	460f      	mov	r7, r1
 80084b0:	4615      	mov	r5, r2
 80084b2:	2300      	movs	r3, #0
 80084b4:	b1a5      	cbz	r5, 80084e0 <_WriteDataMP+0x38>
 80084b6:	f837 2b02 	ldrh.w	r2, [r7], #2
 80084ba:	4630      	mov	r0, r6
 80084bc:	3301      	adds	r3, #1
 80084be:	0a11      	lsrs	r1, r2, #8
 80084c0:	2bfa      	cmp	r3, #250	; 0xfa
 80084c2:	f800 1b02 	strb.w	r1, [r0], #2
 80084c6:	7072      	strb	r2, [r6, #1]
 80084c8:	d107      	bne.n	80084da <_WriteDataMP+0x32>
 80084ca:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80084ce:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80084d0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80084d4:	4798      	blx	r3
 80084d6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80084d8:	2300      	movs	r3, #0
 80084da:	3d01      	subs	r5, #1
 80084dc:	4606      	mov	r6, r0
 80084de:	e7e9      	b.n	80084b4 <_WriteDataMP+0xc>
 80084e0:	b123      	cbz	r3, 80084ec <_WriteDataMP+0x44>
 80084e2:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 80084e6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 80084e8:	0059      	lsls	r1, r3, #1
 80084ea:	4790      	blx	r2
 80084ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080084ee <_ReadData>:
 80084ee:	b508      	push	{r3, lr}
 80084f0:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 80084f4:	4798      	blx	r3
 80084f6:	bd08      	pop	{r3, pc}

080084f8 <_WriteData>:
 80084f8:	b289      	uxth	r1, r1
 80084fa:	f7ff bfc9 	b.w	8008490 <_WriteU16_A1>
	...

08008500 <_FillRect>:
 8008500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008504:	4f40      	ldr	r7, [pc, #256]	; (8008608 <_FillRect+0x108>)
 8008506:	6884      	ldr	r4, [r0, #8]
 8008508:	4682      	mov	sl, r0
 800850a:	6838      	ldr	r0, [r7, #0]
 800850c:	7c00      	ldrb	r0, [r0, #16]
 800850e:	f010 0f01 	tst.w	r0, #1
 8008512:	b085      	sub	sp, #20
 8008514:	460e      	mov	r6, r1
 8008516:	4615      	mov	r5, r2
 8008518:	4698      	mov	r8, r3
 800851a:	ebc1 0903 	rsb	r9, r1, r3
 800851e:	d045      	beq.n	80085ac <_FillRect+0xac>
 8008520:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 8008524:	980e      	ldr	r0, [sp, #56]	; 0x38
 8008526:	4285      	cmp	r5, r0
 8008528:	dc6b      	bgt.n	8008602 <_FillRect+0x102>
 800852a:	f8d4 c0cc 	ldr.w	ip, [r4, #204]	; 0xcc
 800852e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8008530:	f1bc 0f00 	cmp.w	ip, #0
 8008534:	d101      	bne.n	800853a <_FillRect+0x3a>
 8008536:	46b4      	mov	ip, r6
 8008538:	e007      	b.n	800854a <_FillRect+0x4a>
 800853a:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800853e:	4650      	mov	r0, sl
 8008540:	4631      	mov	r1, r6
 8008542:	462a      	mov	r2, r5
 8008544:	4643      	mov	r3, r8
 8008546:	47e0      	blx	ip
 8008548:	e011      	b.n	800856e <_FillRect+0x6e>
 800854a:	45c4      	cmp	ip, r8
 800854c:	dc0e      	bgt.n	800856c <_FillRect+0x6c>
 800854e:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8008552:	f8cd c00c 	str.w	ip, [sp, #12]
 8008556:	4661      	mov	r1, ip
 8008558:	4650      	mov	r0, sl
 800855a:	462a      	mov	r2, r5
 800855c:	4798      	blx	r3
 800855e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8008562:	f827 0b02 	strh.w	r0, [r7], #2
 8008566:	f10c 0c01 	add.w	ip, ip, #1
 800856a:	e7ee      	b.n	800854a <_FillRect+0x4a>
 800856c:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800856e:	1ebb      	subs	r3, r7, #2
 8008570:	f109 0c01 	add.w	ip, r9, #1
 8008574:	445f      	add	r7, fp
 8008576:	42bb      	cmp	r3, r7
 8008578:	d005      	beq.n	8008586 <_FillRect+0x86>
 800857a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800857c:	8859      	ldrh	r1, [r3, #2]
 800857e:	404a      	eors	r2, r1
 8008580:	f823 2f02 	strh.w	r2, [r3, #2]!
 8008584:	e7f7      	b.n	8008576 <_FillRect+0x76>
 8008586:	9500      	str	r5, [sp, #0]
 8008588:	462a      	mov	r2, r5
 800858a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800858e:	f8cd c00c 	str.w	ip, [sp, #12]
 8008592:	4620      	mov	r0, r4
 8008594:	4631      	mov	r1, r6
 8008596:	4643      	mov	r3, r8
 8008598:	47b8      	blx	r7
 800859a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800859e:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 80085a0:	4620      	mov	r0, r4
 80085a2:	4662      	mov	r2, ip
 80085a4:	f7ff ff80 	bl	80084a8 <_WriteDataMP>
 80085a8:	3501      	adds	r5, #1
 80085aa:	e7bb      	b.n	8008524 <_FillRect+0x24>
 80085ac:	980e      	ldr	r0, [sp, #56]	; 0x38
 80085ae:	9000      	str	r0, [sp, #0]
 80085b0:	1a85      	subs	r5, r0, r2
 80085b2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80085b6:	4620      	mov	r0, r4
 80085b8:	47b0      	blx	r6
 80085ba:	683b      	ldr	r3, [r7, #0]
 80085bc:	6ea6      	ldr	r6, [r4, #104]	; 0x68
 80085be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	f109 0901 	add.w	r9, r9, #1
 80085c6:	fb05 9509 	mla	r5, r5, r9, r9
 80085ca:	f3c3 2807 	ubfx	r8, r3, #8, #8
 80085ce:	fa5f f983 	uxtb.w	r9, r3
 80085d2:	2301      	movs	r3, #1
 80085d4:	b1ad      	cbz	r5, 8008602 <_FillRect+0x102>
 80085d6:	2df9      	cmp	r5, #249	; 0xf9
 80085d8:	bf34      	ite	cc
 80085da:	462f      	movcc	r7, r5
 80085dc:	27f9      	movcs	r7, #249	; 0xf9
 80085de:	0079      	lsls	r1, r7, #1
 80085e0:	b143      	cbz	r3, 80085f4 <_FillRect+0xf4>
 80085e2:	4633      	mov	r3, r6
 80085e4:	1872      	adds	r2, r6, r1
 80085e6:	4293      	cmp	r3, r2
 80085e8:	d004      	beq.n	80085f4 <_FillRect+0xf4>
 80085ea:	f883 8001 	strb.w	r8, [r3, #1]
 80085ee:	f803 9f02 	strb.w	r9, [r3, #2]!
 80085f2:	e7f8      	b.n	80085e6 <_FillRect+0xe6>
 80085f4:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 80085f8:	1c70      	adds	r0, r6, #1
 80085fa:	4790      	blx	r2
 80085fc:	1bed      	subs	r5, r5, r7
 80085fe:	2300      	movs	r3, #0
 8008600:	e7e8      	b.n	80085d4 <_FillRect+0xd4>
 8008602:	b005      	add	sp, #20
 8008604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008608:	200000c0 	.word	0x200000c0

0800860c <_DrawBitmap>:
 800860c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008610:	b08d      	sub	sp, #52	; 0x34
 8008612:	6885      	ldr	r5, [r0, #8]
 8008614:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8008616:	9305      	str	r3, [sp, #20]
 8008618:	1e7b      	subs	r3, r7, #1
 800861a:	2b01      	cmp	r3, #1
 800861c:	9009      	str	r0, [sp, #36]	; 0x24
 800861e:	9108      	str	r1, [sp, #32]
 8008620:	920a      	str	r2, [sp, #40]	; 0x28
 8008622:	950b      	str	r5, [sp, #44]	; 0x2c
 8008624:	d903      	bls.n	800862e <_DrawBitmap+0x22>
 8008626:	2f04      	cmp	r7, #4
 8008628:	d001      	beq.n	800862e <_DrawBitmap+0x22>
 800862a:	2f08      	cmp	r7, #8
 800862c:	d106      	bne.n	800863c <_DrawBitmap+0x30>
 800862e:	4b91      	ldr	r3, [pc, #580]	; (8008874 <_DrawBitmap+0x268>)
 8008630:	681b      	ldr	r3, [r3, #0]
 8008632:	7c1b      	ldrb	r3, [r3, #16]
 8008634:	f003 0303 	and.w	r3, r3, #3
 8008638:	2b02      	cmp	r3, #2
 800863a:	d010      	beq.n	800865e <_DrawBitmap+0x52>
 800863c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800863e:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8008640:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8008642:	9908      	ldr	r1, [sp, #32]
 8008644:	9b05      	ldr	r3, [sp, #20]
 8008646:	443a      	add	r2, r7
 8008648:	4429      	add	r1, r5
 800864a:	3a01      	subs	r2, #1
 800864c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800864e:	9200      	str	r2, [sp, #0]
 8008650:	440b      	add	r3, r1
 8008652:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8008656:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008658:	4628      	mov	r0, r5
 800865a:	3b01      	subs	r3, #1
 800865c:	47a0      	blx	r4
 800865e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8008662:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008664:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8008666:	ebc5 030b 	rsb	r3, r5, fp
 800866a:	42bb      	cmp	r3, r7
 800866c:	f280 8253 	bge.w	8008b16 <_DrawBitmap+0x50a>
 8008670:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8008672:	1e7b      	subs	r3, r7, #1
 8008674:	2b0f      	cmp	r3, #15
 8008676:	f200 8247 	bhi.w	8008b08 <_DrawBitmap+0x4fc>
 800867a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800867e:	0010      	.short	0x0010
 8008680:	024500bb 	.word	0x024500bb
 8008684:	02450144 	.word	0x02450144
 8008688:	02450245 	.word	0x02450245
 800868c:	024501db 	.word	0x024501db
 8008690:	02450245 	.word	0x02450245
 8008694:	02450245 	.word	0x02450245
 8008698:	02450245 	.word	0x02450245
 800869c:	0240      	.short	0x0240
 800869e:	4b75      	ldr	r3, [pc, #468]	; (8008874 <_DrawBitmap+0x268>)
 80086a0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80086a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	68ac      	ldr	r4, [r5, #8]
 80086a8:	7c1b      	ldrb	r3, [r3, #16]
 80086aa:	687d      	ldr	r5, [r7, #4]
 80086ac:	683e      	ldr	r6, [r7, #0]
 80086ae:	9507      	str	r5, [sp, #28]
 80086b0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80086b2:	9d08      	ldr	r5, [sp, #32]
 80086b4:	f003 0303 	and.w	r3, r3, #3
 80086b8:	443d      	add	r5, r7
 80086ba:	2b02      	cmp	r3, #2
 80086bc:	9503      	str	r5, [sp, #12]
 80086be:	d01c      	beq.n	80086fa <_DrawBitmap+0xee>
 80086c0:	2b03      	cmp	r3, #3
 80086c2:	d071      	beq.n	80087a8 <_DrawBitmap+0x19c>
 80086c4:	2b01      	cmp	r3, #1
 80086c6:	d06f      	beq.n	80087a8 <_DrawBitmap+0x19c>
 80086c8:	9f05      	ldr	r7, [sp, #20]
 80086ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80086cc:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 80086d0:	f898 2000 	ldrb.w	r2, [r8]
 80086d4:	2380      	movs	r3, #128	; 0x80
 80086d6:	412b      	asrs	r3, r5
 80086d8:	421a      	tst	r2, r3
 80086da:	bf16      	itet	ne
 80086dc:	9807      	ldrne	r0, [sp, #28]
 80086de:	b2b1      	uxtheq	r1, r6
 80086e0:	b281      	uxthne	r1, r0
 80086e2:	3501      	adds	r5, #1
 80086e4:	4620      	mov	r0, r4
 80086e6:	f7ff fed3 	bl	8008490 <_WriteU16_A1>
 80086ea:	2d08      	cmp	r5, #8
 80086ec:	bf04      	itt	eq
 80086ee:	f108 0801 	addeq.w	r8, r8, #1
 80086f2:	2500      	moveq	r5, #0
 80086f4:	3f01      	subs	r7, #1
 80086f6:	d1eb      	bne.n	80086d0 <_DrawBitmap+0xc4>
 80086f8:	e206      	b.n	8008b08 <_DrawBitmap+0x4fc>
 80086fa:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80086fc:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8008700:	9506      	str	r5, [sp, #24]
 8008702:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8008706:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800870a:	2500      	movs	r5, #0
 800870c:	4656      	mov	r6, sl
 800870e:	462b      	mov	r3, r5
 8008710:	9f06      	ldr	r7, [sp, #24]
 8008712:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8008716:	783a      	ldrb	r2, [r7, #0]
 8008718:	fa4c fc08 	asr.w	ip, ip, r8
 800871c:	ea12 0c0c 	ands.w	ip, r2, ip
 8008720:	d00b      	beq.n	800873a <_DrawBitmap+0x12e>
 8008722:	b913      	cbnz	r3, 800872a <_DrawBitmap+0x11e>
 8008724:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8008728:	46b2      	mov	sl, r6
 800872a:	9f07      	ldr	r7, [sp, #28]
 800872c:	f8a9 7000 	strh.w	r7, [r9]
 8008730:	3501      	adds	r5, #1
 8008732:	f109 0902 	add.w	r9, r9, #2
 8008736:	2301      	movs	r3, #1
 8008738:	e017      	b.n	800876a <_DrawBitmap+0x15e>
 800873a:	2b01      	cmp	r3, #1
 800873c:	d114      	bne.n	8008768 <_DrawBitmap+0x15c>
 800873e:	f8cd b000 	str.w	fp, [sp]
 8008742:	1e73      	subs	r3, r6, #1
 8008744:	f8cd c010 	str.w	ip, [sp, #16]
 8008748:	4620      	mov	r0, r4
 800874a:	4651      	mov	r1, sl
 800874c:	465a      	mov	r2, fp
 800874e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008752:	47b8      	blx	r7
 8008754:	462a      	mov	r2, r5
 8008756:	4620      	mov	r0, r4
 8008758:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800875a:	f7ff fea5 	bl	80084a8 <_WriteDataMP>
 800875e:	f8dd c010 	ldr.w	ip, [sp, #16]
 8008762:	4665      	mov	r5, ip
 8008764:	4663      	mov	r3, ip
 8008766:	e000      	b.n	800876a <_DrawBitmap+0x15e>
 8008768:	4663      	mov	r3, ip
 800876a:	f108 0801 	add.w	r8, r8, #1
 800876e:	f1b8 0f08 	cmp.w	r8, #8
 8008772:	f106 0601 	add.w	r6, r6, #1
 8008776:	d104      	bne.n	8008782 <_DrawBitmap+0x176>
 8008778:	9f06      	ldr	r7, [sp, #24]
 800877a:	3701      	adds	r7, #1
 800877c:	9706      	str	r7, [sp, #24]
 800877e:	f04f 0800 	mov.w	r8, #0
 8008782:	9a05      	ldr	r2, [sp, #20]
 8008784:	9f03      	ldr	r7, [sp, #12]
 8008786:	443a      	add	r2, r7
 8008788:	42b2      	cmp	r2, r6
 800878a:	d1c1      	bne.n	8008710 <_DrawBitmap+0x104>
 800878c:	9f05      	ldr	r7, [sp, #20]
 800878e:	1e7b      	subs	r3, r7, #1
 8008790:	9f03      	ldr	r7, [sp, #12]
 8008792:	443b      	add	r3, r7
 8008794:	2d00      	cmp	r5, #0
 8008796:	f000 81b7 	beq.w	8008b08 <_DrawBitmap+0x4fc>
 800879a:	f8cd b000 	str.w	fp, [sp]
 800879e:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80087a2:	4620      	mov	r0, r4
 80087a4:	4651      	mov	r1, sl
 80087a6:	e13f      	b.n	8008a28 <_DrawBitmap+0x41c>
 80087a8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80087ac:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 80087ae:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80087b0:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80087b4:	9f03      	ldr	r7, [sp, #12]
 80087b6:	782a      	ldrb	r2, [r5, #0]
 80087b8:	2380      	movs	r3, #128	; 0x80
 80087ba:	4133      	asrs	r3, r6
 80087bc:	44b9      	add	r9, r7
 80087be:	421a      	tst	r2, r3
 80087c0:	ebc8 0909 	rsb	r9, r8, r9
 80087c4:	d00d      	beq.n	80087e2 <_DrawBitmap+0x1d6>
 80087c6:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 80087ca:	9809      	ldr	r0, [sp, #36]	; 0x24
 80087cc:	4649      	mov	r1, r9
 80087ce:	465a      	mov	r2, fp
 80087d0:	4798      	blx	r3
 80087d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80087d4:	f8d4 70f8 	ldr.w	r7, [r4, #248]	; 0xf8
 80087d8:	4043      	eors	r3, r0
 80087da:	4649      	mov	r1, r9
 80087dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80087de:	465a      	mov	r2, fp
 80087e0:	47b8      	blx	r7
 80087e2:	3601      	adds	r6, #1
 80087e4:	2e08      	cmp	r6, #8
 80087e6:	bf04      	itt	eq
 80087e8:	3501      	addeq	r5, #1
 80087ea:	2600      	moveq	r6, #0
 80087ec:	f1b8 0801 	subs.w	r8, r8, #1
 80087f0:	d1de      	bne.n	80087b0 <_DrawBitmap+0x1a4>
 80087f2:	e189      	b.n	8008b08 <_DrawBitmap+0x4fc>
 80087f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80087f6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80087f8:	68ac      	ldr	r4, [r5, #8]
 80087fa:	2f00      	cmp	r7, #0
 80087fc:	f000 8184 	beq.w	8008b08 <_DrawBitmap+0x4fc>
 8008800:	4b1c      	ldr	r3, [pc, #112]	; (8008874 <_DrawBitmap+0x268>)
 8008802:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008804:	681b      	ldr	r3, [r3, #0]
 8008806:	f895 a000 	ldrb.w	sl, [r5]
 800880a:	7c1b      	ldrb	r3, [r3, #16]
 800880c:	f013 0303 	ands.w	r3, r3, #3
 8008810:	d011      	beq.n	8008836 <_DrawBitmap+0x22a>
 8008812:	2b02      	cmp	r3, #2
 8008814:	f040 8178 	bne.w	8008b08 <_DrawBitmap+0x4fc>
 8008818:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800881a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800881e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8008820:	9703      	str	r7, [sp, #12]
 8008822:	44a9      	add	r9, r5
 8008824:	46a8      	mov	r8, r5
 8008826:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008828:	9507      	str	r5, [sp, #28]
 800882a:	2500      	movs	r5, #0
 800882c:	f8cd 9018 	str.w	r9, [sp, #24]
 8008830:	464e      	mov	r6, r9
 8008832:	462b      	mov	r3, r5
 8008834:	e040      	b.n	80088b8 <_DrawBitmap+0x2ac>
 8008836:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8008838:	9e05      	ldr	r6, [sp, #20]
 800883a:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800883c:	f1c5 0303 	rsb	r3, r5, #3
 8008840:	005b      	lsls	r3, r3, #1
 8008842:	f1c3 0206 	rsb	r2, r3, #6
 8008846:	21c0      	movs	r1, #192	; 0xc0
 8008848:	fa41 f202 	asr.w	r2, r1, r2
 800884c:	ea02 020a 	and.w	r2, r2, sl
 8008850:	fa22 f303 	lsr.w	r3, r2, r3
 8008854:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8008856:	4620      	mov	r0, r4
 8008858:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 800885c:	3501      	adds	r5, #1
 800885e:	f7ff fe17 	bl	8008490 <_WriteU16_A1>
 8008862:	2d04      	cmp	r5, #4
 8008864:	d103      	bne.n	800886e <_DrawBitmap+0x262>
 8008866:	f897 a001 	ldrb.w	sl, [r7, #1]
 800886a:	2500      	movs	r5, #0
 800886c:	3701      	adds	r7, #1
 800886e:	3e01      	subs	r6, #1
 8008870:	d1e4      	bne.n	800883c <_DrawBitmap+0x230>
 8008872:	e149      	b.n	8008b08 <_DrawBitmap+0x4fc>
 8008874:	200000c0 	.word	0x200000c0
 8008878:	b913      	cbnz	r3, 8008880 <_DrawBitmap+0x274>
 800887a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800887c:	9703      	str	r7, [sp, #12]
 800887e:	9606      	str	r6, [sp, #24]
 8008880:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008882:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8008886:	9f03      	ldr	r7, [sp, #12]
 8008888:	803b      	strh	r3, [r7, #0]
 800888a:	3702      	adds	r7, #2
 800888c:	3501      	adds	r5, #1
 800888e:	9703      	str	r7, [sp, #12]
 8008890:	2301      	movs	r3, #1
 8008892:	f108 0801 	add.w	r8, r8, #1
 8008896:	f1b8 0f04 	cmp.w	r8, #4
 800889a:	f106 0601 	add.w	r6, r6, #1
 800889e:	d106      	bne.n	80088ae <_DrawBitmap+0x2a2>
 80088a0:	9f07      	ldr	r7, [sp, #28]
 80088a2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80088a6:	3701      	adds	r7, #1
 80088a8:	9707      	str	r7, [sp, #28]
 80088aa:	f04f 0800 	mov.w	r8, #0
 80088ae:	9a05      	ldr	r2, [sp, #20]
 80088b0:	444a      	add	r2, r9
 80088b2:	42b2      	cmp	r2, r6
 80088b4:	f000 80ad 	beq.w	8008a12 <_DrawBitmap+0x406>
 80088b8:	f1c8 0203 	rsb	r2, r8, #3
 80088bc:	0052      	lsls	r2, r2, #1
 80088be:	f1c2 0106 	rsb	r1, r2, #6
 80088c2:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 80088c6:	fa4c fc01 	asr.w	ip, ip, r1
 80088ca:	ea0c 0c0a 	and.w	ip, ip, sl
 80088ce:	fa3c fc02 	lsrs.w	ip, ip, r2
 80088d2:	d1d1      	bne.n	8008878 <_DrawBitmap+0x26c>
 80088d4:	2b01      	cmp	r3, #1
 80088d6:	d114      	bne.n	8008902 <_DrawBitmap+0x2f6>
 80088d8:	f8cd b000 	str.w	fp, [sp]
 80088dc:	1e73      	subs	r3, r6, #1
 80088de:	f8cd c010 	str.w	ip, [sp, #16]
 80088e2:	4620      	mov	r0, r4
 80088e4:	9906      	ldr	r1, [sp, #24]
 80088e6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80088ea:	465a      	mov	r2, fp
 80088ec:	47b8      	blx	r7
 80088ee:	462a      	mov	r2, r5
 80088f0:	4620      	mov	r0, r4
 80088f2:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 80088f4:	f7ff fdd8 	bl	80084a8 <_WriteDataMP>
 80088f8:	f8dd c010 	ldr.w	ip, [sp, #16]
 80088fc:	4665      	mov	r5, ip
 80088fe:	4663      	mov	r3, ip
 8008900:	e7c7      	b.n	8008892 <_DrawBitmap+0x286>
 8008902:	4663      	mov	r3, ip
 8008904:	e7c5      	b.n	8008892 <_DrawBitmap+0x286>
 8008906:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8008908:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800890a:	68ac      	ldr	r4, [r5, #8]
 800890c:	2f00      	cmp	r7, #0
 800890e:	f000 80fb 	beq.w	8008b08 <_DrawBitmap+0x4fc>
 8008912:	4b82      	ldr	r3, [pc, #520]	; (8008b1c <_DrawBitmap+0x510>)
 8008914:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008916:	681b      	ldr	r3, [r3, #0]
 8008918:	f895 a000 	ldrb.w	sl, [r5]
 800891c:	7c1b      	ldrb	r3, [r3, #16]
 800891e:	f013 0303 	ands.w	r3, r3, #3
 8008922:	d011      	beq.n	8008948 <_DrawBitmap+0x33c>
 8008924:	2b02      	cmp	r3, #2
 8008926:	f040 80ef 	bne.w	8008b08 <_DrawBitmap+0x4fc>
 800892a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800892c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008930:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8008932:	9703      	str	r7, [sp, #12]
 8008934:	44a9      	add	r9, r5
 8008936:	46a8      	mov	r8, r5
 8008938:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800893a:	9507      	str	r5, [sp, #28]
 800893c:	2500      	movs	r5, #0
 800893e:	f8cd 9018 	str.w	r9, [sp, #24]
 8008942:	464e      	mov	r6, r9
 8008944:	462b      	mov	r3, r5
 8008946:	e03d      	b.n	80089c4 <_DrawBitmap+0x3b8>
 8008948:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800894a:	9e05      	ldr	r6, [sp, #20]
 800894c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800894e:	f1c5 0301 	rsb	r3, r5, #1
 8008952:	009b      	lsls	r3, r3, #2
 8008954:	f1c3 0204 	rsb	r2, r3, #4
 8008958:	21f0      	movs	r1, #240	; 0xf0
 800895a:	fa41 f202 	asr.w	r2, r1, r2
 800895e:	ea02 020a 	and.w	r2, r2, sl
 8008962:	fa22 f303 	lsr.w	r3, r2, r3
 8008966:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8008968:	4620      	mov	r0, r4
 800896a:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 800896e:	3501      	adds	r5, #1
 8008970:	f7ff fd8e 	bl	8008490 <_WriteU16_A1>
 8008974:	2d02      	cmp	r5, #2
 8008976:	d103      	bne.n	8008980 <_DrawBitmap+0x374>
 8008978:	f897 a001 	ldrb.w	sl, [r7, #1]
 800897c:	2500      	movs	r5, #0
 800897e:	3701      	adds	r7, #1
 8008980:	3e01      	subs	r6, #1
 8008982:	d1e4      	bne.n	800894e <_DrawBitmap+0x342>
 8008984:	e0c0      	b.n	8008b08 <_DrawBitmap+0x4fc>
 8008986:	b913      	cbnz	r3, 800898e <_DrawBitmap+0x382>
 8008988:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800898a:	9703      	str	r7, [sp, #12]
 800898c:	9606      	str	r6, [sp, #24]
 800898e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008990:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8008994:	9f03      	ldr	r7, [sp, #12]
 8008996:	803b      	strh	r3, [r7, #0]
 8008998:	3702      	adds	r7, #2
 800899a:	3501      	adds	r5, #1
 800899c:	9703      	str	r7, [sp, #12]
 800899e:	2301      	movs	r3, #1
 80089a0:	f108 0801 	add.w	r8, r8, #1
 80089a4:	f1b8 0f02 	cmp.w	r8, #2
 80089a8:	f106 0601 	add.w	r6, r6, #1
 80089ac:	d106      	bne.n	80089bc <_DrawBitmap+0x3b0>
 80089ae:	9f07      	ldr	r7, [sp, #28]
 80089b0:	f897 a001 	ldrb.w	sl, [r7, #1]
 80089b4:	3701      	adds	r7, #1
 80089b6:	9707      	str	r7, [sp, #28]
 80089b8:	f04f 0800 	mov.w	r8, #0
 80089bc:	9a05      	ldr	r2, [sp, #20]
 80089be:	444a      	add	r2, r9
 80089c0:	42b2      	cmp	r2, r6
 80089c2:	d026      	beq.n	8008a12 <_DrawBitmap+0x406>
 80089c4:	f1c8 0201 	rsb	r2, r8, #1
 80089c8:	0092      	lsls	r2, r2, #2
 80089ca:	f1c2 0104 	rsb	r1, r2, #4
 80089ce:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 80089d2:	fa4c fc01 	asr.w	ip, ip, r1
 80089d6:	ea0c 0c0a 	and.w	ip, ip, sl
 80089da:	fa3c fc02 	lsrs.w	ip, ip, r2
 80089de:	d1d2      	bne.n	8008986 <_DrawBitmap+0x37a>
 80089e0:	2b01      	cmp	r3, #1
 80089e2:	d114      	bne.n	8008a0e <_DrawBitmap+0x402>
 80089e4:	f8cd b000 	str.w	fp, [sp]
 80089e8:	1e73      	subs	r3, r6, #1
 80089ea:	f8cd c010 	str.w	ip, [sp, #16]
 80089ee:	4620      	mov	r0, r4
 80089f0:	9906      	ldr	r1, [sp, #24]
 80089f2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80089f6:	465a      	mov	r2, fp
 80089f8:	47b8      	blx	r7
 80089fa:	462a      	mov	r2, r5
 80089fc:	4620      	mov	r0, r4
 80089fe:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008a00:	f7ff fd52 	bl	80084a8 <_WriteDataMP>
 8008a04:	f8dd c010 	ldr.w	ip, [sp, #16]
 8008a08:	4665      	mov	r5, ip
 8008a0a:	4663      	mov	r3, ip
 8008a0c:	e7c8      	b.n	80089a0 <_DrawBitmap+0x394>
 8008a0e:	4663      	mov	r3, ip
 8008a10:	e7c6      	b.n	80089a0 <_DrawBitmap+0x394>
 8008a12:	9f05      	ldr	r7, [sp, #20]
 8008a14:	1e7b      	subs	r3, r7, #1
 8008a16:	444b      	add	r3, r9
 8008a18:	2d00      	cmp	r5, #0
 8008a1a:	d075      	beq.n	8008b08 <_DrawBitmap+0x4fc>
 8008a1c:	f8cd b000 	str.w	fp, [sp]
 8008a20:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008a24:	9906      	ldr	r1, [sp, #24]
 8008a26:	4620      	mov	r0, r4
 8008a28:	465a      	mov	r2, fp
 8008a2a:	47b0      	blx	r6
 8008a2c:	4620      	mov	r0, r4
 8008a2e:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008a30:	462a      	mov	r2, r5
 8008a32:	e067      	b.n	8008b04 <_DrawBitmap+0x4f8>
 8008a34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8008a36:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008a38:	68ac      	ldr	r4, [r5, #8]
 8008a3a:	2f00      	cmp	r7, #0
 8008a3c:	d064      	beq.n	8008b08 <_DrawBitmap+0x4fc>
 8008a3e:	4b37      	ldr	r3, [pc, #220]	; (8008b1c <_DrawBitmap+0x510>)
 8008a40:	681b      	ldr	r3, [r3, #0]
 8008a42:	7c1b      	ldrb	r3, [r3, #16]
 8008a44:	f013 0303 	ands.w	r3, r3, #3
 8008a48:	d009      	beq.n	8008a5e <_DrawBitmap+0x452>
 8008a4a:	2b02      	cmp	r3, #2
 8008a4c:	d15c      	bne.n	8008b08 <_DrawBitmap+0x4fc>
 8008a4e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008a52:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8008a56:	2600      	movs	r6, #0
 8008a58:	464f      	mov	r7, r9
 8008a5a:	4633      	mov	r3, r6
 8008a5c:	e022      	b.n	8008aa4 <_DrawBitmap+0x498>
 8008a5e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008a60:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008a62:	9f05      	ldr	r7, [sp, #20]
 8008a64:	443b      	add	r3, r7
 8008a66:	1b5b      	subs	r3, r3, r5
 8008a68:	2b00      	cmp	r3, #0
 8008a6a:	dd4d      	ble.n	8008b08 <_DrawBitmap+0x4fc>
 8008a6c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8008a70:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008a72:	4620      	mov	r0, r4
 8008a74:	f837 1023 	ldrh.w	r1, [r7, r3, lsl #2]
 8008a78:	f7ff fd0a 	bl	8008490 <_WriteU16_A1>
 8008a7c:	e7f0      	b.n	8008a60 <_DrawBitmap+0x454>
 8008a7e:	b913      	cbnz	r3, 8008a86 <_DrawBitmap+0x47a>
 8008a80:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8008a84:	46b9      	mov	r9, r7
 8008a86:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008a88:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 8008a8c:	f8a8 3000 	strh.w	r3, [r8]
 8008a90:	3601      	adds	r6, #1
 8008a92:	f108 0802 	add.w	r8, r8, #2
 8008a96:	2301      	movs	r3, #1
 8008a98:	9a08      	ldr	r2, [sp, #32]
 8008a9a:	9d05      	ldr	r5, [sp, #20]
 8008a9c:	3701      	adds	r7, #1
 8008a9e:	442a      	add	r2, r5
 8008aa0:	42ba      	cmp	r2, r7
 8008aa2:	d01c      	beq.n	8008ade <_DrawBitmap+0x4d2>
 8008aa4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008aa6:	9808      	ldr	r0, [sp, #32]
 8008aa8:	1a2a      	subs	r2, r5, r0
 8008aaa:	f812 a007 	ldrb.w	sl, [r2, r7]
 8008aae:	f1ba 0f00 	cmp.w	sl, #0
 8008ab2:	d1e4      	bne.n	8008a7e <_DrawBitmap+0x472>
 8008ab4:	2b01      	cmp	r3, #1
 8008ab6:	d110      	bne.n	8008ada <_DrawBitmap+0x4ce>
 8008ab8:	f8cd b000 	str.w	fp, [sp]
 8008abc:	1e7b      	subs	r3, r7, #1
 8008abe:	4620      	mov	r0, r4
 8008ac0:	4649      	mov	r1, r9
 8008ac2:	465a      	mov	r2, fp
 8008ac4:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8008ac8:	47a8      	blx	r5
 8008aca:	4632      	mov	r2, r6
 8008acc:	4620      	mov	r0, r4
 8008ace:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008ad0:	f7ff fcea 	bl	80084a8 <_WriteDataMP>
 8008ad4:	4656      	mov	r6, sl
 8008ad6:	4653      	mov	r3, sl
 8008ad8:	e7de      	b.n	8008a98 <_DrawBitmap+0x48c>
 8008ada:	4653      	mov	r3, sl
 8008adc:	e7dc      	b.n	8008a98 <_DrawBitmap+0x48c>
 8008ade:	9f08      	ldr	r7, [sp, #32]
 8008ae0:	1e6b      	subs	r3, r5, #1
 8008ae2:	443b      	add	r3, r7
 8008ae4:	b186      	cbz	r6, 8008b08 <_DrawBitmap+0x4fc>
 8008ae6:	f8cd b000 	str.w	fp, [sp]
 8008aea:	4620      	mov	r0, r4
 8008aec:	4649      	mov	r1, r9
 8008aee:	465a      	mov	r2, fp
 8008af0:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8008af4:	47a8      	blx	r5
 8008af6:	4620      	mov	r0, r4
 8008af8:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008afa:	4632      	mov	r2, r6
 8008afc:	e002      	b.n	8008b04 <_DrawBitmap+0x4f8>
 8008afe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008b00:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008b02:	9a05      	ldr	r2, [sp, #20]
 8008b04:	f7ff fcd0 	bl	80084a8 <_WriteDataMP>
 8008b08:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008b0a:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8008b0c:	443d      	add	r5, r7
 8008b0e:	9519      	str	r5, [sp, #100]	; 0x64
 8008b10:	f10b 0b01 	add.w	fp, fp, #1
 8008b14:	e5a5      	b.n	8008662 <_DrawBitmap+0x56>
 8008b16:	b00d      	add	sp, #52	; 0x34
 8008b18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b1c:	200000c0 	.word	0x200000c0

08008b20 <GUIDRV_FlexColor_SetMode16bppC0B8>:
 8008b20:	b510      	push	{r4, lr}
 8008b22:	4604      	mov	r4, r0
 8008b24:	f000 fa60 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8008b28:	68a4      	ldr	r4, [r4, #8]
 8008b2a:	4b10      	ldr	r3, [pc, #64]	; (8008b6c <GUIDRV_FlexColor_SetMode16bppC0B8+0x4c>)
 8008b2c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8008b30:	4b0f      	ldr	r3, [pc, #60]	; (8008b70 <GUIDRV_FlexColor_SetMode16bppC0B8+0x50>)
 8008b32:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8008b36:	4b0f      	ldr	r3, [pc, #60]	; (8008b74 <GUIDRV_FlexColor_SetMode16bppC0B8+0x54>)
 8008b38:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8008b3c:	4b0e      	ldr	r3, [pc, #56]	; (8008b78 <GUIDRV_FlexColor_SetMode16bppC0B8+0x58>)
 8008b3e:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 8008b42:	4b0e      	ldr	r3, [pc, #56]	; (8008b7c <GUIDRV_FlexColor_SetMode16bppC0B8+0x5c>)
 8008b44:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8008b48:	4b0d      	ldr	r3, [pc, #52]	; (8008b80 <GUIDRV_FlexColor_SetMode16bppC0B8+0x60>)
 8008b4a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8008b4e:	f8d4 30cc 	ldr.w	r3, [r4, #204]	; 0xcc
 8008b52:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8008b56:	4620      	mov	r0, r4
 8008b58:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8008b5c:	2108      	movs	r1, #8
 8008b5e:	4798      	blx	r3
 8008b60:	2310      	movs	r3, #16
 8008b62:	63a3      	str	r3, [r4, #56]	; 0x38
 8008b64:	4b07      	ldr	r3, [pc, #28]	; (8008b84 <GUIDRV_FlexColor_SetMode16bppC0B8+0x64>)
 8008b66:	6463      	str	r3, [r4, #68]	; 0x44
 8008b68:	bd10      	pop	{r4, pc}
 8008b6a:	bf00      	nop
 8008b6c:	0800860d 	.word	0x0800860d
 8008b70:	08008501 	.word	0x08008501
 8008b74:	08008f37 	.word	0x08008f37
 8008b78:	08008ea7 	.word	0x08008ea7
 8008b7c:	080084ef 	.word	0x080084ef
 8008b80:	080084f9 	.word	0x080084f9
 8008b84:	08013e28 	.word	0x08013e28

08008b88 <_Log2PhysX_X0Y0S0>:
 8008b88:	4608      	mov	r0, r1
 8008b8a:	4770      	bx	lr

08008b8c <_Log2PhysX_X1Y0S0>:
 8008b8c:	6800      	ldr	r0, [r0, #0]
 8008b8e:	1a40      	subs	r0, r0, r1
 8008b90:	3801      	subs	r0, #1
 8008b92:	4770      	bx	lr

08008b94 <_Log2PhysX_X0Y1S0>:
 8008b94:	4608      	mov	r0, r1
 8008b96:	4770      	bx	lr

08008b98 <_Log2PhysX_X1Y1S0>:
 8008b98:	6800      	ldr	r0, [r0, #0]
 8008b9a:	1a40      	subs	r0, r0, r1
 8008b9c:	3801      	subs	r0, #1
 8008b9e:	4770      	bx	lr

08008ba0 <_Log2PhysX_X0Y0S1>:
 8008ba0:	4610      	mov	r0, r2
 8008ba2:	4770      	bx	lr

08008ba4 <_Log2PhysX_X1Y0S1>:
 8008ba4:	6840      	ldr	r0, [r0, #4]
 8008ba6:	1a80      	subs	r0, r0, r2
 8008ba8:	3801      	subs	r0, #1
 8008baa:	4770      	bx	lr

08008bac <_Log2PhysX_X0Y1S1>:
 8008bac:	4610      	mov	r0, r2
 8008bae:	4770      	bx	lr

08008bb0 <_Log2PhysX_X1Y1S1>:
 8008bb0:	6840      	ldr	r0, [r0, #4]
 8008bb2:	1a80      	subs	r0, r0, r2
 8008bb4:	3801      	subs	r0, #1
 8008bb6:	4770      	bx	lr

08008bb8 <_Log2PhysY_X0Y0S0>:
 8008bb8:	4610      	mov	r0, r2
 8008bba:	4770      	bx	lr

08008bbc <_Log2PhysY_X1Y0S0>:
 8008bbc:	4610      	mov	r0, r2
 8008bbe:	4770      	bx	lr

08008bc0 <_Log2PhysY_X0Y1S0>:
 8008bc0:	6840      	ldr	r0, [r0, #4]
 8008bc2:	1a80      	subs	r0, r0, r2
 8008bc4:	3801      	subs	r0, #1
 8008bc6:	4770      	bx	lr

08008bc8 <_Log2PhysY_X1Y1S0>:
 8008bc8:	6840      	ldr	r0, [r0, #4]
 8008bca:	1a80      	subs	r0, r0, r2
 8008bcc:	3801      	subs	r0, #1
 8008bce:	4770      	bx	lr

08008bd0 <_Log2PhysY_X0Y0S1>:
 8008bd0:	4608      	mov	r0, r1
 8008bd2:	4770      	bx	lr

08008bd4 <_Log2PhysY_X1Y0S1>:
 8008bd4:	4608      	mov	r0, r1
 8008bd6:	4770      	bx	lr

08008bd8 <_Log2PhysY_X0Y1S1>:
 8008bd8:	6800      	ldr	r0, [r0, #0]
 8008bda:	1a40      	subs	r0, r0, r1
 8008bdc:	3801      	subs	r0, #1
 8008bde:	4770      	bx	lr

08008be0 <_Log2PhysY_X1Y1S1>:
 8008be0:	6800      	ldr	r0, [r0, #0]
 8008be2:	1a40      	subs	r0, r0, r1
 8008be4:	3801      	subs	r0, #1
 8008be6:	4770      	bx	lr

08008be8 <_SetPixelIndex>:
 8008be8:	b510      	push	{r4, lr}
 8008bea:	6884      	ldr	r4, [r0, #8]
 8008bec:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
 8008bf0:	47a0      	blx	r4
 8008bf2:	bd10      	pop	{r4, pc}

08008bf4 <_GetPixelIndex>:
 8008bf4:	b508      	push	{r3, lr}
 8008bf6:	6883      	ldr	r3, [r0, #8]
 8008bf8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8008bfc:	4798      	blx	r3
 8008bfe:	bd08      	pop	{r3, pc}

08008c00 <_XorPixel>:
 8008c00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c02:	4604      	mov	r4, r0
 8008c04:	460f      	mov	r7, r1
 8008c06:	4616      	mov	r6, r2
 8008c08:	6885      	ldr	r5, [r0, #8]
 8008c0a:	f7ff fff3 	bl	8008bf4 <_GetPixelIndex>
 8008c0e:	9001      	str	r0, [sp, #4]
 8008c10:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008c14:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008c16:	4620      	mov	r0, r4
 8008c18:	4639      	mov	r1, r7
 8008c1a:	4632      	mov	r2, r6
 8008c1c:	ea8e 0303 	eor.w	r3, lr, r3
 8008c20:	f7ff ffe2 	bl	8008be8 <_SetPixelIndex>
 8008c24:	b003      	add	sp, #12
 8008c26:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008c28 <_DrawHLine>:
 8008c28:	b513      	push	{r0, r1, r4, lr}
 8008c2a:	6884      	ldr	r4, [r0, #8]
 8008c2c:	9200      	str	r2, [sp, #0]
 8008c2e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8008c32:	47a0      	blx	r4
 8008c34:	b002      	add	sp, #8
 8008c36:	bd10      	pop	{r4, pc}

08008c38 <_DrawVLine>:
 8008c38:	b513      	push	{r0, r1, r4, lr}
 8008c3a:	6884      	ldr	r4, [r0, #8]
 8008c3c:	9300      	str	r3, [sp, #0]
 8008c3e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8008c42:	460b      	mov	r3, r1
 8008c44:	47a0      	blx	r4
 8008c46:	b002      	add	sp, #8
 8008c48:	bd10      	pop	{r4, pc}

08008c4a <_FillRect>:
 8008c4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c4c:	9c06      	ldr	r4, [sp, #24]
 8008c4e:	6885      	ldr	r5, [r0, #8]
 8008c50:	9400      	str	r4, [sp, #0]
 8008c52:	f8d5 40f0 	ldr.w	r4, [r5, #240]	; 0xf0
 8008c56:	47a0      	blx	r4
 8008c58:	b003      	add	sp, #12
 8008c5a:	bd30      	pop	{r4, r5, pc}

08008c5c <_DrawBitmap>:
 8008c5c:	b530      	push	{r4, r5, lr}
 8008c5e:	b087      	sub	sp, #28
 8008c60:	6885      	ldr	r5, [r0, #8]
 8008c62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008c64:	9400      	str	r4, [sp, #0]
 8008c66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008c68:	9401      	str	r4, [sp, #4]
 8008c6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8008c6c:	9402      	str	r4, [sp, #8]
 8008c6e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008c70:	9403      	str	r4, [sp, #12]
 8008c72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8008c74:	9404      	str	r4, [sp, #16]
 8008c76:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8008c78:	9405      	str	r4, [sp, #20]
 8008c7a:	f8d5 40ec 	ldr.w	r4, [r5, #236]	; 0xec
 8008c7e:	47a0      	blx	r4
 8008c80:	b007      	add	sp, #28
 8008c82:	bd30      	pop	{r4, r5, pc}

08008c84 <_GetDevFunc_SetRect>:
 8008c84:	4770      	bx	lr
	...

08008c88 <_GetDevFunc_SetRectOutside>:
 8008c88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008c8a:	9e07      	ldr	r6, [sp, #28]
 8008c8c:	6884      	ldr	r4, [r0, #8]
 8008c8e:	4d0c      	ldr	r5, [pc, #48]	; (8008cc0 <_GetDevFunc_SetRectOutside+0x38>)
 8008c90:	b176      	cbz	r6, 8008cb0 <_GetDevFunc_SetRectOutside+0x28>
 8008c92:	6828      	ldr	r0, [r5, #0]
 8008c94:	b988      	cbnz	r0, 8008cba <_GetDevFunc_SetRectOutside+0x32>
 8008c96:	9806      	ldr	r0, [sp, #24]
 8008c98:	9000      	str	r0, [sp, #0]
 8008c9a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008c9e:	4620      	mov	r0, r4
 8008ca0:	47b0      	blx	r6
 8008ca2:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 8008ca6:	602b      	str	r3, [r5, #0]
 8008ca8:	4b06      	ldr	r3, [pc, #24]	; (8008cc4 <_GetDevFunc_SetRectOutside+0x3c>)
 8008caa:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8008cae:	e004      	b.n	8008cba <_GetDevFunc_SetRectOutside+0x32>
 8008cb0:	682b      	ldr	r3, [r5, #0]
 8008cb2:	b113      	cbz	r3, 8008cba <_GetDevFunc_SetRectOutside+0x32>
 8008cb4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8008cb8:	602e      	str	r6, [r5, #0]
 8008cba:	b002      	add	sp, #8
 8008cbc:	bd70      	pop	{r4, r5, r6, pc}
 8008cbe:	bf00      	nop
 8008cc0:	20002b04 	.word	0x20002b04
 8008cc4:	08008c85 	.word	0x08008c85

08008cc8 <_ReadPixelCust_16bpp>:
 8008cc8:	b508      	push	{r3, lr}
 8008cca:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8008ccc:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8008cd0:	6990      	ldr	r0, [r2, #24]
 8008cd2:	4798      	blx	r3
 8008cd4:	bd08      	pop	{r3, pc}

08008cd6 <_ReadPixelCust_18bpp>:
 8008cd6:	b508      	push	{r3, lr}
 8008cd8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8008cda:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
 8008cde:	6990      	ldr	r0, [r2, #24]
 8008ce0:	4798      	blx	r3
 8008ce2:	bd08      	pop	{r3, pc}

08008ce4 <_ReadRectCust_16bpp>:
 8008ce4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008ce8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008cea:	6884      	ldr	r4, [r0, #8]
 8008cec:	9500      	str	r5, [sp, #0]
 8008cee:	4617      	mov	r7, r2
 8008cf0:	4620      	mov	r0, r4
 8008cf2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008cf6:	4699      	mov	r9, r3
 8008cf8:	4688      	mov	r8, r1
 8008cfa:	1bed      	subs	r5, r5, r7
 8008cfc:	47b0      	blx	r6
 8008cfe:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008d00:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8008d04:	6988      	ldr	r0, [r1, #24]
 8008d06:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008d08:	ebc8 0809 	rsb	r8, r8, r9
 8008d0c:	1c6a      	adds	r2, r5, #1
 8008d0e:	fb08 2202 	mla	r2, r8, r2, r2
 8008d12:	4798      	blx	r3
 8008d14:	b003      	add	sp, #12
 8008d16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008d1a <_ReadRectCust_18bpp>:
 8008d1a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008d1e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008d20:	6884      	ldr	r4, [r0, #8]
 8008d22:	9500      	str	r5, [sp, #0]
 8008d24:	4617      	mov	r7, r2
 8008d26:	4620      	mov	r0, r4
 8008d28:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008d2c:	4699      	mov	r9, r3
 8008d2e:	4688      	mov	r8, r1
 8008d30:	1bed      	subs	r5, r5, r7
 8008d32:	47b0      	blx	r6
 8008d34:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008d36:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8008d3a:	6988      	ldr	r0, [r1, #24]
 8008d3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008d3e:	ebc8 0809 	rsb	r8, r8, r9
 8008d42:	1c6a      	adds	r2, r5, #1
 8008d44:	fb08 2202 	mla	r2, r8, r2, r2
 8008d48:	4798      	blx	r3
 8008d4a:	b003      	add	sp, #12
 8008d4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008d50 <_GetDevFunc>:
 8008d50:	3901      	subs	r1, #1
 8008d52:	2917      	cmp	r1, #23
 8008d54:	d828      	bhi.n	8008da8 <_GetDevFunc+0x58>
 8008d56:	e8df f001 	tbb	[pc, r1]
 8008d5a:	2714      	.short	0x2714
 8008d5c:	27272727 	.word	0x27272727
 8008d60:	0e272727 	.word	0x0e272727
 8008d64:	0c191210 	.word	0x0c191210
 8008d68:	27272729 	.word	0x27272729
 8008d6c:	23272727 	.word	0x23272727
 8008d70:	251e      	.short	0x251e
 8008d72:	480f      	ldr	r0, [pc, #60]	; (8008db0 <_GetDevFunc+0x60>)
 8008d74:	4770      	bx	lr
 8008d76:	480f      	ldr	r0, [pc, #60]	; (8008db4 <_GetDevFunc+0x64>)
 8008d78:	4770      	bx	lr
 8008d7a:	480f      	ldr	r0, [pc, #60]	; (8008db8 <_GetDevFunc+0x68>)
 8008d7c:	4770      	bx	lr
 8008d7e:	480f      	ldr	r0, [pc, #60]	; (8008dbc <_GetDevFunc+0x6c>)
 8008d80:	4770      	bx	lr
 8008d82:	6803      	ldr	r3, [r0, #0]
 8008d84:	689b      	ldr	r3, [r3, #8]
 8008d86:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
 8008d8a:	4770      	bx	lr
 8008d8c:	6803      	ldr	r3, [r0, #0]
 8008d8e:	689b      	ldr	r3, [r3, #8]
 8008d90:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 8008d94:	4770      	bx	lr
 8008d96:	6803      	ldr	r3, [r0, #0]
 8008d98:	689b      	ldr	r3, [r3, #8]
 8008d9a:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
 8008d9e:	4770      	bx	lr
 8008da0:	4807      	ldr	r0, [pc, #28]	; (8008dc0 <_GetDevFunc+0x70>)
 8008da2:	4770      	bx	lr
 8008da4:	4807      	ldr	r0, [pc, #28]	; (8008dc4 <_GetDevFunc+0x74>)
 8008da6:	4770      	bx	lr
 8008da8:	2000      	movs	r0, #0
 8008daa:	4770      	bx	lr
 8008dac:	4806      	ldr	r0, [pc, #24]	; (8008dc8 <_GetDevFunc+0x78>)
 8008dae:	4770      	bx	lr
 8008db0:	08009149 	.word	0x08009149
 8008db4:	0800911f 	.word	0x0800911f
 8008db8:	0800910b 	.word	0x0800910b
 8008dbc:	080090c1 	.word	0x080090c1
 8008dc0:	08009025 	.word	0x08009025
 8008dc4:	08008c89 	.word	0x08008c89
 8008dc8:	08009133 	.word	0x08009133

08008dcc <_GetDevProp>:
 8008dcc:	3901      	subs	r1, #1
 8008dce:	6880      	ldr	r0, [r0, #8]
 8008dd0:	290d      	cmp	r1, #13
 8008dd2:	d823      	bhi.n	8008e1c <_GetDevProp+0x50>
 8008dd4:	e8df f001 	tbb	[pc, r1]
 8008dd8:	0f0d0b09 	.word	0x0f0d0b09
 8008ddc:	11222222 	.word	0x11222222
 8008de0:	13252507 	.word	0x13252507
 8008de4:	1d18      	.short	0x1d18
 8008de6:	2000      	movs	r0, #0
 8008de8:	4770      	bx	lr
 8008dea:	6800      	ldr	r0, [r0, #0]
 8008dec:	4770      	bx	lr
 8008dee:	6840      	ldr	r0, [r0, #4]
 8008df0:	4770      	bx	lr
 8008df2:	6880      	ldr	r0, [r0, #8]
 8008df4:	4770      	bx	lr
 8008df6:	68c0      	ldr	r0, [r0, #12]
 8008df8:	4770      	bx	lr
 8008dfa:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8008dfc:	4770      	bx	lr
 8008dfe:	b188      	cbz	r0, 8008e24 <_GetDevProp+0x58>
 8008e00:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008e02:	f000 0001 	and.w	r0, r0, #1
 8008e06:	4770      	bx	lr
 8008e08:	b160      	cbz	r0, 8008e24 <_GetDevProp+0x58>
 8008e0a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008e0c:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8008e10:	4770      	bx	lr
 8008e12:	b138      	cbz	r0, 8008e24 <_GetDevProp+0x58>
 8008e14:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008e16:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8008e1a:	4770      	bx	lr
 8008e1c:	f04f 30ff 	mov.w	r0, #4294967295
 8008e20:	4770      	bx	lr
 8008e22:	2001      	movs	r0, #1
 8008e24:	4770      	bx	lr

08008e26 <_GetDevData>:
 8008e26:	6883      	ldr	r3, [r0, #8]
 8008e28:	2901      	cmp	r1, #1
 8008e2a:	bf0c      	ite	eq
 8008e2c:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 8008e2e:	2000      	movne	r0, #0
 8008e30:	4770      	bx	lr

08008e32 <_GetRect>:
 8008e32:	6883      	ldr	r3, [r0, #8]
 8008e34:	2200      	movs	r2, #0
 8008e36:	800a      	strh	r2, [r1, #0]
 8008e38:	804a      	strh	r2, [r1, #2]
 8008e3a:	681a      	ldr	r2, [r3, #0]
 8008e3c:	685b      	ldr	r3, [r3, #4]
 8008e3e:	3a01      	subs	r2, #1
 8008e40:	3b01      	subs	r3, #1
 8008e42:	808a      	strh	r2, [r1, #4]
 8008e44:	80cb      	strh	r3, [r1, #6]
 8008e46:	4770      	bx	lr

08008e48 <GUIDRV_FlexColor__SetLog2Phys>:
 8008e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e4a:	4d10      	ldr	r5, [pc, #64]	; (8008e8c <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 8008e4c:	462e      	mov	r6, r5
 8008e4e:	4607      	mov	r7, r0
 8008e50:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008e52:	b091      	sub	sp, #68	; 0x44
 8008e54:	466c      	mov	r4, sp
 8008e56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e58:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8008e5c:	3520      	adds	r5, #32
 8008e5e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008e62:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008e64:	ac08      	add	r4, sp, #32
 8008e66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e68:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008e6c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008e70:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008e72:	aa10      	add	r2, sp, #64	; 0x40
 8008e74:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008e78:	f853 2c40 	ldr.w	r2, [r3, #-64]
 8008e7c:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
 8008e80:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8008e84:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8008e88:	b011      	add	sp, #68	; 0x44
 8008e8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e8c:	08011050 	.word	0x08011050

08008e90 <_SetOrg>:
 8008e90:	b507      	push	{r0, r1, r2, lr}
 8008e92:	6980      	ldr	r0, [r0, #24]
 8008e94:	e88d 0006 	stmia.w	sp, {r1, r2}
 8008e98:	2103      	movs	r1, #3
 8008e9a:	466a      	mov	r2, sp
 8008e9c:	f7f7 ffe8 	bl	8000e70 <LCD_X_DisplayDriver>
 8008ea0:	b003      	add	sp, #12
 8008ea2:	f85d fb04 	ldr.w	pc, [sp], #4

08008ea6 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 8008ea6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008eaa:	6884      	ldr	r4, [r0, #8]
 8008eac:	4698      	mov	r8, r3
 8008eae:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8008eb0:	079b      	lsls	r3, r3, #30
 8008eb2:	4689      	mov	r9, r1
 8008eb4:	4617      	mov	r7, r2
 8008eb6:	d532      	bpl.n	8008f1e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 8008eb8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008ebc:	4620      	mov	r0, r4
 8008ebe:	4798      	blx	r3
 8008ec0:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 8008ec4:	4606      	mov	r6, r0
 8008ec6:	463a      	mov	r2, r7
 8008ec8:	4620      	mov	r0, r4
 8008eca:	4649      	mov	r1, r9
 8008ecc:	47a8      	blx	r5
 8008ece:	6923      	ldr	r3, [r4, #16]
 8008ed0:	69a2      	ldr	r2, [r4, #24]
 8008ed2:	429e      	cmp	r6, r3
 8008ed4:	bfac      	ite	ge
 8008ed6:	2300      	movge	r3, #0
 8008ed8:	2301      	movlt	r3, #1
 8008eda:	4296      	cmp	r6, r2
 8008edc:	bfd4      	ite	le
 8008ede:	461a      	movle	r2, r3
 8008ee0:	f043 0201 	orrgt.w	r2, r3, #1
 8008ee4:	6963      	ldr	r3, [r4, #20]
 8008ee6:	4298      	cmp	r0, r3
 8008ee8:	bfac      	ite	ge
 8008eea:	4613      	movge	r3, r2
 8008eec:	f042 0301 	orrlt.w	r3, r2, #1
 8008ef0:	4605      	mov	r5, r0
 8008ef2:	b913      	cbnz	r3, 8008efa <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 8008ef4:	69e3      	ldr	r3, [r4, #28]
 8008ef6:	4298      	cmp	r0, r3
 8008ef8:	dd0a      	ble.n	8008f10 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 8008efa:	6862      	ldr	r2, [r4, #4]
 8008efc:	6823      	ldr	r3, [r4, #0]
 8008efe:	3a01      	subs	r2, #1
 8008f00:	9200      	str	r2, [sp, #0]
 8008f02:	2100      	movs	r1, #0
 8008f04:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008f08:	4620      	mov	r0, r4
 8008f0a:	460a      	mov	r2, r1
 8008f0c:	3b01      	subs	r3, #1
 8008f0e:	47b8      	blx	r7
 8008f10:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 8008f14:	4620      	mov	r0, r4
 8008f16:	4631      	mov	r1, r6
 8008f18:	462a      	mov	r2, r5
 8008f1a:	47b8      	blx	r7
 8008f1c:	e003      	b.n	8008f26 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 8008f1e:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 8008f22:	4620      	mov	r0, r4
 8008f24:	47a8      	blx	r5
 8008f26:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008f2a:	4620      	mov	r0, r4
 8008f2c:	4641      	mov	r1, r8
 8008f2e:	4798      	blx	r3
 8008f30:	b003      	add	sp, #12
 8008f32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008f36 <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 8008f36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f38:	6884      	ldr	r4, [r0, #8]
 8008f3a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8008f3c:	079b      	lsls	r3, r3, #30
 8008f3e:	460f      	mov	r7, r1
 8008f40:	4616      	mov	r6, r2
 8008f42:	d545      	bpl.n	8008fd0 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 8008f44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008f48:	4620      	mov	r0, r4
 8008f4a:	4798      	blx	r3
 8008f4c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008f50:	4632      	mov	r2, r6
 8008f52:	4605      	mov	r5, r0
 8008f54:	4639      	mov	r1, r7
 8008f56:	4620      	mov	r0, r4
 8008f58:	4798      	blx	r3
 8008f5a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8008f5e:	4606      	mov	r6, r0
 8008f60:	b11b      	cbz	r3, 8008f6a <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 8008f62:	4620      	mov	r0, r4
 8008f64:	2101      	movs	r1, #1
 8008f66:	2200      	movs	r2, #0
 8008f68:	4798      	blx	r3
 8008f6a:	6923      	ldr	r3, [r4, #16]
 8008f6c:	69a2      	ldr	r2, [r4, #24]
 8008f6e:	429d      	cmp	r5, r3
 8008f70:	bfac      	ite	ge
 8008f72:	2300      	movge	r3, #0
 8008f74:	2301      	movlt	r3, #1
 8008f76:	4295      	cmp	r5, r2
 8008f78:	bfd4      	ite	le
 8008f7a:	461a      	movle	r2, r3
 8008f7c:	f043 0201 	orrgt.w	r2, r3, #1
 8008f80:	6963      	ldr	r3, [r4, #20]
 8008f82:	429e      	cmp	r6, r3
 8008f84:	bfac      	ite	ge
 8008f86:	4613      	movge	r3, r2
 8008f88:	f042 0301 	orrlt.w	r3, r2, #1
 8008f8c:	b913      	cbnz	r3, 8008f94 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 8008f8e:	69e3      	ldr	r3, [r4, #28]
 8008f90:	429e      	cmp	r6, r3
 8008f92:	dd0a      	ble.n	8008faa <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 8008f94:	6862      	ldr	r2, [r4, #4]
 8008f96:	6823      	ldr	r3, [r4, #0]
 8008f98:	3a01      	subs	r2, #1
 8008f9a:	9200      	str	r2, [sp, #0]
 8008f9c:	2100      	movs	r1, #0
 8008f9e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008fa2:	4620      	mov	r0, r4
 8008fa4:	460a      	mov	r2, r1
 8008fa6:	3b01      	subs	r3, #1
 8008fa8:	47b8      	blx	r7
 8008faa:	4629      	mov	r1, r5
 8008fac:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	4632      	mov	r2, r6
 8008fb4:	4798      	blx	r3
 8008fb6:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 8008fba:	4620      	mov	r0, r4
 8008fbc:	4798      	blx	r3
 8008fbe:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8008fc2:	4605      	mov	r5, r0
 8008fc4:	b16b      	cbz	r3, 8008fe2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8008fc6:	4620      	mov	r0, r4
 8008fc8:	2100      	movs	r1, #0
 8008fca:	2201      	movs	r2, #1
 8008fcc:	4798      	blx	r3
 8008fce:	e008      	b.n	8008fe2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8008fd0:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8008fd4:	4620      	mov	r0, r4
 8008fd6:	4798      	blx	r3
 8008fd8:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 8008fdc:	4620      	mov	r0, r4
 8008fde:	4798      	blx	r3
 8008fe0:	4605      	mov	r5, r0
 8008fe2:	4628      	mov	r0, r5
 8008fe4:	b003      	add	sp, #12
 8008fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008fe8 <GUIDRV_FlexColor__InitOnce>:
 8008fe8:	b538      	push	{r3, r4, r5, lr}
 8008fea:	6885      	ldr	r5, [r0, #8]
 8008fec:	4604      	mov	r4, r0
 8008fee:	b99d      	cbnz	r5, 8009018 <GUIDRV_FlexColor__InitOnce+0x30>
 8008ff0:	f44f 70be 	mov.w	r0, #380	; 0x17c
 8008ff4:	f003 fb38 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 8008ff8:	4b08      	ldr	r3, [pc, #32]	; (800901c <GUIDRV_FlexColor__InitOnce+0x34>)
 8008ffa:	60a0      	str	r0, [r4, #8]
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	f44f 72be 	mov.w	r2, #380	; 0x17c
 8009002:	4629      	mov	r1, r5
 8009004:	4798      	blx	r3
 8009006:	68a3      	ldr	r3, [r4, #8]
 8009008:	2202      	movs	r2, #2
 800900a:	84da      	strh	r2, [r3, #38]	; 0x26
 800900c:	2201      	movs	r2, #1
 800900e:	621a      	str	r2, [r3, #32]
 8009010:	4a03      	ldr	r2, [pc, #12]	; (8009020 <GUIDRV_FlexColor__InitOnce+0x38>)
 8009012:	641c      	str	r4, [r3, #64]	; 0x40
 8009014:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8009018:	bd38      	pop	{r3, r4, r5, pc}
 800901a:	bf00      	nop
 800901c:	200000ac 	.word	0x200000ac
 8009020:	08008e49 	.word	0x08008e49

08009024 <_SetDevFunc>:
 8009024:	b570      	push	{r4, r5, r6, lr}
 8009026:	4606      	mov	r6, r0
 8009028:	460d      	mov	r5, r1
 800902a:	4614      	mov	r4, r2
 800902c:	f7ff ffdc 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8009030:	68b3      	ldr	r3, [r6, #8]
 8009032:	2b00      	cmp	r3, #0
 8009034:	d03b      	beq.n	80090ae <_SetDevFunc+0x8a>
 8009036:	2d26      	cmp	r5, #38	; 0x26
 8009038:	d002      	beq.n	8009040 <_SetDevFunc+0x1c>
 800903a:	2d27      	cmp	r5, #39	; 0x27
 800903c:	d016      	beq.n	800906c <_SetDevFunc+0x48>
 800903e:	bd70      	pop	{r4, r5, r6, pc}
 8009040:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009042:	2a10      	cmp	r2, #16
 8009044:	d002      	beq.n	800904c <_SetDevFunc+0x28>
 8009046:	2a12      	cmp	r2, #18
 8009048:	d008      	beq.n	800905c <_SetDevFunc+0x38>
 800904a:	bd70      	pop	{r4, r5, r6, pc}
 800904c:	4a18      	ldr	r2, [pc, #96]	; (80090b0 <_SetDevFunc+0x8c>)
 800904e:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 8009052:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8009056:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800905a:	bd70      	pop	{r4, r5, r6, pc}
 800905c:	4a15      	ldr	r2, [pc, #84]	; (80090b4 <_SetDevFunc+0x90>)
 800905e:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 8009062:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8009066:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800906a:	bd70      	pop	{r4, r5, r6, pc}
 800906c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800906e:	2a10      	cmp	r2, #16
 8009070:	d002      	beq.n	8009078 <_SetDevFunc+0x54>
 8009072:	2a12      	cmp	r2, #18
 8009074:	d00e      	beq.n	8009094 <_SetDevFunc+0x70>
 8009076:	bd70      	pop	{r4, r5, r6, pc}
 8009078:	b13c      	cbz	r4, 800908a <_SetDevFunc+0x66>
 800907a:	4a0f      	ldr	r2, [pc, #60]	; (80090b8 <_SetDevFunc+0x94>)
 800907c:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
 8009080:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 8009084:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8009088:	bd70      	pop	{r4, r5, r6, pc}
 800908a:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800908e:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 8009092:	bd70      	pop	{r4, r5, r6, pc}
 8009094:	b13c      	cbz	r4, 80090a6 <_SetDevFunc+0x82>
 8009096:	4a09      	ldr	r2, [pc, #36]	; (80090bc <_SetDevFunc+0x98>)
 8009098:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
 800909c:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80090a0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80090a4:	bd70      	pop	{r4, r5, r6, pc}
 80090a6:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 80090aa:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 80090ae:	bd70      	pop	{r4, r5, r6, pc}
 80090b0:	08008cc9 	.word	0x08008cc9
 80090b4:	08008cd7 	.word	0x08008cd7
 80090b8:	08008ce5 	.word	0x08008ce5
 80090bc:	08008d1b 	.word	0x08008d1b

080090c0 <_GetDevFunc_Init>:
 80090c0:	b538      	push	{r3, r4, r5, lr}
 80090c2:	4605      	mov	r5, r0
 80090c4:	f7ff ff90 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 80090c8:	68ac      	ldr	r4, [r5, #8]
 80090ca:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80090ce:	f003 facb 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 80090d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80090d4:	66a0      	str	r0, [r4, #104]	; 0x68
 80090d6:	3307      	adds	r3, #7
 80090d8:	10d8      	asrs	r0, r3, #3
 80090da:	6823      	ldr	r3, [r4, #0]
 80090dc:	4358      	muls	r0, r3
 80090de:	f003 fac3 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 80090e2:	2101      	movs	r1, #1
 80090e4:	2200      	movs	r2, #0
 80090e6:	66e0      	str	r0, [r4, #108]	; 0x6c
 80090e8:	69a8      	ldr	r0, [r5, #24]
 80090ea:	f7f7 fec1 	bl	8000e70 <LCD_X_DisplayDriver>
 80090ee:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80090f2:	4605      	mov	r5, r0
 80090f4:	4620      	mov	r0, r4
 80090f6:	4798      	blx	r3
 80090f8:	4620      	mov	r0, r4
 80090fa:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 80090fe:	4798      	blx	r3
 8009100:	2d00      	cmp	r5, #0
 8009102:	bfd4      	ite	le
 8009104:	2000      	movle	r0, #0
 8009106:	2001      	movgt	r0, #1
 8009108:	bd38      	pop	{r3, r4, r5, pc}

0800910a <_GetDevFunc_SetSize>:
 800910a:	b570      	push	{r4, r5, r6, lr}
 800910c:	4604      	mov	r4, r0
 800910e:	460d      	mov	r5, r1
 8009110:	4616      	mov	r6, r2
 8009112:	f7ff ff69 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8009116:	68a3      	ldr	r3, [r4, #8]
 8009118:	e883 0060 	stmia.w	r3, {r5, r6}
 800911c:	bd70      	pop	{r4, r5, r6, pc}

0800911e <_GetDevFunc_SetVSize>:
 800911e:	b570      	push	{r4, r5, r6, lr}
 8009120:	4604      	mov	r4, r0
 8009122:	460d      	mov	r5, r1
 8009124:	4616      	mov	r6, r2
 8009126:	f7ff ff5f 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 800912a:	68a3      	ldr	r3, [r4, #8]
 800912c:	609d      	str	r5, [r3, #8]
 800912e:	60de      	str	r6, [r3, #12]
 8009130:	bd70      	pop	{r4, r5, r6, pc}

08009132 <_GetDevFunc_Off>:
 8009132:	b510      	push	{r4, lr}
 8009134:	4604      	mov	r4, r0
 8009136:	f7ff ff57 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 800913a:	69a0      	ldr	r0, [r4, #24]
 800913c:	2106      	movs	r1, #6
 800913e:	2200      	movs	r2, #0
 8009140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009144:	f7f7 be94 	b.w	8000e70 <LCD_X_DisplayDriver>

08009148 <_GetDevFunc_On>:
 8009148:	b510      	push	{r4, lr}
 800914a:	4604      	mov	r4, r0
 800914c:	f7ff ff4c 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8009150:	69a0      	ldr	r0, [r4, #24]
 8009152:	2105      	movs	r1, #5
 8009154:	2200      	movs	r2, #0
 8009156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800915a:	f7f7 be89 	b.w	8000e70 <LCD_X_DisplayDriver>

0800915e <GUIDRV_FlexColor_Config>:
 800915e:	b538      	push	{r3, r4, r5, lr}
 8009160:	4605      	mov	r5, r0
 8009162:	460c      	mov	r4, r1
 8009164:	f7ff ff40 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 8009168:	68ab      	ldr	r3, [r5, #8]
 800916a:	6822      	ldr	r2, [r4, #0]
 800916c:	62da      	str	r2, [r3, #44]	; 0x2c
 800916e:	6862      	ldr	r2, [r4, #4]
 8009170:	631a      	str	r2, [r3, #48]	; 0x30
 8009172:	68a2      	ldr	r2, [r4, #8]
 8009174:	635a      	str	r2, [r3, #52]	; 0x34
 8009176:	0752      	lsls	r2, r2, #29
 8009178:	d507      	bpl.n	800918a <GUIDRV_FlexColor_Config+0x2c>
 800917a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800917e:	601a      	str	r2, [r3, #0]
 8009180:	6059      	str	r1, [r3, #4]
 8009182:	68da      	ldr	r2, [r3, #12]
 8009184:	6899      	ldr	r1, [r3, #8]
 8009186:	60d9      	str	r1, [r3, #12]
 8009188:	609a      	str	r2, [r3, #8]
 800918a:	89a2      	ldrh	r2, [r4, #12]
 800918c:	849a      	strh	r2, [r3, #36]	; 0x24
 800918e:	6922      	ldr	r2, [r4, #16]
 8009190:	b112      	cbz	r2, 8009198 <GUIDRV_FlexColor_Config+0x3a>
 8009192:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8009196:	621a      	str	r2, [r3, #32]
 8009198:	bd38      	pop	{r3, r4, r5, pc}

0800919a <GUIDRV_FlexColor_SetFunc>:
 800919a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800919e:	4604      	mov	r4, r0
 80091a0:	461f      	mov	r7, r3
 80091a2:	4616      	mov	r6, r2
 80091a4:	4688      	mov	r8, r1
 80091a6:	f7ff ff1f 	bl	8008fe8 <GUIDRV_FlexColor__InitOnce>
 80091aa:	68a5      	ldr	r5, [r4, #8]
 80091ac:	4641      	mov	r1, r8
 80091ae:	2268      	movs	r2, #104	; 0x68
 80091b0:	f505 708a 	add.w	r0, r5, #276	; 0x114
 80091b4:	f007 fd9e 	bl	8010cf4 <memcpy>
 80091b8:	4620      	mov	r0, r4
 80091ba:	47b0      	blx	r6
 80091bc:	4620      	mov	r0, r4
 80091be:	47b8      	blx	r7
 80091c0:	6923      	ldr	r3, [r4, #16]
 80091c2:	689b      	ldr	r3, [r3, #8]
 80091c4:	4798      	blx	r3
 80091c6:	62a8      	str	r0, [r5, #40]	; 0x28
 80091c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080091cc <LCD_UpdateColorIndices>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	4c07      	ldr	r4, [pc, #28]	; (80091ec <LCD_UpdateColorIndices+0x20>)
 80091d0:	6823      	ldr	r3, [r4, #0]
 80091d2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80091d4:	f000 fc68 	bl	8009aa8 <LCD_Color2Index>
 80091d8:	f000 fc86 	bl	8009ae8 <LCD_SetColorIndex>
 80091dc:	6823      	ldr	r3, [r4, #0]
 80091de:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80091e0:	f000 fc62 	bl	8009aa8 <LCD_Color2Index>
 80091e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80091e8:	f000 bc9a 	b.w	8009b20 <LCD_SetBkColorIndex>
 80091ec:	200000c0 	.word	0x200000c0

080091f0 <LCD_SetClipRectEx>:
 80091f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091f2:	4c09      	ldr	r4, [pc, #36]	; (8009218 <LCD_SetClipRectEx+0x28>)
 80091f4:	6823      	ldr	r3, [r4, #0]
 80091f6:	7c5a      	ldrb	r2, [r3, #17]
 80091f8:	4b08      	ldr	r3, [pc, #32]	; (800921c <LCD_SetClipRectEx+0x2c>)
 80091fa:	4605      	mov	r5, r0
 80091fc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009200:	68c2      	ldr	r2, [r0, #12]
 8009202:	4669      	mov	r1, sp
 8009204:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8009206:	4790      	blx	r2
 8009208:	6820      	ldr	r0, [r4, #0]
 800920a:	4629      	mov	r1, r5
 800920c:	466a      	mov	r2, sp
 800920e:	3008      	adds	r0, #8
 8009210:	f000 fcf1 	bl	8009bf6 <GUI__IntersectRects>
 8009214:	b003      	add	sp, #12
 8009216:	bd30      	pop	{r4, r5, pc}
 8009218:	200000c0 	.word	0x200000c0
 800921c:	20002d34 	.word	0x20002d34

08009220 <LCD_SetVSizeEx>:
 8009220:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009222:	460d      	mov	r5, r1
 8009224:	4614      	mov	r4, r2
 8009226:	f002 f985 	bl	800b534 <GUI_DEVICE__GetpDriver>
 800922a:	9001      	str	r0, [sp, #4]
 800922c:	b908      	cbnz	r0, 8009232 <LCD_SetVSizeEx+0x12>
 800922e:	2001      	movs	r0, #1
 8009230:	e00c      	b.n	800924c <LCD_SetVSizeEx+0x2c>
 8009232:	68c3      	ldr	r3, [r0, #12]
 8009234:	210a      	movs	r1, #10
 8009236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009238:	a801      	add	r0, sp, #4
 800923a:	4798      	blx	r3
 800923c:	4603      	mov	r3, r0
 800923e:	2800      	cmp	r0, #0
 8009240:	d0f5      	beq.n	800922e <LCD_SetVSizeEx+0xe>
 8009242:	9801      	ldr	r0, [sp, #4]
 8009244:	4629      	mov	r1, r5
 8009246:	4622      	mov	r2, r4
 8009248:	4798      	blx	r3
 800924a:	2000      	movs	r0, #0
 800924c:	b003      	add	sp, #12
 800924e:	bd30      	pop	{r4, r5, pc}

08009250 <LCD_SetSizeEx>:
 8009250:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009252:	460d      	mov	r5, r1
 8009254:	4614      	mov	r4, r2
 8009256:	f002 f96d 	bl	800b534 <GUI_DEVICE__GetpDriver>
 800925a:	9001      	str	r0, [sp, #4]
 800925c:	b908      	cbnz	r0, 8009262 <LCD_SetSizeEx+0x12>
 800925e:	2001      	movs	r0, #1
 8009260:	e00c      	b.n	800927c <LCD_SetSizeEx+0x2c>
 8009262:	68c3      	ldr	r3, [r0, #12]
 8009264:	210b      	movs	r1, #11
 8009266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009268:	a801      	add	r0, sp, #4
 800926a:	4798      	blx	r3
 800926c:	4603      	mov	r3, r0
 800926e:	2800      	cmp	r0, #0
 8009270:	d0f5      	beq.n	800925e <LCD_SetSizeEx+0xe>
 8009272:	9801      	ldr	r0, [sp, #4]
 8009274:	4629      	mov	r1, r5
 8009276:	4622      	mov	r2, r4
 8009278:	4798      	blx	r3
 800927a:	2000      	movs	r0, #0
 800927c:	b003      	add	sp, #12
 800927e:	bd30      	pop	{r4, r5, pc}

08009280 <LCD_SetLUTEntryEx>:
 8009280:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009282:	460d      	mov	r5, r1
 8009284:	4614      	mov	r4, r2
 8009286:	f002 f955 	bl	800b534 <GUI_DEVICE__GetpDriver>
 800928a:	9001      	str	r0, [sp, #4]
 800928c:	b908      	cbnz	r0, 8009292 <LCD_SetLUTEntryEx+0x12>
 800928e:	2001      	movs	r0, #1
 8009290:	e00c      	b.n	80092ac <LCD_SetLUTEntryEx+0x2c>
 8009292:	68c3      	ldr	r3, [r0, #12]
 8009294:	2110      	movs	r1, #16
 8009296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009298:	a801      	add	r0, sp, #4
 800929a:	4798      	blx	r3
 800929c:	4603      	mov	r3, r0
 800929e:	2800      	cmp	r0, #0
 80092a0:	d0f5      	beq.n	800928e <LCD_SetLUTEntryEx+0xe>
 80092a2:	9801      	ldr	r0, [sp, #4]
 80092a4:	4629      	mov	r1, r5
 80092a6:	4622      	mov	r2, r4
 80092a8:	4798      	blx	r3
 80092aa:	2000      	movs	r0, #0
 80092ac:	b003      	add	sp, #12
 80092ae:	bd30      	pop	{r4, r5, pc}

080092b0 <_GetDevProp>:
 80092b0:	2801      	cmp	r0, #1
 80092b2:	b510      	push	{r4, lr}
 80092b4:	460c      	mov	r4, r1
 80092b6:	dc08      	bgt.n	80092ca <_GetDevProp+0x1a>
 80092b8:	f002 f93c 	bl	800b534 <GUI_DEVICE__GetpDriver>
 80092bc:	b120      	cbz	r0, 80092c8 <_GetDevProp+0x18>
 80092be:	68c3      	ldr	r3, [r0, #12]
 80092c0:	4621      	mov	r1, r4
 80092c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80092c4:	4798      	blx	r3
 80092c6:	bd10      	pop	{r4, pc}
 80092c8:	bd10      	pop	{r4, pc}
 80092ca:	2000      	movs	r0, #0
 80092cc:	bd10      	pop	{r4, pc}

080092ce <_GetMaxValue>:
 80092ce:	b538      	push	{r3, r4, r5, lr}
 80092d0:	4604      	mov	r4, r0
 80092d2:	4621      	mov	r1, r4
 80092d4:	2001      	movs	r0, #1
 80092d6:	f7ff ffeb 	bl	80092b0 <_GetDevProp>
 80092da:	4621      	mov	r1, r4
 80092dc:	4605      	mov	r5, r0
 80092de:	2000      	movs	r0, #0
 80092e0:	f7ff ffe6 	bl	80092b0 <_GetDevProp>
 80092e4:	42a8      	cmp	r0, r5
 80092e6:	bfb8      	it	lt
 80092e8:	4628      	movlt	r0, r5
 80092ea:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80092ee:	bd38      	pop	{r3, r4, r5, pc}

080092f0 <LCD_GetXSizeEx>:
 80092f0:	2101      	movs	r1, #1
 80092f2:	f7ff bfdd 	b.w	80092b0 <_GetDevProp>

080092f6 <LCD_GetYSizeEx>:
 80092f6:	2102      	movs	r1, #2
 80092f8:	f7ff bfda 	b.w	80092b0 <_GetDevProp>

080092fc <LCD_GetVXSizeEx>:
 80092fc:	2103      	movs	r1, #3
 80092fe:	f7ff bfd7 	b.w	80092b0 <_GetDevProp>

08009302 <LCD_GetVYSizeEx>:
 8009302:	2104      	movs	r1, #4
 8009304:	f7ff bfd4 	b.w	80092b0 <_GetDevProp>

08009308 <LCD_GetBitsPerPixelEx>:
 8009308:	2108      	movs	r1, #8
 800930a:	f7ff bfd1 	b.w	80092b0 <_GetDevProp>

0800930e <LCD_GetNumColorsEx>:
 800930e:	2109      	movs	r1, #9
 8009310:	f7ff bfce 	b.w	80092b0 <_GetDevProp>

08009314 <LCD_GetXSize>:
 8009314:	4b02      	ldr	r3, [pc, #8]	; (8009320 <LCD_GetXSize+0xc>)
 8009316:	681b      	ldr	r3, [r3, #0]
 8009318:	7c58      	ldrb	r0, [r3, #17]
 800931a:	f7ff bfe9 	b.w	80092f0 <LCD_GetXSizeEx>
 800931e:	bf00      	nop
 8009320:	200000c0 	.word	0x200000c0

08009324 <LCD_GetYSize>:
 8009324:	4b02      	ldr	r3, [pc, #8]	; (8009330 <LCD_GetYSize+0xc>)
 8009326:	681b      	ldr	r3, [r3, #0]
 8009328:	7c58      	ldrb	r0, [r3, #17]
 800932a:	f7ff bfe4 	b.w	80092f6 <LCD_GetYSizeEx>
 800932e:	bf00      	nop
 8009330:	200000c0 	.word	0x200000c0

08009334 <LCD_GetNumColors>:
 8009334:	4b02      	ldr	r3, [pc, #8]	; (8009340 <LCD_GetNumColors+0xc>)
 8009336:	681b      	ldr	r3, [r3, #0]
 8009338:	7c58      	ldrb	r0, [r3, #17]
 800933a:	f7ff bfe8 	b.w	800930e <LCD_GetNumColorsEx>
 800933e:	bf00      	nop
 8009340:	200000c0 	.word	0x200000c0

08009344 <GUI_GetBitsPerPixelEx>:
 8009344:	b508      	push	{r3, lr}
 8009346:	4b04      	ldr	r3, [pc, #16]	; (8009358 <GUI_GetBitsPerPixelEx+0x14>)
 8009348:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800934c:	68c3      	ldr	r3, [r0, #12]
 800934e:	2108      	movs	r1, #8
 8009350:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009352:	4798      	blx	r3
 8009354:	bd08      	pop	{r3, pc}
 8009356:	bf00      	nop
 8009358:	20002d34 	.word	0x20002d34

0800935c <LCD_GetPaletteEx>:
 800935c:	b508      	push	{r3, lr}
 800935e:	f002 f8e9 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009362:	b120      	cbz	r0, 800936e <LCD_GetPaletteEx+0x12>
 8009364:	68c3      	ldr	r3, [r0, #12]
 8009366:	2102      	movs	r1, #2
 8009368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800936a:	4798      	blx	r3
 800936c:	bd08      	pop	{r3, pc}
 800936e:	bd08      	pop	{r3, pc}

08009370 <LCD_GetPalette>:
 8009370:	4b02      	ldr	r3, [pc, #8]	; (800937c <LCD_GetPalette+0xc>)
 8009372:	681b      	ldr	r3, [r3, #0]
 8009374:	7c58      	ldrb	r0, [r3, #17]
 8009376:	f7ff bff1 	b.w	800935c <LCD_GetPaletteEx>
 800937a:	bf00      	nop
 800937c:	200000c0 	.word	0x200000c0

08009380 <GUI_GetpfIndex2ColorEx>:
 8009380:	4b02      	ldr	r3, [pc, #8]	; (800938c <GUI_GetpfIndex2ColorEx+0xc>)
 8009382:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009386:	691b      	ldr	r3, [r3, #16]
 8009388:	6858      	ldr	r0, [r3, #4]
 800938a:	4770      	bx	lr
 800938c:	20002d34 	.word	0x20002d34

08009390 <GUI_GetpfColor2IndexEx>:
 8009390:	4b02      	ldr	r3, [pc, #8]	; (800939c <GUI_GetpfColor2IndexEx+0xc>)
 8009392:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009396:	691b      	ldr	r3, [r3, #16]
 8009398:	6818      	ldr	r0, [r3, #0]
 800939a:	4770      	bx	lr
 800939c:	20002d34 	.word	0x20002d34

080093a0 <LCD_GetXSizeMax>:
 80093a0:	2001      	movs	r0, #1
 80093a2:	f7ff bf94 	b.w	80092ce <_GetMaxValue>

080093a6 <LCD_GetYSizeMax>:
 80093a6:	2002      	movs	r0, #2
 80093a8:	f7ff bf91 	b.w	80092ce <_GetMaxValue>

080093ac <LCD_GetVXSizeMax>:
 80093ac:	2003      	movs	r0, #3
 80093ae:	f7ff bf8e 	b.w	80092ce <_GetMaxValue>
	...

080093b4 <LCD_SetDisplaySize>:
 80093b4:	4b02      	ldr	r3, [pc, #8]	; (80093c0 <LCD_SetDisplaySize+0xc>)
 80093b6:	6018      	str	r0, [r3, #0]
 80093b8:	4b02      	ldr	r3, [pc, #8]	; (80093c4 <LCD_SetDisplaySize+0x10>)
 80093ba:	6019      	str	r1, [r3, #0]
 80093bc:	4770      	bx	lr
 80093be:	bf00      	nop
 80093c0:	20002b0c 	.word	0x20002b0c
 80093c4:	20002b08 	.word	0x20002b08

080093c8 <LCD_GetXSizeDisplay>:
 80093c8:	4b01      	ldr	r3, [pc, #4]	; (80093d0 <LCD_GetXSizeDisplay+0x8>)
 80093ca:	6818      	ldr	r0, [r3, #0]
 80093cc:	4770      	bx	lr
 80093ce:	bf00      	nop
 80093d0:	20002b0c 	.word	0x20002b0c

080093d4 <LCD_GetYSizeDisplay>:
 80093d4:	4b01      	ldr	r3, [pc, #4]	; (80093dc <LCD_GetYSizeDisplay+0x8>)
 80093d6:	6818      	ldr	r0, [r3, #0]
 80093d8:	4770      	bx	lr
 80093da:	bf00      	nop
 80093dc:	20002b08 	.word	0x20002b08

080093e0 <LCD__GetBPP>:
 80093e0:	2800      	cmp	r0, #0
 80093e2:	d03b      	beq.n	800945c <LCD__GetBPP+0x7c>
 80093e4:	f030 0301 	bics.w	r3, r0, #1
 80093e8:	d029      	beq.n	800943e <LCD__GetBPP+0x5e>
 80093ea:	f030 0303 	bics.w	r3, r0, #3
 80093ee:	d028      	beq.n	8009442 <LCD__GetBPP+0x62>
 80093f0:	f030 0307 	bics.w	r3, r0, #7
 80093f4:	d027      	beq.n	8009446 <LCD__GetBPP+0x66>
 80093f6:	f030 030f 	bics.w	r3, r0, #15
 80093fa:	d026      	beq.n	800944a <LCD__GetBPP+0x6a>
 80093fc:	f030 031f 	bics.w	r3, r0, #31
 8009400:	d025      	beq.n	800944e <LCD__GetBPP+0x6e>
 8009402:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8009406:	d024      	beq.n	8009452 <LCD__GetBPP+0x72>
 8009408:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800940c:	f023 0301 	bic.w	r3, r3, #1
 8009410:	b30b      	cbz	r3, 8009456 <LCD__GetBPP+0x76>
 8009412:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8009416:	f023 030f 	bic.w	r3, r3, #15
 800941a:	b1e3      	cbz	r3, 8009456 <LCD__GetBPP+0x76>
 800941c:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8009420:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8009424:	b1bb      	cbz	r3, 8009456 <LCD__GetBPP+0x76>
 8009426:	0c03      	lsrs	r3, r0, #16
 8009428:	041b      	lsls	r3, r3, #16
 800942a:	b1a3      	cbz	r3, 8009456 <LCD__GetBPP+0x76>
 800942c:	0c83      	lsrs	r3, r0, #18
 800942e:	049b      	lsls	r3, r3, #18
 8009430:	b19b      	cbz	r3, 800945a <LCD__GetBPP+0x7a>
 8009432:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8009436:	bf0c      	ite	eq
 8009438:	2018      	moveq	r0, #24
 800943a:	2020      	movne	r0, #32
 800943c:	4770      	bx	lr
 800943e:	2001      	movs	r0, #1
 8009440:	4770      	bx	lr
 8009442:	2002      	movs	r0, #2
 8009444:	4770      	bx	lr
 8009446:	2003      	movs	r0, #3
 8009448:	4770      	bx	lr
 800944a:	2004      	movs	r0, #4
 800944c:	4770      	bx	lr
 800944e:	2005      	movs	r0, #5
 8009450:	4770      	bx	lr
 8009452:	2008      	movs	r0, #8
 8009454:	4770      	bx	lr
 8009456:	2010      	movs	r0, #16
 8009458:	4770      	bx	lr
 800945a:	2012      	movs	r0, #18
 800945c:	4770      	bx	lr

0800945e <LCD__GetBPPDevice>:
 800945e:	b508      	push	{r3, lr}
 8009460:	f7ff ffbe 	bl	80093e0 <LCD__GetBPP>
 8009464:	2801      	cmp	r0, #1
 8009466:	d00f      	beq.n	8009488 <LCD__GetBPPDevice+0x2a>
 8009468:	1e83      	subs	r3, r0, #2
 800946a:	2b06      	cmp	r3, #6
 800946c:	d909      	bls.n	8009482 <LCD__GetBPPDevice+0x24>
 800946e:	f1a0 0309 	sub.w	r3, r0, #9
 8009472:	2b07      	cmp	r3, #7
 8009474:	d907      	bls.n	8009486 <LCD__GetBPPDevice+0x28>
 8009476:	3811      	subs	r0, #17
 8009478:	2810      	cmp	r0, #16
 800947a:	bf34      	ite	cc
 800947c:	2020      	movcc	r0, #32
 800947e:	2000      	movcs	r0, #0
 8009480:	bd08      	pop	{r3, pc}
 8009482:	2008      	movs	r0, #8
 8009484:	bd08      	pop	{r3, pc}
 8009486:	2010      	movs	r0, #16
 8009488:	bd08      	pop	{r3, pc}
	...

0800948c <_SetDrawMode>:
 800948c:	b570      	push	{r4, r5, r6, lr}
 800948e:	4b08      	ldr	r3, [pc, #32]	; (80094b0 <_SetDrawMode+0x24>)
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	7c1a      	ldrb	r2, [r3, #16]
 8009494:	ea80 0102 	eor.w	r1, r0, r2
 8009498:	0749      	lsls	r1, r1, #29
 800949a:	d505      	bpl.n	80094a8 <_SetDrawMode+0x1c>
 800949c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800949e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80094a0:	6826      	ldr	r6, [r4, #0]
 80094a2:	680d      	ldr	r5, [r1, #0]
 80094a4:	6025      	str	r5, [r4, #0]
 80094a6:	600e      	str	r6, [r1, #0]
 80094a8:	7418      	strb	r0, [r3, #16]
 80094aa:	4610      	mov	r0, r2
 80094ac:	bd70      	pop	{r4, r5, r6, pc}
 80094ae:	bf00      	nop
 80094b0:	200000c0 	.word	0x200000c0

080094b4 <LCD_SetDrawMode>:
 80094b4:	b508      	push	{r3, lr}
 80094b6:	4b02      	ldr	r3, [pc, #8]	; (80094c0 <LCD_SetDrawMode+0xc>)
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	689b      	ldr	r3, [r3, #8]
 80094bc:	4798      	blx	r3
 80094be:	bd08      	pop	{r3, pc}
 80094c0:	200000a8 	.word	0x200000a8

080094c4 <LCD_DrawPixel>:
 80094c4:	b538      	push	{r3, r4, r5, lr}
 80094c6:	4b14      	ldr	r3, [pc, #80]	; (8009518 <LCD_DrawPixel+0x54>)
 80094c8:	681b      	ldr	r3, [r3, #0]
 80094ca:	460a      	mov	r2, r1
 80094cc:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 80094d0:	428a      	cmp	r2, r1
 80094d2:	4604      	mov	r4, r0
 80094d4:	db1e      	blt.n	8009514 <LCD_DrawPixel+0x50>
 80094d6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80094da:	428a      	cmp	r2, r1
 80094dc:	dc1a      	bgt.n	8009514 <LCD_DrawPixel+0x50>
 80094de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80094e2:	4288      	cmp	r0, r1
 80094e4:	db16      	blt.n	8009514 <LCD_DrawPixel+0x50>
 80094e6:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 80094ea:	4288      	cmp	r0, r1
 80094ec:	dc12      	bgt.n	8009514 <LCD_DrawPixel+0x50>
 80094ee:	7c19      	ldrb	r1, [r3, #16]
 80094f0:	7c58      	ldrb	r0, [r3, #17]
 80094f2:	f011 0f01 	tst.w	r1, #1
 80094f6:	4909      	ldr	r1, [pc, #36]	; (800951c <LCD_DrawPixel+0x58>)
 80094f8:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80094fc:	d004      	beq.n	8009508 <LCD_DrawPixel+0x44>
 80094fe:	68c3      	ldr	r3, [r0, #12]
 8009500:	4621      	mov	r1, r4
 8009502:	69db      	ldr	r3, [r3, #28]
 8009504:	4798      	blx	r3
 8009506:	bd38      	pop	{r3, r4, r5, pc}
 8009508:	68c1      	ldr	r1, [r0, #12]
 800950a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800950c:	698d      	ldr	r5, [r1, #24]
 800950e:	681b      	ldr	r3, [r3, #0]
 8009510:	4621      	mov	r1, r4
 8009512:	47a8      	blx	r5
 8009514:	bd38      	pop	{r3, r4, r5, pc}
 8009516:	bf00      	nop
 8009518:	200000c0 	.word	0x200000c0
 800951c:	20002d34 	.word	0x20002d34

08009520 <LCD_DrawHLine>:
 8009520:	b538      	push	{r3, r4, r5, lr}
 8009522:	4b10      	ldr	r3, [pc, #64]	; (8009564 <LCD_DrawHLine+0x44>)
 8009524:	681c      	ldr	r4, [r3, #0]
 8009526:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800952a:	4299      	cmp	r1, r3
 800952c:	460d      	mov	r5, r1
 800952e:	db17      	blt.n	8009560 <LCD_DrawHLine+0x40>
 8009530:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8009534:	4299      	cmp	r1, r3
 8009536:	dc13      	bgt.n	8009560 <LCD_DrawHLine+0x40>
 8009538:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800953c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009540:	4288      	cmp	r0, r1
 8009542:	bfa8      	it	ge
 8009544:	4601      	movge	r1, r0
 8009546:	429a      	cmp	r2, r3
 8009548:	bfb8      	it	lt
 800954a:	4613      	movlt	r3, r2
 800954c:	428b      	cmp	r3, r1
 800954e:	db07      	blt.n	8009560 <LCD_DrawHLine+0x40>
 8009550:	7c60      	ldrb	r0, [r4, #17]
 8009552:	4a05      	ldr	r2, [pc, #20]	; (8009568 <LCD_DrawHLine+0x48>)
 8009554:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8009558:	68c2      	ldr	r2, [r0, #12]
 800955a:	6894      	ldr	r4, [r2, #8]
 800955c:	462a      	mov	r2, r5
 800955e:	47a0      	blx	r4
 8009560:	bd38      	pop	{r3, r4, r5, pc}
 8009562:	bf00      	nop
 8009564:	200000c0 	.word	0x200000c0
 8009568:	20002d34 	.word	0x20002d34

0800956c <LCD_DrawVLine>:
 800956c:	b538      	push	{r3, r4, r5, lr}
 800956e:	4b10      	ldr	r3, [pc, #64]	; (80095b0 <LCD_DrawVLine+0x44>)
 8009570:	681c      	ldr	r4, [r3, #0]
 8009572:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8009576:	4605      	mov	r5, r0
 8009578:	429d      	cmp	r5, r3
 800957a:	4610      	mov	r0, r2
 800957c:	db17      	blt.n	80095ae <LCD_DrawVLine+0x42>
 800957e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009582:	429d      	cmp	r5, r3
 8009584:	dc13      	bgt.n	80095ae <LCD_DrawVLine+0x42>
 8009586:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800958a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800958e:	4291      	cmp	r1, r2
 8009590:	bfa8      	it	ge
 8009592:	460a      	movge	r2, r1
 8009594:	4298      	cmp	r0, r3
 8009596:	bfb8      	it	lt
 8009598:	4603      	movlt	r3, r0
 800959a:	4293      	cmp	r3, r2
 800959c:	db07      	blt.n	80095ae <LCD_DrawVLine+0x42>
 800959e:	7c60      	ldrb	r0, [r4, #17]
 80095a0:	4904      	ldr	r1, [pc, #16]	; (80095b4 <LCD_DrawVLine+0x48>)
 80095a2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80095a6:	68c1      	ldr	r1, [r0, #12]
 80095a8:	68cc      	ldr	r4, [r1, #12]
 80095aa:	4629      	mov	r1, r5
 80095ac:	47a0      	blx	r4
 80095ae:	bd38      	pop	{r3, r4, r5, pc}
 80095b0:	200000c0 	.word	0x200000c0
 80095b4:	20002d34 	.word	0x20002d34

080095b8 <LCD_FillRect>:
 80095b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80095ba:	460e      	mov	r6, r1
 80095bc:	4912      	ldr	r1, [pc, #72]	; (8009608 <LCD_FillRect+0x50>)
 80095be:	680c      	ldr	r4, [r1, #0]
 80095c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80095c4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80095c8:	4288      	cmp	r0, r1
 80095ca:	bfa8      	it	ge
 80095cc:	4601      	movge	r1, r0
 80095ce:	42aa      	cmp	r2, r5
 80095d0:	bfb8      	it	lt
 80095d2:	4615      	movlt	r5, r2
 80095d4:	428d      	cmp	r5, r1
 80095d6:	db14      	blt.n	8009602 <LCD_FillRect+0x4a>
 80095d8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80095dc:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80095e0:	4296      	cmp	r6, r2
 80095e2:	bfa8      	it	ge
 80095e4:	4632      	movge	r2, r6
 80095e6:	4283      	cmp	r3, r0
 80095e8:	bfa8      	it	ge
 80095ea:	4603      	movge	r3, r0
 80095ec:	4293      	cmp	r3, r2
 80095ee:	db08      	blt.n	8009602 <LCD_FillRect+0x4a>
 80095f0:	7c64      	ldrb	r4, [r4, #17]
 80095f2:	4806      	ldr	r0, [pc, #24]	; (800960c <LCD_FillRect+0x54>)
 80095f4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80095f8:	68c4      	ldr	r4, [r0, #12]
 80095fa:	9300      	str	r3, [sp, #0]
 80095fc:	6924      	ldr	r4, [r4, #16]
 80095fe:	462b      	mov	r3, r5
 8009600:	47a0      	blx	r4
 8009602:	b002      	add	sp, #8
 8009604:	bd70      	pop	{r4, r5, r6, pc}
 8009606:	bf00      	nop
 8009608:	200000c0 	.word	0x200000c0
 800960c:	20002d34 	.word	0x20002d34

08009610 <LCD__DrawBitmap_1bpp>:
 8009610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009614:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 80097c4 <LCD__DrawBitmap_1bpp+0x1b4>
 8009618:	b08f      	sub	sp, #60	; 0x3c
 800961a:	f8dc c000 	ldr.w	ip, [ip]
 800961e:	9009      	str	r0, [sp, #36]	; 0x24
 8009620:	460e      	mov	r6, r1
 8009622:	4615      	mov	r5, r2
 8009624:	469b      	mov	fp, r3
 8009626:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8009628:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800962c:	f1bc 0f00 	cmp.w	ip, #0
 8009630:	d00d      	beq.n	800964e <LCD__DrawBitmap_1bpp+0x3e>
 8009632:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8009634:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8009636:	9500      	str	r5, [sp, #0]
 8009638:	9601      	str	r6, [sp, #4]
 800963a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800963c:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800963e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8009640:	9702      	str	r7, [sp, #8]
 8009642:	9503      	str	r5, [sp, #12]
 8009644:	9404      	str	r4, [sp, #16]
 8009646:	9605      	str	r6, [sp, #20]
 8009648:	f8dc 4000 	ldr.w	r4, [ip]
 800964c:	e053      	b.n	80096f6 <LCD__DrawBitmap_1bpp+0xe6>
 800964e:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8009650:	9819      	ldr	r0, [sp, #100]	; 0x64
 8009652:	ea47 0300 	orr.w	r3, r7, r0
 8009656:	2b01      	cmp	r3, #1
 8009658:	d14f      	bne.n	80096fa <LCD__DrawBitmap_1bpp+0xea>
 800965a:	4b58      	ldr	r3, [pc, #352]	; (80097bc <LCD__DrawBitmap_1bpp+0x1ac>)
 800965c:	6818      	ldr	r0, [r3, #0]
 800965e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8009662:	1a51      	subs	r1, r2, r1
 8009664:	2900      	cmp	r1, #0
 8009666:	dd08      	ble.n	800967a <LCD__DrawBitmap_1bpp+0x6a>
 8009668:	ebc1 030b 	rsb	r3, r1, fp
 800966c:	2b00      	cmp	r3, #0
 800966e:	f340 80a2 	ble.w	80097b6 <LCD__DrawBitmap_1bpp+0x1a6>
 8009672:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8009674:	fb07 4401 	mla	r4, r7, r1, r4
 8009678:	e001      	b.n	800967e <LCD__DrawBitmap_1bpp+0x6e>
 800967a:	465b      	mov	r3, fp
 800967c:	4632      	mov	r2, r6
 800967e:	445e      	add	r6, fp
 8009680:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8009684:	3e01      	subs	r6, #1
 8009686:	1a76      	subs	r6, r6, r1
 8009688:	2e00      	cmp	r6, #0
 800968a:	dd03      	ble.n	8009694 <LCD__DrawBitmap_1bpp+0x84>
 800968c:	1b9b      	subs	r3, r3, r6
 800968e:	2b00      	cmp	r3, #0
 8009690:	f340 8091 	ble.w	80097b6 <LCD__DrawBitmap_1bpp+0x1a6>
 8009694:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009696:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800969a:	4429      	add	r1, r5
 800969c:	3901      	subs	r1, #1
 800969e:	1b89      	subs	r1, r1, r6
 80096a0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80096a2:	2900      	cmp	r1, #0
 80096a4:	bfc8      	it	gt
 80096a6:	ebc1 0505 	rsbgt	r5, r1, r5
 80096aa:	ebc8 0106 	rsb	r1, r8, r6
 80096ae:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80096b2:	42b1      	cmp	r1, r6
 80096b4:	da0c      	bge.n	80096d0 <LCD__DrawBitmap_1bpp+0xc0>
 80096b6:	ebc1 0c06 	rsb	ip, r1, r6
 80096ba:	eb08 070c 	add.w	r7, r8, ip
 80096be:	1b8e      	subs	r6, r1, r6
 80096c0:	f02c 0c07 	bic.w	ip, ip, #7
 80096c4:	4435      	add	r5, r6
 80096c6:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 80096ca:	4461      	add	r1, ip
 80096cc:	f007 0807 	and.w	r8, r7, #7
 80096d0:	2d00      	cmp	r5, #0
 80096d2:	dd70      	ble.n	80097b6 <LCD__DrawBitmap_1bpp+0x1a6>
 80096d4:	7c46      	ldrb	r6, [r0, #17]
 80096d6:	483a      	ldr	r0, [pc, #232]	; (80097c0 <LCD__DrawBitmap_1bpp+0x1b0>)
 80096d8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80096da:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 80096de:	68c6      	ldr	r6, [r0, #12]
 80096e0:	9701      	str	r7, [sp, #4]
 80096e2:	9403      	str	r4, [sp, #12]
 80096e4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80096e6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80096e8:	9300      	str	r3, [sp, #0]
 80096ea:	9702      	str	r7, [sp, #8]
 80096ec:	f8cd 8010 	str.w	r8, [sp, #16]
 80096f0:	9405      	str	r4, [sp, #20]
 80096f2:	6874      	ldr	r4, [r6, #4]
 80096f4:	462b      	mov	r3, r5
 80096f6:	47a0      	blx	r4
 80096f8:	e05d      	b.n	80097b6 <LCD__DrawBitmap_1bpp+0x1a6>
 80096fa:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80096fc:	f1c7 0708 	rsb	r7, r7, #8
 8009700:	970c      	str	r7, [sp, #48]	; 0x30
 8009702:	4667      	mov	r7, ip
 8009704:	45dc      	cmp	ip, fp
 8009706:	da56      	bge.n	80097b6 <LCD__DrawBitmap_1bpp+0x1a6>
 8009708:	4b2c      	ldr	r3, [pc, #176]	; (80097bc <LCD__DrawBitmap_1bpp+0x1ac>)
 800970a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800970c:	681b      	ldr	r3, [r3, #0]
 800970e:	4430      	add	r0, r6
 8009710:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8009714:	900a      	str	r0, [sp, #40]	; 0x28
 8009716:	1e41      	subs	r1, r0, #1
 8009718:	4291      	cmp	r1, r2
 800971a:	910b      	str	r1, [sp, #44]	; 0x2c
 800971c:	db45      	blt.n	80097aa <LCD__DrawBitmap_1bpp+0x19a>
 800971e:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8009722:	429e      	cmp	r6, r3
 8009724:	dc41      	bgt.n	80097aa <LCD__DrawBitmap_1bpp+0x19a>
 8009726:	f04f 0800 	mov.w	r8, #0
 800972a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800972e:	9408      	str	r4, [sp, #32]
 8009730:	46c2      	mov	sl, r8
 8009732:	45aa      	cmp	sl, r5
 8009734:	da39      	bge.n	80097aa <LCD__DrawBitmap_1bpp+0x19a>
 8009736:	f1b8 0f00 	cmp.w	r8, #0
 800973a:	d105      	bne.n	8009748 <LCD__DrawBitmap_1bpp+0x138>
 800973c:	9a08      	ldr	r2, [sp, #32]
 800973e:	7817      	ldrb	r7, [r2, #0]
 8009740:	3201      	adds	r2, #1
 8009742:	9208      	str	r2, [sp, #32]
 8009744:	f04f 0808 	mov.w	r8, #8
 8009748:	980c      	ldr	r0, [sp, #48]	; 0x30
 800974a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800974c:	4a1b      	ldr	r2, [pc, #108]	; (80097bc <LCD__DrawBitmap_1bpp+0x1ac>)
 800974e:	fa47 f300 	asr.w	r3, r7, r0
 8009752:	ebc1 0808 	rsb	r8, r1, r8
 8009756:	408f      	lsls	r7, r1
 8009758:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800975c:	b2ff      	uxtb	r7, r7
 800975e:	d103      	bne.n	8009768 <LCD__DrawBitmap_1bpp+0x158>
 8009760:	6810      	ldr	r0, [r2, #0]
 8009762:	7c00      	ldrb	r0, [r0, #16]
 8009764:	0780      	lsls	r0, r0, #30
 8009766:	d41b      	bmi.n	80097a0 <LCD__DrawBitmap_1bpp+0x190>
 8009768:	6812      	ldr	r2, [r2, #0]
 800976a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800976c:	6810      	ldr	r0, [r2, #0]
 800976e:	900d      	str	r0, [sp, #52]	; 0x34
 8009770:	981d      	ldr	r0, [sp, #116]	; 0x74
 8009772:	b110      	cbz	r0, 800977a <LCD__DrawBitmap_1bpp+0x16a>
 8009774:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8009778:	e000      	b.n	800977c <LCD__DrawBitmap_1bpp+0x16c>
 800977a:	b2db      	uxtb	r3, r3
 800977c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800977e:	6013      	str	r3, [r2, #0]
 8009780:	1e4a      	subs	r2, r1, #1
 8009782:	444a      	add	r2, r9
 8009784:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009786:	f8cd c01c 	str.w	ip, [sp, #28]
 800978a:	4648      	mov	r0, r9
 800978c:	4631      	mov	r1, r6
 800978e:	f7ff ff13 	bl	80095b8 <LCD_FillRect>
 8009792:	4b0a      	ldr	r3, [pc, #40]	; (80097bc <LCD__DrawBitmap_1bpp+0x1ac>)
 8009794:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8009796:	681b      	ldr	r3, [r3, #0]
 8009798:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800979c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800979e:	601a      	str	r2, [r3, #0]
 80097a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80097a2:	f10a 0a01 	add.w	sl, sl, #1
 80097a6:	4499      	add	r9, r3
 80097a8:	e7c3      	b.n	8009732 <LCD__DrawBitmap_1bpp+0x122>
 80097aa:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 80097ac:	f10c 0c01 	add.w	ip, ip, #1
 80097b0:	4434      	add	r4, r6
 80097b2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80097b4:	e7a6      	b.n	8009704 <LCD__DrawBitmap_1bpp+0xf4>
 80097b6:	b00f      	add	sp, #60	; 0x3c
 80097b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80097bc:	200000c0 	.word	0x200000c0
 80097c0:	20002d34 	.word	0x20002d34
 80097c4:	20002cec 	.word	0x20002cec

080097c8 <LCD_DrawBitmap>:
 80097c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80097cc:	f8df c20c 	ldr.w	ip, [pc, #524]	; 80099dc <LCD_DrawBitmap+0x214>
 80097d0:	b091      	sub	sp, #68	; 0x44
 80097d2:	f8dc 9000 	ldr.w	r9, [ip]
 80097d6:	9207      	str	r2, [sp, #28]
 80097d8:	4605      	mov	r5, r0
 80097da:	4688      	mov	r8, r1
 80097dc:	469b      	mov	fp, r3
 80097de:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80097e0:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80097e2:	f1b9 0f00 	cmp.w	r9, #0
 80097e6:	d00c      	beq.n	8009802 <LCD_DrawBitmap+0x3a>
 80097e8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80097ea:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80097ec:	9500      	str	r5, [sp, #0]
 80097ee:	9701      	str	r7, [sp, #4]
 80097f0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80097f2:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 80097f4:	9602      	str	r6, [sp, #8]
 80097f6:	9503      	str	r5, [sp, #12]
 80097f8:	9404      	str	r4, [sp, #16]
 80097fa:	9705      	str	r7, [sp, #20]
 80097fc:	f8d9 4000 	ldr.w	r4, [r9]
 8009800:	e081      	b.n	8009906 <LCD_DrawBitmap+0x13e>
 8009802:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8009804:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8009806:	ea47 0300 	orr.w	r3, r7, r0
 800980a:	2b01      	cmp	r3, #1
 800980c:	d17d      	bne.n	800990a <LCD_DrawBitmap+0x142>
 800980e:	4b71      	ldr	r3, [pc, #452]	; (80099d4 <LCD_DrawBitmap+0x20c>)
 8009810:	6818      	ldr	r0, [r3, #0]
 8009812:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8009816:	1a53      	subs	r3, r2, r1
 8009818:	2b00      	cmp	r3, #0
 800981a:	dd08      	ble.n	800982e <LCD_DrawBitmap+0x66>
 800981c:	ebc3 010b 	rsb	r1, r3, fp
 8009820:	2900      	cmp	r1, #0
 8009822:	f340 80d4 	ble.w	80099ce <LCD_DrawBitmap+0x206>
 8009826:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8009828:	fb07 4403 	mla	r4, r7, r3, r4
 800982c:	e001      	b.n	8009832 <LCD_DrawBitmap+0x6a>
 800982e:	4659      	mov	r1, fp
 8009830:	4642      	mov	r2, r8
 8009832:	44d8      	add	r8, fp
 8009834:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8009838:	f108 38ff 	add.w	r8, r8, #4294967295
 800983c:	ebc3 0808 	rsb	r8, r3, r8
 8009840:	f1b8 0f00 	cmp.w	r8, #0
 8009844:	dd04      	ble.n	8009850 <LCD_DrawBitmap+0x88>
 8009846:	ebc8 0101 	rsb	r1, r8, r1
 800984a:	2900      	cmp	r1, #0
 800984c:	f340 80bf 	ble.w	80099ce <LCD_DrawBitmap+0x206>
 8009850:	9b07      	ldr	r3, [sp, #28]
 8009852:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8009856:	442b      	add	r3, r5
 8009858:	3b01      	subs	r3, #1
 800985a:	ebcc 0303 	rsb	r3, ip, r3
 800985e:	2b00      	cmp	r3, #0
 8009860:	dd02      	ble.n	8009868 <LCD_DrawBitmap+0xa0>
 8009862:	9f07      	ldr	r7, [sp, #28]
 8009864:	1aff      	subs	r7, r7, r3
 8009866:	9707      	str	r7, [sp, #28]
 8009868:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800986c:	4565      	cmp	r5, ip
 800986e:	da33      	bge.n	80098d8 <LCD_DrawBitmap+0x110>
 8009870:	9f07      	ldr	r7, [sp, #28]
 8009872:	ebc5 030c 	rsb	r3, r5, ip
 8009876:	1aff      	subs	r7, r7, r3
 8009878:	2e08      	cmp	r6, #8
 800987a:	9707      	str	r7, [sp, #28]
 800987c:	d027      	beq.n	80098ce <LCD_DrawBitmap+0x106>
 800987e:	dc0d      	bgt.n	800989c <LCD_DrawBitmap+0xd4>
 8009880:	2e02      	cmp	r6, #2
 8009882:	d014      	beq.n	80098ae <LCD_DrawBitmap+0xe6>
 8009884:	2e04      	cmp	r6, #4
 8009886:	d01a      	beq.n	80098be <LCD_DrawBitmap+0xf6>
 8009888:	2e01      	cmp	r6, #1
 800988a:	d126      	bne.n	80098da <LCD_DrawBitmap+0x112>
 800988c:	f023 0c07 	bic.w	ip, r3, #7
 8009890:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8009894:	4465      	add	r5, ip
 8009896:	f003 0307 	and.w	r3, r3, #7
 800989a:	e01e      	b.n	80098da <LCD_DrawBitmap+0x112>
 800989c:	2e18      	cmp	r6, #24
 800989e:	d018      	beq.n	80098d2 <LCD_DrawBitmap+0x10a>
 80098a0:	2e20      	cmp	r6, #32
 80098a2:	d016      	beq.n	80098d2 <LCD_DrawBitmap+0x10a>
 80098a4:	2e10      	cmp	r6, #16
 80098a6:	d118      	bne.n	80098da <LCD_DrawBitmap+0x112>
 80098a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80098ac:	e013      	b.n	80098d6 <LCD_DrawBitmap+0x10e>
 80098ae:	f023 0c03 	bic.w	ip, r3, #3
 80098b2:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 80098b6:	4465      	add	r5, ip
 80098b8:	f003 0303 	and.w	r3, r3, #3
 80098bc:	e00d      	b.n	80098da <LCD_DrawBitmap+0x112>
 80098be:	f023 0c01 	bic.w	ip, r3, #1
 80098c2:	eb04 0463 	add.w	r4, r4, r3, asr #1
 80098c6:	4465      	add	r5, ip
 80098c8:	f003 0301 	and.w	r3, r3, #1
 80098cc:	e005      	b.n	80098da <LCD_DrawBitmap+0x112>
 80098ce:	441c      	add	r4, r3
 80098d0:	e001      	b.n	80098d6 <LCD_DrawBitmap+0x10e>
 80098d2:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80098d6:	4665      	mov	r5, ip
 80098d8:	2300      	movs	r3, #0
 80098da:	9f07      	ldr	r7, [sp, #28]
 80098dc:	2f00      	cmp	r7, #0
 80098de:	dd76      	ble.n	80099ce <LCD_DrawBitmap+0x206>
 80098e0:	f890 e011 	ldrb.w	lr, [r0, #17]
 80098e4:	483c      	ldr	r0, [pc, #240]	; (80099d8 <LCD_DrawBitmap+0x210>)
 80098e6:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80098e8:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 80098ec:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 80098f0:	9403      	str	r4, [sp, #12]
 80098f2:	e88d 0042 	stmia.w	sp, {r1, r6}
 80098f6:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 80098f8:	9304      	str	r3, [sp, #16]
 80098fa:	9702      	str	r7, [sp, #8]
 80098fc:	9405      	str	r4, [sp, #20]
 80098fe:	f8de 4004 	ldr.w	r4, [lr, #4]
 8009902:	9b07      	ldr	r3, [sp, #28]
 8009904:	4629      	mov	r1, r5
 8009906:	47a0      	blx	r4
 8009908:	e061      	b.n	80099ce <LCD_DrawBitmap+0x206>
 800990a:	f1c6 0708 	rsb	r7, r6, #8
 800990e:	970e      	str	r7, [sp, #56]	; 0x38
 8009910:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8009914:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8009916:	455f      	cmp	r7, fp
 8009918:	da59      	bge.n	80099ce <LCD_DrawBitmap+0x206>
 800991a:	4b2e      	ldr	r3, [pc, #184]	; (80099d4 <LCD_DrawBitmap+0x20c>)
 800991c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800991e:	681b      	ldr	r3, [r3, #0]
 8009920:	4447      	add	r7, r8
 8009922:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8009926:	970c      	str	r7, [sp, #48]	; 0x30
 8009928:	3f01      	subs	r7, #1
 800992a:	4297      	cmp	r7, r2
 800992c:	970d      	str	r7, [sp, #52]	; 0x34
 800992e:	db46      	blt.n	80099be <LCD_DrawBitmap+0x1f6>
 8009930:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8009934:	4598      	cmp	r8, r3
 8009936:	dc42      	bgt.n	80099be <LCD_DrawBitmap+0x1f6>
 8009938:	f04f 0a00 	mov.w	sl, #0
 800993c:	940b      	str	r4, [sp, #44]	; 0x2c
 800993e:	46ac      	mov	ip, r5
 8009940:	4657      	mov	r7, sl
 8009942:	9807      	ldr	r0, [sp, #28]
 8009944:	4287      	cmp	r7, r0
 8009946:	da3a      	bge.n	80099be <LCD_DrawBitmap+0x1f6>
 8009948:	f1ba 0f00 	cmp.w	sl, #0
 800994c:	d106      	bne.n	800995c <LCD_DrawBitmap+0x194>
 800994e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8009950:	f890 9000 	ldrb.w	r9, [r0]
 8009954:	3001      	adds	r0, #1
 8009956:	900b      	str	r0, [sp, #44]	; 0x2c
 8009958:	f04f 0a08 	mov.w	sl, #8
 800995c:	990e      	ldr	r1, [sp, #56]	; 0x38
 800995e:	4a1d      	ldr	r2, [pc, #116]	; (80099d4 <LCD_DrawBitmap+0x20c>)
 8009960:	fa49 f301 	asr.w	r3, r9, r1
 8009964:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8009968:	fa09 f906 	lsl.w	r9, r9, r6
 800996c:	fa5f f989 	uxtb.w	r9, r9
 8009970:	ebc6 0a0a 	rsb	sl, r6, sl
 8009974:	d103      	bne.n	800997e <LCD_DrawBitmap+0x1b6>
 8009976:	6810      	ldr	r0, [r2, #0]
 8009978:	7c00      	ldrb	r0, [r0, #16]
 800997a:	0780      	lsls	r0, r0, #30
 800997c:	d41b      	bmi.n	80099b6 <LCD_DrawBitmap+0x1ee>
 800997e:	6812      	ldr	r2, [r2, #0]
 8009980:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8009982:	6810      	ldr	r0, [r2, #0]
 8009984:	900f      	str	r0, [sp, #60]	; 0x3c
 8009986:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8009988:	b110      	cbz	r0, 8009990 <LCD_DrawBitmap+0x1c8>
 800998a:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800998e:	e000      	b.n	8009992 <LCD_DrawBitmap+0x1ca>
 8009990:	b2db      	uxtb	r3, r3
 8009992:	991a      	ldr	r1, [sp, #104]	; 0x68
 8009994:	6013      	str	r3, [r2, #0]
 8009996:	1e4a      	subs	r2, r1, #1
 8009998:	4462      	add	r2, ip
 800999a:	4660      	mov	r0, ip
 800999c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800999e:	f8cd c020 	str.w	ip, [sp, #32]
 80099a2:	4641      	mov	r1, r8
 80099a4:	f7ff fe08 	bl	80095b8 <LCD_FillRect>
 80099a8:	4b0a      	ldr	r3, [pc, #40]	; (80099d4 <LCD_DrawBitmap+0x20c>)
 80099aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80099ac:	681b      	ldr	r3, [r3, #0]
 80099ae:	f8dd c020 	ldr.w	ip, [sp, #32]
 80099b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80099b4:	601a      	str	r2, [r3, #0]
 80099b6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80099b8:	3701      	adds	r7, #1
 80099ba:	449c      	add	ip, r3
 80099bc:	e7c1      	b.n	8009942 <LCD_DrawBitmap+0x17a>
 80099be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80099c0:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 80099c4:	3701      	adds	r7, #1
 80099c6:	970a      	str	r7, [sp, #40]	; 0x28
 80099c8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80099ca:	443c      	add	r4, r7
 80099cc:	e7a2      	b.n	8009914 <LCD_DrawBitmap+0x14c>
 80099ce:	b011      	add	sp, #68	; 0x44
 80099d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099d4:	200000c0 	.word	0x200000c0
 80099d8:	20002d34 	.word	0x20002d34
 80099dc:	20002cec 	.word	0x20002cec

080099e0 <LCD_SetClipRectMax>:
 80099e0:	b508      	push	{r3, lr}
 80099e2:	4b05      	ldr	r3, [pc, #20]	; (80099f8 <LCD_SetClipRectMax+0x18>)
 80099e4:	6819      	ldr	r1, [r3, #0]
 80099e6:	4b05      	ldr	r3, [pc, #20]	; (80099fc <LCD_SetClipRectMax+0x1c>)
 80099e8:	7c4a      	ldrb	r2, [r1, #17]
 80099ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80099ee:	68c3      	ldr	r3, [r0, #12]
 80099f0:	3108      	adds	r1, #8
 80099f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80099f4:	4798      	blx	r3
 80099f6:	bd08      	pop	{r3, pc}
 80099f8:	200000c0 	.word	0x200000c0
 80099fc:	20002d34 	.word	0x20002d34

08009a00 <emWin_LCD_Init>:
 8009a00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a02:	f7ff ffed 	bl	80099e0 <LCD_SetClipRectMax>
 8009a06:	f005 fead 	bl	800f764 <LCD_InitColors>
 8009a0a:	4604      	mov	r4, r0
 8009a0c:	2800      	cmp	r0, #0
 8009a0e:	d145      	bne.n	8009a9c <emWin_LCD_Init+0x9c>
 8009a10:	4605      	mov	r5, r0
 8009a12:	4628      	mov	r0, r5
 8009a14:	f001 fd8e 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009a18:	9001      	str	r0, [sp, #4]
 8009a1a:	b150      	cbz	r0, 8009a32 <emWin_LCD_Init+0x32>
 8009a1c:	68c3      	ldr	r3, [r0, #12]
 8009a1e:	210c      	movs	r1, #12
 8009a20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a22:	a801      	add	r0, sp, #4
 8009a24:	4798      	blx	r3
 8009a26:	4603      	mov	r3, r0
 8009a28:	2800      	cmp	r0, #0
 8009a2a:	d035      	beq.n	8009a98 <emWin_LCD_Init+0x98>
 8009a2c:	9801      	ldr	r0, [sp, #4]
 8009a2e:	4798      	blx	r3
 8009a30:	4304      	orrs	r4, r0
 8009a32:	3501      	adds	r5, #1
 8009a34:	2d02      	cmp	r5, #2
 8009a36:	d1ec      	bne.n	8009a12 <emWin_LCD_Init+0x12>
 8009a38:	bb84      	cbnz	r4, 8009a9c <emWin_LCD_Init+0x9c>
 8009a3a:	f005 feaf 	bl	800f79c <LCD_InitLUT>
 8009a3e:	4b19      	ldr	r3, [pc, #100]	; (8009aa4 <emWin_LCD_Init+0xa4>)
 8009a40:	681a      	ldr	r2, [r3, #0]
 8009a42:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8009a46:	429a      	cmp	r2, r3
 8009a48:	d101      	bne.n	8009a4e <emWin_LCD_Init+0x4e>
 8009a4a:	2000      	movs	r0, #0
 8009a4c:	e027      	b.n	8009a9e <emWin_LCD_Init+0x9e>
 8009a4e:	2401      	movs	r4, #1
 8009a50:	4620      	mov	r0, r4
 8009a52:	f001 fd6f 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009a56:	9001      	str	r0, [sp, #4]
 8009a58:	b1d0      	cbz	r0, 8009a90 <emWin_LCD_Init+0x90>
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	f000 ff16 	bl	800a88c <GUI_SelectLayer>
 8009a60:	2004      	movs	r0, #4
 8009a62:	f7ff fd27 	bl	80094b4 <LCD_SetDrawMode>
 8009a66:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8009a6a:	2000      	movs	r0, #0
 8009a6c:	4601      	mov	r1, r0
 8009a6e:	4613      	mov	r3, r2
 8009a70:	f7ff fda2 	bl	80095b8 <LCD_FillRect>
 8009a74:	2000      	movs	r0, #0
 8009a76:	f7ff fd1d 	bl	80094b4 <LCD_SetDrawMode>
 8009a7a:	a802      	add	r0, sp, #8
 8009a7c:	210e      	movs	r1, #14
 8009a7e:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8009a82:	68db      	ldr	r3, [r3, #12]
 8009a84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a86:	4798      	blx	r3
 8009a88:	4603      	mov	r3, r0
 8009a8a:	b108      	cbz	r0, 8009a90 <emWin_LCD_Init+0x90>
 8009a8c:	9801      	ldr	r0, [sp, #4]
 8009a8e:	4798      	blx	r3
 8009a90:	f114 34ff 	adds.w	r4, r4, #4294967295
 8009a94:	d2dc      	bcs.n	8009a50 <emWin_LCD_Init+0x50>
 8009a96:	e7d8      	b.n	8009a4a <emWin_LCD_Init+0x4a>
 8009a98:	2001      	movs	r0, #1
 8009a9a:	e000      	b.n	8009a9e <emWin_LCD_Init+0x9e>
 8009a9c:	4620      	mov	r0, r4
 8009a9e:	b003      	add	sp, #12
 8009aa0:	bd30      	pop	{r4, r5, pc}
 8009aa2:	bf00      	nop
 8009aa4:	20002bc0 	.word	0x20002bc0

08009aa8 <LCD_Color2Index>:
 8009aa8:	b508      	push	{r3, lr}
 8009aaa:	4b05      	ldr	r3, [pc, #20]	; (8009ac0 <LCD_Color2Index+0x18>)
 8009aac:	681b      	ldr	r3, [r3, #0]
 8009aae:	7c5a      	ldrb	r2, [r3, #17]
 8009ab0:	4b04      	ldr	r3, [pc, #16]	; (8009ac4 <LCD_Color2Index+0x1c>)
 8009ab2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009ab6:	691b      	ldr	r3, [r3, #16]
 8009ab8:	681b      	ldr	r3, [r3, #0]
 8009aba:	4798      	blx	r3
 8009abc:	bd08      	pop	{r3, pc}
 8009abe:	bf00      	nop
 8009ac0:	200000c0 	.word	0x200000c0
 8009ac4:	20002d34 	.word	0x20002d34

08009ac8 <LCD_Index2Color>:
 8009ac8:	b508      	push	{r3, lr}
 8009aca:	4b05      	ldr	r3, [pc, #20]	; (8009ae0 <LCD_Index2Color+0x18>)
 8009acc:	681b      	ldr	r3, [r3, #0]
 8009ace:	7c5a      	ldrb	r2, [r3, #17]
 8009ad0:	4b04      	ldr	r3, [pc, #16]	; (8009ae4 <LCD_Index2Color+0x1c>)
 8009ad2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009ad6:	691b      	ldr	r3, [r3, #16]
 8009ad8:	685b      	ldr	r3, [r3, #4]
 8009ada:	4798      	blx	r3
 8009adc:	bd08      	pop	{r3, pc}
 8009ade:	bf00      	nop
 8009ae0:	200000c0 	.word	0x200000c0
 8009ae4:	20002d34 	.word	0x20002d34

08009ae8 <LCD_SetColorIndex>:
 8009ae8:	4b04      	ldr	r3, [pc, #16]	; (8009afc <LCD_SetColorIndex+0x14>)
 8009aea:	681b      	ldr	r3, [r3, #0]
 8009aec:	7c1a      	ldrb	r2, [r3, #16]
 8009aee:	0752      	lsls	r2, r2, #29
 8009af0:	bf4c      	ite	mi
 8009af2:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8009af4:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8009af6:	6018      	str	r0, [r3, #0]
 8009af8:	4770      	bx	lr
 8009afa:	bf00      	nop
 8009afc:	200000c0 	.word	0x200000c0

08009b00 <_SetColor>:
 8009b00:	b508      	push	{r3, lr}
 8009b02:	4b06      	ldr	r3, [pc, #24]	; (8009b1c <_SetColor+0x1c>)
 8009b04:	681b      	ldr	r3, [r3, #0]
 8009b06:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8009b08:	4281      	cmp	r1, r0
 8009b0a:	d006      	beq.n	8009b1a <_SetColor+0x1a>
 8009b0c:	6318      	str	r0, [r3, #48]	; 0x30
 8009b0e:	f7ff ffcb 	bl	8009aa8 <LCD_Color2Index>
 8009b12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009b16:	f7ff bfe7 	b.w	8009ae8 <LCD_SetColorIndex>
 8009b1a:	bd08      	pop	{r3, pc}
 8009b1c:	200000c0 	.word	0x200000c0

08009b20 <LCD_SetBkColorIndex>:
 8009b20:	4b04      	ldr	r3, [pc, #16]	; (8009b34 <LCD_SetBkColorIndex+0x14>)
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	7c1a      	ldrb	r2, [r3, #16]
 8009b26:	0752      	lsls	r2, r2, #29
 8009b28:	bf4c      	ite	mi
 8009b2a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 8009b2c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 8009b2e:	6018      	str	r0, [r3, #0]
 8009b30:	4770      	bx	lr
 8009b32:	bf00      	nop
 8009b34:	200000c0 	.word	0x200000c0

08009b38 <_SetBkColor>:
 8009b38:	b508      	push	{r3, lr}
 8009b3a:	4b06      	ldr	r3, [pc, #24]	; (8009b54 <_SetBkColor+0x1c>)
 8009b3c:	681b      	ldr	r3, [r3, #0]
 8009b3e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8009b40:	4281      	cmp	r1, r0
 8009b42:	d006      	beq.n	8009b52 <_SetBkColor+0x1a>
 8009b44:	6358      	str	r0, [r3, #52]	; 0x34
 8009b46:	f7ff ffaf 	bl	8009aa8 <LCD_Color2Index>
 8009b4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009b4e:	f7ff bfe7 	b.w	8009b20 <LCD_SetBkColorIndex>
 8009b52:	bd08      	pop	{r3, pc}
 8009b54:	200000c0 	.word	0x200000c0

08009b58 <LCD_SetBkColor>:
 8009b58:	b508      	push	{r3, lr}
 8009b5a:	4b02      	ldr	r3, [pc, #8]	; (8009b64 <LCD_SetBkColor+0xc>)
 8009b5c:	681b      	ldr	r3, [r3, #0]
 8009b5e:	685b      	ldr	r3, [r3, #4]
 8009b60:	4798      	blx	r3
 8009b62:	bd08      	pop	{r3, pc}
 8009b64:	200000a8 	.word	0x200000a8

08009b68 <LCD_SetColor>:
 8009b68:	b508      	push	{r3, lr}
 8009b6a:	4b02      	ldr	r3, [pc, #8]	; (8009b74 <LCD_SetColor+0xc>)
 8009b6c:	681b      	ldr	r3, [r3, #0]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	4798      	blx	r3
 8009b72:	bd08      	pop	{r3, pc}
 8009b74:	200000a8 	.word	0x200000a8

08009b78 <GUI__DivideRound32>:
 8009b78:	b149      	cbz	r1, 8009b8e <GUI__DivideRound32+0x16>
 8009b7a:	2800      	cmp	r0, #0
 8009b7c:	ea4f 0361 	mov.w	r3, r1, asr #1
 8009b80:	bfb4      	ite	lt
 8009b82:	ebc3 0000 	rsblt	r0, r3, r0
 8009b86:	18c0      	addge	r0, r0, r3
 8009b88:	fb90 f0f1 	sdiv	r0, r0, r1
 8009b8c:	4770      	bx	lr
 8009b8e:	4608      	mov	r0, r1
 8009b90:	4770      	bx	lr

08009b92 <GUI__HandleEOLine>:
 8009b92:	b513      	push	{r0, r1, r4, lr}
 8009b94:	6802      	ldr	r2, [r0, #0]
 8009b96:	4604      	mov	r4, r0
 8009b98:	a802      	add	r0, sp, #8
 8009b9a:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009b9e:	f000 fc81 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 8009ba2:	b2c0      	uxtb	r0, r0
 8009ba4:	b120      	cbz	r0, 8009bb0 <GUI__HandleEOLine+0x1e>
 8009ba6:	280a      	cmp	r0, #10
 8009ba8:	d104      	bne.n	8009bb4 <GUI__HandleEOLine+0x22>
 8009baa:	9b01      	ldr	r3, [sp, #4]
 8009bac:	6023      	str	r3, [r4, #0]
 8009bae:	e001      	b.n	8009bb4 <GUI__HandleEOLine+0x22>
 8009bb0:	2001      	movs	r0, #1
 8009bb2:	e000      	b.n	8009bb6 <GUI__HandleEOLine+0x24>
 8009bb4:	2000      	movs	r0, #0
 8009bb6:	b002      	add	sp, #8
 8009bb8:	bd10      	pop	{r4, pc}

08009bba <GUI__IntersectRect>:
 8009bba:	880b      	ldrh	r3, [r1, #0]
 8009bbc:	b510      	push	{r4, lr}
 8009bbe:	f9b0 4000 	ldrsh.w	r4, [r0]
 8009bc2:	b21a      	sxth	r2, r3
 8009bc4:	4294      	cmp	r4, r2
 8009bc6:	bfb8      	it	lt
 8009bc8:	8003      	strhlt	r3, [r0, #0]
 8009bca:	884b      	ldrh	r3, [r1, #2]
 8009bcc:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8009bd0:	b21a      	sxth	r2, r3
 8009bd2:	4294      	cmp	r4, r2
 8009bd4:	bfb8      	it	lt
 8009bd6:	8043      	strhlt	r3, [r0, #2]
 8009bd8:	888b      	ldrh	r3, [r1, #4]
 8009bda:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8009bde:	b21a      	sxth	r2, r3
 8009be0:	4294      	cmp	r4, r2
 8009be2:	bfc8      	it	gt
 8009be4:	8083      	strhgt	r3, [r0, #4]
 8009be6:	88cb      	ldrh	r3, [r1, #6]
 8009be8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8009bec:	b21a      	sxth	r2, r3
 8009bee:	4291      	cmp	r1, r2
 8009bf0:	bfc8      	it	gt
 8009bf2:	80c3      	strhgt	r3, [r0, #6]
 8009bf4:	bd10      	pop	{r4, pc}

08009bf6 <GUI__IntersectRects>:
 8009bf6:	b570      	push	{r4, r5, r6, lr}
 8009bf8:	f9b2 3000 	ldrsh.w	r3, [r2]
 8009bfc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8009c00:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009c04:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8009c08:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8009c0c:	429c      	cmp	r4, r3
 8009c0e:	bfb8      	it	lt
 8009c10:	461c      	movlt	r4, r3
 8009c12:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8009c16:	429d      	cmp	r5, r3
 8009c18:	bfa8      	it	ge
 8009c1a:	462b      	movge	r3, r5
 8009c1c:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8009c20:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009c24:	42ae      	cmp	r6, r5
 8009c26:	bfb8      	it	lt
 8009c28:	4635      	movlt	r5, r6
 8009c2a:	b2a4      	uxth	r4, r4
 8009c2c:	b2ad      	uxth	r5, r5
 8009c2e:	4291      	cmp	r1, r2
 8009c30:	bfb8      	it	lt
 8009c32:	460a      	movlt	r2, r1
 8009c34:	8004      	strh	r4, [r0, #0]
 8009c36:	8085      	strh	r5, [r0, #4]
 8009c38:	b224      	sxth	r4, r4
 8009c3a:	b22d      	sxth	r5, r5
 8009c3c:	b29b      	uxth	r3, r3
 8009c3e:	b292      	uxth	r2, r2
 8009c40:	42a5      	cmp	r5, r4
 8009c42:	8043      	strh	r3, [r0, #2]
 8009c44:	80c2      	strh	r2, [r0, #6]
 8009c46:	db06      	blt.n	8009c56 <GUI__IntersectRects+0x60>
 8009c48:	b210      	sxth	r0, r2
 8009c4a:	b21b      	sxth	r3, r3
 8009c4c:	4298      	cmp	r0, r3
 8009c4e:	bfb4      	ite	lt
 8009c50:	2000      	movlt	r0, #0
 8009c52:	2001      	movge	r0, #1
 8009c54:	bd70      	pop	{r4, r5, r6, pc}
 8009c56:	2000      	movs	r0, #0
 8009c58:	bd70      	pop	{r4, r5, r6, pc}

08009c5a <GUI__memset16>:
 8009c5a:	b570      	push	{r4, r5, r6, lr}
 8009c5c:	0784      	lsls	r4, r0, #30
 8009c5e:	d502      	bpl.n	8009c66 <GUI__memset16+0xc>
 8009c60:	8001      	strh	r1, [r0, #0]
 8009c62:	3a01      	subs	r2, #1
 8009c64:	3002      	adds	r0, #2
 8009c66:	0855      	lsrs	r5, r2, #1
 8009c68:	462b      	mov	r3, r5
 8009c6a:	b305      	cbz	r5, 8009cae <GUI__memset16+0x54>
 8009c6c:	2d03      	cmp	r5, #3
 8009c6e:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8009c72:	dc02      	bgt.n	8009c7a <GUI__memset16+0x20>
 8009c74:	4606      	mov	r6, r0
 8009c76:	461d      	mov	r5, r3
 8009c78:	e012      	b.n	8009ca0 <GUI__memset16+0x46>
 8009c7a:	4603      	mov	r3, r0
 8009c7c:	462e      	mov	r6, r5
 8009c7e:	3e04      	subs	r6, #4
 8009c80:	2e03      	cmp	r6, #3
 8009c82:	601c      	str	r4, [r3, #0]
 8009c84:	605c      	str	r4, [r3, #4]
 8009c86:	609c      	str	r4, [r3, #8]
 8009c88:	60dc      	str	r4, [r3, #12]
 8009c8a:	f103 0310 	add.w	r3, r3, #16
 8009c8e:	dcf6      	bgt.n	8009c7e <GUI__memset16+0x24>
 8009c90:	3d04      	subs	r5, #4
 8009c92:	08ab      	lsrs	r3, r5, #2
 8009c94:	1c5e      	adds	r6, r3, #1
 8009c96:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8009c9a:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8009c9e:	e7e9      	b.n	8009c74 <GUI__memset16+0x1a>
 8009ca0:	b11d      	cbz	r5, 8009caa <GUI__memset16+0x50>
 8009ca2:	f846 4b04 	str.w	r4, [r6], #4
 8009ca6:	3d01      	subs	r5, #1
 8009ca8:	e7fa      	b.n	8009ca0 <GUI__memset16+0x46>
 8009caa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8009cae:	07d3      	lsls	r3, r2, #31
 8009cb0:	bf48      	it	mi
 8009cb2:	8001      	strhmi	r1, [r0, #0]
 8009cb4:	bd70      	pop	{r4, r5, r6, pc}

08009cb6 <GUI__ReduceRect>:
 8009cb6:	880b      	ldrh	r3, [r1, #0]
 8009cb8:	b292      	uxth	r2, r2
 8009cba:	4413      	add	r3, r2
 8009cbc:	8003      	strh	r3, [r0, #0]
 8009cbe:	888b      	ldrh	r3, [r1, #4]
 8009cc0:	1a9b      	subs	r3, r3, r2
 8009cc2:	8083      	strh	r3, [r0, #4]
 8009cc4:	884b      	ldrh	r3, [r1, #2]
 8009cc6:	4413      	add	r3, r2
 8009cc8:	8043      	strh	r3, [r0, #2]
 8009cca:	88cb      	ldrh	r3, [r1, #6]
 8009ccc:	1a9a      	subs	r2, r3, r2
 8009cce:	80c2      	strh	r2, [r0, #6]
 8009cd0:	4770      	bx	lr

08009cd2 <GUI__sqrt32>:
 8009cd2:	b510      	push	{r4, lr}
 8009cd4:	2110      	movs	r1, #16
 8009cd6:	2300      	movs	r3, #0
 8009cd8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8009cdc:	189c      	adds	r4, r3, r2
 8009cde:	4284      	cmp	r4, r0
 8009ce0:	bf9c      	itt	ls
 8009ce2:	18a3      	addls	r3, r4, r2
 8009ce4:	ebc4 0000 	rsbls	r0, r4, r0
 8009ce8:	3901      	subs	r1, #1
 8009cea:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8009cee:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8009cf2:	d1f3      	bne.n	8009cdc <GUI__sqrt32+0xa>
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	bd10      	pop	{r4, pc}

08009cf8 <GUI__strcmp>:
 8009cf8:	b510      	push	{r4, lr}
 8009cfa:	4b09      	ldr	r3, [pc, #36]	; (8009d20 <GUI__strcmp+0x28>)
 8009cfc:	2800      	cmp	r0, #0
 8009cfe:	bf08      	it	eq
 8009d00:	4618      	moveq	r0, r3
 8009d02:	2900      	cmp	r1, #0
 8009d04:	bf08      	it	eq
 8009d06:	4619      	moveq	r1, r3
 8009d08:	2300      	movs	r3, #0
 8009d0a:	5cc4      	ldrb	r4, [r0, r3]
 8009d0c:	5cca      	ldrb	r2, [r1, r3]
 8009d0e:	42a2      	cmp	r2, r4
 8009d10:	d104      	bne.n	8009d1c <GUI__strcmp+0x24>
 8009d12:	3301      	adds	r3, #1
 8009d14:	2a00      	cmp	r2, #0
 8009d16:	d1f8      	bne.n	8009d0a <GUI__strcmp+0x12>
 8009d18:	4610      	mov	r0, r2
 8009d1a:	bd10      	pop	{r4, pc}
 8009d1c:	2001      	movs	r0, #1
 8009d1e:	bd10      	pop	{r4, pc}
 8009d20:	08014928 	.word	0x08014928

08009d24 <GUI__strcmp_hp>:
 8009d24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d26:	460d      	mov	r5, r1
 8009d28:	b160      	cbz	r0, 8009d44 <GUI__strcmp_hp+0x20>
 8009d2a:	f002 fbcd 	bl	800c4c8 <GUI_ALLOC_LockH>
 8009d2e:	ac02      	add	r4, sp, #8
 8009d30:	4629      	mov	r1, r5
 8009d32:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009d36:	f7ff ffdf 	bl	8009cf8 <GUI__strcmp>
 8009d3a:	4605      	mov	r5, r0
 8009d3c:	4620      	mov	r0, r4
 8009d3e:	f002 fbd1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8009d42:	e000      	b.n	8009d46 <GUI__strcmp_hp+0x22>
 8009d44:	2501      	movs	r5, #1
 8009d46:	4628      	mov	r0, r5
 8009d48:	b003      	add	sp, #12
 8009d4a:	bd30      	pop	{r4, r5, pc}

08009d4c <GUI__strlen>:
 8009d4c:	f04f 33ff 	mov.w	r3, #4294967295
 8009d50:	b118      	cbz	r0, 8009d5a <GUI__strlen+0xe>
 8009d52:	3301      	adds	r3, #1
 8009d54:	5cc2      	ldrb	r2, [r0, r3]
 8009d56:	2a00      	cmp	r2, #0
 8009d58:	d1fb      	bne.n	8009d52 <GUI__strlen+0x6>
 8009d5a:	4618      	mov	r0, r3
 8009d5c:	4770      	bx	lr
	...

08009d60 <GUI__SetText>:
 8009d60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d62:	6807      	ldr	r7, [r0, #0]
 8009d64:	4605      	mov	r5, r0
 8009d66:	4638      	mov	r0, r7
 8009d68:	460e      	mov	r6, r1
 8009d6a:	f7ff ffdb 	bl	8009d24 <GUI__strcmp_hp>
 8009d6e:	b908      	cbnz	r0, 8009d74 <GUI__SetText+0x14>
 8009d70:	2000      	movs	r0, #0
 8009d72:	e02f      	b.n	8009dd4 <GUI__SetText+0x74>
 8009d74:	4630      	mov	r0, r6
 8009d76:	f7ff ffe9 	bl	8009d4c <GUI__strlen>
 8009d7a:	1c44      	adds	r4, r0, #1
 8009d7c:	4638      	mov	r0, r7
 8009d7e:	f002 fbd1 	bl	800c524 <GUI_ALLOC_GetSize>
 8009d82:	4284      	cmp	r4, r0
 8009d84:	d110      	bne.n	8009da8 <GUI__SetText+0x48>
 8009d86:	2c00      	cmp	r4, #0
 8009d88:	d0f2      	beq.n	8009d70 <GUI__SetText+0x10>
 8009d8a:	4638      	mov	r0, r7
 8009d8c:	f002 fb9c 	bl	800c4c8 <GUI_ALLOC_LockH>
 8009d90:	ad02      	add	r5, sp, #8
 8009d92:	4b11      	ldr	r3, [pc, #68]	; (8009dd8 <GUI__SetText+0x78>)
 8009d94:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009d98:	681b      	ldr	r3, [r3, #0]
 8009d9a:	4631      	mov	r1, r6
 8009d9c:	4622      	mov	r2, r4
 8009d9e:	4798      	blx	r3
 8009da0:	4628      	mov	r0, r5
 8009da2:	f002 fb9f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8009da6:	e014      	b.n	8009dd2 <GUI__SetText+0x72>
 8009da8:	4620      	mov	r0, r4
 8009daa:	f002 fd59 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 8009dae:	4607      	mov	r7, r0
 8009db0:	2800      	cmp	r0, #0
 8009db2:	d0dd      	beq.n	8009d70 <GUI__SetText+0x10>
 8009db4:	f002 fb88 	bl	800c4c8 <GUI_ALLOC_LockH>
 8009db8:	ac02      	add	r4, sp, #8
 8009dba:	4631      	mov	r1, r6
 8009dbc:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009dc0:	f006 ffc8 	bl	8010d54 <strcpy>
 8009dc4:	4620      	mov	r0, r4
 8009dc6:	f002 fb8d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8009dca:	4628      	mov	r0, r5
 8009dcc:	f002 fd4c 	bl	800c868 <GUI_ALLOC_FreePtr>
 8009dd0:	602f      	str	r7, [r5, #0]
 8009dd2:	2001      	movs	r0, #1
 8009dd4:	b003      	add	sp, #12
 8009dd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009dd8:	200000b0 	.word	0x200000b0

08009ddc <GUI__ManageCacheEx>:
 8009ddc:	2801      	cmp	r0, #1
 8009dde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009de0:	4604      	mov	r4, r0
 8009de2:	460d      	mov	r5, r1
 8009de4:	dc65      	bgt.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009de6:	4b34      	ldr	r3, [pc, #208]	; (8009eb8 <GUI__ManageCacheEx+0xdc>)
 8009de8:	681b      	ldr	r3, [r3, #0]
 8009dea:	b103      	cbz	r3, 8009dee <GUI__ManageCacheEx+0x12>
 8009dec:	4798      	blx	r3
 8009dee:	2d01      	cmp	r5, #1
 8009df0:	d004      	beq.n	8009dfc <GUI__ManageCacheEx+0x20>
 8009df2:	2d02      	cmp	r5, #2
 8009df4:	d021      	beq.n	8009e3a <GUI__ManageCacheEx+0x5e>
 8009df6:	2d00      	cmp	r5, #0
 8009df8:	d15b      	bne.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009dfa:	e035      	b.n	8009e68 <GUI__ManageCacheEx+0x8c>
 8009dfc:	4e2f      	ldr	r6, [pc, #188]	; (8009ebc <GUI__ManageCacheEx+0xe0>)
 8009dfe:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8009e02:	b9b7      	cbnz	r7, 8009e32 <GUI__ManageCacheEx+0x56>
 8009e04:	4620      	mov	r0, r4
 8009e06:	f001 fb95 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009e0a:	9001      	str	r0, [sp, #4]
 8009e0c:	2800      	cmp	r0, #0
 8009e0e:	d050      	beq.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009e10:	68c3      	ldr	r3, [r0, #12]
 8009e12:	210d      	movs	r1, #13
 8009e14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e16:	a801      	add	r0, sp, #4
 8009e18:	4798      	blx	r3
 8009e1a:	4603      	mov	r3, r0
 8009e1c:	2800      	cmp	r0, #0
 8009e1e:	d048      	beq.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009e20:	9801      	ldr	r0, [sp, #4]
 8009e22:	4629      	mov	r1, r5
 8009e24:	4798      	blx	r3
 8009e26:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8009e2a:	3301      	adds	r3, #1
 8009e2c:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8009e30:	e018      	b.n	8009e64 <GUI__ManageCacheEx+0x88>
 8009e32:	3701      	adds	r7, #1
 8009e34:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8009e38:	e03b      	b.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009e3a:	4620      	mov	r0, r4
 8009e3c:	f001 fb7a 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009e40:	9001      	str	r0, [sp, #4]
 8009e42:	2800      	cmp	r0, #0
 8009e44:	d035      	beq.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009e46:	68c3      	ldr	r3, [r0, #12]
 8009e48:	210d      	movs	r1, #13
 8009e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e4c:	a801      	add	r0, sp, #4
 8009e4e:	4798      	blx	r3
 8009e50:	4604      	mov	r4, r0
 8009e52:	2800      	cmp	r0, #0
 8009e54:	d02d      	beq.n	8009eb2 <GUI__ManageCacheEx+0xd6>
 8009e56:	4b1a      	ldr	r3, [pc, #104]	; (8009ec0 <GUI__ManageCacheEx+0xe4>)
 8009e58:	681b      	ldr	r3, [r3, #0]
 8009e5a:	b103      	cbz	r3, 8009e5e <GUI__ManageCacheEx+0x82>
 8009e5c:	4798      	blx	r3
 8009e5e:	9801      	ldr	r0, [sp, #4]
 8009e60:	2102      	movs	r1, #2
 8009e62:	47a0      	blx	r4
 8009e64:	2000      	movs	r0, #0
 8009e66:	e025      	b.n	8009eb4 <GUI__ManageCacheEx+0xd8>
 8009e68:	4d14      	ldr	r5, [pc, #80]	; (8009ebc <GUI__ManageCacheEx+0xe0>)
 8009e6a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8009e6e:	2b01      	cmp	r3, #1
 8009e70:	d001      	beq.n	8009e76 <GUI__ManageCacheEx+0x9a>
 8009e72:	2001      	movs	r0, #1
 8009e74:	e015      	b.n	8009ea2 <GUI__ManageCacheEx+0xc6>
 8009e76:	4620      	mov	r0, r4
 8009e78:	f001 fb5c 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8009e7c:	9001      	str	r0, [sp, #4]
 8009e7e:	2800      	cmp	r0, #0
 8009e80:	d0f7      	beq.n	8009e72 <GUI__ManageCacheEx+0x96>
 8009e82:	68c3      	ldr	r3, [r0, #12]
 8009e84:	210d      	movs	r1, #13
 8009e86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e88:	a801      	add	r0, sp, #4
 8009e8a:	4798      	blx	r3
 8009e8c:	4606      	mov	r6, r0
 8009e8e:	2800      	cmp	r0, #0
 8009e90:	d0ef      	beq.n	8009e72 <GUI__ManageCacheEx+0x96>
 8009e92:	4b0b      	ldr	r3, [pc, #44]	; (8009ec0 <GUI__ManageCacheEx+0xe4>)
 8009e94:	681b      	ldr	r3, [r3, #0]
 8009e96:	b103      	cbz	r3, 8009e9a <GUI__ManageCacheEx+0xbe>
 8009e98:	4798      	blx	r3
 8009e9a:	9801      	ldr	r0, [sp, #4]
 8009e9c:	2100      	movs	r1, #0
 8009e9e:	47b0      	blx	r6
 8009ea0:	2000      	movs	r0, #0
 8009ea2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8009ea6:	2b00      	cmp	r3, #0
 8009ea8:	bf18      	it	ne
 8009eaa:	3b01      	subne	r3, #1
 8009eac:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8009eb0:	e000      	b.n	8009eb4 <GUI__ManageCacheEx+0xd8>
 8009eb2:	2001      	movs	r0, #1
 8009eb4:	b003      	add	sp, #12
 8009eb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009eb8:	20002b1c 	.word	0x20002b1c
 8009ebc:	20002b14 	.word	0x20002b14
 8009ec0:	20002b10 	.word	0x20002b10

08009ec4 <GUI__ManageCache>:
 8009ec4:	4b02      	ldr	r3, [pc, #8]	; (8009ed0 <GUI__ManageCache+0xc>)
 8009ec6:	681b      	ldr	r3, [r3, #0]
 8009ec8:	4601      	mov	r1, r0
 8009eca:	7c58      	ldrb	r0, [r3, #17]
 8009ecc:	f7ff bf86 	b.w	8009ddc <GUI__ManageCacheEx>
 8009ed0:	200000c0 	.word	0x200000c0

08009ed4 <GUI__MixColors>:
 8009ed4:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 8009ed8:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8009edc:	0e0b      	lsrs	r3, r1, #24
 8009ede:	ea4f 6310 	mov.w	r3, r0, lsr #24
 8009ee2:	b530      	push	{r4, r5, lr}
 8009ee4:	fb02 f303 	mul.w	r3, r2, r3
 8009ee8:	f04f 04ff 	mov.w	r4, #255	; 0xff
 8009eec:	fbb3 f3f4 	udiv	r3, r3, r4
 8009ef0:	bf08      	it	eq
 8009ef2:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 8009ef6:	1ae2      	subs	r2, r4, r3
 8009ef8:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8009efc:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8009f00:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8009f04:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 8009f08:	0a2d      	lsrs	r5, r5, #8
 8009f0a:	435c      	muls	r4, r3
 8009f0c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8009f10:	4343      	muls	r3, r0
 8009f12:	fb02 4405 	mla	r4, r2, r5, r4
 8009f16:	fb02 3201 	mla	r2, r2, r1, r3
 8009f1a:	0a12      	lsrs	r2, r2, #8
 8009f1c:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8009f20:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8009f24:	ea44 0002 	orr.w	r0, r4, r2
 8009f28:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8009f2c:	bd30      	pop	{r4, r5, pc}
	...

08009f30 <_OnExit>:
 8009f30:	b570      	push	{r4, r5, r6, lr}
 8009f32:	4c0a      	ldr	r4, [pc, #40]	; (8009f5c <_OnExit+0x2c>)
 8009f34:	4d0a      	ldr	r5, [pc, #40]	; (8009f60 <_OnExit+0x30>)
 8009f36:	6820      	ldr	r0, [r4, #0]
 8009f38:	4e0a      	ldr	r6, [pc, #40]	; (8009f64 <_OnExit+0x34>)
 8009f3a:	f002 fab1 	bl	800c4a0 <GUI_ALLOC_FreeFixedBlock>
 8009f3e:	6828      	ldr	r0, [r5, #0]
 8009f40:	f002 faae 	bl	800c4a0 <GUI_ALLOC_FreeFixedBlock>
 8009f44:	6830      	ldr	r0, [r6, #0]
 8009f46:	f002 faab 	bl	800c4a0 <GUI_ALLOC_FreeFixedBlock>
 8009f4a:	4a07      	ldr	r2, [pc, #28]	; (8009f68 <_OnExit+0x38>)
 8009f4c:	2300      	movs	r3, #0
 8009f4e:	6013      	str	r3, [r2, #0]
 8009f50:	4a06      	ldr	r2, [pc, #24]	; (8009f6c <_OnExit+0x3c>)
 8009f52:	6033      	str	r3, [r6, #0]
 8009f54:	602b      	str	r3, [r5, #0]
 8009f56:	6023      	str	r3, [r4, #0]
 8009f58:	6013      	str	r3, [r2, #0]
 8009f5a:	bd70      	pop	{r4, r5, r6, pc}
 8009f5c:	20002b24 	.word	0x20002b24
 8009f60:	20002b20 	.word	0x20002b20
 8009f64:	20002b28 	.word	0x20002b28
 8009f68:	20002b2c 	.word	0x20002b2c
 8009f6c:	20002b3c 	.word	0x20002b3c

08009f70 <GUI__GetAlphaBuffer>:
 8009f70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009f74:	461c      	mov	r4, r3
 8009f76:	4b28      	ldr	r3, [pc, #160]	; (800a018 <GUI__GetAlphaBuffer+0xa8>)
 8009f78:	4617      	mov	r7, r2
 8009f7a:	681a      	ldr	r2, [r3, #0]
 8009f7c:	4606      	mov	r6, r0
 8009f7e:	4688      	mov	r8, r1
 8009f80:	b932      	cbnz	r2, 8009f90 <GUI__GetAlphaBuffer+0x20>
 8009f82:	2201      	movs	r2, #1
 8009f84:	4825      	ldr	r0, [pc, #148]	; (800a01c <GUI__GetAlphaBuffer+0xac>)
 8009f86:	601a      	str	r2, [r3, #0]
 8009f88:	4b25      	ldr	r3, [pc, #148]	; (800a020 <GUI__GetAlphaBuffer+0xb0>)
 8009f8a:	6003      	str	r3, [r0, #0]
 8009f8c:	f001 fc2c 	bl	800b7e8 <GUI__RegisterExit>
 8009f90:	4d24      	ldr	r5, [pc, #144]	; (800a024 <GUI__GetAlphaBuffer+0xb4>)
 8009f92:	682b      	ldr	r3, [r5, #0]
 8009f94:	b933      	cbnz	r3, 8009fa4 <GUI__GetAlphaBuffer+0x34>
 8009f96:	4b24      	ldr	r3, [pc, #144]	; (800a028 <GUI__GetAlphaBuffer+0xb8>)
 8009f98:	681b      	ldr	r3, [r3, #0]
 8009f9a:	602b      	str	r3, [r5, #0]
 8009f9c:	b913      	cbnz	r3, 8009fa4 <GUI__GetAlphaBuffer+0x34>
 8009f9e:	f7ff fa05 	bl	80093ac <LCD_GetVXSizeMax>
 8009fa2:	6028      	str	r0, [r5, #0]
 8009fa4:	b10c      	cbz	r4, 8009faa <GUI__GetAlphaBuffer+0x3a>
 8009fa6:	682b      	ldr	r3, [r5, #0]
 8009fa8:	6023      	str	r3, [r4, #0]
 8009faa:	b196      	cbz	r6, 8009fd2 <GUI__GetAlphaBuffer+0x62>
 8009fac:	4b1f      	ldr	r3, [pc, #124]	; (800a02c <GUI__GetAlphaBuffer+0xbc>)
 8009fae:	681a      	ldr	r2, [r3, #0]
 8009fb0:	4699      	mov	r9, r3
 8009fb2:	2400      	movs	r4, #0
 8009fb4:	b94a      	cbnz	r2, 8009fca <GUI__GetAlphaBuffer+0x5a>
 8009fb6:	6828      	ldr	r0, [r5, #0]
 8009fb8:	0080      	lsls	r0, r0, #2
 8009fba:	f002 fb55 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 8009fbe:	f1d0 0401 	rsbs	r4, r0, #1
 8009fc2:	f8c9 0000 	str.w	r0, [r9]
 8009fc6:	bf38      	it	cc
 8009fc8:	2400      	movcc	r4, #0
 8009fca:	f8d9 3000 	ldr.w	r3, [r9]
 8009fce:	6033      	str	r3, [r6, #0]
 8009fd0:	e000      	b.n	8009fd4 <GUI__GetAlphaBuffer+0x64>
 8009fd2:	4634      	mov	r4, r6
 8009fd4:	f1b8 0f00 	cmp.w	r8, #0
 8009fd8:	d00d      	beq.n	8009ff6 <GUI__GetAlphaBuffer+0x86>
 8009fda:	4e15      	ldr	r6, [pc, #84]	; (800a030 <GUI__GetAlphaBuffer+0xc0>)
 8009fdc:	6833      	ldr	r3, [r6, #0]
 8009fde:	b93b      	cbnz	r3, 8009ff0 <GUI__GetAlphaBuffer+0x80>
 8009fe0:	6828      	ldr	r0, [r5, #0]
 8009fe2:	0080      	lsls	r0, r0, #2
 8009fe4:	f002 fb40 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 8009fe8:	2800      	cmp	r0, #0
 8009fea:	6030      	str	r0, [r6, #0]
 8009fec:	bf08      	it	eq
 8009fee:	2401      	moveq	r4, #1
 8009ff0:	6833      	ldr	r3, [r6, #0]
 8009ff2:	f8c8 3000 	str.w	r3, [r8]
 8009ff6:	b167      	cbz	r7, 800a012 <GUI__GetAlphaBuffer+0xa2>
 8009ff8:	4e0e      	ldr	r6, [pc, #56]	; (800a034 <GUI__GetAlphaBuffer+0xc4>)
 8009ffa:	6833      	ldr	r3, [r6, #0]
 8009ffc:	b93b      	cbnz	r3, 800a00e <GUI__GetAlphaBuffer+0x9e>
 8009ffe:	6828      	ldr	r0, [r5, #0]
 800a000:	0080      	lsls	r0, r0, #2
 800a002:	f002 fb31 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 800a006:	2800      	cmp	r0, #0
 800a008:	6030      	str	r0, [r6, #0]
 800a00a:	bf08      	it	eq
 800a00c:	2401      	moveq	r4, #1
 800a00e:	6833      	ldr	r3, [r6, #0]
 800a010:	603b      	str	r3, [r7, #0]
 800a012:	4620      	mov	r0, r4
 800a014:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a018:	20002b3c 	.word	0x20002b3c
 800a01c:	20002b30 	.word	0x20002b30
 800a020:	08009f31 	.word	0x08009f31
 800a024:	20002b2c 	.word	0x20002b2c
 800a028:	20002d3c 	.word	0x20002d3c
 800a02c:	20002b24 	.word	0x20002b24
 800a030:	20002b20 	.word	0x20002b20
 800a034:	20002b28 	.word	0x20002b28

0800a038 <GUI__DoAlphaBlending>:
 800a038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a03c:	b093      	sub	sp, #76	; 0x4c
 800a03e:	2400      	movs	r4, #0
 800a040:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800a042:	900b      	str	r0, [sp, #44]	; 0x2c
 800a044:	910c      	str	r1, [sp, #48]	; 0x30
 800a046:	4690      	mov	r8, r2
 800a048:	461f      	mov	r7, r3
 800a04a:	6034      	str	r4, [r6, #0]
 800a04c:	a80f      	add	r0, sp, #60	; 0x3c
 800a04e:	a910      	add	r1, sp, #64	; 0x40
 800a050:	4622      	mov	r2, r4
 800a052:	ab11      	add	r3, sp, #68	; 0x44
 800a054:	f7ff ff8c 	bl	8009f70 <GUI__GetAlphaBuffer>
 800a058:	4605      	mov	r5, r0
 800a05a:	2800      	cmp	r0, #0
 800a05c:	f040 80c5 	bne.w	800a1ea <GUI__DoAlphaBlending+0x1b2>
 800a060:	4c64      	ldr	r4, [pc, #400]	; (800a1f4 <GUI__DoAlphaBlending+0x1bc>)
 800a062:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800a064:	6823      	ldr	r3, [r4, #0]
 800a066:	7c58      	ldrb	r0, [r3, #17]
 800a068:	4b63      	ldr	r3, [pc, #396]	; (800a1f8 <GUI__DoAlphaBlending+0x1c0>)
 800a06a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a06e:	9307      	str	r3, [sp, #28]
 800a070:	4297      	cmp	r7, r2
 800a072:	bfa8      	it	ge
 800a074:	4617      	movge	r7, r2
 800a076:	691a      	ldr	r2, [r3, #16]
 800a078:	920d      	str	r2, [sp, #52]	; 0x34
 800a07a:	970a      	str	r7, [sp, #40]	; 0x28
 800a07c:	f7ff f962 	bl	8009344 <GUI_GetBitsPerPixelEx>
 800a080:	6823      	ldr	r3, [r4, #0]
 800a082:	9008      	str	r0, [sp, #32]
 800a084:	7c58      	ldrb	r0, [r3, #17]
 800a086:	f7ff f97b 	bl	8009380 <GUI_GetpfIndex2ColorEx>
 800a08a:	4b5c      	ldr	r3, [pc, #368]	; (800a1fc <GUI__DoAlphaBlending+0x1c4>)
 800a08c:	9004      	str	r0, [sp, #16]
 800a08e:	4298      	cmp	r0, r3
 800a090:	d005      	beq.n	800a09e <GUI__DoAlphaBlending+0x66>
 800a092:	4b5b      	ldr	r3, [pc, #364]	; (800a200 <GUI__DoAlphaBlending+0x1c8>)
 800a094:	1ac3      	subs	r3, r0, r3
 800a096:	bf18      	it	ne
 800a098:	2301      	movne	r3, #1
 800a09a:	9306      	str	r3, [sp, #24]
 800a09c:	e000      	b.n	800a0a0 <GUI__DoAlphaBlending+0x68>
 800a09e:	9506      	str	r5, [sp, #24]
 800a0a0:	2500      	movs	r5, #0
 800a0a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a0a4:	46ab      	mov	fp, r5
 800a0a6:	4643      	mov	r3, r8
 800a0a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a0aa:	f853 0b04 	ldr.w	r0, [r3], #4
 800a0ae:	9305      	str	r3, [sp, #20]
 800a0b0:	4790      	blx	r2
 800a0b2:	0e03      	lsrs	r3, r0, #24
 800a0b4:	4681      	mov	r9, r0
 800a0b6:	9309      	str	r3, [sp, #36]	; 0x24
 800a0b8:	f000 8087 	beq.w	800a1ca <GUI__DoAlphaBlending+0x192>
 800a0bc:	f1bb 0f00 	cmp.w	fp, #0
 800a0c0:	d13f      	bne.n	800a142 <GUI__DoAlphaBlending+0x10a>
 800a0c2:	4b4c      	ldr	r3, [pc, #304]	; (800a1f4 <GUI__DoAlphaBlending+0x1bc>)
 800a0c4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800a0c6:	681b      	ldr	r3, [r3, #0]
 800a0c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a0ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a0ce:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800a0d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a0d4:	442f      	add	r7, r5
 800a0d6:	42bb      	cmp	r3, r7
 800a0d8:	bfc8      	it	gt
 800a0da:	ebc7 0b03 	rsbgt	fp, r7, r3
 800a0de:	eb0b 0a05 	add.w	sl, fp, r5
 800a0e2:	bfc8      	it	gt
 800a0e4:	461f      	movgt	r7, r3
 800a0e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a0e8:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800a0ec:	4453      	add	r3, sl
 800a0ee:	4494      	add	ip, r2
 800a0f0:	9300      	str	r3, [sp, #0]
 800a0f2:	9b07      	ldr	r3, [sp, #28]
 800a0f4:	9301      	str	r3, [sp, #4]
 800a0f6:	f10c 32ff 	add.w	r2, ip, #4294967295
 800a0fa:	4638      	mov	r0, r7
 800a0fc:	460b      	mov	r3, r1
 800a0fe:	f8cd c00c 	str.w	ip, [sp, #12]
 800a102:	f005 fae1 	bl	800f6c8 <GUI_ReadRectEx>
 800a106:	9a08      	ldr	r2, [sp, #32]
 800a108:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a10a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a10e:	2a17      	cmp	r2, #23
 800a110:	dc06      	bgt.n	800a120 <GUI__DoAlphaBlending+0xe8>
 800a112:	4450      	add	r0, sl
 800a114:	ebcb 0104 	rsb	r1, fp, r4
 800a118:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a11a:	f005 fc39 	bl	800f990 <GUI__ExpandPixelIndicesEx>
 800a11e:	e001      	b.n	800a124 <GUI__DoAlphaBlending+0xec>
 800a120:	9b06      	ldr	r3, [sp, #24]
 800a122:	b913      	cbnz	r3, 800a12a <GUI__DoAlphaBlending+0xf2>
 800a124:	f04f 0b01 	mov.w	fp, #1
 800a128:	e00b      	b.n	800a142 <GUI__DoAlphaBlending+0x10a>
 800a12a:	ebc7 070c 	rsb	r7, r7, ip
 800a12e:	4482      	add	sl, r0
 800a130:	f8da 0000 	ldr.w	r0, [sl]
 800a134:	9a04      	ldr	r2, [sp, #16]
 800a136:	4790      	blx	r2
 800a138:	3f01      	subs	r7, #1
 800a13a:	f84a 0b04 	str.w	r0, [sl], #4
 800a13e:	d1f7      	bne.n	800a130 <GUI__DoAlphaBlending+0xf8>
 800a140:	e7f0      	b.n	800a124 <GUI__DoAlphaBlending+0xec>
 800a142:	4b30      	ldr	r3, [pc, #192]	; (800a204 <GUI__DoAlphaBlending+0x1cc>)
 800a144:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a146:	f8d3 c000 	ldr.w	ip, [r3]
 800a14a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800a14c:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800a150:	f1bc 0f00 	cmp.w	ip, #0
 800a154:	d024      	beq.n	800a1a0 <GUI__DoAlphaBlending+0x168>
 800a156:	eb07 020a 	add.w	r2, r7, sl
 800a15a:	4451      	add	r1, sl
 800a15c:	9210      	str	r2, [sp, #64]	; 0x40
 800a15e:	4623      	mov	r3, r4
 800a160:	910f      	str	r1, [sp, #60]	; 0x3c
 800a162:	4640      	mov	r0, r8
 800a164:	47e0      	blx	ip
 800a166:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800a168:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a16a:	2300      	movs	r3, #0
 800a16c:	f858 1003 	ldr.w	r1, [r8, r3]
 800a170:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800a174:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800a178:	58e8      	ldr	r0, [r5, r3]
 800a17a:	d101      	bne.n	800a180 <GUI__DoAlphaBlending+0x148>
 800a17c:	50d0      	str	r0, [r2, r3]
 800a17e:	e005      	b.n	800a18c <GUI__DoAlphaBlending+0x154>
 800a180:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800a184:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800a188:	bf08      	it	eq
 800a18a:	50d1      	streq	r1, [r2, r3]
 800a18c:	3c01      	subs	r4, #1
 800a18e:	f103 0304 	add.w	r3, r3, #4
 800a192:	d1eb      	bne.n	800a16c <GUI__DoAlphaBlending+0x134>
 800a194:	6833      	ldr	r3, [r6, #0]
 800a196:	9710      	str	r7, [sp, #64]	; 0x40
 800a198:	f043 0301 	orr.w	r3, r3, #1
 800a19c:	6033      	str	r3, [r6, #0]
 800a19e:	e022      	b.n	800a1e6 <GUI__DoAlphaBlending+0x1ae>
 800a1a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a1a2:	2bff      	cmp	r3, #255	; 0xff
 800a1a4:	d104      	bne.n	800a1b0 <GUI__DoAlphaBlending+0x178>
 800a1a6:	f851 300a 	ldr.w	r3, [r1, sl]
 800a1aa:	f847 300a 	str.w	r3, [r7, sl]
 800a1ae:	e013      	b.n	800a1d8 <GUI__DoAlphaBlending+0x1a0>
 800a1b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a1b2:	f851 100a 	ldr.w	r1, [r1, sl]
 800a1b6:	43da      	mvns	r2, r3
 800a1b8:	4b13      	ldr	r3, [pc, #76]	; (800a208 <GUI__DoAlphaBlending+0x1d0>)
 800a1ba:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 800a1be:	681b      	ldr	r3, [r3, #0]
 800a1c0:	b2d2      	uxtb	r2, r2
 800a1c2:	4798      	blx	r3
 800a1c4:	f847 000a 	str.w	r0, [r7, sl]
 800a1c8:	e002      	b.n	800a1d0 <GUI__DoAlphaBlending+0x198>
 800a1ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a1cc:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 800a1d0:	6833      	ldr	r3, [r6, #0]
 800a1d2:	f043 0301 	orr.w	r3, r3, #1
 800a1d6:	6033      	str	r3, [r6, #0]
 800a1d8:	3c01      	subs	r4, #1
 800a1da:	f105 0501 	add.w	r5, r5, #1
 800a1de:	d002      	beq.n	800a1e6 <GUI__DoAlphaBlending+0x1ae>
 800a1e0:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800a1e4:	e75f      	b.n	800a0a6 <GUI__DoAlphaBlending+0x6e>
 800a1e6:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a1e8:	e000      	b.n	800a1ec <GUI__DoAlphaBlending+0x1b4>
 800a1ea:	4620      	mov	r0, r4
 800a1ec:	b013      	add	sp, #76	; 0x4c
 800a1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1f2:	bf00      	nop
 800a1f4:	200000c0 	.word	0x200000c0
 800a1f8:	20002d34 	.word	0x20002d34
 800a1fc:	0800cacf 	.word	0x0800cacf
 800a200:	0800cacd 	.word	0x0800cacd
 800a204:	20002b38 	.word	0x20002b38
 800a208:	200000b4 	.word	0x200000b4

0800a20c <GUI__AllocAlphaBuffer>:
 800a20c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a20e:	b108      	cbz	r0, 800a214 <GUI__AllocAlphaBuffer+0x8>
 800a210:	aa03      	add	r2, sp, #12
 800a212:	e000      	b.n	800a216 <GUI__AllocAlphaBuffer+0xa>
 800a214:	4602      	mov	r2, r0
 800a216:	a801      	add	r0, sp, #4
 800a218:	a902      	add	r1, sp, #8
 800a21a:	2300      	movs	r3, #0
 800a21c:	f7ff fea8 	bl	8009f70 <GUI__GetAlphaBuffer>
 800a220:	b005      	add	sp, #20
 800a222:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800a228 <GUI_SignalEvent>:
 800a228:	b508      	push	{r3, lr}
 800a22a:	4b02      	ldr	r3, [pc, #8]	; (800a234 <GUI_SignalEvent+0xc>)
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	b103      	cbz	r3, 800a232 <GUI_SignalEvent+0xa>
 800a230:	4798      	blx	r3
 800a232:	bd08      	pop	{r3, pc}
 800a234:	20002b40 	.word	0x20002b40

0800a238 <_GetDecs>:
 800a238:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800a23c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a240:	eddf 7a0d 	vldr	s15, [pc, #52]	; 800a278 <_GetDecs+0x40>
 800a244:	bf48      	it	mi
 800a246:	eeb1 0a40 	vnegmi.f32	s0, s0
 800a24a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800a24e:	2000      	movs	r0, #0
 800a250:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800a254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a258:	d00c      	beq.n	800a274 <_GetDecs+0x3c>
 800a25a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800a25e:	ee20 0a27 	vmul.f32	s0, s0, s15
 800a262:	3001      	adds	r0, #1
 800a264:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 800a268:	b2c0      	uxtb	r0, r0
 800a26a:	ee17 3a90 	vmov	r3, s15
 800a26e:	2b00      	cmp	r3, #0
 800a270:	d0f3      	beq.n	800a25a <_GetDecs+0x22>
 800a272:	4770      	bx	lr
 800a274:	4770      	bx	lr
 800a276:	bf00      	nop
 800a278:	3089705f 	.word	0x3089705f

0800a27c <_RoundHalfUp>:
 800a27c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800a280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a284:	b508      	push	{r3, lr}
 800a286:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800a28a:	d50a      	bpl.n	800a2a2 <_RoundHalfUp+0x26>
 800a28c:	ee70 7a67 	vsub.f32	s15, s0, s15
 800a290:	ee17 0a90 	vmov	r0, s15
 800a294:	f7f6 f904 	bl	80004a0 <__aeabi_f2d>
 800a298:	ec41 0b10 	vmov	d0, r0, r1
 800a29c:	f006 fda4 	bl	8010de8 <ceil>
 800a2a0:	e009      	b.n	800a2b6 <_RoundHalfUp+0x3a>
 800a2a2:	ee70 7a27 	vadd.f32	s15, s0, s15
 800a2a6:	ee17 0a90 	vmov	r0, s15
 800a2aa:	f7f6 f8f9 	bl	80004a0 <__aeabi_f2d>
 800a2ae:	ec41 0b10 	vmov	d0, r0, r1
 800a2b2:	f006 fe1d 	bl	8010ef0 <floor>
 800a2b6:	ec51 0b10 	vmov	r0, r1, d0
 800a2ba:	f7f6 f9d1 	bl	8000660 <__aeabi_d2f>
 800a2be:	ee00 0a10 	vmov	s0, r0
 800a2c2:	bd08      	pop	{r3, pc}

0800a2c4 <_DispFloatFix>:
 800a2c4:	4b0e      	ldr	r3, [pc, #56]	; (800a300 <_DispFloatFix+0x3c>)
 800a2c6:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800a2ca:	ee07 3a90 	vmov	s15, r3
 800a2ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2d2:	b570      	push	{r4, r5, r6, lr}
 800a2d4:	ee20 0a27 	vmul.f32	s0, s0, s15
 800a2d8:	4605      	mov	r5, r0
 800a2da:	460c      	mov	r4, r1
 800a2dc:	4616      	mov	r6, r2
 800a2de:	f7ff ffcd 	bl	800a27c <_RoundHalfUp>
 800a2e2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800a2e6:	4629      	mov	r1, r5
 800a2e8:	ee10 0a10 	vmov	r0, s0
 800a2ec:	4622      	mov	r2, r4
 800a2ee:	b11e      	cbz	r6, 800a2f8 <_DispFloatFix+0x34>
 800a2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2f4:	f000 b8bb 	b.w	800a46e <GUI_DispSDecShift>
 800a2f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2fc:	f000 b8aa 	b.w	800a454 <GUI_DispDecShift>
 800a300:	08013d5c 	.word	0x08013d5c

0800a304 <_DispFloatMin>:
 800a304:	b538      	push	{r3, r4, r5, lr}
 800a306:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800a30a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a30e:	ed2d 8b02 	vpush	{d8}
 800a312:	4604      	mov	r4, r0
 800a314:	eeb0 8a40 	vmov.f32	s16, s0
 800a318:	460d      	mov	r5, r1
 800a31a:	d052      	beq.n	800a3c2 <_DispFloatMin+0xbe>
 800a31c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800a320:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a324:	db24      	blt.n	800a370 <_DispFloatMin+0x6c>
 800a326:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800a32a:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800a32e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a332:	d51d      	bpl.n	800a370 <_DispFloatMin+0x6c>
 800a334:	f7ff ff80 	bl	800a238 <_GetDecs>
 800a338:	42a0      	cmp	r0, r4
 800a33a:	dc02      	bgt.n	800a342 <_DispFloatMin+0x3e>
 800a33c:	ee78 7a28 	vadd.f32	s15, s16, s17
 800a340:	e046      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a342:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800a346:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800a34a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a34e:	db09      	blt.n	800a364 <_DispFloatMin+0x60>
 800a350:	eddf 7a36 	vldr	s15, [pc, #216]	; 800a42c <_DispFloatMin+0x128>
 800a354:	2c00      	cmp	r4, #0
 800a356:	bf18      	it	ne
 800a358:	eef0 7a68 	vmovne.f32	s15, s17
 800a35c:	bf08      	it	eq
 800a35e:	eeb0 8a68 	vmoveq.f32	s16, s17
 800a362:	e035      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a364:	b344      	cbz	r4, 800a3b8 <_DispFloatMin+0xb4>
 800a366:	eef0 7a68 	vmov.f32	s15, s17
 800a36a:	ed9f 8a30 	vldr	s16, [pc, #192]	; 800a42c <_DispFloatMin+0x128>
 800a36e:	e02f      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a370:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800a374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a378:	d528      	bpl.n	800a3cc <_DispFloatMin+0xc8>
 800a37a:	eeff 8a00 	vmov.f32	s17, #240	; 0xbf800000 -1.0
 800a37e:	eeb4 8ae8 	vcmpe.f32	s16, s17
 800a382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a386:	dd21      	ble.n	800a3cc <_DispFloatMin+0xc8>
 800a388:	eeb0 0a48 	vmov.f32	s0, s16
 800a38c:	f7ff ff54 	bl	800a238 <_GetDecs>
 800a390:	42a0      	cmp	r0, r4
 800a392:	dc04      	bgt.n	800a39e <_DispFloatMin+0x9a>
 800a394:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a398:	ee78 7a67 	vsub.f32	s15, s16, s15
 800a39c:	e018      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a39e:	eefe 7a00 	vmov.f32	s15, #224	; 0xbf000000 -0.5
 800a3a2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800a3a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3aa:	d803      	bhi.n	800a3b4 <_DispFloatMin+0xb0>
 800a3ac:	b94c      	cbnz	r4, 800a3c2 <_DispFloatMin+0xbe>
 800a3ae:	eeb0 8a68 	vmov.f32	s16, s17
 800a3b2:	e00b      	b.n	800a3cc <_DispFloatMin+0xc8>
 800a3b4:	b144      	cbz	r4, 800a3c8 <_DispFloatMin+0xc4>
 800a3b6:	e004      	b.n	800a3c2 <_DispFloatMin+0xbe>
 800a3b8:	eddf 7a1c 	vldr	s15, [pc, #112]	; 800a42c <_DispFloatMin+0x128>
 800a3bc:	eeb0 8a67 	vmov.f32	s16, s15
 800a3c0:	e006      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a3c2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a3c6:	e003      	b.n	800a3d0 <_DispFloatMin+0xcc>
 800a3c8:	ed9f 8a18 	vldr	s16, [pc, #96]	; 800a42c <_DispFloatMin+0x128>
 800a3cc:	eef0 7a48 	vmov.f32	s15, s16
 800a3d0:	4b17      	ldr	r3, [pc, #92]	; (800a430 <_DispFloatMin+0x12c>)
 800a3d2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800a3d6:	ee00 3a10 	vmov	s0, r3
 800a3da:	eeb8 0a40 	vcvt.f32.u32	s0, s0
 800a3de:	ee27 0a80 	vmul.f32	s0, s15, s0
 800a3e2:	f7ff ff4b 	bl	800a27c <_RoundHalfUp>
 800a3e6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800a3ea:	ee10 0a10 	vmov	r0, s0
 800a3ee:	f001 fa91 	bl	800b914 <GUI_Long2Len>
 800a3f2:	2d01      	cmp	r5, #1
 800a3f4:	ebc4 0000 	rsb	r0, r4, r0
 800a3f8:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800a3fc:	d105      	bne.n	800a40a <_DispFloatMin+0x106>
 800a3fe:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800a402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a406:	bfc8      	it	gt
 800a408:	3001      	addgt	r0, #1
 800a40a:	eeb0 0a48 	vmov.f32	s0, s16
 800a40e:	ecbd 8b02 	vpop	{d8}
 800a412:	2c00      	cmp	r4, #0
 800a414:	bf0c      	ite	eq
 800a416:	4623      	moveq	r3, r4
 800a418:	1c63      	addne	r3, r4, #1
 800a41a:	4418      	add	r0, r3
 800a41c:	4621      	mov	r1, r4
 800a41e:	462a      	mov	r2, r5
 800a420:	b2c0      	uxtb	r0, r0
 800a422:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a426:	f7ff bf4d 	b.w	800a2c4 <_DispFloatFix>
 800a42a:	bf00      	nop
 800a42c:	00000000 	.word	0x00000000
 800a430:	08013d5c 	.word	0x08013d5c

0800a434 <GUI_DispFloatMin>:
 800a434:	2100      	movs	r1, #0
 800a436:	f7ff bf65 	b.w	800a304 <_DispFloatMin>

0800a43a <GUI_AddDecMin>:
 800a43a:	b570      	push	{r4, r5, r6, lr}
 800a43c:	460c      	mov	r4, r1
 800a43e:	4605      	mov	r5, r0
 800a440:	f001 fa68 	bl	800b914 <GUI_Long2Len>
 800a444:	4623      	mov	r3, r4
 800a446:	b2c1      	uxtb	r1, r0
 800a448:	2200      	movs	r2, #0
 800a44a:	4628      	mov	r0, r5
 800a44c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a450:	f001 ba84 	b.w	800b95c <GUI_AddDecShift>

0800a454 <GUI_DispDecShift>:
 800a454:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a456:	ab04      	add	r3, sp, #16
 800a458:	ac01      	add	r4, sp, #4
 800a45a:	f843 4d10 	str.w	r4, [r3, #-16]!
 800a45e:	466b      	mov	r3, sp
 800a460:	f001 fa7c 	bl	800b95c <GUI_AddDecShift>
 800a464:	4620      	mov	r0, r4
 800a466:	f000 fe53 	bl	800b110 <GUI_DispString>
 800a46a:	b004      	add	sp, #16
 800a46c:	bd10      	pop	{r4, pc}

0800a46e <GUI_DispSDecShift>:
 800a46e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a470:	b085      	sub	sp, #20
 800a472:	ac04      	add	r4, sp, #16
 800a474:	460d      	mov	r5, r1
 800a476:	ae01      	add	r6, sp, #4
 800a478:	4669      	mov	r1, sp
 800a47a:	4617      	mov	r7, r2
 800a47c:	f844 6d10 	str.w	r6, [r4, #-16]!
 800a480:	f001 fa60 	bl	800b944 <GUI_AddSign>
 800a484:	2800      	cmp	r0, #0
 800a486:	bfc4      	itt	gt
 800a488:	f105 35ff 	addgt.w	r5, r5, #4294967295
 800a48c:	b2ed      	uxtbgt	r5, r5
 800a48e:	4629      	mov	r1, r5
 800a490:	463a      	mov	r2, r7
 800a492:	466b      	mov	r3, sp
 800a494:	f001 fa62 	bl	800b95c <GUI_AddDecShift>
 800a498:	4630      	mov	r0, r6
 800a49a:	f000 fe39 	bl	800b110 <GUI_DispString>
 800a49e:	b005      	add	sp, #20
 800a4a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a4a4 <GUI_UC__GetCharCodeInc>:
 800a4a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a4a6:	4e08      	ldr	r6, [pc, #32]	; (800a4c8 <GUI_UC__GetCharCodeInc+0x24>)
 800a4a8:	6804      	ldr	r4, [r0, #0]
 800a4aa:	6833      	ldr	r3, [r6, #0]
 800a4ac:	4605      	mov	r5, r0
 800a4ae:	681b      	ldr	r3, [r3, #0]
 800a4b0:	4620      	mov	r0, r4
 800a4b2:	4798      	blx	r3
 800a4b4:	6833      	ldr	r3, [r6, #0]
 800a4b6:	4607      	mov	r7, r0
 800a4b8:	685b      	ldr	r3, [r3, #4]
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	4798      	blx	r3
 800a4be:	4420      	add	r0, r4
 800a4c0:	6028      	str	r0, [r5, #0]
 800a4c2:	4638      	mov	r0, r7
 800a4c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a4c6:	bf00      	nop
 800a4c8:	20002d2c 	.word	0x20002d2c

0800a4cc <GUI_UC__NumChars2NumBytes>:
 800a4cc:	b570      	push	{r4, r5, r6, lr}
 800a4ce:	4604      	mov	r4, r0
 800a4d0:	460e      	mov	r6, r1
 800a4d2:	2500      	movs	r5, #0
 800a4d4:	b146      	cbz	r6, 800a4e8 <GUI_UC__NumChars2NumBytes+0x1c>
 800a4d6:	4b05      	ldr	r3, [pc, #20]	; (800a4ec <GUI_UC__NumChars2NumBytes+0x20>)
 800a4d8:	681b      	ldr	r3, [r3, #0]
 800a4da:	4620      	mov	r0, r4
 800a4dc:	685b      	ldr	r3, [r3, #4]
 800a4de:	4798      	blx	r3
 800a4e0:	3e01      	subs	r6, #1
 800a4e2:	4404      	add	r4, r0
 800a4e4:	4405      	add	r5, r0
 800a4e6:	e7f5      	b.n	800a4d4 <GUI_UC__NumChars2NumBytes+0x8>
 800a4e8:	4628      	mov	r0, r5
 800a4ea:	bd70      	pop	{r4, r5, r6, pc}
 800a4ec:	20002d2c 	.word	0x20002d2c

0800a4f0 <GUI__GetNumChars>:
 800a4f0:	b513      	push	{r0, r1, r4, lr}
 800a4f2:	9001      	str	r0, [sp, #4]
 800a4f4:	b130      	cbz	r0, 800a504 <GUI__GetNumChars+0x14>
 800a4f6:	2400      	movs	r4, #0
 800a4f8:	a801      	add	r0, sp, #4
 800a4fa:	f7ff ffd3 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800a4fe:	b110      	cbz	r0, 800a506 <GUI__GetNumChars+0x16>
 800a500:	3401      	adds	r4, #1
 800a502:	e7f9      	b.n	800a4f8 <GUI__GetNumChars+0x8>
 800a504:	4604      	mov	r4, r0
 800a506:	4620      	mov	r0, r4
 800a508:	b002      	add	sp, #8
 800a50a:	bd10      	pop	{r4, pc}

0800a50c <_OnExit>:
 800a50c:	4a03      	ldr	r2, [pc, #12]	; (800a51c <_OnExit+0x10>)
 800a50e:	2300      	movs	r3, #0
 800a510:	6013      	str	r3, [r2, #0]
 800a512:	4a03      	ldr	r2, [pc, #12]	; (800a520 <_OnExit+0x14>)
 800a514:	6013      	str	r3, [r2, #0]
 800a516:	4a03      	ldr	r2, [pc, #12]	; (800a524 <_OnExit+0x18>)
 800a518:	6013      	str	r3, [r2, #0]
 800a51a:	4770      	bx	lr
 800a51c:	20002b44 	.word	0x20002b44
 800a520:	20002b50 	.word	0x20002b50
 800a524:	20002b54 	.word	0x20002b54

0800a528 <GUI_TIMER_Exec>:
 800a528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a52c:	4b19      	ldr	r3, [pc, #100]	; (800a594 <GUI_TIMER_Exec+0x6c>)
 800a52e:	681f      	ldr	r7, [r3, #0]
 800a530:	b085      	sub	sp, #20
 800a532:	2500      	movs	r5, #0
 800a534:	4698      	mov	r8, r3
 800a536:	f8d8 3000 	ldr.w	r3, [r8]
 800a53a:	4c16      	ldr	r4, [pc, #88]	; (800a594 <GUI_TIMER_Exec+0x6c>)
 800a53c:	b333      	cbz	r3, 800a58c <GUI_TIMER_Exec+0x64>
 800a53e:	f000 f991 	bl	800a864 <GUI_GetTime>
 800a542:	4606      	mov	r6, r0
 800a544:	6820      	ldr	r0, [r4, #0]
 800a546:	f001 ffbf 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a54a:	4603      	mov	r3, r0
 800a54c:	a804      	add	r0, sp, #16
 800a54e:	6959      	ldr	r1, [r3, #20]
 800a550:	f840 3d10 	str.w	r3, [r0, #-16]!
 800a554:	1b89      	subs	r1, r1, r6
 800a556:	2900      	cmp	r1, #0
 800a558:	dc13      	bgt.n	800a582 <GUI_TIMER_Exec+0x5a>
 800a55a:	6821      	ldr	r1, [r4, #0]
 800a55c:	9103      	str	r1, [sp, #12]
 800a55e:	9601      	str	r6, [sp, #4]
 800a560:	6919      	ldr	r1, [r3, #16]
 800a562:	685e      	ldr	r6, [r3, #4]
 800a564:	9102      	str	r1, [sp, #8]
 800a566:	4668      	mov	r0, sp
 800a568:	6026      	str	r6, [r4, #0]
 800a56a:	f8d3 9000 	ldr.w	r9, [r3]
 800a56e:	f001 ffb9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a572:	a801      	add	r0, sp, #4
 800a574:	47c8      	blx	r9
 800a576:	b14e      	cbz	r6, 800a58c <GUI_TIMER_Exec+0x64>
 800a578:	6823      	ldr	r3, [r4, #0]
 800a57a:	42bb      	cmp	r3, r7
 800a57c:	d005      	beq.n	800a58a <GUI_TIMER_Exec+0x62>
 800a57e:	2501      	movs	r5, #1
 800a580:	e7d9      	b.n	800a536 <GUI_TIMER_Exec+0xe>
 800a582:	4668      	mov	r0, sp
 800a584:	f001 ffae 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a588:	e000      	b.n	800a58c <GUI_TIMER_Exec+0x64>
 800a58a:	2500      	movs	r5, #0
 800a58c:	4628      	mov	r0, r5
 800a58e:	b005      	add	sp, #20
 800a590:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a594:	20002b50 	.word	0x20002b50

0800a598 <_Link>:
 800a598:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a59a:	4c25      	ldr	r4, [pc, #148]	; (800a630 <_Link+0x98>)
 800a59c:	b085      	sub	sp, #20
 800a59e:	4605      	mov	r5, r0
 800a5a0:	f001 ff92 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a5a4:	6823      	ldr	r3, [r4, #0]
 800a5a6:	9001      	str	r0, [sp, #4]
 800a5a8:	b913      	cbnz	r3, 800a5b0 <_Link+0x18>
 800a5aa:	6025      	str	r5, [r4, #0]
 800a5ac:	6043      	str	r3, [r0, #4]
 800a5ae:	e039      	b.n	800a624 <_Link+0x8c>
 800a5b0:	4618      	mov	r0, r3
 800a5b2:	f001 ff89 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a5b6:	ab04      	add	r3, sp, #16
 800a5b8:	6946      	ldr	r6, [r0, #20]
 800a5ba:	f843 0d10 	str.w	r0, [r3, #-16]!
 800a5be:	4668      	mov	r0, sp
 800a5c0:	f001 ff90 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a5c4:	9b01      	ldr	r3, [sp, #4]
 800a5c6:	695a      	ldr	r2, [r3, #20]
 800a5c8:	1b92      	subs	r2, r2, r6
 800a5ca:	2a00      	cmp	r2, #0
 800a5cc:	dc03      	bgt.n	800a5d6 <_Link+0x3e>
 800a5ce:	6822      	ldr	r2, [r4, #0]
 800a5d0:	605a      	str	r2, [r3, #4]
 800a5d2:	6025      	str	r5, [r4, #0]
 800a5d4:	e026      	b.n	800a624 <_Link+0x8c>
 800a5d6:	6826      	ldr	r6, [r4, #0]
 800a5d8:	4630      	mov	r0, r6
 800a5da:	f001 ff75 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a5de:	ac04      	add	r4, sp, #16
 800a5e0:	6846      	ldr	r6, [r0, #4]
 800a5e2:	f844 0d08 	str.w	r0, [r4, #-8]!
 800a5e6:	b1be      	cbz	r6, 800a618 <_Link+0x80>
 800a5e8:	4630      	mov	r0, r6
 800a5ea:	f001 ff6d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a5ee:	ab04      	add	r3, sp, #16
 800a5f0:	6947      	ldr	r7, [r0, #20]
 800a5f2:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a5f6:	4618      	mov	r0, r3
 800a5f8:	f001 ff74 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a5fc:	9a01      	ldr	r2, [sp, #4]
 800a5fe:	6953      	ldr	r3, [r2, #20]
 800a600:	1bdb      	subs	r3, r3, r7
 800a602:	2b00      	cmp	r3, #0
 800a604:	9b02      	ldr	r3, [sp, #8]
 800a606:	dc02      	bgt.n	800a60e <_Link+0x76>
 800a608:	6056      	str	r6, [r2, #4]
 800a60a:	605d      	str	r5, [r3, #4]
 800a60c:	e007      	b.n	800a61e <_Link+0x86>
 800a60e:	4620      	mov	r0, r4
 800a610:	685e      	ldr	r6, [r3, #4]
 800a612:	f001 ff67 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a616:	e7df      	b.n	800a5d8 <_Link+0x40>
 800a618:	9b01      	ldr	r3, [sp, #4]
 800a61a:	605e      	str	r6, [r3, #4]
 800a61c:	6045      	str	r5, [r0, #4]
 800a61e:	4620      	mov	r0, r4
 800a620:	f001 ff60 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a624:	a801      	add	r0, sp, #4
 800a626:	f001 ff5d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a62a:	b005      	add	sp, #20
 800a62c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a62e:	bf00      	nop
 800a630:	20002b50 	.word	0x20002b50

0800a634 <_Unlink>:
 800a634:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a636:	4605      	mov	r5, r0
 800a638:	b1f0      	cbz	r0, 800a678 <_Unlink+0x44>
 800a63a:	f001 ff45 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a63e:	4b0f      	ldr	r3, [pc, #60]	; (800a67c <_Unlink+0x48>)
 800a640:	9000      	str	r0, [sp, #0]
 800a642:	681c      	ldr	r4, [r3, #0]
 800a644:	42ac      	cmp	r4, r5
 800a646:	d104      	bne.n	800a652 <_Unlink+0x1e>
 800a648:	6842      	ldr	r2, [r0, #4]
 800a64a:	601a      	str	r2, [r3, #0]
 800a64c:	e011      	b.n	800a672 <_Unlink+0x3e>
 800a64e:	f001 ff49 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a652:	b174      	cbz	r4, 800a672 <_Unlink+0x3e>
 800a654:	4620      	mov	r0, r4
 800a656:	f001 ff37 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a65a:	4603      	mov	r3, r0
 800a65c:	a802      	add	r0, sp, #8
 800a65e:	685c      	ldr	r4, [r3, #4]
 800a660:	f840 3d04 	str.w	r3, [r0, #-4]!
 800a664:	42ac      	cmp	r4, r5
 800a666:	d1f2      	bne.n	800a64e <_Unlink+0x1a>
 800a668:	9a00      	ldr	r2, [sp, #0]
 800a66a:	6852      	ldr	r2, [r2, #4]
 800a66c:	605a      	str	r2, [r3, #4]
 800a66e:	f001 ff39 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a672:	4668      	mov	r0, sp
 800a674:	f001 ff36 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a678:	b003      	add	sp, #12
 800a67a:	bd30      	pop	{r4, r5, pc}
 800a67c:	20002b50 	.word	0x20002b50

0800a680 <GUI_TIMER__GetFirstTimer>:
 800a680:	2300      	movs	r3, #0
 800a682:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a684:	6003      	str	r3, [r0, #0]
 800a686:	4b09      	ldr	r3, [pc, #36]	; (800a6ac <GUI_TIMER__GetFirstTimer+0x2c>)
 800a688:	681c      	ldr	r4, [r3, #0]
 800a68a:	4605      	mov	r5, r0
 800a68c:	b154      	cbz	r4, 800a6a4 <GUI_TIMER__GetFirstTimer+0x24>
 800a68e:	4620      	mov	r0, r4
 800a690:	f001 ff1a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a694:	ab02      	add	r3, sp, #8
 800a696:	6902      	ldr	r2, [r0, #16]
 800a698:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a69c:	602a      	str	r2, [r5, #0]
 800a69e:	4618      	mov	r0, r3
 800a6a0:	f001 ff20 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a6a4:	4620      	mov	r0, r4
 800a6a6:	b003      	add	sp, #12
 800a6a8:	bd30      	pop	{r4, r5, pc}
 800a6aa:	bf00      	nop
 800a6ac:	20002b44 	.word	0x20002b44

0800a6b0 <GUI_TIMER__GetNextTimerLin>:
 800a6b0:	2300      	movs	r3, #0
 800a6b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6b4:	600b      	str	r3, [r1, #0]
 800a6b6:	460e      	mov	r6, r1
 800a6b8:	4604      	mov	r4, r0
 800a6ba:	b190      	cbz	r0, 800a6e2 <GUI_TIMER__GetNextTimerLin+0x32>
 800a6bc:	f001 ff04 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a6c0:	ad02      	add	r5, sp, #8
 800a6c2:	6884      	ldr	r4, [r0, #8]
 800a6c4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a6c8:	b144      	cbz	r4, 800a6dc <GUI_TIMER__GetNextTimerLin+0x2c>
 800a6ca:	4628      	mov	r0, r5
 800a6cc:	f001 ff0a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a6d0:	4620      	mov	r0, r4
 800a6d2:	f001 fef9 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a6d6:	6903      	ldr	r3, [r0, #16]
 800a6d8:	9001      	str	r0, [sp, #4]
 800a6da:	6033      	str	r3, [r6, #0]
 800a6dc:	4628      	mov	r0, r5
 800a6de:	f001 ff01 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a6e2:	4620      	mov	r0, r4
 800a6e4:	b002      	add	sp, #8
 800a6e6:	bd70      	pop	{r4, r5, r6, pc}

0800a6e8 <GUI_TIMER_Create>:
 800a6e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a6ec:	4681      	mov	r9, r0
 800a6ee:	201c      	movs	r0, #28
 800a6f0:	460e      	mov	r6, r1
 800a6f2:	4690      	mov	r8, r2
 800a6f4:	461f      	mov	r7, r3
 800a6f6:	f002 f8e1 	bl	800c8bc <GUI_ALLOC_AllocZero>
 800a6fa:	4604      	mov	r4, r0
 800a6fc:	2800      	cmp	r0, #0
 800a6fe:	d031      	beq.n	800a764 <GUI_TIMER_Create+0x7c>
 800a700:	4b1a      	ldr	r3, [pc, #104]	; (800a76c <GUI_TIMER_Create+0x84>)
 800a702:	4a1b      	ldr	r2, [pc, #108]	; (800a770 <GUI_TIMER_Create+0x88>)
 800a704:	601a      	str	r2, [r3, #0]
 800a706:	f001 fedf 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a70a:	9000      	str	r0, [sp, #0]
 800a70c:	b916      	cbnz	r6, 800a714 <GUI_TIMER_Create+0x2c>
 800a70e:	f000 f8a9 	bl	800a864 <GUI_GetTime>
 800a712:	4606      	mov	r6, r0
 800a714:	a802      	add	r0, sp, #8
 800a716:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 800a71a:	4668      	mov	r0, sp
 800a71c:	616e      	str	r6, [r5, #20]
 800a71e:	f8c5 9000 	str.w	r9, [r5]
 800a722:	f8c5 8010 	str.w	r8, [r5, #16]
 800a726:	81af      	strh	r7, [r5, #12]
 800a728:	f001 fedc 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a72c:	4620      	mov	r0, r4
 800a72e:	f7ff ff33 	bl	800a598 <_Link>
 800a732:	4b10      	ldr	r3, [pc, #64]	; (800a774 <GUI_TIMER_Create+0x8c>)
 800a734:	681a      	ldr	r2, [r3, #0]
 800a736:	b932      	cbnz	r2, 800a746 <GUI_TIMER_Create+0x5e>
 800a738:	2201      	movs	r2, #1
 800a73a:	480f      	ldr	r0, [pc, #60]	; (800a778 <GUI_TIMER_Create+0x90>)
 800a73c:	601a      	str	r2, [r3, #0]
 800a73e:	4b0f      	ldr	r3, [pc, #60]	; (800a77c <GUI_TIMER_Create+0x94>)
 800a740:	6003      	str	r3, [r0, #0]
 800a742:	f001 f851 	bl	800b7e8 <GUI__RegisterExit>
 800a746:	4620      	mov	r0, r4
 800a748:	f001 febe 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a74c:	4a0c      	ldr	r2, [pc, #48]	; (800a780 <GUI_TIMER_Create+0x98>)
 800a74e:	9001      	str	r0, [sp, #4]
 800a750:	6813      	ldr	r3, [r2, #0]
 800a752:	b913      	cbnz	r3, 800a75a <GUI_TIMER_Create+0x72>
 800a754:	6014      	str	r4, [r2, #0]
 800a756:	6083      	str	r3, [r0, #8]
 800a758:	e001      	b.n	800a75e <GUI_TIMER_Create+0x76>
 800a75a:	6083      	str	r3, [r0, #8]
 800a75c:	6014      	str	r4, [r2, #0]
 800a75e:	a801      	add	r0, sp, #4
 800a760:	f001 fec0 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a764:	4620      	mov	r0, r4
 800a766:	b003      	add	sp, #12
 800a768:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a76c:	20002d04 	.word	0x20002d04
 800a770:	0800a529 	.word	0x0800a529
 800a774:	20002b54 	.word	0x20002b54
 800a778:	20002b48 	.word	0x20002b48
 800a77c:	0800a50d 	.word	0x0800a50d
 800a780:	20002b44 	.word	0x20002b44

0800a784 <GUI_TIMER_Delete>:
 800a784:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a786:	4604      	mov	r4, r0
 800a788:	b360      	cbz	r0, 800a7e4 <GUI_TIMER_Delete+0x60>
 800a78a:	4e17      	ldr	r6, [pc, #92]	; (800a7e8 <GUI_TIMER_Delete+0x64>)
 800a78c:	6835      	ldr	r5, [r6, #0]
 800a78e:	4285      	cmp	r5, r0
 800a790:	d10b      	bne.n	800a7aa <GUI_TIMER_Delete+0x26>
 800a792:	f001 fe99 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a796:	ab02      	add	r3, sp, #8
 800a798:	6882      	ldr	r2, [r0, #8]
 800a79a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a79e:	6032      	str	r2, [r6, #0]
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	e017      	b.n	800a7d4 <GUI_TIMER_Delete+0x50>
 800a7a4:	4668      	mov	r0, sp
 800a7a6:	f001 fe9d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a7aa:	b1ad      	cbz	r5, 800a7d8 <GUI_TIMER_Delete+0x54>
 800a7ac:	4628      	mov	r0, r5
 800a7ae:	f001 fe8b 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a7b2:	6885      	ldr	r5, [r0, #8]
 800a7b4:	ae02      	add	r6, sp, #8
 800a7b6:	42a5      	cmp	r5, r4
 800a7b8:	f846 0d08 	str.w	r0, [r6, #-8]!
 800a7bc:	d1f2      	bne.n	800a7a4 <GUI_TIMER_Delete+0x20>
 800a7be:	4620      	mov	r0, r4
 800a7c0:	f001 fe82 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a7c4:	9b00      	ldr	r3, [sp, #0]
 800a7c6:	6882      	ldr	r2, [r0, #8]
 800a7c8:	9001      	str	r0, [sp, #4]
 800a7ca:	609a      	str	r2, [r3, #8]
 800a7cc:	a801      	add	r0, sp, #4
 800a7ce:	f001 fe89 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a7d2:	4668      	mov	r0, sp
 800a7d4:	f001 fe86 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a7d8:	4620      	mov	r0, r4
 800a7da:	f7ff ff2b 	bl	800a634 <_Unlink>
 800a7de:	4620      	mov	r0, r4
 800a7e0:	f001 feac 	bl	800c53c <GUI_ALLOC_Free>
 800a7e4:	b002      	add	sp, #8
 800a7e6:	bd70      	pop	{r4, r5, r6, pc}
 800a7e8:	20002b44 	.word	0x20002b44

0800a7ec <GUI_TIMER_SetPeriod>:
 800a7ec:	b513      	push	{r0, r1, r4, lr}
 800a7ee:	460c      	mov	r4, r1
 800a7f0:	b140      	cbz	r0, 800a804 <GUI_TIMER_SetPeriod+0x18>
 800a7f2:	f001 fe69 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a7f6:	ab02      	add	r3, sp, #8
 800a7f8:	6184      	str	r4, [r0, #24]
 800a7fa:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a7fe:	4618      	mov	r0, r3
 800a800:	f001 fe70 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a804:	b002      	add	sp, #8
 800a806:	bd10      	pop	{r4, pc}

0800a808 <GUI_TIMER_Restart>:
 800a808:	b513      	push	{r0, r1, r4, lr}
 800a80a:	4604      	mov	r4, r0
 800a80c:	b198      	cbz	r0, 800a836 <GUI_TIMER_Restart+0x2e>
 800a80e:	f001 fe5b 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a812:	9001      	str	r0, [sp, #4]
 800a814:	f000 f826 	bl	800a864 <GUI_GetTime>
 800a818:	ab02      	add	r3, sp, #8
 800a81a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800a81e:	6991      	ldr	r1, [r2, #24]
 800a820:	4408      	add	r0, r1
 800a822:	6150      	str	r0, [r2, #20]
 800a824:	4618      	mov	r0, r3
 800a826:	f001 fe5d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a82a:	4620      	mov	r0, r4
 800a82c:	f7ff ff02 	bl	800a634 <_Unlink>
 800a830:	4620      	mov	r0, r4
 800a832:	f7ff feb1 	bl	800a598 <_Link>
 800a836:	b002      	add	sp, #8
 800a838:	bd10      	pop	{r4, pc}

0800a83a <GUI_TIMER_GetFlag>:
 800a83a:	b513      	push	{r0, r1, r4, lr}
 800a83c:	460c      	mov	r4, r1
 800a83e:	b168      	cbz	r0, 800a85c <GUI_TIMER_GetFlag+0x22>
 800a840:	f001 fe42 	bl	800c4c8 <GUI_ALLOC_LockH>
 800a844:	ab02      	add	r3, sp, #8
 800a846:	8982      	ldrh	r2, [r0, #12]
 800a848:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a84c:	4214      	tst	r4, r2
 800a84e:	4618      	mov	r0, r3
 800a850:	bf0c      	ite	eq
 800a852:	2400      	moveq	r4, #0
 800a854:	2401      	movne	r4, #1
 800a856:	f001 fe45 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800a85a:	e000      	b.n	800a85e <GUI_TIMER_GetFlag+0x24>
 800a85c:	2401      	movs	r4, #1
 800a85e:	4620      	mov	r0, r4
 800a860:	b002      	add	sp, #8
 800a862:	bd10      	pop	{r4, pc}

0800a864 <GUI_GetTime>:
 800a864:	f7f6 b8de 	b.w	8000a24 <GUI_X_GetTime>

0800a868 <GUI__AlphaPreserveTrans>:
 800a868:	b510      	push	{r4, lr}
 800a86a:	4b07      	ldr	r3, [pc, #28]	; (800a888 <GUI__AlphaPreserveTrans+0x20>)
 800a86c:	781c      	ldrb	r4, [r3, #0]
 800a86e:	b120      	cbz	r0, 800a87a <GUI__AlphaPreserveTrans+0x12>
 800a870:	2201      	movs	r2, #1
 800a872:	701a      	strb	r2, [r3, #0]
 800a874:	f04f 30ff 	mov.w	r0, #4294967295
 800a878:	e002      	b.n	800a880 <GUI__AlphaPreserveTrans+0x18>
 800a87a:	7018      	strb	r0, [r3, #0]
 800a87c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800a880:	f004 ffca 	bl	800f818 <LCD_AA_SetAndMask>
 800a884:	4620      	mov	r0, r4
 800a886:	bd10      	pop	{r4, pc}
 800a888:	20002d1c 	.word	0x20002d1c

0800a88c <GUI_SelectLayer>:
 800a88c:	b570      	push	{r4, r5, r6, lr}
 800a88e:	4d08      	ldr	r5, [pc, #32]	; (800a8b0 <GUI_SelectLayer+0x24>)
 800a890:	682b      	ldr	r3, [r5, #0]
 800a892:	2801      	cmp	r0, #1
 800a894:	4604      	mov	r4, r0
 800a896:	7c5e      	ldrb	r6, [r3, #17]
 800a898:	d808      	bhi.n	800a8ac <GUI_SelectLayer+0x20>
 800a89a:	f000 fe4b 	bl	800b534 <GUI_DEVICE__GetpDriver>
 800a89e:	b128      	cbz	r0, 800a8ac <GUI_SelectLayer+0x20>
 800a8a0:	682b      	ldr	r3, [r5, #0]
 800a8a2:	745c      	strb	r4, [r3, #17]
 800a8a4:	f001 f9a4 	bl	800bbf0 <GUI_SelectLCD>
 800a8a8:	4b02      	ldr	r3, [pc, #8]	; (800a8b4 <GUI_SelectLayer+0x28>)
 800a8aa:	601c      	str	r4, [r3, #0]
 800a8ac:	4630      	mov	r0, r6
 800a8ae:	bd70      	pop	{r4, r5, r6, pc}
 800a8b0:	200000c0 	.word	0x200000c0
 800a8b4:	20002cac 	.word	0x20002cac

0800a8b8 <GUI_StoreKey>:
 800a8b8:	4b02      	ldr	r3, [pc, #8]	; (800a8c4 <GUI_StoreKey+0xc>)
 800a8ba:	681a      	ldr	r2, [r3, #0]
 800a8bc:	b902      	cbnz	r2, 800a8c0 <GUI_StoreKey+0x8>
 800a8be:	6018      	str	r0, [r3, #0]
 800a8c0:	f7ff bcb2 	b.w	800a228 <GUI_SignalEvent>
 800a8c4:	20002b58 	.word	0x20002b58

0800a8c8 <GUI_PollKeyMsg>:
 800a8c8:	4a0a      	ldr	r2, [pc, #40]	; (800a8f4 <GUI_PollKeyMsg+0x2c>)
 800a8ca:	490b      	ldr	r1, [pc, #44]	; (800a8f8 <GUI_PollKeyMsg+0x30>)
 800a8cc:	6813      	ldr	r3, [r2, #0]
 800a8ce:	6809      	ldr	r1, [r1, #0]
 800a8d0:	428b      	cmp	r3, r1
 800a8d2:	b510      	push	{r4, lr}
 800a8d4:	d00b      	beq.n	800a8ee <GUI_PollKeyMsg+0x26>
 800a8d6:	4c09      	ldr	r4, [pc, #36]	; (800a8fc <GUI_PollKeyMsg+0x34>)
 800a8d8:	42a3      	cmp	r3, r4
 800a8da:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a8de:	bf14      	ite	ne
 800a8e0:	3308      	addne	r3, #8
 800a8e2:	3b50      	subeq	r3, #80	; 0x50
 800a8e4:	6013      	str	r3, [r2, #0]
 800a8e6:	f7fa ffb1 	bl	800584c <WM_OnKey>
 800a8ea:	2001      	movs	r0, #1
 800a8ec:	bd10      	pop	{r4, pc}
 800a8ee:	2000      	movs	r0, #0
 800a8f0:	bd10      	pop	{r4, pc}
 800a8f2:	bf00      	nop
 800a8f4:	200000bc 	.word	0x200000bc
 800a8f8:	200000b8 	.word	0x200000b8
 800a8fc:	20002bac 	.word	0x20002bac

0800a900 <_SetLineColor>:
 800a900:	4b1e      	ldr	r3, [pc, #120]	; (800a97c <_SetLineColor+0x7c>)
 800a902:	681b      	ldr	r3, [r3, #0]
 800a904:	7e9b      	ldrb	r3, [r3, #26]
 800a906:	3b01      	subs	r3, #1
 800a908:	2b03      	cmp	r3, #3
 800a90a:	d832      	bhi.n	800a972 <_SetLineColor+0x72>
 800a90c:	e8df f003 	tbb	[pc, r3]
 800a910:	221a0d02 	.word	0x221a0d02
 800a914:	4b1a      	ldr	r3, [pc, #104]	; (800a980 <_SetLineColor+0x80>)
 800a916:	3006      	adds	r0, #6
 800a918:	4003      	ands	r3, r0
 800a91a:	2b00      	cmp	r3, #0
 800a91c:	da03      	bge.n	800a926 <_SetLineColor+0x26>
 800a91e:	3b01      	subs	r3, #1
 800a920:	f063 030f 	orn	r3, r3, #15
 800a924:	3301      	adds	r3, #1
 800a926:	2b0b      	cmp	r3, #11
 800a928:	e008      	b.n	800a93c <_SetLineColor+0x3c>
 800a92a:	4b16      	ldr	r3, [pc, #88]	; (800a984 <_SetLineColor+0x84>)
 800a92c:	4003      	ands	r3, r0
 800a92e:	2b00      	cmp	r3, #0
 800a930:	da03      	bge.n	800a93a <_SetLineColor+0x3a>
 800a932:	3b01      	subs	r3, #1
 800a934:	f063 0303 	orn	r3, r3, #3
 800a938:	3301      	adds	r3, #1
 800a93a:	2b01      	cmp	r3, #1
 800a93c:	bfcc      	ite	gt
 800a93e:	2000      	movgt	r0, #0
 800a940:	2001      	movle	r0, #1
 800a942:	4770      	bx	lr
 800a944:	2314      	movs	r3, #20
 800a946:	fb90 f2f3 	sdiv	r2, r0, r3
 800a94a:	fb03 0012 	mls	r0, r3, r2, r0
 800a94e:	280b      	cmp	r0, #11
 800a950:	dc09      	bgt.n	800a966 <_SetLineColor+0x66>
 800a952:	e010      	b.n	800a976 <_SetLineColor+0x76>
 800a954:	2318      	movs	r3, #24
 800a956:	fb90 f2f3 	sdiv	r2, r0, r3
 800a95a:	fb03 0012 	mls	r0, r3, r2, r0
 800a95e:	280b      	cmp	r0, #11
 800a960:	dd09      	ble.n	800a976 <_SetLineColor+0x76>
 800a962:	f020 0004 	bic.w	r0, r0, #4
 800a966:	3810      	subs	r0, #16
 800a968:	2801      	cmp	r0, #1
 800a96a:	bf8c      	ite	hi
 800a96c:	2000      	movhi	r0, #0
 800a96e:	2001      	movls	r0, #1
 800a970:	4770      	bx	lr
 800a972:	2000      	movs	r0, #0
 800a974:	4770      	bx	lr
 800a976:	2001      	movs	r0, #1
 800a978:	4770      	bx	lr
 800a97a:	bf00      	nop
 800a97c:	200000c0 	.word	0x200000c0
 800a980:	8000000f 	.word	0x8000000f
 800a984:	80000003 	.word	0x80000003

0800a988 <GUI_sin>:
 800a988:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800a98c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800a990:	bfc6      	itte	gt
 800a992:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 800a996:	2101      	movgt	r1, #1
 800a998:	2100      	movle	r1, #0
 800a99a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800a99e:	bfc8      	it	gt
 800a9a0:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 800a9a4:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 800a9a8:	b510      	push	{r4, lr}
 800a9aa:	1182      	asrs	r2, r0, #6
 800a9ac:	4c0b      	ldr	r4, [pc, #44]	; (800a9dc <GUI_sin+0x54>)
 800a9ae:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800a9b2:	b29b      	uxth	r3, r3
 800a9b4:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 800a9b8:	2b40      	cmp	r3, #64	; 0x40
 800a9ba:	fb00 f003 	mul.w	r0, r0, r3
 800a9be:	d008      	beq.n	800a9d2 <GUI_sin+0x4a>
 800a9c0:	2a10      	cmp	r2, #16
 800a9c2:	d006      	beq.n	800a9d2 <GUI_sin+0x4a>
 800a9c4:	3201      	adds	r2, #1
 800a9c6:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800a9ca:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 800a9ce:	fb03 0002 	mla	r0, r3, r2, r0
 800a9d2:	3020      	adds	r0, #32
 800a9d4:	0980      	lsrs	r0, r0, #6
 800a9d6:	b101      	cbz	r1, 800a9da <GUI_sin+0x52>
 800a9d8:	4240      	negs	r0, r0
 800a9da:	bd10      	pop	{r4, pc}
 800a9dc:	08013d10 	.word	0x08013d10

0800a9e0 <GUI_cos>:
 800a9e0:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800a9e4:	f7ff bfd0 	b.w	800a988 <GUI_sin>

0800a9e8 <GL_DrawLine1Ex>:
 800a9e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9ec:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800a9f0:	1a17      	subs	r7, r2, r0
 800a9f2:	1a5c      	subs	r4, r3, r1
 800a9f4:	ea54 0c07 	orrs.w	ip, r4, r7
 800a9f8:	4605      	mov	r5, r0
 800a9fa:	460e      	mov	r6, r1
 800a9fc:	f8d8 b000 	ldr.w	fp, [r8]
 800aa00:	d104      	bne.n	800aa0c <GL_DrawLine1Ex+0x24>
 800aa02:	b003      	add	sp, #12
 800aa04:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa08:	f000 ba16 	b.w	800ae38 <GL_DrawPoint>
 800aa0c:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 800aa10:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 800aa14:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800aa18:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800aa1c:	4288      	cmp	r0, r1
 800aa1e:	db04      	blt.n	800aa2a <GL_DrawLine1Ex+0x42>
 800aa20:	4621      	mov	r1, r4
 800aa22:	463c      	mov	r4, r7
 800aa24:	460f      	mov	r7, r1
 800aa26:	2100      	movs	r1, #0
 800aa28:	e006      	b.n	800aa38 <GL_DrawLine1Ex+0x50>
 800aa2a:	4611      	mov	r1, r2
 800aa2c:	461a      	mov	r2, r3
 800aa2e:	460b      	mov	r3, r1
 800aa30:	4629      	mov	r1, r5
 800aa32:	4635      	mov	r5, r6
 800aa34:	460e      	mov	r6, r1
 800aa36:	2101      	movs	r1, #1
 800aa38:	9100      	str	r1, [sp, #0]
 800aa3a:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800aa3e:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800aa42:	428c      	cmp	r4, r1
 800aa44:	d008      	beq.n	800aa58 <GL_DrawLine1Ex+0x70>
 800aa46:	461e      	mov	r6, r3
 800aa48:	462b      	mov	r3, r5
 800aa4a:	4264      	negs	r4, r4
 800aa4c:	4615      	mov	r5, r2
 800aa4e:	427f      	negs	r7, r7
 800aa50:	461a      	mov	r2, r3
 800aa52:	f04f 3aff 	mov.w	sl, #4294967295
 800aa56:	e001      	b.n	800aa5c <GL_DrawLine1Ex+0x74>
 800aa58:	f04f 0a01 	mov.w	sl, #1
 800aa5c:	2f00      	cmp	r7, #0
 800aa5e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800aba8 <GL_DrawLine1Ex+0x1c0>
 800aa62:	d13e      	bne.n	800aae2 <GL_DrawLine1Ex+0xfa>
 800aa64:	9b00      	ldr	r3, [sp, #0]
 800aa66:	b1d3      	cbz	r3, 800aa9e <GL_DrawLine1Ex+0xb6>
 800aa68:	f8d9 3000 	ldr.w	r3, [r9]
 800aa6c:	7e9b      	ldrb	r3, [r3, #26]
 800aa6e:	b98b      	cbnz	r3, 800aa94 <GL_DrawLine1Ex+0xac>
 800aa70:	4630      	mov	r0, r6
 800aa72:	4629      	mov	r1, r5
 800aa74:	b003      	add	sp, #12
 800aa76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa7a:	f7fe bd77 	b.w	800956c <LCD_DrawVLine>
 800aa7e:	f7ff ff3f 	bl	800a900 <_SetLineColor>
 800aa82:	b930      	cbnz	r0, 800aa92 <GL_DrawLine1Ex+0xaa>
 800aa84:	f8d9 3000 	ldr.w	r3, [r9]
 800aa88:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aa8a:	4630      	mov	r0, r6
 800aa8c:	685b      	ldr	r3, [r3, #4]
 800aa8e:	1979      	adds	r1, r7, r5
 800aa90:	4798      	blx	r3
 800aa92:	3701      	adds	r7, #1
 800aa94:	42a7      	cmp	r7, r4
 800aa96:	eb07 000b 	add.w	r0, r7, fp
 800aa9a:	ddf0      	ble.n	800aa7e <GL_DrawLine1Ex+0x96>
 800aa9c:	e01d      	b.n	800aada <GL_DrawLine1Ex+0xf2>
 800aa9e:	f8d9 3000 	ldr.w	r3, [r9]
 800aaa2:	7e99      	ldrb	r1, [r3, #26]
 800aaa4:	b111      	cbz	r1, 800aaac <GL_DrawLine1Ex+0xc4>
 800aaa6:	f8dd a000 	ldr.w	sl, [sp]
 800aaaa:	e012      	b.n	800aad2 <GL_DrawLine1Ex+0xea>
 800aaac:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aaae:	4628      	mov	r0, r5
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	4631      	mov	r1, r6
 800aab4:	4798      	blx	r3
 800aab6:	e074      	b.n	800aba2 <GL_DrawLine1Ex+0x1ba>
 800aab8:	f7ff ff22 	bl	800a900 <_SetLineColor>
 800aabc:	b938      	cbnz	r0, 800aace <GL_DrawLine1Ex+0xe6>
 800aabe:	f8d9 3000 	ldr.w	r3, [r9]
 800aac2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aac4:	eb0a 0005 	add.w	r0, sl, r5
 800aac8:	685b      	ldr	r3, [r3, #4]
 800aaca:	4631      	mov	r1, r6
 800aacc:	4798      	blx	r3
 800aace:	f10a 0a01 	add.w	sl, sl, #1
 800aad2:	45a2      	cmp	sl, r4
 800aad4:	eb0a 000b 	add.w	r0, sl, fp
 800aad8:	ddee      	ble.n	800aab8 <GL_DrawLine1Ex+0xd0>
 800aada:	3801      	subs	r0, #1
 800aadc:	f8c8 0000 	str.w	r0, [r8]
 800aae0:	e05f      	b.n	800aba2 <GL_DrawLine1Ex+0x1ba>
 800aae2:	f8d9 1000 	ldr.w	r1, [r9]
 800aae6:	f04f 0202 	mov.w	r2, #2
 800aaea:	7e89      	ldrb	r1, [r1, #26]
 800aaec:	fb94 f2f2 	sdiv	r2, r4, r2
 800aaf0:	bfb8      	it	lt
 800aaf2:	4252      	neglt	r2, r2
 800aaf4:	b9d9      	cbnz	r1, 800ab2e <GL_DrawLine1Ex+0x146>
 800aaf6:	4693      	mov	fp, r2
 800aaf8:	46a8      	mov	r8, r5
 800aafa:	ebc5 0308 	rsb	r3, r5, r8
 800aafe:	42a3      	cmp	r3, r4
 800ab00:	dc4f      	bgt.n	800aba2 <GL_DrawLine1Ex+0x1ba>
 800ab02:	9b00      	ldr	r3, [sp, #0]
 800ab04:	fb9b f1f4 	sdiv	r1, fp, r4
 800ab08:	4431      	add	r1, r6
 800ab0a:	b92b      	cbnz	r3, 800ab18 <GL_DrawLine1Ex+0x130>
 800ab0c:	f8d9 3000 	ldr.w	r3, [r9]
 800ab10:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ab12:	4640      	mov	r0, r8
 800ab14:	685b      	ldr	r3, [r3, #4]
 800ab16:	e005      	b.n	800ab24 <GL_DrawLine1Ex+0x13c>
 800ab18:	f8d9 3000 	ldr.w	r3, [r9]
 800ab1c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ab1e:	685b      	ldr	r3, [r3, #4]
 800ab20:	4608      	mov	r0, r1
 800ab22:	4641      	mov	r1, r8
 800ab24:	4798      	blx	r3
 800ab26:	f108 0801 	add.w	r8, r8, #1
 800ab2a:	44bb      	add	fp, r7
 800ab2c:	e7e5      	b.n	800aafa <GL_DrawLine1Ex+0x112>
 800ab2e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800ab32:	bf04      	itt	eq
 800ab34:	eb04 010b 	addeq.w	r1, r4, fp
 800ab38:	f8c8 1000 	streq.w	r1, [r8]
 800ab3c:	9201      	str	r2, [sp, #4]
 800ab3e:	46ab      	mov	fp, r5
 800ab40:	ebc5 010b 	rsb	r1, r5, fp
 800ab44:	42a1      	cmp	r1, r4
 800ab46:	f8d8 0000 	ldr.w	r0, [r8]
 800ab4a:	dc1e      	bgt.n	800ab8a <GL_DrawLine1Ex+0x1a2>
 800ab4c:	4450      	add	r0, sl
 800ab4e:	f8c8 0000 	str.w	r0, [r8]
 800ab52:	f7ff fed5 	bl	800a900 <_SetLineColor>
 800ab56:	b980      	cbnz	r0, 800ab7a <GL_DrawLine1Ex+0x192>
 800ab58:	f8dd c004 	ldr.w	ip, [sp, #4]
 800ab5c:	f8d9 0000 	ldr.w	r0, [r9]
 800ab60:	9b00      	ldr	r3, [sp, #0]
 800ab62:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800ab64:	fb9c f1f4 	sdiv	r1, ip, r4
 800ab68:	4431      	add	r1, r6
 800ab6a:	b913      	cbnz	r3, 800ab72 <GL_DrawLine1Ex+0x18a>
 800ab6c:	6843      	ldr	r3, [r0, #4]
 800ab6e:	4658      	mov	r0, fp
 800ab70:	e002      	b.n	800ab78 <GL_DrawLine1Ex+0x190>
 800ab72:	6843      	ldr	r3, [r0, #4]
 800ab74:	4608      	mov	r0, r1
 800ab76:	4659      	mov	r1, fp
 800ab78:	4798      	blx	r3
 800ab7a:	f8dd c004 	ldr.w	ip, [sp, #4]
 800ab7e:	44bc      	add	ip, r7
 800ab80:	f10b 0b01 	add.w	fp, fp, #1
 800ab84:	f8cd c004 	str.w	ip, [sp, #4]
 800ab88:	e7da      	b.n	800ab40 <GL_DrawLine1Ex+0x158>
 800ab8a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800ab8e:	bf04      	itt	eq
 800ab90:	1824      	addeq	r4, r4, r0
 800ab92:	f8c8 4000 	streq.w	r4, [r8]
 800ab96:	f8d8 2000 	ldr.w	r2, [r8]
 800ab9a:	ebca 0302 	rsb	r3, sl, r2
 800ab9e:	f8c8 3000 	str.w	r3, [r8]
 800aba2:	b003      	add	sp, #12
 800aba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aba8:	200000c0 	.word	0x200000c0

0800abac <GL_DrawLineEx>:
 800abac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abb0:	4d67      	ldr	r5, [pc, #412]	; (800ad50 <GL_DrawLineEx+0x1a4>)
 800abb2:	682c      	ldr	r4, [r5, #0]
 800abb4:	f894 b018 	ldrb.w	fp, [r4, #24]
 800abb8:	f1bb 0f01 	cmp.w	fp, #1
 800abbc:	b087      	sub	sp, #28
 800abbe:	4681      	mov	r9, r0
 800abc0:	4688      	mov	r8, r1
 800abc2:	4617      	mov	r7, r2
 800abc4:	461e      	mov	r6, r3
 800abc6:	46aa      	mov	sl, r5
 800abc8:	d104      	bne.n	800abd4 <GL_DrawLineEx+0x28>
 800abca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800abcc:	9400      	str	r4, [sp, #0]
 800abce:	f7ff ff0b 	bl	800a9e8 <GL_DrawLine1Ex>
 800abd2:	e0ba      	b.n	800ad4a <GL_DrawLineEx+0x19e>
 800abd4:	1a84      	subs	r4, r0, r2
 800abd6:	1acd      	subs	r5, r1, r3
 800abd8:	ea54 0305 	orrs.w	r3, r4, r5
 800abdc:	f000 80b5 	beq.w	800ad4a <GL_DrawLineEx+0x19e>
 800abe0:	2c00      	cmp	r4, #0
 800abe2:	bfba      	itte	lt
 800abe4:	4264      	neglt	r4, r4
 800abe6:	2301      	movlt	r3, #1
 800abe8:	2300      	movge	r3, #0
 800abea:	2d00      	cmp	r5, #0
 800abec:	bfbc      	itt	lt
 800abee:	426d      	neglt	r5, r5
 800abf0:	f043 0302 	orrlt.w	r3, r3, #2
 800abf4:	42a5      	cmp	r5, r4
 800abf6:	f10b 3bff 	add.w	fp, fp, #4294967295
 800abfa:	dd04      	ble.n	800ac06 <GL_DrawLineEx+0x5a>
 800abfc:	4622      	mov	r2, r4
 800abfe:	f043 0304 	orr.w	r3, r3, #4
 800ac02:	462c      	mov	r4, r5
 800ac04:	4615      	mov	r5, r2
 800ac06:	2202      	movs	r2, #2
 800ac08:	fb94 f2f2 	sdiv	r2, r4, r2
 800ac0c:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 800ac10:	fb95 f4f4 	sdiv	r4, r5, r4
 800ac14:	11a1      	asrs	r1, r4, #6
 800ac16:	4a4f      	ldr	r2, [pc, #316]	; (800ad54 <GL_DrawLineEx+0x1a8>)
 800ac18:	f3c4 0483 	ubfx	r4, r4, #2, #4
 800ac1c:	f1c4 0510 	rsb	r5, r4, #16
 800ac20:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 800ac24:	2d10      	cmp	r5, #16
 800ac26:	fb05 f000 	mul.w	r0, r5, r0
 800ac2a:	d004      	beq.n	800ac36 <GL_DrawLineEx+0x8a>
 800ac2c:	3101      	adds	r1, #1
 800ac2e:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 800ac32:	fb04 0002 	mla	r0, r4, r2, r0
 800ac36:	2210      	movs	r2, #16
 800ac38:	3008      	adds	r0, #8
 800ac3a:	fb90 f0f2 	sdiv	r0, r0, r2
 800ac3e:	0759      	lsls	r1, r3, #29
 800ac40:	bf48      	it	mi
 800ac42:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800ac46:	07da      	lsls	r2, r3, #31
 800ac48:	bf48      	it	mi
 800ac4a:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 800ac4e:	079b      	lsls	r3, r3, #30
 800ac50:	bf48      	it	mi
 800ac52:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800ac56:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800ac5a:	4628      	mov	r0, r5
 800ac5c:	f7ff fec0 	bl	800a9e0 <GUI_cos>
 800ac60:	fb00 f40b 	mul.w	r4, r0, fp
 800ac64:	4628      	mov	r0, r5
 800ac66:	f7ff fe8f 	bl	800a988 <GUI_sin>
 800ac6a:	2c00      	cmp	r4, #0
 800ac6c:	fb00 f00b 	mul.w	r0, r0, fp
 800ac70:	da04      	bge.n	800ac7c <GL_DrawLineEx+0xd0>
 800ac72:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800ac76:	129b      	asrs	r3, r3, #10
 800ac78:	425b      	negs	r3, r3
 800ac7a:	e002      	b.n	800ac82 <GL_DrawLineEx+0xd6>
 800ac7c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800ac80:	129b      	asrs	r3, r3, #10
 800ac82:	2800      	cmp	r0, #0
 800ac84:	da06      	bge.n	800ac94 <GL_DrawLineEx+0xe8>
 800ac86:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800ac8a:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800ac8e:	f1cb 0b00 	rsb	fp, fp, #0
 800ac92:	e003      	b.n	800ac9c <GL_DrawLineEx+0xf0>
 800ac94:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 800ac98:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	dd03      	ble.n	800aca8 <GL_DrawLineEx+0xfc>
 800aca0:	1c58      	adds	r0, r3, #1
 800aca2:	1040      	asrs	r0, r0, #1
 800aca4:	105b      	asrs	r3, r3, #1
 800aca6:	e005      	b.n	800acb4 <GL_DrawLineEx+0x108>
 800aca8:	2202      	movs	r2, #2
 800acaa:	fb93 f0f2 	sdiv	r0, r3, r2
 800acae:	3b01      	subs	r3, #1
 800acb0:	fb93 f3f2 	sdiv	r3, r3, r2
 800acb4:	f1bb 0f00 	cmp.w	fp, #0
 800acb8:	dd05      	ble.n	800acc6 <GL_DrawLineEx+0x11a>
 800acba:	f10b 0201 	add.w	r2, fp, #1
 800acbe:	1052      	asrs	r2, r2, #1
 800acc0:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 800acc4:	e006      	b.n	800acd4 <GL_DrawLineEx+0x128>
 800acc6:	2102      	movs	r1, #2
 800acc8:	fb9b f2f1 	sdiv	r2, fp, r1
 800accc:	f10b 3bff 	add.w	fp, fp, #4294967295
 800acd0:	fb9b fbf1 	sdiv	fp, fp, r1
 800acd4:	b280      	uxth	r0, r0
 800acd6:	fa1f f489 	uxth.w	r4, r9
 800acda:	1901      	adds	r1, r0, r4
 800acdc:	b292      	uxth	r2, r2
 800acde:	f8ad 1008 	strh.w	r1, [sp, #8]
 800ace2:	fa1f fb8b 	uxth.w	fp, fp
 800ace6:	fa1f f188 	uxth.w	r1, r8
 800acea:	1855      	adds	r5, r2, r1
 800acec:	ebcb 0101 	rsb	r1, fp, r1
 800acf0:	b29b      	uxth	r3, r3
 800acf2:	f8ad 100e 	strh.w	r1, [sp, #14]
 800acf6:	b2b9      	uxth	r1, r7
 800acf8:	1ae4      	subs	r4, r4, r3
 800acfa:	1acb      	subs	r3, r1, r3
 800acfc:	f8ad 3010 	strh.w	r3, [sp, #16]
 800ad00:	b2b3      	uxth	r3, r6
 800ad02:	4401      	add	r1, r0
 800ad04:	ebcb 0b03 	rsb	fp, fp, r3
 800ad08:	4413      	add	r3, r2
 800ad0a:	2200      	movs	r2, #0
 800ad0c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ad10:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ad14:	a802      	add	r0, sp, #8
 800ad16:	4613      	mov	r3, r2
 800ad18:	2104      	movs	r1, #4
 800ad1a:	f8ad 500a 	strh.w	r5, [sp, #10]
 800ad1e:	f8ad 400c 	strh.w	r4, [sp, #12]
 800ad22:	f8ad b012 	strh.w	fp, [sp, #18]
 800ad26:	f005 f98b 	bl	8010040 <GL_FillPolygon>
 800ad2a:	f8da 3000 	ldr.w	r3, [sl]
 800ad2e:	7e5b      	ldrb	r3, [r3, #25]
 800ad30:	b91b      	cbnz	r3, 800ad3a <GL_DrawLineEx+0x18e>
 800ad32:	4648      	mov	r0, r9
 800ad34:	4641      	mov	r1, r8
 800ad36:	f000 f87f 	bl	800ae38 <GL_DrawPoint>
 800ad3a:	f8da 3000 	ldr.w	r3, [sl]
 800ad3e:	7e5b      	ldrb	r3, [r3, #25]
 800ad40:	b91b      	cbnz	r3, 800ad4a <GL_DrawLineEx+0x19e>
 800ad42:	4638      	mov	r0, r7
 800ad44:	4631      	mov	r1, r6
 800ad46:	f000 f877 	bl	800ae38 <GL_DrawPoint>
 800ad4a:	b007      	add	sp, #28
 800ad4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad50:	200000c0 	.word	0x200000c0
 800ad54:	08013d32 	.word	0x08013d32

0800ad58 <GL_DrawLine>:
 800ad58:	b530      	push	{r4, r5, lr}
 800ad5a:	b085      	sub	sp, #20
 800ad5c:	ac04      	add	r4, sp, #16
 800ad5e:	2500      	movs	r5, #0
 800ad60:	f844 5d04 	str.w	r5, [r4, #-4]!
 800ad64:	9400      	str	r4, [sp, #0]
 800ad66:	f7ff ff21 	bl	800abac <GL_DrawLineEx>
 800ad6a:	b005      	add	sp, #20
 800ad6c:	bd30      	pop	{r4, r5, pc}
	...

0800ad70 <GUI_DrawLine>:
 800ad70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad74:	461e      	mov	r6, r3
 800ad76:	4b0c      	ldr	r3, [pc, #48]	; (800ada8 <GUI_DrawLine+0x38>)
 800ad78:	681c      	ldr	r4, [r3, #0]
 800ad7a:	4681      	mov	r9, r0
 800ad7c:	2000      	movs	r0, #0
 800ad7e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800ad80:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800ad82:	4688      	mov	r8, r1
 800ad84:	4617      	mov	r7, r2
 800ad86:	f7fb febb 	bl	8006b00 <WM__InitIVRSearch>
 800ad8a:	b150      	cbz	r0, 800ada2 <GUI_DrawLine+0x32>
 800ad8c:	eb09 0005 	add.w	r0, r9, r5
 800ad90:	eb08 0104 	add.w	r1, r8, r4
 800ad94:	197a      	adds	r2, r7, r5
 800ad96:	1933      	adds	r3, r6, r4
 800ad98:	f7ff ffde 	bl	800ad58 <GL_DrawLine>
 800ad9c:	f7fb fdee 	bl	800697c <WM__GetNextIVR>
 800ada0:	e7f3      	b.n	800ad8a <GUI_DrawLine+0x1a>
 800ada2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ada6:	bf00      	nop
 800ada8:	200000c0 	.word	0x200000c0

0800adac <GUI_DrawHLine>:
 800adac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800adae:	4f10      	ldr	r7, [pc, #64]	; (800adf0 <GUI_DrawHLine+0x44>)
 800adb0:	683b      	ldr	r3, [r7, #0]
 800adb2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800adb4:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800adb6:	4405      	add	r5, r0
 800adb8:	190e      	adds	r6, r1, r4
 800adba:	b2ab      	uxth	r3, r5
 800adbc:	4414      	add	r4, r2
 800adbe:	4668      	mov	r0, sp
 800adc0:	f8ad 6000 	strh.w	r6, [sp]
 800adc4:	f8ad 4004 	strh.w	r4, [sp, #4]
 800adc8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800adcc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800add0:	f7fb fe96 	bl	8006b00 <WM__InitIVRSearch>
 800add4:	b148      	cbz	r0, 800adea <GUI_DrawHLine+0x3e>
 800add6:	683b      	ldr	r3, [r7, #0]
 800add8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adda:	4630      	mov	r0, r6
 800addc:	681b      	ldr	r3, [r3, #0]
 800adde:	4629      	mov	r1, r5
 800ade0:	4622      	mov	r2, r4
 800ade2:	4798      	blx	r3
 800ade4:	f7fb fdca 	bl	800697c <WM__GetNextIVR>
 800ade8:	e7f4      	b.n	800add4 <GUI_DrawHLine+0x28>
 800adea:	b003      	add	sp, #12
 800adec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800adee:	bf00      	nop
 800adf0:	200000c0 	.word	0x200000c0

0800adf4 <GUI_DrawPixel>:
 800adf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800adf6:	4e0f      	ldr	r6, [pc, #60]	; (800ae34 <GUI_DrawPixel+0x40>)
 800adf8:	6833      	ldr	r3, [r6, #0]
 800adfa:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800adfc:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800adfe:	4405      	add	r5, r0
 800ae00:	b2ab      	uxth	r3, r5
 800ae02:	440c      	add	r4, r1
 800ae04:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ae08:	f8ad 3000 	strh.w	r3, [sp]
 800ae0c:	4668      	mov	r0, sp
 800ae0e:	b2a3      	uxth	r3, r4
 800ae10:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ae14:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae18:	f7fb fe72 	bl	8006b00 <WM__InitIVRSearch>
 800ae1c:	b140      	cbz	r0, 800ae30 <GUI_DrawPixel+0x3c>
 800ae1e:	6833      	ldr	r3, [r6, #0]
 800ae20:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae22:	4628      	mov	r0, r5
 800ae24:	685b      	ldr	r3, [r3, #4]
 800ae26:	4621      	mov	r1, r4
 800ae28:	4798      	blx	r3
 800ae2a:	f7fb fda7 	bl	800697c <WM__GetNextIVR>
 800ae2e:	e7f5      	b.n	800ae1c <GUI_DrawPixel+0x28>
 800ae30:	b002      	add	sp, #8
 800ae32:	bd70      	pop	{r4, r5, r6, pc}
 800ae34:	200000c0 	.word	0x200000c0

0800ae38 <GL_DrawPoint>:
 800ae38:	b508      	push	{r3, lr}
 800ae3a:	4b08      	ldr	r3, [pc, #32]	; (800ae5c <GL_DrawPoint+0x24>)
 800ae3c:	681b      	ldr	r3, [r3, #0]
 800ae3e:	7e1a      	ldrb	r2, [r3, #24]
 800ae40:	2a01      	cmp	r2, #1
 800ae42:	d103      	bne.n	800ae4c <GL_DrawPoint+0x14>
 800ae44:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae46:	685b      	ldr	r3, [r3, #4]
 800ae48:	4798      	blx	r3
 800ae4a:	bd08      	pop	{r3, pc}
 800ae4c:	2302      	movs	r3, #2
 800ae4e:	3a01      	subs	r2, #1
 800ae50:	fb92 f2f3 	sdiv	r2, r2, r3
 800ae54:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ae58:	f000 bf3e 	b.w	800bcd8 <GL_FillCircle>
 800ae5c:	200000c0 	.word	0x200000c0

0800ae60 <GUI_DrawVLine>:
 800ae60:	4b0f      	ldr	r3, [pc, #60]	; (800aea0 <GUI_DrawVLine+0x40>)
 800ae62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae64:	681b      	ldr	r3, [r3, #0]
 800ae66:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800ae68:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800ae6a:	4406      	add	r6, r0
 800ae6c:	190d      	adds	r5, r1, r4
 800ae6e:	b2b3      	uxth	r3, r6
 800ae70:	4414      	add	r4, r2
 800ae72:	4668      	mov	r0, sp
 800ae74:	f8ad 3000 	strh.w	r3, [sp]
 800ae78:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ae7c:	f8ad 5002 	strh.w	r5, [sp, #2]
 800ae80:	f8ad 4006 	strh.w	r4, [sp, #6]
 800ae84:	f7fb fe3c 	bl	8006b00 <WM__InitIVRSearch>
 800ae88:	b138      	cbz	r0, 800ae9a <GUI_DrawVLine+0x3a>
 800ae8a:	4630      	mov	r0, r6
 800ae8c:	4629      	mov	r1, r5
 800ae8e:	4622      	mov	r2, r4
 800ae90:	f7fe fb6c 	bl	800956c <LCD_DrawVLine>
 800ae94:	f7fb fd72 	bl	800697c <WM__GetNextIVR>
 800ae98:	e7f6      	b.n	800ae88 <GUI_DrawVLine+0x28>
 800ae9a:	b002      	add	sp, #8
 800ae9c:	bd70      	pop	{r4, r5, r6, pc}
 800ae9e:	bf00      	nop
 800aea0:	200000c0 	.word	0x200000c0

0800aea4 <GUI_FillRect>:
 800aea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aea6:	4c0f      	ldr	r4, [pc, #60]	; (800aee4 <GUI_FillRect+0x40>)
 800aea8:	6824      	ldr	r4, [r4, #0]
 800aeaa:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800aeac:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800aeae:	1947      	adds	r7, r0, r5
 800aeb0:	190e      	adds	r6, r1, r4
 800aeb2:	4415      	add	r5, r2
 800aeb4:	441c      	add	r4, r3
 800aeb6:	4668      	mov	r0, sp
 800aeb8:	f8ad 7000 	strh.w	r7, [sp]
 800aebc:	f8ad 5004 	strh.w	r5, [sp, #4]
 800aec0:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aec4:	f8ad 4006 	strh.w	r4, [sp, #6]
 800aec8:	f7fb fe1a 	bl	8006b00 <WM__InitIVRSearch>
 800aecc:	b140      	cbz	r0, 800aee0 <GUI_FillRect+0x3c>
 800aece:	4638      	mov	r0, r7
 800aed0:	4631      	mov	r1, r6
 800aed2:	462a      	mov	r2, r5
 800aed4:	4623      	mov	r3, r4
 800aed6:	f7fe fb6f 	bl	80095b8 <LCD_FillRect>
 800aeda:	f7fb fd4f 	bl	800697c <WM__GetNextIVR>
 800aede:	e7f5      	b.n	800aecc <GUI_FillRect+0x28>
 800aee0:	b003      	add	sp, #12
 800aee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aee4:	200000c0 	.word	0x200000c0

0800aee8 <GUI_FillRectEx>:
 800aee8:	4603      	mov	r3, r0
 800aeea:	f9b0 0000 	ldrsh.w	r0, [r0]
 800aeee:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 800aef2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800aef6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800aefa:	f7ff bfd3 	b.w	800aea4 <GUI_FillRect>
	...

0800af00 <GUI_DrawGraphEx>:
 800af00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af04:	4698      	mov	r8, r3
 800af06:	4b81      	ldr	r3, [pc, #516]	; (800b10c <GUI_DrawGraphEx+0x20c>)
 800af08:	b08b      	sub	sp, #44	; 0x2c
 800af0a:	468a      	mov	sl, r1
 800af0c:	6819      	ldr	r1, [r3, #0]
 800af0e:	9006      	str	r0, [sp, #24]
 800af10:	2000      	movs	r0, #0
 800af12:	4691      	mov	r9, r2
 800af14:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800af16:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800af18:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 800af1a:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 800af1c:	f7fb fdf0 	bl	8006b00 <WM__InitIVRSearch>
 800af20:	2800      	cmp	r0, #0
 800af22:	f000 80ef 	beq.w	800b104 <GUI_DrawGraphEx+0x204>
 800af26:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 800af2a:	9806      	ldr	r0, [sp, #24]
 800af2c:	3b01      	subs	r3, #1
 800af2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800af32:	9307      	str	r3, [sp, #28]
 800af34:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800af36:	2b00      	cmp	r3, #0
 800af38:	bf14      	ite	ne
 800af3a:	f06f 0301 	mvnne.w	r3, #1
 800af3e:	2302      	moveq	r3, #2
 800af40:	44a9      	add	r9, r5
 800af42:	4444      	add	r4, r8
 800af44:	9309      	str	r3, [sp, #36]	; 0x24
 800af46:	b927      	cbnz	r7, 800af52 <GUI_DrawGraphEx+0x52>
 800af48:	f7fb fd18 	bl	800697c <WM__GetNextIVR>
 800af4c:	2800      	cmp	r0, #0
 800af4e:	d1fa      	bne.n	800af46 <GUI_DrawGraphEx+0x46>
 800af50:	e0d8      	b.n	800b104 <GUI_DrawGraphEx+0x204>
 800af52:	2e00      	cmp	r6, #0
 800af54:	d0f8      	beq.n	800af48 <GUI_DrawGraphEx+0x48>
 800af56:	f1ba 0f00 	cmp.w	sl, #0
 800af5a:	ddf5      	ble.n	800af48 <GUI_DrawGraphEx+0x48>
 800af5c:	1c7b      	adds	r3, r7, #1
 800af5e:	d104      	bne.n	800af6a <GUI_DrawGraphEx+0x6a>
 800af60:	2e01      	cmp	r6, #1
 800af62:	bf14      	ite	ne
 800af64:	2302      	movne	r3, #2
 800af66:	2301      	moveq	r3, #1
 800af68:	e00a      	b.n	800af80 <GUI_DrawGraphEx+0x80>
 800af6a:	2f01      	cmp	r7, #1
 800af6c:	d104      	bne.n	800af78 <GUI_DrawGraphEx+0x78>
 800af6e:	2e01      	cmp	r6, #1
 800af70:	bf14      	ite	ne
 800af72:	2303      	movne	r3, #3
 800af74:	2300      	moveq	r3, #0
 800af76:	e003      	b.n	800af80 <GUI_DrawGraphEx+0x80>
 800af78:	2e01      	cmp	r6, #1
 800af7a:	bf14      	ite	ne
 800af7c:	2305      	movne	r3, #5
 800af7e:	2304      	moveq	r3, #4
 800af80:	9305      	str	r3, [sp, #20]
 800af82:	4b62      	ldr	r3, [pc, #392]	; (800b10c <GUI_DrawGraphEx+0x20c>)
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	695b      	ldr	r3, [r3, #20]
 800af88:	b1eb      	cbz	r3, 800afc6 <GUI_DrawGraphEx+0xc6>
 800af8a:	f9b3 8000 	ldrsh.w	r8, [r3]
 800af8e:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 800af92:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800af96:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 800af9a:	9004      	str	r0, [sp, #16]
 800af9c:	f108 38ff 	add.w	r8, r8, #4294967295
 800afa0:	45c1      	cmp	r9, r8
 800afa2:	eb09 030a 	add.w	r3, r9, sl
 800afa6:	bfb8      	it	lt
 800afa8:	ebc9 0808 	rsblt	r8, r9, r8
 800afac:	f103 33ff 	add.w	r3, r3, #4294967295
 800afb0:	bfb4      	ite	lt
 800afb2:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 800afb6:	f04f 0800 	movge.w	r8, #0
 800afba:	4293      	cmp	r3, r2
 800afbc:	dd0a      	ble.n	800afd4 <GUI_DrawGraphEx+0xd4>
 800afbe:	ebc9 0202 	rsb	r2, r9, r2
 800afc2:	3201      	adds	r2, #1
 800afc4:	e007      	b.n	800afd6 <GUI_DrawGraphEx+0xd6>
 800afc6:	f04f 3bff 	mov.w	fp, #4294967295
 800afca:	4652      	mov	r2, sl
 800afcc:	f8cd b010 	str.w	fp, [sp, #16]
 800afd0:	4698      	mov	r8, r3
 800afd2:	e000      	b.n	800afd6 <GUI_DrawGraphEx+0xd6>
 800afd4:	4652      	mov	r2, sl
 800afd6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800afd8:	b91b      	cbnz	r3, 800afe2 <GUI_DrawGraphEx+0xe2>
 800afda:	9b06      	ldr	r3, [sp, #24]
 800afdc:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800afe0:	e000      	b.n	800afe4 <GUI_DrawGraphEx+0xe4>
 800afe2:	9b07      	ldr	r3, [sp, #28]
 800afe4:	4590      	cmp	r8, r2
 800afe6:	9303      	str	r3, [sp, #12]
 800afe8:	daae      	bge.n	800af48 <GUI_DrawGraphEx+0x48>
 800afea:	444a      	add	r2, r9
 800afec:	9208      	str	r2, [sp, #32]
 800afee:	2200      	movs	r2, #0
 800aff0:	44c8      	add	r8, r9
 800aff2:	2301      	movs	r3, #1
 800aff4:	9202      	str	r2, [sp, #8]
 800aff6:	9803      	ldr	r0, [sp, #12]
 800aff8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800affa:	8805      	ldrh	r5, [r0, #0]
 800affc:	4408      	add	r0, r1
 800affe:	b22d      	sxth	r5, r5
 800b000:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800b004:	428d      	cmp	r5, r1
 800b006:	9003      	str	r0, [sp, #12]
 800b008:	d10d      	bne.n	800b026 <GUI_DrawGraphEx+0x126>
 800b00a:	9802      	ldr	r0, [sp, #8]
 800b00c:	2800      	cmp	r0, #0
 800b00e:	d16f      	bne.n	800b0f0 <GUI_DrawGraphEx+0x1f0>
 800b010:	2b00      	cmp	r3, #0
 800b012:	d16f      	bne.n	800b0f4 <GUI_DrawGraphEx+0x1f4>
 800b014:	4611      	mov	r1, r2
 800b016:	f108 30ff 	add.w	r0, r8, #4294967295
 800b01a:	9201      	str	r2, [sp, #4]
 800b01c:	f7fe fa52 	bl	80094c4 <LCD_DrawPixel>
 800b020:	2301      	movs	r3, #1
 800b022:	9a01      	ldr	r2, [sp, #4]
 800b024:	e067      	b.n	800b0f6 <GUI_DrawGraphEx+0x1f6>
 800b026:	9805      	ldr	r0, [sp, #20]
 800b028:	1e41      	subs	r1, r0, #1
 800b02a:	b1db      	cbz	r3, 800b064 <GUI_DrawGraphEx+0x164>
 800b02c:	2904      	cmp	r1, #4
 800b02e:	d817      	bhi.n	800b060 <GUI_DrawGraphEx+0x160>
 800b030:	e8df f001 	tbb	[pc, r1]
 800b034:	0b070503 	.word	0x0b070503
 800b038:	0f          	.byte	0x0f
 800b039:	00          	.byte	0x00
 800b03a:	1b62      	subs	r2, r4, r5
 800b03c:	e00e      	b.n	800b05c <GUI_DrawGraphEx+0x15c>
 800b03e:	1b65      	subs	r5, r4, r5
 800b040:	e000      	b.n	800b044 <GUI_DrawGraphEx+0x144>
 800b042:	4425      	add	r5, r4
 800b044:	fbb5 f2f6 	udiv	r2, r5, r6
 800b048:	e008      	b.n	800b05c <GUI_DrawGraphEx+0x15c>
 800b04a:	4425      	add	r5, r4
 800b04c:	fb07 f205 	mul.w	r2, r7, r5
 800b050:	e004      	b.n	800b05c <GUI_DrawGraphEx+0x15c>
 800b052:	4425      	add	r5, r4
 800b054:	fb07 f205 	mul.w	r2, r7, r5
 800b058:	fbb2 f2f6 	udiv	r2, r2, r6
 800b05c:	2300      	movs	r3, #0
 800b05e:	e04a      	b.n	800b0f6 <GUI_DrawGraphEx+0x1f6>
 800b060:	192a      	adds	r2, r5, r4
 800b062:	e7fb      	b.n	800b05c <GUI_DrawGraphEx+0x15c>
 800b064:	2904      	cmp	r1, #4
 800b066:	d812      	bhi.n	800b08e <GUI_DrawGraphEx+0x18e>
 800b068:	e8df f001 	tbb	[pc, r1]
 800b06c:	0b070503 	.word	0x0b070503
 800b070:	0e          	.byte	0x0e
 800b071:	00          	.byte	0x00
 800b072:	1b65      	subs	r5, r4, r5
 800b074:	e00c      	b.n	800b090 <GUI_DrawGraphEx+0x190>
 800b076:	1b65      	subs	r5, r4, r5
 800b078:	e000      	b.n	800b07c <GUI_DrawGraphEx+0x17c>
 800b07a:	4425      	add	r5, r4
 800b07c:	fbb5 f5f6 	udiv	r5, r5, r6
 800b080:	e006      	b.n	800b090 <GUI_DrawGraphEx+0x190>
 800b082:	4425      	add	r5, r4
 800b084:	437d      	muls	r5, r7
 800b086:	e003      	b.n	800b090 <GUI_DrawGraphEx+0x190>
 800b088:	4425      	add	r5, r4
 800b08a:	437d      	muls	r5, r7
 800b08c:	e7f6      	b.n	800b07c <GUI_DrawGraphEx+0x17c>
 800b08e:	4425      	add	r5, r4
 800b090:	9904      	ldr	r1, [sp, #16]
 800b092:	428a      	cmp	r2, r1
 800b094:	da01      	bge.n	800b09a <GUI_DrawGraphEx+0x19a>
 800b096:	428d      	cmp	r5, r1
 800b098:	db25      	blt.n	800b0e6 <GUI_DrawGraphEx+0x1e6>
 800b09a:	455a      	cmp	r2, fp
 800b09c:	dd01      	ble.n	800b0a2 <GUI_DrawGraphEx+0x1a2>
 800b09e:	455d      	cmp	r5, fp
 800b0a0:	dc21      	bgt.n	800b0e6 <GUI_DrawGraphEx+0x1e6>
 800b0a2:	eb05 0c02 	add.w	ip, r5, r2
 800b0a6:	2102      	movs	r1, #2
 800b0a8:	42aa      	cmp	r2, r5
 800b0aa:	fb9c fcf1 	sdiv	ip, ip, r1
 800b0ae:	f108 30ff 	add.w	r0, r8, #4294967295
 800b0b2:	dc0b      	bgt.n	800b0cc <GUI_DrawGraphEx+0x1cc>
 800b0b4:	4611      	mov	r1, r2
 800b0b6:	4662      	mov	r2, ip
 800b0b8:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b0bc:	f7fe fa56 	bl	800956c <LCD_DrawVLine>
 800b0c0:	f8dd c004 	ldr.w	ip, [sp, #4]
 800b0c4:	4640      	mov	r0, r8
 800b0c6:	4661      	mov	r1, ip
 800b0c8:	462a      	mov	r2, r5
 800b0ca:	e009      	b.n	800b0e0 <GUI_DrawGraphEx+0x1e0>
 800b0cc:	4661      	mov	r1, ip
 800b0ce:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b0d2:	f7fe fa4b 	bl	800956c <LCD_DrawVLine>
 800b0d6:	f8dd c004 	ldr.w	ip, [sp, #4]
 800b0da:	4640      	mov	r0, r8
 800b0dc:	4629      	mov	r1, r5
 800b0de:	4662      	mov	r2, ip
 800b0e0:	f7fe fa44 	bl	800956c <LCD_DrawVLine>
 800b0e4:	9b00      	ldr	r3, [sp, #0]
 800b0e6:	9a02      	ldr	r2, [sp, #8]
 800b0e8:	3201      	adds	r2, #1
 800b0ea:	9202      	str	r2, [sp, #8]
 800b0ec:	462a      	mov	r2, r5
 800b0ee:	e002      	b.n	800b0f6 <GUI_DrawGraphEx+0x1f6>
 800b0f0:	2300      	movs	r3, #0
 800b0f2:	9302      	str	r3, [sp, #8]
 800b0f4:	2301      	movs	r3, #1
 800b0f6:	9808      	ldr	r0, [sp, #32]
 800b0f8:	f108 0801 	add.w	r8, r8, #1
 800b0fc:	4580      	cmp	r8, r0
 800b0fe:	f47f af7a 	bne.w	800aff6 <GUI_DrawGraphEx+0xf6>
 800b102:	e721      	b.n	800af48 <GUI_DrawGraphEx+0x48>
 800b104:	b00b      	add	sp, #44	; 0x2c
 800b106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b10a:	bf00      	nop
 800b10c:	200000c0 	.word	0x200000c0

0800b110 <GUI_DispString>:
 800b110:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b114:	4604      	mov	r4, r0
 800b116:	2800      	cmp	r0, #0
 800b118:	d079      	beq.n	800b20e <GUI_DispString+0xfe>
 800b11a:	4d3e      	ldr	r5, [pc, #248]	; (800b214 <GUI_DispString+0x104>)
 800b11c:	f001 f8d4 	bl	800c2c8 <GUI_GetFontDistY>
 800b120:	682b      	ldr	r3, [r5, #0]
 800b122:	4680      	mov	r8, r0
 800b124:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800b128:	f001 f8b6 	bl	800c298 <GUI_GetYAdjust>
 800b12c:	682b      	ldr	r3, [r5, #0]
 800b12e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800b130:	b287      	uxth	r7, r0
 800b132:	1bd2      	subs	r2, r2, r7
 800b134:	849a      	strh	r2, [r3, #36]	; 0x24
 800b136:	7823      	ldrb	r3, [r4, #0]
 800b138:	2b00      	cmp	r3, #0
 800b13a:	d05d      	beq.n	800b1f8 <GUI_DispString+0xe8>
 800b13c:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800b140:	4620      	mov	r0, r4
 800b142:	f000 fff7 	bl	800c134 <GUI__GetLineNumChars>
 800b146:	4606      	mov	r6, r0
 800b148:	4631      	mov	r1, r6
 800b14a:	4620      	mov	r0, r4
 800b14c:	f001 f820 	bl	800c190 <GUI__GetLineDistX>
 800b150:	682b      	ldr	r3, [r5, #0]
 800b152:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b154:	f002 0203 	and.w	r2, r2, #3
 800b158:	2a01      	cmp	r2, #1
 800b15a:	d005      	beq.n	800b168 <GUI_DispString+0x58>
 800b15c:	2a02      	cmp	r2, #2
 800b15e:	bf14      	ite	ne
 800b160:	2200      	movne	r2, #0
 800b162:	fb90 f2f2 	sdiveq	r2, r0, r2
 800b166:	e000      	b.n	800b16a <GUI_DispString+0x5a>
 800b168:	4602      	mov	r2, r0
 800b16a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b16c:	1a8a      	subs	r2, r1, r2
 800b16e:	b292      	uxth	r2, r2
 800b170:	b291      	uxth	r1, r2
 800b172:	8459      	strh	r1, [r3, #34]	; 0x22
 800b174:	fa1f fa80 	uxth.w	sl, r0
 800b178:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800b17a:	f8ad 1000 	strh.w	r1, [sp]
 800b17e:	f10a 31ff 	add.w	r1, sl, #4294967295
 800b182:	440a      	add	r2, r1
 800b184:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b188:	fa1f fb88 	uxth.w	fp, r8
 800b18c:	3b01      	subs	r3, #1
 800b18e:	445b      	add	r3, fp
 800b190:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b194:	4620      	mov	r0, r4
 800b196:	4631      	mov	r1, r6
 800b198:	466a      	mov	r2, sp
 800b19a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b19e:	f001 f827 	bl	800c1f0 <GUI__DispLine>
 800b1a2:	682b      	ldr	r3, [r5, #0]
 800b1a4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b1a8:	849a      	strh	r2, [r3, #36]	; 0x24
 800b1aa:	4620      	mov	r0, r4
 800b1ac:	4631      	mov	r1, r6
 800b1ae:	f7ff f98d 	bl	800a4cc <GUI_UC__NumChars2NumBytes>
 800b1b2:	5c23      	ldrb	r3, [r4, r0]
 800b1b4:	2b0a      	cmp	r3, #10
 800b1b6:	eb04 0200 	add.w	r2, r4, r0
 800b1ba:	d001      	beq.n	800b1c0 <GUI_DispString+0xb0>
 800b1bc:	2b0d      	cmp	r3, #13
 800b1be:	d112      	bne.n	800b1e6 <GUI_DispString+0xd6>
 800b1c0:	682b      	ldr	r3, [r5, #0]
 800b1c2:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800b1c4:	f001 0103 	and.w	r1, r1, #3
 800b1c8:	3901      	subs	r1, #1
 800b1ca:	2901      	cmp	r1, #1
 800b1cc:	bf8a      	itet	hi
 800b1ce:	8c19      	ldrhhi	r1, [r3, #32]
 800b1d0:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800b1d4:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800b1d6:	7811      	ldrb	r1, [r2, #0]
 800b1d8:	290a      	cmp	r1, #10
 800b1da:	d10b      	bne.n	800b1f4 <GUI_DispString+0xe4>
 800b1dc:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800b1de:	448b      	add	fp, r1
 800b1e0:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800b1e4:	e006      	b.n	800b1f4 <GUI_DispString+0xe4>
 800b1e6:	4b0b      	ldr	r3, [pc, #44]	; (800b214 <GUI_DispString+0x104>)
 800b1e8:	f8bd 0000 	ldrh.w	r0, [sp]
 800b1ec:	681b      	ldr	r3, [r3, #0]
 800b1ee:	4482      	add	sl, r0
 800b1f0:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800b1f4:	7813      	ldrb	r3, [r2, #0]
 800b1f6:	b943      	cbnz	r3, 800b20a <GUI_DispString+0xfa>
 800b1f8:	682b      	ldr	r3, [r5, #0]
 800b1fa:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800b1fc:	4417      	add	r7, r2
 800b1fe:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b200:	849f      	strh	r7, [r3, #36]	; 0x24
 800b202:	f022 0203 	bic.w	r2, r2, #3
 800b206:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b208:	e001      	b.n	800b20e <GUI_DispString+0xfe>
 800b20a:	1c54      	adds	r4, r2, #1
 800b20c:	e793      	b.n	800b136 <GUI_DispString+0x26>
 800b20e:	b003      	add	sp, #12
 800b210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b214:	200000c0 	.word	0x200000c0

0800b218 <GUI_DispStringAt>:
 800b218:	4b02      	ldr	r3, [pc, #8]	; (800b224 <GUI_DispStringAt+0xc>)
 800b21a:	681b      	ldr	r3, [r3, #0]
 800b21c:	8459      	strh	r1, [r3, #34]	; 0x22
 800b21e:	849a      	strh	r2, [r3, #36]	; 0x24
 800b220:	f7ff bf76 	b.w	800b110 <GUI_DispString>
 800b224:	200000c0 	.word	0x200000c0

0800b228 <GUI__DispStringInRect>:
 800b228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b22c:	b087      	sub	sp, #28
 800b22e:	460c      	mov	r4, r1
 800b230:	9001      	str	r0, [sp, #4]
 800b232:	4691      	mov	r9, r2
 800b234:	461d      	mov	r5, r3
 800b236:	f001 f847 	bl	800c2c8 <GUI_GetFontDistY>
 800b23a:	9f01      	ldr	r7, [sp, #4]
 800b23c:	4680      	mov	r8, r0
 800b23e:	b124      	cbz	r4, 800b24a <GUI__DispStringInRect+0x22>
 800b240:	6820      	ldr	r0, [r4, #0]
 800b242:	6861      	ldr	r1, [r4, #4]
 800b244:	ab04      	add	r3, sp, #16
 800b246:	c303      	stmia	r3!, {r0, r1}
 800b248:	e002      	b.n	800b250 <GUI__DispStringInRect+0x28>
 800b24a:	a804      	add	r0, sp, #16
 800b24c:	f000 fbfc 	bl	800ba48 <GUI_GetClientRect>
 800b250:	f019 0a0c 	ands.w	sl, r9, #12
 800b254:	d002      	beq.n	800b25c <GUI__DispStringInRect+0x34>
 800b256:	462c      	mov	r4, r5
 800b258:	2600      	movs	r6, #0
 800b25a:	e016      	b.n	800b28a <GUI__DispStringInRect+0x62>
 800b25c:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800b260:	e032      	b.n	800b2c8 <GUI__DispStringInRect+0xa0>
 800b262:	4621      	mov	r1, r4
 800b264:	9801      	ldr	r0, [sp, #4]
 800b266:	f000 ff65 	bl	800c134 <GUI__GetLineNumChars>
 800b26a:	f8dd b004 	ldr.w	fp, [sp, #4]
 800b26e:	4601      	mov	r1, r0
 800b270:	1a24      	subs	r4, r4, r0
 800b272:	4658      	mov	r0, fp
 800b274:	f7ff f92a 	bl	800a4cc <GUI_UC__NumChars2NumBytes>
 800b278:	eb0b 0300 	add.w	r3, fp, r0
 800b27c:	a806      	add	r0, sp, #24
 800b27e:	3601      	adds	r6, #1
 800b280:	f840 3d14 	str.w	r3, [r0, #-20]!
 800b284:	f7fe fc85 	bl	8009b92 <GUI__HandleEOLine>
 800b288:	b908      	cbnz	r0, 800b28e <GUI__DispStringInRect+0x66>
 800b28a:	2c00      	cmp	r4, #0
 800b28c:	d1e9      	bne.n	800b262 <GUI__DispStringInRect+0x3a>
 800b28e:	f1ba 0f08 	cmp.w	sl, #8
 800b292:	d005      	beq.n	800b2a0 <GUI__DispStringInRect+0x78>
 800b294:	f1ba 0f0c 	cmp.w	sl, #12
 800b298:	d008      	beq.n	800b2ac <GUI__DispStringInRect+0x84>
 800b29a:	f1ba 0f04 	cmp.w	sl, #4
 800b29e:	d112      	bne.n	800b2c6 <GUI__DispStringInRect+0x9e>
 800b2a0:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800b2a4:	fb08 4416 	mls	r4, r8, r6, r4
 800b2a8:	3401      	adds	r4, #1
 800b2aa:	e00d      	b.n	800b2c8 <GUI__DispStringInRect+0xa0>
 800b2ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b2b0:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800b2b4:	1ae4      	subs	r4, r4, r3
 800b2b6:	3401      	adds	r4, #1
 800b2b8:	fb08 4416 	mls	r4, r8, r6, r4
 800b2bc:	2202      	movs	r2, #2
 800b2be:	fb94 f4f2 	sdiv	r4, r4, r2
 800b2c2:	441c      	add	r4, r3
 800b2c4:	e000      	b.n	800b2c8 <GUI__DispStringInRect+0xa0>
 800b2c6:	2400      	movs	r4, #0
 800b2c8:	9701      	str	r7, [sp, #4]
 800b2ca:	2600      	movs	r6, #0
 800b2cc:	2d00      	cmp	r5, #0
 800b2ce:	d04b      	beq.n	800b368 <GUI__DispStringInRect+0x140>
 800b2d0:	4629      	mov	r1, r5
 800b2d2:	9801      	ldr	r0, [sp, #4]
 800b2d4:	f000 ff2e 	bl	800c134 <GUI__GetLineNumChars>
 800b2d8:	4607      	mov	r7, r0
 800b2da:	1a2d      	subs	r5, r5, r0
 800b2dc:	4639      	mov	r1, r7
 800b2de:	9801      	ldr	r0, [sp, #4]
 800b2e0:	f000 ff56 	bl	800c190 <GUI__GetLineDistX>
 800b2e4:	f009 0303 	and.w	r3, r9, #3
 800b2e8:	2b01      	cmp	r3, #1
 800b2ea:	d00f      	beq.n	800b30c <GUI__DispStringInRect+0xe4>
 800b2ec:	2b02      	cmp	r3, #2
 800b2ee:	d003      	beq.n	800b2f8 <GUI__DispStringInRect+0xd0>
 800b2f0:	b983      	cbnz	r3, 800b314 <GUI__DispStringInRect+0xec>
 800b2f2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800b2f6:	e00d      	b.n	800b314 <GUI__DispStringInRect+0xec>
 800b2f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b2fc:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800b300:	1ab6      	subs	r6, r6, r2
 800b302:	1a36      	subs	r6, r6, r0
 800b304:	fb96 f6f3 	sdiv	r6, r6, r3
 800b308:	4416      	add	r6, r2
 800b30a:	e003      	b.n	800b314 <GUI__DispStringInRect+0xec>
 800b30c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800b310:	1a36      	subs	r6, r6, r0
 800b312:	3601      	adds	r6, #1
 800b314:	4b16      	ldr	r3, [pc, #88]	; (800b370 <GUI__DispStringInRect+0x148>)
 800b316:	6819      	ldr	r1, [r3, #0]
 800b318:	3801      	subs	r0, #1
 800b31a:	b2a3      	uxth	r3, r4
 800b31c:	b2b2      	uxth	r2, r6
 800b31e:	848b      	strh	r3, [r1, #36]	; 0x24
 800b320:	4430      	add	r0, r6
 800b322:	f8ad 300a 	strh.w	r3, [sp, #10]
 800b326:	f108 33ff 	add.w	r3, r8, #4294967295
 800b32a:	4423      	add	r3, r4
 800b32c:	844a      	strh	r2, [r1, #34]	; 0x22
 800b32e:	f8ad 2008 	strh.w	r2, [sp, #8]
 800b332:	4639      	mov	r1, r7
 800b334:	aa02      	add	r2, sp, #8
 800b336:	f8ad 000c 	strh.w	r0, [sp, #12]
 800b33a:	9801      	ldr	r0, [sp, #4]
 800b33c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800b340:	f000 ff56 	bl	800c1f0 <GUI__DispLine>
 800b344:	f8dd a004 	ldr.w	sl, [sp, #4]
 800b348:	4639      	mov	r1, r7
 800b34a:	4650      	mov	r0, sl
 800b34c:	f7ff f8be 	bl	800a4cc <GUI_UC__NumChars2NumBytes>
 800b350:	af06      	add	r7, sp, #24
 800b352:	4450      	add	r0, sl
 800b354:	f847 0d14 	str.w	r0, [r7, #-20]!
 800b358:	f000 ffb6 	bl	800c2c8 <GUI_GetFontDistY>
 800b35c:	4404      	add	r4, r0
 800b35e:	4638      	mov	r0, r7
 800b360:	f7fe fc17 	bl	8009b92 <GUI__HandleEOLine>
 800b364:	2800      	cmp	r0, #0
 800b366:	d0b1      	beq.n	800b2cc <GUI__DispStringInRect+0xa4>
 800b368:	b007      	add	sp, #28
 800b36a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b36e:	bf00      	nop
 800b370:	200000c0 	.word	0x200000c0

0800b374 <GUI_DispStringInRectMax>:
 800b374:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b378:	460c      	mov	r4, r1
 800b37a:	4690      	mov	r8, r2
 800b37c:	461f      	mov	r7, r3
 800b37e:	4606      	mov	r6, r0
 800b380:	b1c0      	cbz	r0, 800b3b4 <GUI_DispStringInRectMax+0x40>
 800b382:	b169      	cbz	r1, 800b3a0 <GUI_DispStringInRectMax+0x2c>
 800b384:	4608      	mov	r0, r1
 800b386:	f7fa fb8f 	bl	8005aa8 <WM_SetUserClipRect>
 800b38a:	4605      	mov	r5, r0
 800b38c:	b148      	cbz	r0, 800b3a2 <GUI_DispStringInRectMax+0x2e>
 800b38e:	4668      	mov	r0, sp
 800b390:	4621      	mov	r1, r4
 800b392:	462a      	mov	r2, r5
 800b394:	f7fe fc2f 	bl	8009bf6 <GUI__IntersectRects>
 800b398:	4668      	mov	r0, sp
 800b39a:	f7fa fb85 	bl	8005aa8 <WM_SetUserClipRect>
 800b39e:	e000      	b.n	800b3a2 <GUI_DispStringInRectMax+0x2e>
 800b3a0:	460d      	mov	r5, r1
 800b3a2:	4630      	mov	r0, r6
 800b3a4:	4621      	mov	r1, r4
 800b3a6:	4642      	mov	r2, r8
 800b3a8:	463b      	mov	r3, r7
 800b3aa:	f7ff ff3d 	bl	800b228 <GUI__DispStringInRect>
 800b3ae:	4628      	mov	r0, r5
 800b3b0:	f7fa fb7a 	bl	8005aa8 <WM_SetUserClipRect>
 800b3b4:	b002      	add	sp, #8
 800b3b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b3ba <GUI_DispStringInRect>:
 800b3ba:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800b3be:	f7ff bfd9 	b.w	800b374 <GUI_DispStringInRectMax>

0800b3c2 <GUI_WrapGetNumLines>:
 800b3c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3c4:	4605      	mov	r5, r0
 800b3c6:	460e      	mov	r6, r1
 800b3c8:	4617      	mov	r7, r2
 800b3ca:	2400      	movs	r4, #0
 800b3cc:	4628      	mov	r0, r5
 800b3ce:	4631      	mov	r1, r6
 800b3d0:	463a      	mov	r2, r7
 800b3d2:	f004 fad3 	bl	800f97c <GUI__WrapGetNumBytesToNextLine>
 800b3d6:	b110      	cbz	r0, 800b3de <GUI_WrapGetNumLines+0x1c>
 800b3d8:	4405      	add	r5, r0
 800b3da:	3401      	adds	r4, #1
 800b3dc:	e7f6      	b.n	800b3cc <GUI_WrapGetNumLines+0xa>
 800b3de:	4620      	mov	r0, r4
 800b3e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b3e2 <GUI_DispStringInRectWrap>:
 800b3e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3e6:	b089      	sub	sp, #36	; 0x24
 800b3e8:	460c      	mov	r4, r1
 800b3ea:	9202      	str	r2, [sp, #8]
 800b3ec:	9303      	str	r3, [sp, #12]
 800b3ee:	4605      	mov	r5, r0
 800b3f0:	2800      	cmp	r0, #0
 800b3f2:	f000 8092 	beq.w	800b51a <GUI_DispStringInRectWrap+0x138>
 800b3f6:	f8b1 a000 	ldrh.w	sl, [r1]
 800b3fa:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800b3fe:	884e      	ldrh	r6, [r1, #2]
 800b400:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800b404:	fa0f f289 	sxth.w	r2, r9
 800b408:	fa0f f38a 	sxth.w	r3, sl
 800b40c:	1ad3      	subs	r3, r2, r3
 800b40e:	3301      	adds	r3, #1
 800b410:	9301      	str	r3, [sp, #4]
 800b412:	f000 ff59 	bl	800c2c8 <GUI_GetFontDistY>
 800b416:	9902      	ldr	r1, [sp, #8]
 800b418:	f011 070c 	ands.w	r7, r1, #12
 800b41c:	4680      	mov	r8, r0
 800b41e:	d01b      	beq.n	800b458 <GUI_DispStringInRectWrap+0x76>
 800b420:	4628      	mov	r0, r5
 800b422:	9901      	ldr	r1, [sp, #4]
 800b424:	9a03      	ldr	r2, [sp, #12]
 800b426:	f7ff ffcc 	bl	800b3c2 <GUI_WrapGetNumLines>
 800b42a:	2f08      	cmp	r7, #8
 800b42c:	d003      	beq.n	800b436 <GUI_DispStringInRectWrap+0x54>
 800b42e:	2f0c      	cmp	r7, #12
 800b430:	d006      	beq.n	800b440 <GUI_DispStringInRectWrap+0x5e>
 800b432:	2f04      	cmp	r7, #4
 800b434:	d110      	bne.n	800b458 <GUI_DispStringInRectWrap+0x76>
 800b436:	f10b 0601 	add.w	r6, fp, #1
 800b43a:	fb00 6618 	mls	r6, r0, r8, r6
 800b43e:	e00a      	b.n	800b456 <GUI_DispStringInRectWrap+0x74>
 800b440:	b232      	sxth	r2, r6
 800b442:	fa0f f38b 	sxth.w	r3, fp
 800b446:	1a9b      	subs	r3, r3, r2
 800b448:	3301      	adds	r3, #1
 800b44a:	fb08 3010 	mls	r0, r8, r0, r3
 800b44e:	2302      	movs	r3, #2
 800b450:	fb90 f0f3 	sdiv	r0, r0, r3
 800b454:	4406      	add	r6, r0
 800b456:	b2b6      	uxth	r6, r6
 800b458:	4620      	mov	r0, r4
 800b45a:	f7fa fb25 	bl	8005aa8 <WM_SetUserClipRect>
 800b45e:	4607      	mov	r7, r0
 800b460:	b178      	cbz	r0, 800b482 <GUI_DispStringInRectWrap+0xa0>
 800b462:	a804      	add	r0, sp, #16
 800b464:	4621      	mov	r1, r4
 800b466:	463a      	mov	r2, r7
 800b468:	f8ad a010 	strh.w	sl, [sp, #16]
 800b46c:	f8ad 6012 	strh.w	r6, [sp, #18]
 800b470:	f8ad 9014 	strh.w	r9, [sp, #20]
 800b474:	f8ad b016 	strh.w	fp, [sp, #22]
 800b478:	f7fe fbbd 	bl	8009bf6 <GUI__IntersectRects>
 800b47c:	a804      	add	r0, sp, #16
 800b47e:	f7fa fb13 	bl	8005aa8 <WM_SetUserClipRect>
 800b482:	9901      	ldr	r1, [sp, #4]
 800b484:	9a03      	ldr	r2, [sp, #12]
 800b486:	4628      	mov	r0, r5
 800b488:	f004 fa46 	bl	800f918 <GUI__WrapGetNumCharsDisp>
 800b48c:	eb06 0b08 	add.w	fp, r6, r8
 800b490:	4602      	mov	r2, r0
 800b492:	fa1f fb8b 	uxth.w	fp, fp
 800b496:	f10b 33ff 	add.w	r3, fp, #4294967295
 800b49a:	4611      	mov	r1, r2
 800b49c:	4628      	mov	r0, r5
 800b49e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b4a2:	9200      	str	r2, [sp, #0]
 800b4a4:	f8ad a018 	strh.w	sl, [sp, #24]
 800b4a8:	f8ad 601a 	strh.w	r6, [sp, #26]
 800b4ac:	f8ad 901c 	strh.w	r9, [sp, #28]
 800b4b0:	f000 fe6e 	bl	800c190 <GUI__GetLineDistX>
 800b4b4:	9902      	ldr	r1, [sp, #8]
 800b4b6:	9a00      	ldr	r2, [sp, #0]
 800b4b8:	f001 0303 	and.w	r3, r1, #3
 800b4bc:	2b01      	cmp	r3, #1
 800b4be:	d014      	beq.n	800b4ea <GUI_DispStringInRectWrap+0x108>
 800b4c0:	2b02      	cmp	r3, #2
 800b4c2:	d004      	beq.n	800b4ce <GUI_DispStringInRectWrap+0xec>
 800b4c4:	b9b3      	cbnz	r3, 800b4f4 <GUI_DispStringInRectWrap+0x112>
 800b4c6:	8823      	ldrh	r3, [r4, #0]
 800b4c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b4cc:	e012      	b.n	800b4f4 <GUI_DispStringInRectWrap+0x112>
 800b4ce:	8821      	ldrh	r1, [r4, #0]
 800b4d0:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800b4d4:	b20e      	sxth	r6, r1
 800b4d6:	ebc6 060e 	rsb	r6, r6, lr
 800b4da:	1a30      	subs	r0, r6, r0
 800b4dc:	3001      	adds	r0, #1
 800b4de:	fb90 f3f3 	sdiv	r3, r0, r3
 800b4e2:	4419      	add	r1, r3
 800b4e4:	f8ad 1018 	strh.w	r1, [sp, #24]
 800b4e8:	e004      	b.n	800b4f4 <GUI_DispStringInRectWrap+0x112>
 800b4ea:	88a3      	ldrh	r3, [r4, #4]
 800b4ec:	3301      	adds	r3, #1
 800b4ee:	1a18      	subs	r0, r3, r0
 800b4f0:	f8ad 0018 	strh.w	r0, [sp, #24]
 800b4f4:	4628      	mov	r0, r5
 800b4f6:	4611      	mov	r1, r2
 800b4f8:	aa06      	add	r2, sp, #24
 800b4fa:	f000 fe79 	bl	800c1f0 <GUI__DispLine>
 800b4fe:	4628      	mov	r0, r5
 800b500:	9901      	ldr	r1, [sp, #4]
 800b502:	9a03      	ldr	r2, [sp, #12]
 800b504:	f004 fa3a 	bl	800f97c <GUI__WrapGetNumBytesToNextLine>
 800b508:	4405      	add	r5, r0
 800b50a:	fa1f f68b 	uxth.w	r6, fp
 800b50e:	782b      	ldrb	r3, [r5, #0]
 800b510:	2b00      	cmp	r3, #0
 800b512:	d1b6      	bne.n	800b482 <GUI_DispStringInRectWrap+0xa0>
 800b514:	4638      	mov	r0, r7
 800b516:	f7fa fac7 	bl	8005aa8 <WM_SetUserClipRect>
 800b51a:	b009      	add	sp, #36	; 0x24
 800b51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b520 <GUI_GetStringDistX>:
 800b520:	b510      	push	{r4, lr}
 800b522:	4604      	mov	r4, r0
 800b524:	f7fe ffe4 	bl	800a4f0 <GUI__GetNumChars>
 800b528:	4601      	mov	r1, r0
 800b52a:	4620      	mov	r0, r4
 800b52c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b530:	f000 be2e 	b.w	800c190 <GUI__GetLineDistX>

0800b534 <GUI_DEVICE__GetpDriver>:
 800b534:	2801      	cmp	r0, #1
 800b536:	dc09      	bgt.n	800b54c <GUI_DEVICE__GetpDriver+0x18>
 800b538:	4b05      	ldr	r3, [pc, #20]	; (800b550 <GUI_DEVICE__GetpDriver+0x1c>)
 800b53a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800b53e:	b120      	cbz	r0, 800b54a <GUI_DEVICE__GetpDriver+0x16>
 800b540:	68c3      	ldr	r3, [r0, #12]
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	b11b      	cbz	r3, 800b54e <GUI_DEVICE__GetpDriver+0x1a>
 800b546:	6800      	ldr	r0, [r0, #0]
 800b548:	e7f9      	b.n	800b53e <GUI_DEVICE__GetpDriver+0xa>
 800b54a:	4770      	bx	lr
 800b54c:	2000      	movs	r0, #0
 800b54e:	4770      	bx	lr
 800b550:	20002d34 	.word	0x20002d34

0800b554 <GUI_DEVICE_Delete>:
 800b554:	f000 bfa4 	b.w	800c4a0 <GUI_ALLOC_FreeFixedBlock>

0800b558 <GUI_DEVICE_Create>:
 800b558:	2b01      	cmp	r3, #1
 800b55a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b55c:	4606      	mov	r6, r0
 800b55e:	460d      	mov	r5, r1
 800b560:	4617      	mov	r7, r2
 800b562:	461c      	mov	r4, r3
 800b564:	dd01      	ble.n	800b56a <GUI_DEVICE_Create+0x12>
 800b566:	2000      	movs	r0, #0
 800b568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b56a:	201c      	movs	r0, #28
 800b56c:	f001 f87c 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 800b570:	2800      	cmp	r0, #0
 800b572:	d0f8      	beq.n	800b566 <GUI_DEVICE_Create+0xe>
 800b574:	b10d      	cbz	r5, 800b57a <GUI_DEVICE_Create+0x22>
 800b576:	6105      	str	r5, [r0, #16]
 800b578:	e009      	b.n	800b58e <GUI_DEVICE_Create+0x36>
 800b57a:	4b09      	ldr	r3, [pc, #36]	; (800b5a0 <GUI_DEVICE_Create+0x48>)
 800b57c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800b580:	b129      	cbz	r1, 800b58e <GUI_DEVICE_Create+0x36>
 800b582:	680b      	ldr	r3, [r1, #0]
 800b584:	b10b      	cbz	r3, 800b58a <GUI_DEVICE_Create+0x32>
 800b586:	4619      	mov	r1, r3
 800b588:	e7fb      	b.n	800b582 <GUI_DEVICE_Create+0x2a>
 800b58a:	690b      	ldr	r3, [r1, #16]
 800b58c:	6103      	str	r3, [r0, #16]
 800b58e:	2300      	movs	r3, #0
 800b590:	6083      	str	r3, [r0, #8]
 800b592:	6184      	str	r4, [r0, #24]
 800b594:	8287      	strh	r7, [r0, #20]
 800b596:	60c6      	str	r6, [r0, #12]
 800b598:	6003      	str	r3, [r0, #0]
 800b59a:	6043      	str	r3, [r0, #4]
 800b59c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b59e:	bf00      	nop
 800b5a0:	20002d34 	.word	0x20002d34

0800b5a4 <GUI_DEVICE_Unlink>:
 800b5a4:	6981      	ldr	r1, [r0, #24]
 800b5a6:	4a0b      	ldr	r2, [pc, #44]	; (800b5d4 <GUI_DEVICE_Unlink+0x30>)
 800b5a8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800b5ac:	4283      	cmp	r3, r0
 800b5ae:	d105      	bne.n	800b5bc <GUI_DEVICE_Unlink+0x18>
 800b5b0:	6803      	ldr	r3, [r0, #0]
 800b5b2:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800b5b6:	b10b      	cbz	r3, 800b5bc <GUI_DEVICE_Unlink+0x18>
 800b5b8:	2200      	movs	r2, #0
 800b5ba:	605a      	str	r2, [r3, #4]
 800b5bc:	6843      	ldr	r3, [r0, #4]
 800b5be:	b10b      	cbz	r3, 800b5c4 <GUI_DEVICE_Unlink+0x20>
 800b5c0:	6802      	ldr	r2, [r0, #0]
 800b5c2:	601a      	str	r2, [r3, #0]
 800b5c4:	6802      	ldr	r2, [r0, #0]
 800b5c6:	b102      	cbz	r2, 800b5ca <GUI_DEVICE_Unlink+0x26>
 800b5c8:	6053      	str	r3, [r2, #4]
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	6003      	str	r3, [r0, #0]
 800b5ce:	6043      	str	r3, [r0, #4]
 800b5d0:	4770      	bx	lr
 800b5d2:	bf00      	nop
 800b5d4:	20002d34 	.word	0x20002d34

0800b5d8 <GUI_DEVICE_Link>:
 800b5d8:	b570      	push	{r4, r5, r6, lr}
 800b5da:	b908      	cbnz	r0, 800b5e0 <GUI_DEVICE_Link+0x8>
 800b5dc:	2001      	movs	r0, #1
 800b5de:	bd70      	pop	{r4, r5, r6, pc}
 800b5e0:	6982      	ldr	r2, [r0, #24]
 800b5e2:	2a01      	cmp	r2, #1
 800b5e4:	dcfa      	bgt.n	800b5dc <GUI_DEVICE_Link+0x4>
 800b5e6:	4b1b      	ldr	r3, [pc, #108]	; (800b654 <GUI_DEVICE_Link+0x7c>)
 800b5e8:	7819      	ldrb	r1, [r3, #0]
 800b5ea:	428a      	cmp	r2, r1
 800b5ec:	bfa4      	itt	ge
 800b5ee:	1c51      	addge	r1, r2, #1
 800b5f0:	7019      	strbge	r1, [r3, #0]
 800b5f2:	4919      	ldr	r1, [pc, #100]	; (800b658 <GUI_DEVICE_Link+0x80>)
 800b5f4:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800b5f8:	460d      	mov	r5, r1
 800b5fa:	b913      	cbnz	r3, 800b602 <GUI_DEVICE_Link+0x2a>
 800b5fc:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800b600:	e01a      	b.n	800b638 <GUI_DEVICE_Link+0x60>
 800b602:	6859      	ldr	r1, [r3, #4]
 800b604:	b109      	cbz	r1, 800b60a <GUI_DEVICE_Link+0x32>
 800b606:	460b      	mov	r3, r1
 800b608:	e7fb      	b.n	800b602 <GUI_DEVICE_Link+0x2a>
 800b60a:	68c1      	ldr	r1, [r0, #12]
 800b60c:	680e      	ldr	r6, [r1, #0]
 800b60e:	68d9      	ldr	r1, [r3, #12]
 800b610:	680c      	ldr	r4, [r1, #0]
 800b612:	42b4      	cmp	r4, r6
 800b614:	dd03      	ble.n	800b61e <GUI_DEVICE_Link+0x46>
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	2b00      	cmp	r3, #0
 800b61a:	d1f8      	bne.n	800b60e <GUI_DEVICE_Link+0x36>
 800b61c:	e7de      	b.n	800b5dc <GUI_DEVICE_Link+0x4>
 800b61e:	d102      	bne.n	800b626 <GUI_DEVICE_Link+0x4e>
 800b620:	8a81      	ldrh	r1, [r0, #20]
 800b622:	2901      	cmp	r1, #1
 800b624:	d00f      	beq.n	800b646 <GUI_DEVICE_Link+0x6e>
 800b626:	6859      	ldr	r1, [r3, #4]
 800b628:	b189      	cbz	r1, 800b64e <GUI_DEVICE_Link+0x76>
 800b62a:	6008      	str	r0, [r1, #0]
 800b62c:	6041      	str	r1, [r0, #4]
 800b62e:	6058      	str	r0, [r3, #4]
 800b630:	4298      	cmp	r0, r3
 800b632:	bf08      	it	eq
 800b634:	2300      	moveq	r3, #0
 800b636:	6003      	str	r3, [r0, #0]
 800b638:	2000      	movs	r0, #0
 800b63a:	bd70      	pop	{r4, r5, r6, pc}
 800b63c:	68cb      	ldr	r3, [r1, #12]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	42a3      	cmp	r3, r4
 800b642:	460b      	mov	r3, r1
 800b644:	dbef      	blt.n	800b626 <GUI_DEVICE_Link+0x4e>
 800b646:	6819      	ldr	r1, [r3, #0]
 800b648:	2900      	cmp	r1, #0
 800b64a:	d1f7      	bne.n	800b63c <GUI_DEVICE_Link+0x64>
 800b64c:	e7eb      	b.n	800b626 <GUI_DEVICE_Link+0x4e>
 800b64e:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800b652:	e7ec      	b.n	800b62e <GUI_DEVICE_Link+0x56>
 800b654:	20002ce2 	.word	0x20002ce2
 800b658:	20002d34 	.word	0x20002d34

0800b65c <GUI_DEVICE_CreateAndLink>:
 800b65c:	b538      	push	{r3, r4, r5, lr}
 800b65e:	461d      	mov	r5, r3
 800b660:	f7ff ff7a 	bl	800b558 <GUI_DEVICE_Create>
 800b664:	4604      	mov	r4, r0
 800b666:	b148      	cbz	r0, 800b67c <GUI_DEVICE_CreateAndLink+0x20>
 800b668:	f7ff ffb6 	bl	800b5d8 <GUI_DEVICE_Link>
 800b66c:	68e3      	ldr	r3, [r4, #12]
 800b66e:	681b      	ldr	r3, [r3, #0]
 800b670:	b923      	cbnz	r3, 800b67c <GUI_DEVICE_CreateAndLink+0x20>
 800b672:	4b03      	ldr	r3, [pc, #12]	; (800b680 <GUI_DEVICE_CreateAndLink+0x24>)
 800b674:	3516      	adds	r5, #22
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800b67c:	4620      	mov	r0, r4
 800b67e:	bd38      	pop	{r3, r4, r5, pc}
 800b680:	200000c0 	.word	0x200000c0

0800b684 <_OnExit>:
 800b684:	b570      	push	{r4, r5, r6, lr}
 800b686:	4b0b      	ldr	r3, [pc, #44]	; (800b6b4 <_OnExit+0x30>)
 800b688:	4e0b      	ldr	r6, [pc, #44]	; (800b6b8 <_OnExit+0x34>)
 800b68a:	4d0c      	ldr	r5, [pc, #48]	; (800b6bc <_OnExit+0x38>)
 800b68c:	2400      	movs	r4, #0
 800b68e:	601c      	str	r4, [r3, #0]
 800b690:	4621      	mov	r1, r4
 800b692:	6833      	ldr	r3, [r6, #0]
 800b694:	2270      	movs	r2, #112	; 0x70
 800b696:	4628      	mov	r0, r5
 800b698:	4798      	blx	r3
 800b69a:	6833      	ldr	r3, [r6, #0]
 800b69c:	4808      	ldr	r0, [pc, #32]	; (800b6c0 <_OnExit+0x3c>)
 800b69e:	4621      	mov	r1, r4
 800b6a0:	2208      	movs	r2, #8
 800b6a2:	4798      	blx	r3
 800b6a4:	4b07      	ldr	r3, [pc, #28]	; (800b6c4 <_OnExit+0x40>)
 800b6a6:	601d      	str	r5, [r3, #0]
 800b6a8:	4b07      	ldr	r3, [pc, #28]	; (800b6c8 <_OnExit+0x44>)
 800b6aa:	701c      	strb	r4, [r3, #0]
 800b6ac:	4b07      	ldr	r3, [pc, #28]	; (800b6cc <_OnExit+0x48>)
 800b6ae:	601c      	str	r4, [r3, #0]
 800b6b0:	bd70      	pop	{r4, r5, r6, pc}
 800b6b2:	bf00      	nop
 800b6b4:	20002c34 	.word	0x20002c34
 800b6b8:	200000ac 	.word	0x200000ac
 800b6bc:	20002bc4 	.word	0x20002bc4
 800b6c0:	20002d34 	.word	0x20002d34
 800b6c4:	200000c0 	.word	0x200000c0
 800b6c8:	20002d1c 	.word	0x20002d1c
 800b6cc:	20002cf4 	.word	0x20002cf4

0800b6d0 <_InitContext>:
 800b6d0:	b538      	push	{r3, r4, r5, lr}
 800b6d2:	4d19      	ldr	r5, [pc, #100]	; (800b738 <_InitContext+0x68>)
 800b6d4:	682b      	ldr	r3, [r5, #0]
 800b6d6:	1d1a      	adds	r2, r3, #4
 800b6d8:	63da      	str	r2, [r3, #60]	; 0x3c
 800b6da:	f103 0208 	add.w	r2, r3, #8
 800b6de:	639b      	str	r3, [r3, #56]	; 0x38
 800b6e0:	641b      	str	r3, [r3, #64]	; 0x40
 800b6e2:	6142      	str	r2, [r0, #20]
 800b6e4:	7c5a      	ldrb	r2, [r3, #17]
 800b6e6:	4b15      	ldr	r3, [pc, #84]	; (800b73c <_InitContext+0x6c>)
 800b6e8:	4604      	mov	r4, r0
 800b6ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b6ee:	68c3      	ldr	r3, [r0, #12]
 800b6f0:	f104 0108 	add.w	r1, r4, #8
 800b6f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b6f6:	4798      	blx	r3
 800b6f8:	4b11      	ldr	r3, [pc, #68]	; (800b740 <_InitContext+0x70>)
 800b6fa:	6663      	str	r3, [r4, #100]	; 0x64
 800b6fc:	4b11      	ldr	r3, [pc, #68]	; (800b744 <_InitContext+0x74>)
 800b6fe:	681b      	ldr	r3, [r3, #0]
 800b700:	61e3      	str	r3, [r4, #28]
 800b702:	682b      	ldr	r3, [r5, #0]
 800b704:	3308      	adds	r3, #8
 800b706:	6163      	str	r3, [r4, #20]
 800b708:	2301      	movs	r3, #1
 800b70a:	7623      	strb	r3, [r4, #24]
 800b70c:	f7f9 fee2 	bl	80054d4 <WM_GetDesktopWindow>
 800b710:	2303      	movs	r3, #3
 800b712:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800b716:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800b71a:	6323      	str	r3, [r4, #48]	; 0x30
 800b71c:	6363      	str	r3, [r4, #52]	; 0x34
 800b71e:	4b0a      	ldr	r3, [pc, #40]	; (800b748 <_InitContext+0x78>)
 800b720:	64a0      	str	r0, [r4, #72]	; 0x48
 800b722:	6818      	ldr	r0, [r3, #0]
 800b724:	f7fe fa18 	bl	8009b58 <LCD_SetBkColor>
 800b728:	4b08      	ldr	r3, [pc, #32]	; (800b74c <_InitContext+0x7c>)
 800b72a:	6818      	ldr	r0, [r3, #0]
 800b72c:	f7fe fa1c 	bl	8009b68 <LCD_SetColor>
 800b730:	4b07      	ldr	r3, [pc, #28]	; (800b750 <_InitContext+0x80>)
 800b732:	4a08      	ldr	r2, [pc, #32]	; (800b754 <_InitContext+0x84>)
 800b734:	601a      	str	r2, [r3, #0]
 800b736:	bd38      	pop	{r3, r4, r5, pc}
 800b738:	200000c0 	.word	0x200000c0
 800b73c:	20002d34 	.word	0x20002d34
 800b740:	08013d54 	.word	0x08013d54
 800b744:	200000c4 	.word	0x200000c4
 800b748:	20002bc0 	.word	0x20002bc0
 800b74c:	200000c8 	.word	0x200000c8
 800b750:	20002d2c 	.word	0x20002d2c
 800b754:	080148c0 	.word	0x080148c0

0800b758 <GUI_SetDefaultFont>:
 800b758:	4b01      	ldr	r3, [pc, #4]	; (800b760 <GUI_SetDefaultFont+0x8>)
 800b75a:	6018      	str	r0, [r3, #0]
 800b75c:	4770      	bx	lr
 800b75e:	bf00      	nop
 800b760:	200000c4 	.word	0x200000c4

0800b764 <GUI_ClearRect>:
 800b764:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b768:	4607      	mov	r7, r0
 800b76a:	2004      	movs	r0, #4
 800b76c:	469a      	mov	sl, r3
 800b76e:	460e      	mov	r6, r1
 800b770:	4691      	mov	r9, r2
 800b772:	f7fd fe9f 	bl	80094b4 <LCD_SetDrawMode>
 800b776:	4b13      	ldr	r3, [pc, #76]	; (800b7c4 <GUI_ClearRect+0x60>)
 800b778:	681c      	ldr	r4, [r3, #0]
 800b77a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800b77c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800b77e:	442f      	add	r7, r5
 800b780:	4426      	add	r6, r4
 800b782:	4680      	mov	r8, r0
 800b784:	444d      	add	r5, r9
 800b786:	4454      	add	r4, sl
 800b788:	4668      	mov	r0, sp
 800b78a:	f8ad 7000 	strh.w	r7, [sp]
 800b78e:	f8ad 5004 	strh.w	r5, [sp, #4]
 800b792:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b796:	f8ad 4006 	strh.w	r4, [sp, #6]
 800b79a:	f7fb f9b1 	bl	8006b00 <WM__InitIVRSearch>
 800b79e:	b928      	cbnz	r0, 800b7ac <GUI_ClearRect+0x48>
 800b7a0:	4640      	mov	r0, r8
 800b7a2:	f7fd fe87 	bl	80094b4 <LCD_SetDrawMode>
 800b7a6:	b002      	add	sp, #8
 800b7a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b7ac:	4638      	mov	r0, r7
 800b7ae:	4631      	mov	r1, r6
 800b7b0:	462a      	mov	r2, r5
 800b7b2:	4623      	mov	r3, r4
 800b7b4:	f7fd ff00 	bl	80095b8 <LCD_FillRect>
 800b7b8:	f7fb f8e0 	bl	800697c <WM__GetNextIVR>
 800b7bc:	2800      	cmp	r0, #0
 800b7be:	d1f5      	bne.n	800b7ac <GUI_ClearRect+0x48>
 800b7c0:	e7ee      	b.n	800b7a0 <GUI_ClearRect+0x3c>
 800b7c2:	bf00      	nop
 800b7c4:	200000c0 	.word	0x200000c0

0800b7c8 <GUI_Clear>:
 800b7c8:	b510      	push	{r4, lr}
 800b7ca:	2000      	movs	r0, #0
 800b7cc:	4601      	mov	r1, r0
 800b7ce:	f000 f9cd 	bl	800bb6c <GUI_GotoXY>
 800b7d2:	4804      	ldr	r0, [pc, #16]	; (800b7e4 <GUI_Clear+0x1c>)
 800b7d4:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800b7d8:	4601      	mov	r1, r0
 800b7da:	4613      	mov	r3, r2
 800b7dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b7e0:	f7ff bfc0 	b.w	800b764 <GUI_ClearRect>
 800b7e4:	ffffc001 	.word	0xffffc001

0800b7e8 <GUI__RegisterExit>:
 800b7e8:	b480      	push	{r7}
 800b7ea:	b083      	sub	sp, #12
 800b7ec:	af00      	add	r7, sp, #0
 800b7ee:	6078      	str	r0, [r7, #4]
 800b7f0:	4b05      	ldr	r3, [pc, #20]	; (800b808 <GUI__RegisterExit+0x20>)
 800b7f2:	681a      	ldr	r2, [r3, #0]
 800b7f4:	687b      	ldr	r3, [r7, #4]
 800b7f6:	605a      	str	r2, [r3, #4]
 800b7f8:	4b03      	ldr	r3, [pc, #12]	; (800b808 <GUI__RegisterExit+0x20>)
 800b7fa:	687a      	ldr	r2, [r7, #4]
 800b7fc:	601a      	str	r2, [r3, #0]
 800b7fe:	370c      	adds	r7, #12
 800b800:	46bd      	mov	sp, r7
 800b802:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b806:	4770      	bx	lr
 800b808:	20002bb4 	.word	0x20002bb4

0800b80c <GUI__Config>:
 800b80c:	b508      	push	{r3, lr}
 800b80e:	4b08      	ldr	r3, [pc, #32]	; (800b830 <GUI__Config+0x24>)
 800b810:	681a      	ldr	r2, [r3, #0]
 800b812:	b962      	cbnz	r2, 800b82e <GUI__Config+0x22>
 800b814:	2201      	movs	r2, #1
 800b816:	601a      	str	r2, [r3, #0]
 800b818:	f7f5 f8f4 	bl	8000a04 <GUI_X_Config>
 800b81c:	f7f5 fad6 	bl	8000dcc <LCD_X_Config>
 800b820:	4804      	ldr	r0, [pc, #16]	; (800b834 <GUI__Config+0x28>)
 800b822:	4b05      	ldr	r3, [pc, #20]	; (800b838 <GUI__Config+0x2c>)
 800b824:	6003      	str	r3, [r0, #0]
 800b826:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b82a:	f7ff bfdd 	b.w	800b7e8 <GUI__RegisterExit>
 800b82e:	bd08      	pop	{r3, pc}
 800b830:	20002c34 	.word	0x20002c34
 800b834:	20002bb8 	.word	0x20002bb8
 800b838:	0800b685 	.word	0x0800b685

0800b83c <GUI_Init>:
 800b83c:	b590      	push	{r4, r7, lr}
 800b83e:	b083      	sub	sp, #12
 800b840:	af00      	add	r7, sp, #0
 800b842:	4b26      	ldr	r3, [pc, #152]	; (800b8dc <GUI_Init+0xa0>)
 800b844:	4a25      	ldr	r2, [pc, #148]	; (800b8dc <GUI_Init+0xa0>)
 800b846:	6812      	ldr	r2, [r2, #0]
 800b848:	f022 0201 	bic.w	r2, r2, #1
 800b84c:	601a      	str	r2, [r3, #0]
 800b84e:	4b24      	ldr	r3, [pc, #144]	; (800b8e0 <GUI_Init+0xa4>)
 800b850:	2201      	movs	r2, #1
 800b852:	601a      	str	r2, [r3, #0]
 800b854:	bf00      	nop
 800b856:	4b22      	ldr	r3, [pc, #136]	; (800b8e0 <GUI_Init+0xa4>)
 800b858:	681b      	ldr	r3, [r3, #0]
 800b85a:	2b00      	cmp	r3, #0
 800b85c:	d1fb      	bne.n	800b856 <GUI_Init+0x1a>
 800b85e:	4b21      	ldr	r3, [pc, #132]	; (800b8e4 <GUI_Init+0xa8>)
 800b860:	4a21      	ldr	r2, [pc, #132]	; (800b8e8 <GUI_Init+0xac>)
 800b862:	601a      	str	r2, [r3, #0]
 800b864:	4b1f      	ldr	r3, [pc, #124]	; (800b8e4 <GUI_Init+0xa8>)
 800b866:	681a      	ldr	r2, [r3, #0]
 800b868:	4b20      	ldr	r3, [pc, #128]	; (800b8ec <GUI_Init+0xb0>)
 800b86a:	429a      	cmp	r2, r3
 800b86c:	d000      	beq.n	800b870 <GUI_Init+0x34>
 800b86e:	e7fe      	b.n	800b86e <GUI_Init+0x32>
 800b870:	f7ff ffcc 	bl	800b80c <GUI__Config>
 800b874:	4b1e      	ldr	r3, [pc, #120]	; (800b8f0 <GUI_Init+0xb4>)
 800b876:	222e      	movs	r2, #46	; 0x2e
 800b878:	701a      	strb	r2, [r3, #0]
 800b87a:	f7f5 f8df 	bl	8000a3c <GUI_X_Init>
 800b87e:	481d      	ldr	r0, [pc, #116]	; (800b8f4 <GUI_Init+0xb8>)
 800b880:	f7ff ff26 	bl	800b6d0 <_InitContext>
 800b884:	f7fe f8bc 	bl	8009a00 <emWin_LCD_Init>
 800b888:	6078      	str	r0, [r7, #4]
 800b88a:	f7fd fd9d 	bl	80093c8 <LCD_GetXSizeDisplay>
 800b88e:	4603      	mov	r3, r0
 800b890:	2b00      	cmp	r3, #0
 800b892:	d004      	beq.n	800b89e <GUI_Init+0x62>
 800b894:	f7fd fd9e 	bl	80093d4 <LCD_GetYSizeDisplay>
 800b898:	4603      	mov	r3, r0
 800b89a:	2b00      	cmp	r3, #0
 800b89c:	d109      	bne.n	800b8b2 <GUI_Init+0x76>
 800b89e:	f7fd fd7f 	bl	80093a0 <LCD_GetXSizeMax>
 800b8a2:	4604      	mov	r4, r0
 800b8a4:	f7fd fd7f 	bl	80093a6 <LCD_GetYSizeMax>
 800b8a8:	4603      	mov	r3, r0
 800b8aa:	4620      	mov	r0, r4
 800b8ac:	4619      	mov	r1, r3
 800b8ae:	f7fd fd81 	bl	80093b4 <LCD_SetDisplaySize>
 800b8b2:	2000      	movs	r0, #0
 800b8b4:	2100      	movs	r1, #0
 800b8b6:	f000 f9bd 	bl	800bc34 <GUI_SetOrg>
 800b8ba:	f7fb fb3b 	bl	8006f34 <WM_Init>
 800b8be:	4b0e      	ldr	r3, [pc, #56]	; (800b8f8 <GUI_Init+0xbc>)
 800b8c0:	681b      	ldr	r3, [r3, #0]
 800b8c2:	2b00      	cmp	r3, #0
 800b8c4:	d002      	beq.n	800b8cc <GUI_Init+0x90>
 800b8c6:	4b0c      	ldr	r3, [pc, #48]	; (800b8f8 <GUI_Init+0xbc>)
 800b8c8:	681b      	ldr	r3, [r3, #0]
 800b8ca:	4798      	blx	r3
 800b8cc:	4b0b      	ldr	r3, [pc, #44]	; (800b8fc <GUI_Init+0xc0>)
 800b8ce:	2201      	movs	r2, #1
 800b8d0:	701a      	strb	r2, [r3, #0]
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	4618      	mov	r0, r3
 800b8d6:	370c      	adds	r7, #12
 800b8d8:	46bd      	mov	sp, r7
 800b8da:	bd90      	pop	{r4, r7, pc}
 800b8dc:	e0002000 	.word	0xe0002000
 800b8e0:	40023008 	.word	0x40023008
 800b8e4:	40023000 	.word	0x40023000
 800b8e8:	f407a5c2 	.word	0xf407a5c2
 800b8ec:	b5e8b5cd 	.word	0xb5e8b5cd
 800b8f0:	20002ce8 	.word	0x20002ce8
 800b8f4:	20002bc4 	.word	0x20002bc4
 800b8f8:	20002d0c 	.word	0x20002d0c
 800b8fc:	20002d14 	.word	0x20002d14

0800b900 <GUI__GetFontSizeY>:
 800b900:	4b03      	ldr	r3, [pc, #12]	; (800b910 <GUI__GetFontSizeY+0x10>)
 800b902:	681b      	ldr	r3, [r3, #0]
 800b904:	69db      	ldr	r3, [r3, #28]
 800b906:	7e18      	ldrb	r0, [r3, #24]
 800b908:	7edb      	ldrb	r3, [r3, #27]
 800b90a:	4358      	muls	r0, r3
 800b90c:	4770      	bx	lr
 800b90e:	bf00      	nop
 800b910:	200000c0 	.word	0x200000c0

0800b914 <GUI_Long2Len>:
 800b914:	b510      	push	{r4, lr}
 800b916:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800b91a:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800b91e:	2200      	movs	r2, #0
 800b920:	1c53      	adds	r3, r2, #1
 800b922:	2b0a      	cmp	r3, #10
 800b924:	d006      	beq.n	800b934 <GUI_Long2Len+0x20>
 800b926:	4c06      	ldr	r4, [pc, #24]	; (800b940 <GUI_Long2Len+0x2c>)
 800b928:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800b92c:	42a1      	cmp	r1, r4
 800b92e:	d301      	bcc.n	800b934 <GUI_Long2Len+0x20>
 800b930:	461a      	mov	r2, r3
 800b932:	e7f5      	b.n	800b920 <GUI_Long2Len+0xc>
 800b934:	2800      	cmp	r0, #0
 800b936:	bfb8      	it	lt
 800b938:	1c93      	addlt	r3, r2, #2
 800b93a:	4618      	mov	r0, r3
 800b93c:	bd10      	pop	{r4, pc}
 800b93e:	bf00      	nop
 800b940:	08013d5c 	.word	0x08013d5c

0800b944 <GUI_AddSign>:
 800b944:	2800      	cmp	r0, #0
 800b946:	dd07      	ble.n	800b958 <GUI_AddSign+0x14>
 800b948:	680b      	ldr	r3, [r1, #0]
 800b94a:	1c5a      	adds	r2, r3, #1
 800b94c:	600a      	str	r2, [r1, #0]
 800b94e:	222b      	movs	r2, #43	; 0x2b
 800b950:	701a      	strb	r2, [r3, #0]
 800b952:	680b      	ldr	r3, [r1, #0]
 800b954:	2200      	movs	r2, #0
 800b956:	701a      	strb	r2, [r3, #0]
 800b958:	4770      	bx	lr
	...

0800b95c <GUI_AddDecShift>:
 800b95c:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800b960:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b962:	681c      	ldr	r4, [r3, #0]
 800b964:	d109      	bne.n	800b97a <GUI_AddDecShift+0x1e>
 800b966:	1c60      	adds	r0, r4, #1
 800b968:	6018      	str	r0, [r3, #0]
 800b96a:	3901      	subs	r1, #1
 800b96c:	202d      	movs	r0, #45	; 0x2d
 800b96e:	7020      	strb	r0, [r4, #0]
 800b970:	b2c9      	uxtb	r1, r1
 800b972:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800b976:	2601      	movs	r6, #1
 800b978:	e00c      	b.n	800b994 <GUI_AddDecShift+0x38>
 800b97a:	2800      	cmp	r0, #0
 800b97c:	da06      	bge.n	800b98c <GUI_AddDecShift+0x30>
 800b97e:	1c65      	adds	r5, r4, #1
 800b980:	601d      	str	r5, [r3, #0]
 800b982:	252d      	movs	r5, #45	; 0x2d
 800b984:	7025      	strb	r5, [r4, #0]
 800b986:	4240      	negs	r0, r0
 800b988:	2401      	movs	r4, #1
 800b98a:	e000      	b.n	800b98e <GUI_AddDecShift+0x32>
 800b98c:	2400      	movs	r4, #0
 800b98e:	1b09      	subs	r1, r1, r4
 800b990:	b2c9      	uxtb	r1, r1
 800b992:	2600      	movs	r6, #0
 800b994:	b30a      	cbz	r2, 800b9da <GUI_AddDecShift+0x7e>
 800b996:	3901      	subs	r1, #1
 800b998:	b2c9      	uxtb	r1, r1
 800b99a:	e01e      	b.n	800b9da <GUI_AddDecShift+0x7e>
 800b99c:	1e4d      	subs	r5, r1, #1
 800b99e:	4291      	cmp	r1, r2
 800b9a0:	b2ed      	uxtb	r5, r5
 800b9a2:	d105      	bne.n	800b9b0 <GUI_AddDecShift+0x54>
 800b9a4:	681c      	ldr	r4, [r3, #0]
 800b9a6:	1c67      	adds	r7, r4, #1
 800b9a8:	601f      	str	r7, [r3, #0]
 800b9aa:	4f11      	ldr	r7, [pc, #68]	; (800b9f0 <GUI_AddDecShift+0x94>)
 800b9ac:	783f      	ldrb	r7, [r7, #0]
 800b9ae:	7027      	strb	r7, [r4, #0]
 800b9b0:	4c10      	ldr	r4, [pc, #64]	; (800b9f4 <GUI_AddDecShift+0x98>)
 800b9b2:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800b9b6:	fb90 f4f7 	sdiv	r4, r0, r7
 800b9ba:	b2e4      	uxtb	r4, r4
 800b9bc:	2c0a      	cmp	r4, #10
 800b9be:	d80e      	bhi.n	800b9de <GUI_AddDecShift+0x82>
 800b9c0:	fb07 0014 	mls	r0, r7, r4, r0
 800b9c4:	b17d      	cbz	r5, 800b9e6 <GUI_AddDecShift+0x8a>
 800b9c6:	2c0a      	cmp	r4, #10
 800b9c8:	bf18      	it	ne
 800b9ca:	4629      	movne	r1, r5
 800b9cc:	681d      	ldr	r5, [r3, #0]
 800b9ce:	bf08      	it	eq
 800b9d0:	2401      	moveq	r4, #1
 800b9d2:	1c6f      	adds	r7, r5, #1
 800b9d4:	3430      	adds	r4, #48	; 0x30
 800b9d6:	601f      	str	r7, [r3, #0]
 800b9d8:	702c      	strb	r4, [r5, #0]
 800b9da:	2900      	cmp	r1, #0
 800b9dc:	d1de      	bne.n	800b99c <GUI_AddDecShift+0x40>
 800b9de:	681b      	ldr	r3, [r3, #0]
 800b9e0:	2200      	movs	r2, #0
 800b9e2:	701a      	strb	r2, [r3, #0]
 800b9e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9e6:	2e00      	cmp	r6, #0
 800b9e8:	d0ed      	beq.n	800b9c6 <GUI_AddDecShift+0x6a>
 800b9ea:	3401      	adds	r4, #1
 800b9ec:	b2e4      	uxtb	r4, r4
 800b9ee:	e7ea      	b.n	800b9c6 <GUI_AddDecShift+0x6a>
 800b9f0:	20002ce8 	.word	0x20002ce8
 800b9f4:	08013d5c 	.word	0x08013d5c

0800b9f8 <GUI_CalcColorDist>:
 800b9f8:	b2cb      	uxtb	r3, r1
 800b9fa:	b2c2      	uxtb	r2, r0
 800b9fc:	1ad2      	subs	r2, r2, r3
 800b9fe:	b292      	uxth	r2, r2
 800ba00:	b293      	uxth	r3, r2
 800ba02:	b530      	push	{r4, r5, lr}
 800ba04:	041c      	lsls	r4, r3, #16
 800ba06:	bf48      	it	mi
 800ba08:	4253      	negmi	r3, r2
 800ba0a:	f3c1 2507 	ubfx	r5, r1, #8, #8
 800ba0e:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800ba12:	ebc5 0202 	rsb	r2, r5, r2
 800ba16:	bf48      	it	mi
 800ba18:	b29b      	uxthmi	r3, r3
 800ba1a:	b292      	uxth	r2, r2
 800ba1c:	0c09      	lsrs	r1, r1, #16
 800ba1e:	fb13 f403 	smulbb	r4, r3, r3
 800ba22:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800ba26:	b293      	uxth	r3, r2
 800ba28:	041d      	lsls	r5, r3, #16
 800ba2a:	b289      	uxth	r1, r1
 800ba2c:	b288      	uxth	r0, r1
 800ba2e:	bf44      	itt	mi
 800ba30:	4253      	negmi	r3, r2
 800ba32:	b29b      	uxthmi	r3, r3
 800ba34:	0402      	lsls	r2, r0, #16
 800ba36:	bf48      	it	mi
 800ba38:	4248      	negmi	r0, r1
 800ba3a:	fb13 4303 	smlabb	r3, r3, r3, r4
 800ba3e:	bf48      	it	mi
 800ba40:	b280      	uxthmi	r0, r0
 800ba42:	fb00 3000 	mla	r0, r0, r0, r3
 800ba46:	bd30      	pop	{r4, r5, pc}

0800ba48 <GUI_GetClientRect>:
 800ba48:	b108      	cbz	r0, 800ba4e <GUI_GetClientRect+0x6>
 800ba4a:	f7f9 bd27 	b.w	800549c <WM_GetClientRect>
 800ba4e:	4770      	bx	lr

0800ba50 <GUI_GetBkColor>:
 800ba50:	b508      	push	{r3, lr}
 800ba52:	f003 fe69 	bl	800f728 <LCD_GetBkColorIndex>
 800ba56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ba5a:	f7fe b835 	b.w	8009ac8 <LCD_Index2Color>

0800ba5e <GUI_GetColor>:
 800ba5e:	b508      	push	{r3, lr}
 800ba60:	f003 fe6a 	bl	800f738 <LCD_GetColorIndex>
 800ba64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ba68:	f7fe b82e 	b.w	8009ac8 <LCD_Index2Color>

0800ba6c <GUI_GetFontSizeY>:
 800ba6c:	f7ff bf48 	b.w	800b900 <GUI__GetFontSizeY>

0800ba70 <GUI_GetLineStyle>:
 800ba70:	4b01      	ldr	r3, [pc, #4]	; (800ba78 <GUI_GetLineStyle+0x8>)
 800ba72:	681b      	ldr	r3, [r3, #0]
 800ba74:	7e98      	ldrb	r0, [r3, #26]
 800ba76:	4770      	bx	lr
 800ba78:	200000c0 	.word	0x200000c0

0800ba7c <GUI_GetOrg>:
 800ba7c:	4b04      	ldr	r3, [pc, #16]	; (800ba90 <GUI_GetOrg+0x14>)
 800ba7e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ba82:	6003      	str	r3, [r0, #0]
 800ba84:	4b03      	ldr	r3, [pc, #12]	; (800ba94 <GUI_GetOrg+0x18>)
 800ba86:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ba8a:	600b      	str	r3, [r1, #0]
 800ba8c:	4770      	bx	lr
 800ba8e:	bf00      	nop
 800ba90:	20002d08 	.word	0x20002d08
 800ba94:	20002cf8 	.word	0x20002cf8

0800ba98 <GUI_GetYSizeOfFont>:
 800ba98:	7e02      	ldrb	r2, [r0, #24]
 800ba9a:	7ec0      	ldrb	r0, [r0, #27]
 800ba9c:	4350      	muls	r0, r2
 800ba9e:	4770      	bx	lr

0800baa0 <GUI_MergeRect>:
 800baa0:	b510      	push	{r4, lr}
 800baa2:	b338      	cbz	r0, 800baf4 <GUI_MergeRect+0x54>
 800baa4:	b309      	cbz	r1, 800baea <GUI_MergeRect+0x4a>
 800baa6:	b30a      	cbz	r2, 800baec <GUI_MergeRect+0x4c>
 800baa8:	f9b1 4000 	ldrsh.w	r4, [r1]
 800baac:	f9b2 3000 	ldrsh.w	r3, [r2]
 800bab0:	429c      	cmp	r4, r3
 800bab2:	bfb8      	it	lt
 800bab4:	4623      	movlt	r3, r4
 800bab6:	8003      	strh	r3, [r0, #0]
 800bab8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800babc:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800bac0:	429c      	cmp	r4, r3
 800bac2:	bfb8      	it	lt
 800bac4:	4623      	movlt	r3, r4
 800bac6:	8043      	strh	r3, [r0, #2]
 800bac8:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800bacc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800bad0:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800bad4:	429c      	cmp	r4, r3
 800bad6:	bfa8      	it	ge
 800bad8:	4623      	movge	r3, r4
 800bada:	8083      	strh	r3, [r0, #4]
 800badc:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800bae0:	4299      	cmp	r1, r3
 800bae2:	bfa8      	it	ge
 800bae4:	460b      	movge	r3, r1
 800bae6:	80c3      	strh	r3, [r0, #6]
 800bae8:	bd10      	pop	{r4, pc}
 800baea:	4611      	mov	r1, r2
 800baec:	680b      	ldr	r3, [r1, #0]
 800baee:	6003      	str	r3, [r0, #0]
 800baf0:	684b      	ldr	r3, [r1, #4]
 800baf2:	6043      	str	r3, [r0, #4]
 800baf4:	bd10      	pop	{r4, pc}

0800baf6 <GUI_MoveRect>:
 800baf6:	b168      	cbz	r0, 800bb14 <GUI_MoveRect+0x1e>
 800baf8:	8803      	ldrh	r3, [r0, #0]
 800bafa:	b289      	uxth	r1, r1
 800bafc:	440b      	add	r3, r1
 800bafe:	8003      	strh	r3, [r0, #0]
 800bb00:	8883      	ldrh	r3, [r0, #4]
 800bb02:	4419      	add	r1, r3
 800bb04:	8843      	ldrh	r3, [r0, #2]
 800bb06:	8081      	strh	r1, [r0, #4]
 800bb08:	b292      	uxth	r2, r2
 800bb0a:	4413      	add	r3, r2
 800bb0c:	8043      	strh	r3, [r0, #2]
 800bb0e:	88c3      	ldrh	r3, [r0, #6]
 800bb10:	441a      	add	r2, r3
 800bb12:	80c2      	strh	r2, [r0, #6]
 800bb14:	4770      	bx	lr
	...

0800bb18 <GUI_Exec1>:
 800bb18:	4b0c      	ldr	r3, [pc, #48]	; (800bb4c <GUI_Exec1+0x34>)
 800bb1a:	b510      	push	{r4, lr}
 800bb1c:	681c      	ldr	r4, [r3, #0]
 800bb1e:	b11c      	cbz	r4, 800bb28 <GUI_Exec1+0x10>
 800bb20:	47a0      	blx	r4
 800bb22:	1c04      	adds	r4, r0, #0
 800bb24:	bf18      	it	ne
 800bb26:	2401      	movne	r4, #1
 800bb28:	f7fb f95e 	bl	8006de8 <WM_Exec>
 800bb2c:	4b08      	ldr	r3, [pc, #32]	; (800bb50 <GUI_Exec1+0x38>)
 800bb2e:	681b      	ldr	r3, [r3, #0]
 800bb30:	2800      	cmp	r0, #0
 800bb32:	bf18      	it	ne
 800bb34:	2401      	movne	r4, #1
 800bb36:	b11b      	cbz	r3, 800bb40 <GUI_Exec1+0x28>
 800bb38:	4798      	blx	r3
 800bb3a:	2800      	cmp	r0, #0
 800bb3c:	bf18      	it	ne
 800bb3e:	2401      	movne	r4, #1
 800bb40:	4b04      	ldr	r3, [pc, #16]	; (800bb54 <GUI_Exec1+0x3c>)
 800bb42:	681b      	ldr	r3, [r3, #0]
 800bb44:	b103      	cbz	r3, 800bb48 <GUI_Exec1+0x30>
 800bb46:	4798      	blx	r3
 800bb48:	4620      	mov	r0, r4
 800bb4a:	bd10      	pop	{r4, pc}
 800bb4c:	20002d04 	.word	0x20002d04
 800bb50:	20002d30 	.word	0x20002d30
 800bb54:	20002d28 	.word	0x20002d28

0800bb58 <GUI_Exec>:
 800bb58:	b510      	push	{r4, lr}
 800bb5a:	2400      	movs	r4, #0
 800bb5c:	f7ff ffdc 	bl	800bb18 <GUI_Exec1>
 800bb60:	b108      	cbz	r0, 800bb66 <GUI_Exec+0xe>
 800bb62:	2401      	movs	r4, #1
 800bb64:	e7fa      	b.n	800bb5c <GUI_Exec+0x4>
 800bb66:	4620      	mov	r0, r4
 800bb68:	bd10      	pop	{r4, pc}
	...

0800bb6c <GUI_GotoXY>:
 800bb6c:	4b02      	ldr	r3, [pc, #8]	; (800bb78 <GUI_GotoXY+0xc>)
 800bb6e:	681b      	ldr	r3, [r3, #0]
 800bb70:	8458      	strh	r0, [r3, #34]	; 0x22
 800bb72:	8499      	strh	r1, [r3, #36]	; 0x24
 800bb74:	2000      	movs	r0, #0
 800bb76:	4770      	bx	lr
 800bb78:	200000c0 	.word	0x200000c0

0800bb7c <GUI_SetPenSize>:
 800bb7c:	4b02      	ldr	r3, [pc, #8]	; (800bb88 <GUI_SetPenSize+0xc>)
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	7e1a      	ldrb	r2, [r3, #24]
 800bb82:	7618      	strb	r0, [r3, #24]
 800bb84:	4610      	mov	r0, r2
 800bb86:	4770      	bx	lr
 800bb88:	200000c0 	.word	0x200000c0

0800bb8c <GUI_RectsIntersect>:
 800bb8c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bb90:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800bb94:	429a      	cmp	r2, r3
 800bb96:	dc14      	bgt.n	800bbc2 <GUI_RectsIntersect+0x36>
 800bb98:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800bb9c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800bba0:	429a      	cmp	r2, r3
 800bba2:	dc0e      	bgt.n	800bbc2 <GUI_RectsIntersect+0x36>
 800bba4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800bba8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800bbac:	429a      	cmp	r2, r3
 800bbae:	dc08      	bgt.n	800bbc2 <GUI_RectsIntersect+0x36>
 800bbb0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bbb4:	f9b1 2000 	ldrsh.w	r2, [r1]
 800bbb8:	429a      	cmp	r2, r3
 800bbba:	bfcc      	ite	gt
 800bbbc:	2000      	movgt	r0, #0
 800bbbe:	2001      	movle	r0, #1
 800bbc0:	4770      	bx	lr
 800bbc2:	2000      	movs	r0, #0
 800bbc4:	4770      	bx	lr
	...

0800bbc8 <GUI_SaveContext_W>:
 800bbc8:	b508      	push	{r3, lr}
 800bbca:	4b03      	ldr	r3, [pc, #12]	; (800bbd8 <GUI_SaveContext_W+0x10>)
 800bbcc:	2270      	movs	r2, #112	; 0x70
 800bbce:	6819      	ldr	r1, [r3, #0]
 800bbd0:	f005 f890 	bl	8010cf4 <memcpy>
 800bbd4:	bd08      	pop	{r3, pc}
 800bbd6:	bf00      	nop
 800bbd8:	200000c0 	.word	0x200000c0

0800bbdc <GUI_RestoreContext>:
 800bbdc:	b508      	push	{r3, lr}
 800bbde:	4b03      	ldr	r3, [pc, #12]	; (800bbec <GUI_RestoreContext+0x10>)
 800bbe0:	4601      	mov	r1, r0
 800bbe2:	2270      	movs	r2, #112	; 0x70
 800bbe4:	6818      	ldr	r0, [r3, #0]
 800bbe6:	f005 f885 	bl	8010cf4 <memcpy>
 800bbea:	bd08      	pop	{r3, pc}
 800bbec:	200000c0 	.word	0x200000c0

0800bbf0 <GUI_SelectLCD>:
 800bbf0:	b508      	push	{r3, lr}
 800bbf2:	f003 fc55 	bl	800f4a0 <LCD_SelectLCD>
 800bbf6:	f7fd fae9 	bl	80091cc <LCD_UpdateColorIndices>
 800bbfa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bbfe:	f7fb b92f 	b.w	8006e60 <WM_Activate>

0800bc02 <GUI_SetBkColor>:
 800bc02:	f7fd bfa9 	b.w	8009b58 <LCD_SetBkColor>

0800bc06 <GUI_SetColor>:
 800bc06:	f7fd bfaf 	b.w	8009b68 <LCD_SetColor>

0800bc0a <GUI_SetDrawMode>:
 800bc0a:	f7fd bc53 	b.w	80094b4 <LCD_SetDrawMode>
	...

0800bc10 <GUI_SetFont>:
 800bc10:	4b03      	ldr	r3, [pc, #12]	; (800bc20 <GUI_SetFont+0x10>)
 800bc12:	681b      	ldr	r3, [r3, #0]
 800bc14:	69d9      	ldr	r1, [r3, #28]
 800bc16:	b100      	cbz	r0, 800bc1a <GUI_SetFont+0xa>
 800bc18:	61d8      	str	r0, [r3, #28]
 800bc1a:	4608      	mov	r0, r1
 800bc1c:	4770      	bx	lr
 800bc1e:	bf00      	nop
 800bc20:	200000c0 	.word	0x200000c0

0800bc24 <GUI_SetLineStyle>:
 800bc24:	4b02      	ldr	r3, [pc, #8]	; (800bc30 <GUI_SetLineStyle+0xc>)
 800bc26:	681b      	ldr	r3, [r3, #0]
 800bc28:	7e9a      	ldrb	r2, [r3, #26]
 800bc2a:	7698      	strb	r0, [r3, #26]
 800bc2c:	4610      	mov	r0, r2
 800bc2e:	4770      	bx	lr
 800bc30:	200000c0 	.word	0x200000c0

0800bc34 <GUI_SetOrg>:
 800bc34:	460a      	mov	r2, r1
 800bc36:	4908      	ldr	r1, [pc, #32]	; (800bc58 <GUI_SetOrg+0x24>)
 800bc38:	b510      	push	{r4, lr}
 800bc3a:	8008      	strh	r0, [r1, #0]
 800bc3c:	4907      	ldr	r1, [pc, #28]	; (800bc5c <GUI_SetOrg+0x28>)
 800bc3e:	800a      	strh	r2, [r1, #0]
 800bc40:	4907      	ldr	r1, [pc, #28]	; (800bc60 <GUI_SetOrg+0x2c>)
 800bc42:	6809      	ldr	r1, [r1, #0]
 800bc44:	4603      	mov	r3, r0
 800bc46:	7c48      	ldrb	r0, [r1, #17]
 800bc48:	4906      	ldr	r1, [pc, #24]	; (800bc64 <GUI_SetOrg+0x30>)
 800bc4a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800bc4e:	68c1      	ldr	r1, [r0, #12]
 800bc50:	6a0c      	ldr	r4, [r1, #32]
 800bc52:	4619      	mov	r1, r3
 800bc54:	47a0      	blx	r4
 800bc56:	bd10      	pop	{r4, pc}
 800bc58:	20002d08 	.word	0x20002d08
 800bc5c:	20002cf8 	.word	0x20002cf8
 800bc60:	200000c0 	.word	0x200000c0
 800bc64:	20002d34 	.word	0x20002d34

0800bc68 <GUI_SetTextAlign>:
 800bc68:	4b03      	ldr	r3, [pc, #12]	; (800bc78 <GUI_SetTextAlign+0x10>)
 800bc6a:	681b      	ldr	r3, [r3, #0]
 800bc6c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800bc70:	8598      	strh	r0, [r3, #44]	; 0x2c
 800bc72:	4610      	mov	r0, r2
 800bc74:	4770      	bx	lr
 800bc76:	bf00      	nop
 800bc78:	200000c0 	.word	0x200000c0

0800bc7c <GUI_SetTextMode>:
 800bc7c:	4b03      	ldr	r3, [pc, #12]	; (800bc8c <GUI_SetTextMode+0x10>)
 800bc7e:	681b      	ldr	r3, [r3, #0]
 800bc80:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800bc84:	8558      	strh	r0, [r3, #42]	; 0x2a
 800bc86:	4610      	mov	r0, r2
 800bc88:	4770      	bx	lr
 800bc8a:	bf00      	nop
 800bc8c:	200000c0 	.word	0x200000c0

0800bc90 <GL_SetDefault>:
 800bc90:	b508      	push	{r3, lr}
 800bc92:	4b0e      	ldr	r3, [pc, #56]	; (800bccc <GL_SetDefault+0x3c>)
 800bc94:	6818      	ldr	r0, [r3, #0]
 800bc96:	f7fd ff5f 	bl	8009b58 <LCD_SetBkColor>
 800bc9a:	4b0d      	ldr	r3, [pc, #52]	; (800bcd0 <GL_SetDefault+0x40>)
 800bc9c:	6818      	ldr	r0, [r3, #0]
 800bc9e:	f7fd ff63 	bl	8009b68 <LCD_SetColor>
 800bca2:	2001      	movs	r0, #1
 800bca4:	f7ff ff6a 	bl	800bb7c <GUI_SetPenSize>
 800bca8:	2000      	movs	r0, #0
 800bcaa:	f7ff ffdd 	bl	800bc68 <GUI_SetTextAlign>
 800bcae:	2000      	movs	r0, #0
 800bcb0:	f7ff ffe4 	bl	800bc7c <GUI_SetTextMode>
 800bcb4:	2000      	movs	r0, #0
 800bcb6:	f7ff ffa8 	bl	800bc0a <GUI_SetDrawMode>
 800bcba:	4b06      	ldr	r3, [pc, #24]	; (800bcd4 <GL_SetDefault+0x44>)
 800bcbc:	6818      	ldr	r0, [r3, #0]
 800bcbe:	f7ff ffa7 	bl	800bc10 <GUI_SetFont>
 800bcc2:	2000      	movs	r0, #0
 800bcc4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcc8:	f7ff bfac 	b.w	800bc24 <GUI_SetLineStyle>
 800bccc:	20002bc0 	.word	0x20002bc0
 800bcd0:	200000c8 	.word	0x200000c8
 800bcd4:	200000c4 	.word	0x200000c4

0800bcd8 <GL_FillCircle>:
 800bcd8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcdc:	f240 29c3 	movw	r9, #707	; 0x2c3
 800bce0:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800bd98 <GL_FillCircle+0xc0>
 800bce4:	fb09 f902 	mul.w	r9, r9, r2
 800bce8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800bcec:	fb99 f9f3 	sdiv	r9, r9, r3
 800bcf0:	f8d8 3000 	ldr.w	r3, [r8]
 800bcf4:	f04f 0b02 	mov.w	fp, #2
 800bcf8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bcfa:	4606      	mov	r6, r0
 800bcfc:	fb92 fbfb 	sdiv	fp, r2, fp
 800bd00:	1a80      	subs	r0, r0, r2
 800bd02:	4614      	mov	r4, r2
 800bd04:	fb02 bb02 	mla	fp, r2, r2, fp
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	18b2      	adds	r2, r6, r2
 800bd0c:	460f      	mov	r7, r1
 800bd0e:	4798      	blx	r3
 800bd10:	f109 0901 	add.w	r9, r9, #1
 800bd14:	2501      	movs	r5, #1
 800bd16:	454d      	cmp	r5, r9
 800bd18:	dc3a      	bgt.n	800bd90 <GL_FillCircle+0xb8>
 800bd1a:	fb04 f304 	mul.w	r3, r4, r4
 800bd1e:	fb05 3305 	mla	r3, r5, r5, r3
 800bd22:	455b      	cmp	r3, fp
 800bd24:	dd1b      	ble.n	800bd5e <GL_FillCircle+0x86>
 800bd26:	454c      	cmp	r4, r9
 800bd28:	dd18      	ble.n	800bd5c <GL_FillCircle+0x84>
 800bd2a:	f8d8 2000 	ldr.w	r2, [r8]
 800bd2e:	1c73      	adds	r3, r6, #1
 800bd30:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800bd32:	f106 3aff 	add.w	sl, r6, #4294967295
 800bd36:	1b5b      	subs	r3, r3, r5
 800bd38:	44aa      	add	sl, r5
 800bd3a:	f8d2 c000 	ldr.w	ip, [r2]
 800bd3e:	9301      	str	r3, [sp, #4]
 800bd40:	4618      	mov	r0, r3
 800bd42:	1939      	adds	r1, r7, r4
 800bd44:	4652      	mov	r2, sl
 800bd46:	47e0      	blx	ip
 800bd48:	f8d8 2000 	ldr.w	r2, [r8]
 800bd4c:	9b01      	ldr	r3, [sp, #4]
 800bd4e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800bd50:	4618      	mov	r0, r3
 800bd52:	f8d2 c000 	ldr.w	ip, [r2]
 800bd56:	1b39      	subs	r1, r7, r4
 800bd58:	4652      	mov	r2, sl
 800bd5a:	47e0      	blx	ip
 800bd5c:	3c01      	subs	r4, #1
 800bd5e:	f8d8 2000 	ldr.w	r2, [r8]
 800bd62:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800bd64:	1b33      	subs	r3, r6, r4
 800bd66:	eb06 0a04 	add.w	sl, r6, r4
 800bd6a:	f8d2 c000 	ldr.w	ip, [r2]
 800bd6e:	9301      	str	r3, [sp, #4]
 800bd70:	4618      	mov	r0, r3
 800bd72:	19e9      	adds	r1, r5, r7
 800bd74:	4652      	mov	r2, sl
 800bd76:	47e0      	blx	ip
 800bd78:	f8d8 2000 	ldr.w	r2, [r8]
 800bd7c:	9b01      	ldr	r3, [sp, #4]
 800bd7e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800bd80:	1b79      	subs	r1, r7, r5
 800bd82:	f8d2 c000 	ldr.w	ip, [r2]
 800bd86:	4618      	mov	r0, r3
 800bd88:	4652      	mov	r2, sl
 800bd8a:	47e0      	blx	ip
 800bd8c:	3501      	adds	r5, #1
 800bd8e:	e7c2      	b.n	800bd16 <GL_FillCircle+0x3e>
 800bd90:	b003      	add	sp, #12
 800bd92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd96:	bf00      	nop
 800bd98:	200000c0 	.word	0x200000c0

0800bd9c <GUIPROP__FindChar>:
 800bd9c:	b138      	cbz	r0, 800bdae <GUIPROP__FindChar+0x12>
 800bd9e:	8803      	ldrh	r3, [r0, #0]
 800bda0:	428b      	cmp	r3, r1
 800bda2:	d802      	bhi.n	800bdaa <GUIPROP__FindChar+0xe>
 800bda4:	8843      	ldrh	r3, [r0, #2]
 800bda6:	428b      	cmp	r3, r1
 800bda8:	d201      	bcs.n	800bdae <GUIPROP__FindChar+0x12>
 800bdaa:	6880      	ldr	r0, [r0, #8]
 800bdac:	e7f6      	b.n	800bd9c <GUIPROP__FindChar>
 800bdae:	4770      	bx	lr

0800bdb0 <GUIPROP_DispChar>:
 800bdb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdb4:	4c38      	ldr	r4, [pc, #224]	; (800be98 <GUIPROP_DispChar+0xe8>)
 800bdb6:	6823      	ldr	r3, [r4, #0]
 800bdb8:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800bdbc:	69db      	ldr	r3, [r3, #28]
 800bdbe:	4605      	mov	r5, r0
 800bdc0:	b089      	sub	sp, #36	; 0x24
 800bdc2:	69d8      	ldr	r0, [r3, #28]
 800bdc4:	4629      	mov	r1, r5
 800bdc6:	f7ff ffe9 	bl	800bd9c <GUIPROP__FindChar>
 800bdca:	2800      	cmp	r0, #0
 800bdcc:	d061      	beq.n	800be92 <GUIPROP_DispChar+0xe2>
 800bdce:	f8b0 8000 	ldrh.w	r8, [r0]
 800bdd2:	6847      	ldr	r7, [r0, #4]
 800bdd4:	ebc8 0805 	rsb	r8, r8, r5
 800bdd8:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800bddc:	4648      	mov	r0, r9
 800bdde:	f896 b002 	ldrb.w	fp, [r6, #2]
 800bde2:	f7fd fb67 	bl	80094b4 <LCD_SetDrawMode>
 800bde6:	6825      	ldr	r5, [r4, #0]
 800bde8:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800bdec:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800bdf0:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800bdf4:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800bdf8:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800bdfc:	9306      	str	r3, [sp, #24]
 800bdfe:	4682      	mov	sl, r0
 800be00:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800be04:	f8cd c000 	str.w	ip, [sp]
 800be08:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800be0c:	f8cd e004 	str.w	lr, [sp, #4]
 800be10:	f04f 0e01 	mov.w	lr, #1
 800be14:	f8cd b00c 	str.w	fp, [sp, #12]
 800be18:	f8cd e008 	str.w	lr, [sp, #8]
 800be1c:	6873      	ldr	r3, [r6, #4]
 800be1e:	9304      	str	r3, [sp, #16]
 800be20:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800be22:	9b06      	ldr	r3, [sp, #24]
 800be24:	9505      	str	r5, [sp, #20]
 800be26:	f7fd fccf 	bl	80097c8 <LCD_DrawBitmap>
 800be2a:	6823      	ldr	r3, [r4, #0]
 800be2c:	69da      	ldr	r2, [r3, #28]
 800be2e:	f892 b019 	ldrb.w	fp, [r2, #25]
 800be32:	7e11      	ldrb	r1, [r2, #24]
 800be34:	458b      	cmp	fp, r1
 800be36:	d920      	bls.n	800be7a <GUIPROP_DispChar+0xca>
 800be38:	f1b9 0f02 	cmp.w	r9, #2
 800be3c:	7ed5      	ldrb	r5, [r2, #27]
 800be3e:	d01c      	beq.n	800be7a <GUIPROP_DispChar+0xca>
 800be40:	9107      	str	r1, [sp, #28]
 800be42:	f7ff fe0c 	bl	800ba5e <GUI_GetColor>
 800be46:	4681      	mov	r9, r0
 800be48:	f7ff fe02 	bl	800ba50 <GUI_GetBkColor>
 800be4c:	f7ff fedb 	bl	800bc06 <GUI_SetColor>
 800be50:	6824      	ldr	r4, [r4, #0]
 800be52:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800be56:	69e2      	ldr	r2, [r4, #28]
 800be58:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800be5c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800be60:	7ed2      	ldrb	r2, [r2, #27]
 800be62:	9907      	ldr	r1, [sp, #28]
 800be64:	fb07 0202 	mla	r2, r7, r2, r0
 800be68:	fb01 3105 	mla	r1, r1, r5, r3
 800be6c:	fb0b 3305 	mla	r3, fp, r5, r3
 800be70:	f7fd fba2 	bl	80095b8 <LCD_FillRect>
 800be74:	4648      	mov	r0, r9
 800be76:	f7ff fec6 	bl	800bc06 <GUI_SetColor>
 800be7a:	4650      	mov	r0, sl
 800be7c:	f7fd fb1a 	bl	80094b4 <LCD_SetDrawMode>
 800be80:	4b05      	ldr	r3, [pc, #20]	; (800be98 <GUIPROP_DispChar+0xe8>)
 800be82:	681b      	ldr	r3, [r3, #0]
 800be84:	69da      	ldr	r2, [r3, #28]
 800be86:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800be88:	7e90      	ldrb	r0, [r2, #26]
 800be8a:	7872      	ldrb	r2, [r6, #1]
 800be8c:	fb00 1202 	mla	r2, r0, r2, r1
 800be90:	845a      	strh	r2, [r3, #34]	; 0x22
 800be92:	b009      	add	sp, #36	; 0x24
 800be94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be98:	200000c0 	.word	0x200000c0

0800be9c <GUIPROP_GetCharDistX>:
 800be9c:	4b0d      	ldr	r3, [pc, #52]	; (800bed4 <GUIPROP_GetCharDistX+0x38>)
 800be9e:	b570      	push	{r4, r5, r6, lr}
 800bea0:	681b      	ldr	r3, [r3, #0]
 800bea2:	69dd      	ldr	r5, [r3, #28]
 800bea4:	4606      	mov	r6, r0
 800bea6:	460c      	mov	r4, r1
 800bea8:	69e8      	ldr	r0, [r5, #28]
 800beaa:	4631      	mov	r1, r6
 800beac:	f7ff ff76 	bl	800bd9c <GUIPROP__FindChar>
 800beb0:	b170      	cbz	r0, 800bed0 <GUIPROP_GetCharDistX+0x34>
 800beb2:	8803      	ldrh	r3, [r0, #0]
 800beb4:	6842      	ldr	r2, [r0, #4]
 800beb6:	1af6      	subs	r6, r6, r3
 800beb8:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800bebc:	7858      	ldrb	r0, [r3, #1]
 800bebe:	7eab      	ldrb	r3, [r5, #26]
 800bec0:	fb10 f003 	smulbb	r0, r0, r3
 800bec4:	b124      	cbz	r4, 800bed0 <GUIPROP_GetCharDistX+0x34>
 800bec6:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800beca:	fb12 f303 	smulbb	r3, r2, r3
 800bece:	6023      	str	r3, [r4, #0]
 800bed0:	bd70      	pop	{r4, r5, r6, pc}
 800bed2:	bf00      	nop
 800bed4:	200000c0 	.word	0x200000c0

0800bed8 <GUIPROP_GetFontInfo>:
 800bed8:	2301      	movs	r3, #1
 800beda:	800b      	strh	r3, [r1, #0]
 800bedc:	4770      	bx	lr

0800bede <GUIPROP_IsInFont>:
 800bede:	b508      	push	{r3, lr}
 800bee0:	69c0      	ldr	r0, [r0, #28]
 800bee2:	f7ff ff5b 	bl	800bd9c <GUIPROP__FindChar>
 800bee6:	3000      	adds	r0, #0
 800bee8:	bf18      	it	ne
 800beea:	2001      	movne	r0, #1
 800beec:	bd08      	pop	{r3, pc}
	...

0800bef0 <GUIMONO_DispChar>:
 800bef0:	4b52      	ldr	r3, [pc, #328]	; (800c03c <GUIMONO_DispChar+0x14c>)
 800bef2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bef6:	681b      	ldr	r3, [r3, #0]
 800bef8:	69d9      	ldr	r1, [r3, #28]
 800befa:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800befc:	69cc      	ldr	r4, [r1, #28]
 800befe:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800bf00:	89a2      	ldrh	r2, [r4, #12]
 800bf02:	4290      	cmp	r0, r2
 800bf04:	b08b      	sub	sp, #44	; 0x2c
 800bf06:	d308      	bcc.n	800bf1a <GUIMONO_DispChar+0x2a>
 800bf08:	89e6      	ldrh	r6, [r4, #14]
 800bf0a:	4286      	cmp	r6, r0
 800bf0c:	d305      	bcc.n	800bf1a <GUIMONO_DispChar+0x2a>
 800bf0e:	f8d4 9000 	ldr.w	r9, [r4]
 800bf12:	1a82      	subs	r2, r0, r2
 800bf14:	f04f 3bff 	mov.w	fp, #4294967295
 800bf18:	e015      	b.n	800bf46 <GUIMONO_DispChar+0x56>
 800bf1a:	68a2      	ldr	r2, [r4, #8]
 800bf1c:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800bf20:	2a00      	cmp	r2, #0
 800bf22:	f000 8081 	beq.w	800c028 <GUIMONO_DispChar+0x138>
 800bf26:	8816      	ldrh	r6, [r2, #0]
 800bf28:	42b0      	cmp	r0, r6
 800bf2a:	d37d      	bcc.n	800c028 <GUIMONO_DispChar+0x138>
 800bf2c:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800bf30:	4584      	cmp	ip, r0
 800bf32:	d379      	bcc.n	800c028 <GUIMONO_DispChar+0x138>
 800bf34:	6852      	ldr	r2, [r2, #4]
 800bf36:	1b80      	subs	r0, r0, r6
 800bf38:	b280      	uxth	r0, r0
 800bf3a:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800bf3e:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800bf42:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800bf46:	1c50      	adds	r0, r2, #1
 800bf48:	d06e      	beq.n	800c028 <GUIMONO_DispChar+0x138>
 800bf4a:	f891 8018 	ldrb.w	r8, [r1, #24]
 800bf4e:	7ca1      	ldrb	r1, [r4, #18]
 800bf50:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800bf54:	7c26      	ldrb	r6, [r4, #16]
 800bf56:	9206      	str	r2, [sp, #24]
 800bf58:	fb18 f101 	smulbb	r1, r8, r1
 800bf5c:	9107      	str	r1, [sp, #28]
 800bf5e:	fa0f f18a 	sxth.w	r1, sl
 800bf62:	4608      	mov	r0, r1
 800bf64:	9108      	str	r1, [sp, #32]
 800bf66:	f7fd faa5 	bl	80094b4 <LCD_SetDrawMode>
 800bf6a:	4934      	ldr	r1, [pc, #208]	; (800c03c <GUIMONO_DispChar+0x14c>)
 800bf6c:	9009      	str	r0, [sp, #36]	; 0x24
 800bf6e:	680b      	ldr	r3, [r1, #0]
 800bf70:	9a06      	ldr	r2, [sp, #24]
 800bf72:	69d9      	ldr	r1, [r3, #28]
 800bf74:	7e88      	ldrb	r0, [r1, #26]
 800bf76:	9000      	str	r0, [sp, #0]
 800bf78:	7ec9      	ldrb	r1, [r1, #27]
 800bf7a:	9101      	str	r1, [sp, #4]
 800bf7c:	2101      	movs	r1, #1
 800bf7e:	9102      	str	r1, [sp, #8]
 800bf80:	7ca1      	ldrb	r1, [r4, #18]
 800bf82:	9103      	str	r1, [sp, #12]
 800bf84:	9907      	ldr	r1, [sp, #28]
 800bf86:	fb01 9202 	mla	r2, r1, r2, r9
 800bf8a:	9204      	str	r2, [sp, #16]
 800bf8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf8e:	9305      	str	r3, [sp, #20]
 800bf90:	b23f      	sxth	r7, r7
 800bf92:	b22d      	sxth	r5, r5
 800bf94:	4638      	mov	r0, r7
 800bf96:	4629      	mov	r1, r5
 800bf98:	4632      	mov	r2, r6
 800bf9a:	4643      	mov	r3, r8
 800bf9c:	f7fd fc14 	bl	80097c8 <LCD_DrawBitmap>
 800bfa0:	f1bb 3fff 	cmp.w	fp, #4294967295
 800bfa4:	d01b      	beq.n	800bfde <GUIMONO_DispChar+0xee>
 800bfa6:	f04a 0002 	orr.w	r0, sl, #2
 800bfaa:	b200      	sxth	r0, r0
 800bfac:	f7fd fa82 	bl	80094b4 <LCD_SetDrawMode>
 800bfb0:	4a22      	ldr	r2, [pc, #136]	; (800c03c <GUIMONO_DispChar+0x14c>)
 800bfb2:	6813      	ldr	r3, [r2, #0]
 800bfb4:	69da      	ldr	r2, [r3, #28]
 800bfb6:	7e91      	ldrb	r1, [r2, #26]
 800bfb8:	9100      	str	r1, [sp, #0]
 800bfba:	7ed2      	ldrb	r2, [r2, #27]
 800bfbc:	9201      	str	r2, [sp, #4]
 800bfbe:	2101      	movs	r1, #1
 800bfc0:	9102      	str	r1, [sp, #8]
 800bfc2:	9907      	ldr	r1, [sp, #28]
 800bfc4:	7ca2      	ldrb	r2, [r4, #18]
 800bfc6:	9203      	str	r2, [sp, #12]
 800bfc8:	fb01 920b 	mla	r2, r1, fp, r9
 800bfcc:	9204      	str	r2, [sp, #16]
 800bfce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bfd0:	9305      	str	r3, [sp, #20]
 800bfd2:	4638      	mov	r0, r7
 800bfd4:	4629      	mov	r1, r5
 800bfd6:	4632      	mov	r2, r6
 800bfd8:	4643      	mov	r3, r8
 800bfda:	f7fd fbf5 	bl	80097c8 <LCD_DrawBitmap>
 800bfde:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800c03c <GUIMONO_DispChar+0x14c>
 800bfe2:	f8d8 3000 	ldr.w	r3, [r8]
 800bfe6:	69db      	ldr	r3, [r3, #28]
 800bfe8:	7e5a      	ldrb	r2, [r3, #25]
 800bfea:	7e1b      	ldrb	r3, [r3, #24]
 800bfec:	429a      	cmp	r2, r3
 800bfee:	d917      	bls.n	800c020 <GUIMONO_DispChar+0x130>
 800bff0:	9a08      	ldr	r2, [sp, #32]
 800bff2:	2a02      	cmp	r2, #2
 800bff4:	d014      	beq.n	800c020 <GUIMONO_DispChar+0x130>
 800bff6:	f08a 0004 	eor.w	r0, sl, #4
 800bffa:	b200      	sxth	r0, r0
 800bffc:	f7fd fa5a 	bl	80094b4 <LCD_SetDrawMode>
 800c000:	f8d8 3000 	ldr.w	r3, [r8]
 800c004:	69db      	ldr	r3, [r3, #28]
 800c006:	f893 e018 	ldrb.w	lr, [r3, #24]
 800c00a:	7ed9      	ldrb	r1, [r3, #27]
 800c00c:	7e9a      	ldrb	r2, [r3, #26]
 800c00e:	7e5b      	ldrb	r3, [r3, #25]
 800c010:	4638      	mov	r0, r7
 800c012:	fb0e 5101 	mla	r1, lr, r1, r5
 800c016:	fb06 7202 	mla	r2, r6, r2, r7
 800c01a:	442b      	add	r3, r5
 800c01c:	f7fd facc 	bl	80095b8 <LCD_FillRect>
 800c020:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c022:	b2d8      	uxtb	r0, r3
 800c024:	f7fd fa46 	bl	80094b4 <LCD_SetDrawMode>
 800c028:	4b04      	ldr	r3, [pc, #16]	; (800c03c <GUIMONO_DispChar+0x14c>)
 800c02a:	7c61      	ldrb	r1, [r4, #17]
 800c02c:	681b      	ldr	r3, [r3, #0]
 800c02e:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800c030:	440a      	add	r2, r1
 800c032:	845a      	strh	r2, [r3, #34]	; 0x22
 800c034:	b00b      	add	sp, #44	; 0x2c
 800c036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c03a:	bf00      	nop
 800c03c:	200000c0 	.word	0x200000c0

0800c040 <GUIMONO_GetCharDistX>:
 800c040:	4b04      	ldr	r3, [pc, #16]	; (800c054 <GUIMONO_GetCharDistX+0x14>)
 800c042:	681b      	ldr	r3, [r3, #0]
 800c044:	69db      	ldr	r3, [r3, #28]
 800c046:	69db      	ldr	r3, [r3, #28]
 800c048:	b109      	cbz	r1, 800c04e <GUIMONO_GetCharDistX+0xe>
 800c04a:	7c1a      	ldrb	r2, [r3, #16]
 800c04c:	600a      	str	r2, [r1, #0]
 800c04e:	7c58      	ldrb	r0, [r3, #17]
 800c050:	4770      	bx	lr
 800c052:	bf00      	nop
 800c054:	200000c0 	.word	0x200000c0

0800c058 <GUIMONO_GetFontInfo>:
 800c058:	2302      	movs	r3, #2
 800c05a:	800b      	strh	r3, [r1, #0]
 800c05c:	4770      	bx	lr

0800c05e <GUIMONO_IsInFont>:
 800c05e:	69c3      	ldr	r3, [r0, #28]
 800c060:	899a      	ldrh	r2, [r3, #12]
 800c062:	428a      	cmp	r2, r1
 800c064:	d802      	bhi.n	800c06c <GUIMONO_IsInFont+0xe>
 800c066:	89da      	ldrh	r2, [r3, #14]
 800c068:	428a      	cmp	r2, r1
 800c06a:	d20f      	bcs.n	800c08c <GUIMONO_IsInFont+0x2e>
 800c06c:	6898      	ldr	r0, [r3, #8]
 800c06e:	b180      	cbz	r0, 800c092 <GUIMONO_IsInFont+0x34>
 800c070:	8803      	ldrh	r3, [r0, #0]
 800c072:	4299      	cmp	r1, r3
 800c074:	d30c      	bcc.n	800c090 <GUIMONO_IsInFont+0x32>
 800c076:	8842      	ldrh	r2, [r0, #2]
 800c078:	428a      	cmp	r2, r1
 800c07a:	d309      	bcc.n	800c090 <GUIMONO_IsInFont+0x32>
 800c07c:	1ac9      	subs	r1, r1, r3
 800c07e:	6842      	ldr	r2, [r0, #4]
 800c080:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800c084:	43c0      	mvns	r0, r0
 800c086:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800c08a:	4770      	bx	lr
 800c08c:	2001      	movs	r0, #1
 800c08e:	4770      	bx	lr
 800c090:	2000      	movs	r0, #0
 800c092:	4770      	bx	lr

0800c094 <_Log2VisBuffered>:
 800c094:	4770      	bx	lr
	...

0800c098 <_DispLine>:
 800c098:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c09a:	4615      	mov	r5, r2
 800c09c:	ab02      	add	r3, sp, #8
 800c09e:	4a21      	ldr	r2, [pc, #132]	; (800c124 <_DispLine+0x8c>)
 800c0a0:	f843 1d08 	str.w	r1, [r3, #-8]!
 800c0a4:	9001      	str	r0, [sp, #4]
 800c0a6:	6812      	ldr	r2, [r2, #0]
 800c0a8:	4c1f      	ldr	r4, [pc, #124]	; (800c128 <_DispLine+0x90>)
 800c0aa:	4669      	mov	r1, sp
 800c0ac:	4790      	blx	r2
 800c0ae:	6823      	ldr	r3, [r4, #0]
 800c0b0:	9001      	str	r0, [sp, #4]
 800c0b2:	6958      	ldr	r0, [r3, #20]
 800c0b4:	b938      	cbnz	r0, 800c0c6 <_DispLine+0x2e>
 800c0b6:	2001      	movs	r0, #1
 800c0b8:	f7fd ff04 	bl	8009ec4 <GUI__ManageCache>
 800c0bc:	6822      	ldr	r2, [r4, #0]
 800c0be:	69d3      	ldr	r3, [r2, #28]
 800c0c0:	695b      	ldr	r3, [r3, #20]
 800c0c2:	b933      	cbnz	r3, 800c0d2 <_DispLine+0x3a>
 800c0c4:	e023      	b.n	800c10e <_DispLine+0x76>
 800c0c6:	4629      	mov	r1, r5
 800c0c8:	f7ff fd60 	bl	800bb8c <GUI_RectsIntersect>
 800c0cc:	2800      	cmp	r0, #0
 800c0ce:	d1f2      	bne.n	800c0b6 <_DispLine+0x1e>
 800c0d0:	e025      	b.n	800c11e <_DispLine+0x86>
 800c0d2:	4c16      	ldr	r4, [pc, #88]	; (800c12c <_DispLine+0x94>)
 800c0d4:	689b      	ldr	r3, [r3, #8]
 800c0d6:	6821      	ldr	r1, [r4, #0]
 800c0d8:	b141      	cbz	r1, 800c0ec <_DispLine+0x54>
 800c0da:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800c0de:	9801      	ldr	r0, [sp, #4]
 800c0e0:	9900      	ldr	r1, [sp, #0]
 800c0e2:	4798      	blx	r3
 800c0e4:	6823      	ldr	r3, [r4, #0]
 800c0e6:	4628      	mov	r0, r5
 800c0e8:	4798      	blx	r3
 800c0ea:	e015      	b.n	800c118 <_DispLine+0x80>
 800c0ec:	9801      	ldr	r0, [sp, #4]
 800c0ee:	9900      	ldr	r1, [sp, #0]
 800c0f0:	4798      	blx	r3
 800c0f2:	e011      	b.n	800c118 <_DispLine+0x80>
 800c0f4:	a801      	add	r0, sp, #4
 800c0f6:	f7fe f9d5 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800c0fa:	6823      	ldr	r3, [r4, #0]
 800c0fc:	69db      	ldr	r3, [r3, #28]
 800c0fe:	681b      	ldr	r3, [r3, #0]
 800c100:	4605      	mov	r5, r0
 800c102:	4798      	blx	r3
 800c104:	4b0a      	ldr	r3, [pc, #40]	; (800c130 <_DispLine+0x98>)
 800c106:	681b      	ldr	r3, [r3, #0]
 800c108:	b10b      	cbz	r3, 800c10e <_DispLine+0x76>
 800c10a:	4628      	mov	r0, r5
 800c10c:	4798      	blx	r3
 800c10e:	9b00      	ldr	r3, [sp, #0]
 800c110:	3b01      	subs	r3, #1
 800c112:	2b00      	cmp	r3, #0
 800c114:	9300      	str	r3, [sp, #0]
 800c116:	daed      	bge.n	800c0f4 <_DispLine+0x5c>
 800c118:	2000      	movs	r0, #0
 800c11a:	f7fd fed3 	bl	8009ec4 <GUI__ManageCache>
 800c11e:	b003      	add	sp, #12
 800c120:	bd30      	pop	{r4, r5, pc}
 800c122:	bf00      	nop
 800c124:	200000cc 	.word	0x200000cc
 800c128:	200000c0 	.word	0x200000c0
 800c12c:	20002d00 	.word	0x20002d00
 800c130:	20002d10 	.word	0x20002d10

0800c134 <GUI__GetLineNumChars>:
 800c134:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c136:	460d      	mov	r5, r1
 800c138:	9001      	str	r0, [sp, #4]
 800c13a:	4604      	mov	r4, r0
 800c13c:	b198      	cbz	r0, 800c166 <GUI__GetLineNumChars+0x32>
 800c13e:	4b0b      	ldr	r3, [pc, #44]	; (800c16c <GUI__GetLineNumChars+0x38>)
 800c140:	681b      	ldr	r3, [r3, #0]
 800c142:	69db      	ldr	r3, [r3, #28]
 800c144:	695b      	ldr	r3, [r3, #20]
 800c146:	b10b      	cbz	r3, 800c14c <GUI__GetLineNumChars+0x18>
 800c148:	685b      	ldr	r3, [r3, #4]
 800c14a:	b90b      	cbnz	r3, 800c150 <GUI__GetLineNumChars+0x1c>
 800c14c:	2400      	movs	r4, #0
 800c14e:	e008      	b.n	800c162 <GUI__GetLineNumChars+0x2e>
 800c150:	4798      	blx	r3
 800c152:	e009      	b.n	800c168 <GUI__GetLineNumChars+0x34>
 800c154:	a801      	add	r0, sp, #4
 800c156:	f7fe f9a5 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800c15a:	b120      	cbz	r0, 800c166 <GUI__GetLineNumChars+0x32>
 800c15c:	280a      	cmp	r0, #10
 800c15e:	d002      	beq.n	800c166 <GUI__GetLineNumChars+0x32>
 800c160:	3401      	adds	r4, #1
 800c162:	42ac      	cmp	r4, r5
 800c164:	dbf6      	blt.n	800c154 <GUI__GetLineNumChars+0x20>
 800c166:	4620      	mov	r0, r4
 800c168:	b003      	add	sp, #12
 800c16a:	bd30      	pop	{r4, r5, pc}
 800c16c:	200000c0 	.word	0x200000c0

0800c170 <GUI__GetOverlap>:
 800c170:	b513      	push	{r0, r1, r4, lr}
 800c172:	a902      	add	r1, sp, #8
 800c174:	2400      	movs	r4, #0
 800c176:	f841 4d04 	str.w	r4, [r1, #-4]!
 800c17a:	f000 f8b7 	bl	800c2ec <GUI_GetCharDistXEx>
 800c17e:	9b01      	ldr	r3, [sp, #4]
 800c180:	4283      	cmp	r3, r0
 800c182:	bfcc      	ite	gt
 800c184:	ebc0 0003 	rsbgt	r0, r0, r3
 800c188:	4620      	movle	r0, r4
 800c18a:	b002      	add	sp, #8
 800c18c:	bd10      	pop	{r4, pc}
	...

0800c190 <GUI__GetLineDistX>:
 800c190:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c192:	4a15      	ldr	r2, [pc, #84]	; (800c1e8 <GUI__GetLineDistX+0x58>)
 800c194:	9001      	str	r0, [sp, #4]
 800c196:	ab02      	add	r3, sp, #8
 800c198:	6812      	ldr	r2, [r2, #0]
 800c19a:	f843 1d08 	str.w	r1, [r3, #-8]!
 800c19e:	4669      	mov	r1, sp
 800c1a0:	4790      	blx	r2
 800c1a2:	9001      	str	r0, [sp, #4]
 800c1a4:	b1f0      	cbz	r0, 800c1e4 <GUI__GetLineDistX+0x54>
 800c1a6:	4b11      	ldr	r3, [pc, #68]	; (800c1ec <GUI__GetLineDistX+0x5c>)
 800c1a8:	681b      	ldr	r3, [r3, #0]
 800c1aa:	69db      	ldr	r3, [r3, #28]
 800c1ac:	695b      	ldr	r3, [r3, #20]
 800c1ae:	b10b      	cbz	r3, 800c1b4 <GUI__GetLineDistX+0x24>
 800c1b0:	681b      	ldr	r3, [r3, #0]
 800c1b2:	b913      	cbnz	r3, 800c1ba <GUI__GetLineDistX+0x2a>
 800c1b4:	2500      	movs	r5, #0
 800c1b6:	462c      	mov	r4, r5
 800c1b8:	e002      	b.n	800c1c0 <GUI__GetLineDistX+0x30>
 800c1ba:	9900      	ldr	r1, [sp, #0]
 800c1bc:	4798      	blx	r3
 800c1be:	e011      	b.n	800c1e4 <GUI__GetLineDistX+0x54>
 800c1c0:	9b00      	ldr	r3, [sp, #0]
 800c1c2:	3b01      	subs	r3, #1
 800c1c4:	2b00      	cmp	r3, #0
 800c1c6:	9300      	str	r3, [sp, #0]
 800c1c8:	db07      	blt.n	800c1da <GUI__GetLineDistX+0x4a>
 800c1ca:	a801      	add	r0, sp, #4
 800c1cc:	f7fe f96a 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800c1d0:	4605      	mov	r5, r0
 800c1d2:	f000 f881 	bl	800c2d8 <GUI_GetCharDistX>
 800c1d6:	4404      	add	r4, r0
 800c1d8:	e7f2      	b.n	800c1c0 <GUI__GetLineDistX+0x30>
 800c1da:	4628      	mov	r0, r5
 800c1dc:	f7ff ffc8 	bl	800c170 <GUI__GetOverlap>
 800c1e0:	4420      	add	r0, r4
 800c1e2:	e7ff      	b.n	800c1e4 <GUI__GetLineDistX+0x54>
 800c1e4:	b003      	add	sp, #12
 800c1e6:	bd30      	pop	{r4, r5, pc}
 800c1e8:	200000cc 	.word	0x200000cc
 800c1ec:	200000c0 	.word	0x200000c0

0800c1f0 <GUI__DispLine>:
 800c1f0:	4b27      	ldr	r3, [pc, #156]	; (800c290 <GUI__DispLine+0xa0>)
 800c1f2:	681b      	ldr	r3, [r3, #0]
 800c1f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1f6:	4605      	mov	r5, r0
 800c1f8:	460c      	mov	r4, r1
 800c1fa:	b163      	cbz	r3, 800c216 <GUI__DispLine+0x26>
 800c1fc:	2000      	movs	r0, #0
 800c1fe:	f7fa fc7f 	bl	8006b00 <WM__InitIVRSearch>
 800c202:	2800      	cmp	r0, #0
 800c204:	d041      	beq.n	800c28a <GUI__DispLine+0x9a>
 800c206:	4628      	mov	r0, r5
 800c208:	4621      	mov	r1, r4
 800c20a:	466a      	mov	r2, sp
 800c20c:	f7ff ff44 	bl	800c098 <_DispLine>
 800c210:	f7fa fbb4 	bl	800697c <WM__GetNextIVR>
 800c214:	e7f5      	b.n	800c202 <GUI__DispLine+0x12>
 800c216:	6810      	ldr	r0, [r2, #0]
 800c218:	6851      	ldr	r1, [r2, #4]
 800c21a:	4e1e      	ldr	r6, [pc, #120]	; (800c294 <GUI__DispLine+0xa4>)
 800c21c:	466b      	mov	r3, sp
 800c21e:	c303      	stmia	r3!, {r0, r1}
 800c220:	6833      	ldr	r3, [r6, #0]
 800c222:	f8bd 1000 	ldrh.w	r1, [sp]
 800c226:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800c22a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800c22e:	4411      	add	r1, r2
 800c230:	f8ad 1000 	strh.w	r1, [sp]
 800c234:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800c238:	4419      	add	r1, r3
 800c23a:	f8ad 1002 	strh.w	r1, [sp, #2]
 800c23e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800c242:	440a      	add	r2, r1
 800c244:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c248:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c24c:	4668      	mov	r0, sp
 800c24e:	4413      	add	r3, r2
 800c250:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c254:	f7fa fc54 	bl	8006b00 <WM__InitIVRSearch>
 800c258:	6833      	ldr	r3, [r6, #0]
 800c25a:	b940      	cbnz	r0, 800c26e <GUI__DispLine+0x7e>
 800c25c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800c25e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c260:	1a8a      	subs	r2, r1, r2
 800c262:	845a      	strh	r2, [r3, #34]	; 0x22
 800c264:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800c266:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c268:	1a8a      	subs	r2, r1, r2
 800c26a:	849a      	strh	r2, [r3, #36]	; 0x24
 800c26c:	e00d      	b.n	800c28a <GUI__DispLine+0x9a>
 800c26e:	f8bd 2000 	ldrh.w	r2, [sp]
 800c272:	845a      	strh	r2, [r3, #34]	; 0x22
 800c274:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c278:	849a      	strh	r2, [r3, #36]	; 0x24
 800c27a:	4628      	mov	r0, r5
 800c27c:	4621      	mov	r1, r4
 800c27e:	466a      	mov	r2, sp
 800c280:	f7ff ff0a 	bl	800c098 <_DispLine>
 800c284:	f7fa fb7a 	bl	800697c <WM__GetNextIVR>
 800c288:	e7e6      	b.n	800c258 <GUI__DispLine+0x68>
 800c28a:	b002      	add	sp, #8
 800c28c:	bd70      	pop	{r4, r5, r6, pc}
 800c28e:	bf00      	nop
 800c290:	20002cec 	.word	0x20002cec
 800c294:	200000c0 	.word	0x200000c0

0800c298 <GUI_GetYAdjust>:
 800c298:	4b0a      	ldr	r3, [pc, #40]	; (800c2c4 <GUI_GetYAdjust+0x2c>)
 800c29a:	681b      	ldr	r3, [r3, #0]
 800c29c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c29e:	f002 020c 	and.w	r2, r2, #12
 800c2a2:	2a08      	cmp	r2, #8
 800c2a4:	d007      	beq.n	800c2b6 <GUI_GetYAdjust+0x1e>
 800c2a6:	2a0c      	cmp	r2, #12
 800c2a8:	d005      	beq.n	800c2b6 <GUI_GetYAdjust+0x1e>
 800c2aa:	2a04      	cmp	r2, #4
 800c2ac:	d107      	bne.n	800c2be <GUI_GetYAdjust+0x26>
 800c2ae:	69db      	ldr	r3, [r3, #28]
 800c2b0:	7e18      	ldrb	r0, [r3, #24]
 800c2b2:	3801      	subs	r0, #1
 800c2b4:	4770      	bx	lr
 800c2b6:	69db      	ldr	r3, [r3, #28]
 800c2b8:	7e18      	ldrb	r0, [r3, #24]
 800c2ba:	0840      	lsrs	r0, r0, #1
 800c2bc:	4770      	bx	lr
 800c2be:	2000      	movs	r0, #0
 800c2c0:	4770      	bx	lr
 800c2c2:	bf00      	nop
 800c2c4:	200000c0 	.word	0x200000c0

0800c2c8 <GUI_GetFontDistY>:
 800c2c8:	4b02      	ldr	r3, [pc, #8]	; (800c2d4 <GUI_GetFontDistY+0xc>)
 800c2ca:	681b      	ldr	r3, [r3, #0]
 800c2cc:	69db      	ldr	r3, [r3, #28]
 800c2ce:	7e58      	ldrb	r0, [r3, #25]
 800c2d0:	4770      	bx	lr
 800c2d2:	bf00      	nop
 800c2d4:	200000c0 	.word	0x200000c0

0800c2d8 <GUI_GetCharDistX>:
 800c2d8:	b508      	push	{r3, lr}
 800c2da:	4b03      	ldr	r3, [pc, #12]	; (800c2e8 <GUI_GetCharDistX+0x10>)
 800c2dc:	681b      	ldr	r3, [r3, #0]
 800c2de:	69db      	ldr	r3, [r3, #28]
 800c2e0:	2100      	movs	r1, #0
 800c2e2:	685b      	ldr	r3, [r3, #4]
 800c2e4:	4798      	blx	r3
 800c2e6:	bd08      	pop	{r3, pc}
 800c2e8:	200000c0 	.word	0x200000c0

0800c2ec <GUI_GetCharDistXEx>:
 800c2ec:	b508      	push	{r3, lr}
 800c2ee:	4b03      	ldr	r3, [pc, #12]	; (800c2fc <GUI_GetCharDistXEx+0x10>)
 800c2f0:	681b      	ldr	r3, [r3, #0]
 800c2f2:	69db      	ldr	r3, [r3, #28]
 800c2f4:	685b      	ldr	r3, [r3, #4]
 800c2f6:	4798      	blx	r3
 800c2f8:	bd08      	pop	{r3, pc}
 800c2fa:	bf00      	nop
 800c2fc:	200000c0 	.word	0x200000c0

0800c300 <_PushFreeBlock>:
 800c300:	4b07      	ldr	r3, [pc, #28]	; (800c320 <_PushFreeBlock+0x20>)
 800c302:	685a      	ldr	r2, [r3, #4]
 800c304:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800c306:	3201      	adds	r2, #1
 800c308:	b510      	push	{r4, lr}
 800c30a:	605a      	str	r2, [r3, #4]
 800c30c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c30e:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800c312:	6061      	str	r1, [r4, #4]
 800c314:	2100      	movs	r1, #0
 800c316:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800c31a:	6258      	str	r0, [r3, #36]	; 0x24
 800c31c:	bd10      	pop	{r4, pc}
 800c31e:	bf00      	nop
 800c320:	20002d44 	.word	0x20002d44

0800c324 <_RemoveFreeBlock>:
 800c324:	b510      	push	{r4, lr}
 800c326:	6842      	ldr	r2, [r0, #4]
 800c328:	230f      	movs	r3, #15
 800c32a:	490d      	ldr	r1, [pc, #52]	; (800c360 <_RemoveFreeBlock+0x3c>)
 800c32c:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800c330:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800c332:	42a2      	cmp	r2, r4
 800c334:	d203      	bcs.n	800c33e <_RemoveFreeBlock+0x1a>
 800c336:	f113 33ff 	adds.w	r3, r3, #4294967295
 800c33a:	d2f6      	bcs.n	800c32a <_RemoveFreeBlock+0x6>
 800c33c:	bd10      	pop	{r4, pc}
 800c33e:	2b0f      	cmp	r3, #15
 800c340:	d80c      	bhi.n	800c35c <_RemoveFreeBlock+0x38>
 800c342:	680c      	ldr	r4, [r1, #0]
 800c344:	1aa2      	subs	r2, r4, r2
 800c346:	600a      	str	r2, [r1, #0]
 800c348:	6882      	ldr	r2, [r0, #8]
 800c34a:	68c0      	ldr	r0, [r0, #12]
 800c34c:	b102      	cbz	r2, 800c350 <_RemoveFreeBlock+0x2c>
 800c34e:	6050      	str	r0, [r2, #4]
 800c350:	b108      	cbz	r0, 800c356 <_RemoveFreeBlock+0x32>
 800c352:	6002      	str	r2, [r0, #0]
 800c354:	bd10      	pop	{r4, pc}
 800c356:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800c35a:	645a      	str	r2, [r3, #68]	; 0x44
 800c35c:	bd10      	pop	{r4, pc}
 800c35e:	bf00      	nop
 800c360:	20002d44 	.word	0x20002d44

0800c364 <_AddFreeMemory>:
 800c364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c366:	4e26      	ldr	r6, [pc, #152]	; (800c400 <_AddFreeMemory+0x9c>)
 800c368:	68f3      	ldr	r3, [r6, #12]
 800c36a:	1e5a      	subs	r2, r3, #1
 800c36c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800c36e:	4605      	mov	r5, r0
 800c370:	4413      	add	r3, r2
 800c372:	1808      	adds	r0, r1, r0
 800c374:	4298      	cmp	r0, r3
 800c376:	460c      	mov	r4, r1
 800c378:	d805      	bhi.n	800c386 <_AddFreeMemory+0x22>
 800c37a:	594b      	ldr	r3, [r1, r5]
 800c37c:	b91b      	cbnz	r3, 800c386 <_AddFreeMemory+0x22>
 800c37e:	6843      	ldr	r3, [r0, #4]
 800c380:	441d      	add	r5, r3
 800c382:	f7ff ffcf 	bl	800c324 <_RemoveFreeBlock>
 800c386:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800c388:	429c      	cmp	r4, r3
 800c38a:	d90a      	bls.n	800c3a2 <_AddFreeMemory+0x3e>
 800c38c:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800c390:	1be7      	subs	r7, r4, r7
 800c392:	683b      	ldr	r3, [r7, #0]
 800c394:	b92b      	cbnz	r3, 800c3a2 <_AddFreeMemory+0x3e>
 800c396:	687b      	ldr	r3, [r7, #4]
 800c398:	4638      	mov	r0, r7
 800c39a:	441d      	add	r5, r3
 800c39c:	f7ff ffc2 	bl	800c324 <_RemoveFreeBlock>
 800c3a0:	463c      	mov	r4, r7
 800c3a2:	230f      	movs	r3, #15
 800c3a4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800c3a8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800c3aa:	4295      	cmp	r5, r2
 800c3ac:	d203      	bcs.n	800c3b6 <_AddFreeMemory+0x52>
 800c3ae:	f113 33ff 	adds.w	r3, r3, #4294967295
 800c3b2:	d2f7      	bcs.n	800c3a4 <_AddFreeMemory+0x40>
 800c3b4:	e022      	b.n	800c3fc <_AddFreeMemory+0x98>
 800c3b6:	2b0f      	cmp	r3, #15
 800c3b8:	d820      	bhi.n	800c3fc <_AddFreeMemory+0x98>
 800c3ba:	3308      	adds	r3, #8
 800c3bc:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800c3c0:	1961      	adds	r1, r4, r5
 800c3c2:	6852      	ldr	r2, [r2, #4]
 800c3c4:	60a2      	str	r2, [r4, #8]
 800c3c6:	2000      	movs	r0, #0
 800c3c8:	e884 0021 	stmia.w	r4, {r0, r5}
 800c3cc:	6124      	str	r4, [r4, #16]
 800c3ce:	f841 5c04 	str.w	r5, [r1, #-4]
 800c3d2:	f104 0108 	add.w	r1, r4, #8
 800c3d6:	b102      	cbz	r2, 800c3da <_AddFreeMemory+0x76>
 800c3d8:	6051      	str	r1, [r2, #4]
 800c3da:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800c3de:	60e0      	str	r0, [r4, #12]
 800c3e0:	6059      	str	r1, [r3, #4]
 800c3e2:	6833      	ldr	r3, [r6, #0]
 800c3e4:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800c3e8:	4a05      	ldr	r2, [pc, #20]	; (800c400 <_AddFreeMemory+0x9c>)
 800c3ea:	442b      	add	r3, r5
 800c3ec:	6033      	str	r3, [r6, #0]
 800c3ee:	b929      	cbnz	r1, 800c3fc <_AddFreeMemory+0x98>
 800c3f0:	68d1      	ldr	r1, [r2, #12]
 800c3f2:	1acb      	subs	r3, r1, r3
 800c3f4:	6891      	ldr	r1, [r2, #8]
 800c3f6:	4299      	cmp	r1, r3
 800c3f8:	bf38      	it	cc
 800c3fa:	6093      	strcc	r3, [r2, #8]
 800c3fc:	4628      	mov	r0, r5
 800c3fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c400:	20002d44 	.word	0x20002d44

0800c404 <_RemoveHoles>:
 800c404:	4b25      	ldr	r3, [pc, #148]	; (800c49c <_RemoveHoles+0x98>)
 800c406:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c40a:	68da      	ldr	r2, [r3, #12]
 800c40c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800c40e:	3a01      	subs	r2, #1
 800c410:	4682      	mov	sl, r0
 800c412:	eb02 0904 	add.w	r9, r2, r4
 800c416:	469b      	mov	fp, r3
 800c418:	e894 0028 	ldmia.w	r4, {r3, r5}
 800c41c:	2b00      	cmp	r3, #0
 800c41e:	d133      	bne.n	800c488 <_RemoveHoles+0x84>
 800c420:	eb04 0805 	add.w	r8, r4, r5
 800c424:	45c8      	cmp	r8, r9
 800c426:	d22f      	bcs.n	800c488 <_RemoveHoles+0x84>
 800c428:	f854 c005 	ldr.w	ip, [r4, r5]
 800c42c:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800c430:	f1bc 0f00 	cmp.w	ip, #0
 800c434:	d028      	beq.n	800c488 <_RemoveHoles+0x84>
 800c436:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800c43a:	4f18      	ldr	r7, [pc, #96]	; (800c49c <_RemoveHoles+0x98>)
 800c43c:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800c440:	2b01      	cmp	r3, #1
 800c442:	d121      	bne.n	800c488 <_RemoveHoles+0x84>
 800c444:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c446:	4620      	mov	r0, r4
 800c448:	e88d 1008 	stmia.w	sp, {r3, ip}
 800c44c:	f7ff ff6a 	bl	800c324 <_RemoveFreeBlock>
 800c450:	f8d8 1000 	ldr.w	r1, [r8]
 800c454:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c456:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800c45a:	4620      	mov	r0, r4
 800c45c:	6054      	str	r4, [r2, #4]
 800c45e:	4641      	mov	r1, r8
 800c460:	4632      	mov	r2, r6
 800c462:	f004 fc55 	bl	8010d10 <memmove>
 800c466:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800c46a:	459c      	cmp	ip, r3
 800c46c:	d102      	bne.n	800c474 <_RemoveHoles+0x70>
 800c46e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c470:	1b5b      	subs	r3, r3, r5
 800c472:	637b      	str	r3, [r7, #52]	; 0x34
 800c474:	4628      	mov	r0, r5
 800c476:	19a1      	adds	r1, r4, r6
 800c478:	f7ff ff74 	bl	800c364 <_AddFreeMemory>
 800c47c:	f1ba 0f00 	cmp.w	sl, #0
 800c480:	d001      	beq.n	800c486 <_RemoveHoles+0x82>
 800c482:	4582      	cmp	sl, r0
 800c484:	d905      	bls.n	800c492 <_RemoveHoles+0x8e>
 800c486:	4635      	mov	r5, r6
 800c488:	442c      	add	r4, r5
 800c48a:	454c      	cmp	r4, r9
 800c48c:	d3c4      	bcc.n	800c418 <_RemoveHoles+0x14>
 800c48e:	2001      	movs	r0, #1
 800c490:	e000      	b.n	800c494 <_RemoveHoles+0x90>
 800c492:	2000      	movs	r0, #0
 800c494:	b003      	add	sp, #12
 800c496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c49a:	bf00      	nop
 800c49c:	20002d44 	.word	0x20002d44

0800c4a0 <GUI_ALLOC_FreeFixedBlock>:
 800c4a0:	b128      	cbz	r0, 800c4ae <GUI_ALLOC_FreeFixedBlock+0xe>
 800c4a2:	4a03      	ldr	r2, [pc, #12]	; (800c4b0 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800c4a4:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800c4a6:	6003      	str	r3, [r0, #0]
 800c4a8:	b103      	cbz	r3, 800c4ac <GUI_ALLOC_FreeFixedBlock+0xc>
 800c4aa:	6058      	str	r0, [r3, #4]
 800c4ac:	63d0      	str	r0, [r2, #60]	; 0x3c
 800c4ae:	4770      	bx	lr
 800c4b0:	20002d44 	.word	0x20002d44

0800c4b4 <GUI_ALLOC_h2p>:
 800c4b4:	4b03      	ldr	r3, [pc, #12]	; (800c4c4 <GUI_ALLOC_h2p+0x10>)
 800c4b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4b8:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800c4bc:	6840      	ldr	r0, [r0, #4]
 800c4be:	3008      	adds	r0, #8
 800c4c0:	4770      	bx	lr
 800c4c2:	bf00      	nop
 800c4c4:	20002d44 	.word	0x20002d44

0800c4c8 <GUI_ALLOC_LockH>:
 800c4c8:	4b05      	ldr	r3, [pc, #20]	; (800c4e0 <GUI_ALLOC_LockH+0x18>)
 800c4ca:	69d9      	ldr	r1, [r3, #28]
 800c4cc:	3101      	adds	r1, #1
 800c4ce:	61d9      	str	r1, [r3, #28]
 800c4d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4d2:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800c4d6:	3101      	adds	r1, #1
 800c4d8:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800c4dc:	f7ff bfea 	b.w	800c4b4 <GUI_ALLOC_h2p>
 800c4e0:	20002d44 	.word	0x20002d44

0800c4e4 <GUI_ALLOC_UnlockH>:
 800c4e4:	b530      	push	{r4, r5, lr}
 800c4e6:	6802      	ldr	r2, [r0, #0]
 800c4e8:	4b09      	ldr	r3, [pc, #36]	; (800c510 <GUI_ALLOC_UnlockH+0x2c>)
 800c4ea:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800c4ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c4f0:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800c4f4:	2c01      	cmp	r4, #1
 800c4f6:	d903      	bls.n	800c500 <GUI_ALLOC_UnlockH+0x1c>
 800c4f8:	69dd      	ldr	r5, [r3, #28]
 800c4fa:	b10d      	cbz	r5, 800c500 <GUI_ALLOC_UnlockH+0x1c>
 800c4fc:	3d01      	subs	r5, #1
 800c4fe:	61dd      	str	r5, [r3, #28]
 800c500:	3c01      	subs	r4, #1
 800c502:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800c506:	2300      	movs	r3, #0
 800c508:	6003      	str	r3, [r0, #0]
 800c50a:	4618      	mov	r0, r3
 800c50c:	bd30      	pop	{r4, r5, pc}
 800c50e:	bf00      	nop
 800c510:	20002d44 	.word	0x20002d44

0800c514 <GUI_ALLOC_AssignMemory>:
 800c514:	4b02      	ldr	r3, [pc, #8]	; (800c520 <GUI_ALLOC_AssignMemory+0xc>)
 800c516:	f021 0103 	bic.w	r1, r1, #3
 800c51a:	6018      	str	r0, [r3, #0]
 800c51c:	6059      	str	r1, [r3, #4]
 800c51e:	4770      	bx	lr
 800c520:	20002c38 	.word	0x20002c38

0800c524 <GUI_ALLOC_GetSize>:
 800c524:	b130      	cbz	r0, 800c534 <GUI_ALLOC_GetSize+0x10>
 800c526:	4b04      	ldr	r3, [pc, #16]	; (800c538 <GUI_ALLOC_GetSize+0x14>)
 800c528:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c52a:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800c52e:	6843      	ldr	r3, [r0, #4]
 800c530:	6858      	ldr	r0, [r3, #4]
 800c532:	380c      	subs	r0, #12
 800c534:	4770      	bx	lr
 800c536:	bf00      	nop
 800c538:	20002d44 	.word	0x20002d44

0800c53c <GUI_ALLOC_Free>:
 800c53c:	b510      	push	{r4, lr}
 800c53e:	4604      	mov	r4, r0
 800c540:	b160      	cbz	r0, 800c55c <GUI_ALLOC_Free+0x20>
 800c542:	4b07      	ldr	r3, [pc, #28]	; (800c560 <GUI_ALLOC_Free+0x24>)
 800c544:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c546:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800c54a:	6859      	ldr	r1, [r3, #4]
 800c54c:	6848      	ldr	r0, [r1, #4]
 800c54e:	f7ff ff09 	bl	800c364 <_AddFreeMemory>
 800c552:	4620      	mov	r0, r4
 800c554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c558:	f7ff bed2 	b.w	800c300 <_PushFreeBlock>
 800c55c:	bd10      	pop	{r4, pc}
 800c55e:	bf00      	nop
 800c560:	20002d44 	.word	0x20002d44

0800c564 <_EnlargeBlocks>:
 800c564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c568:	4c23      	ldr	r4, [pc, #140]	; (800c5f8 <_EnlargeBlocks+0x94>)
 800c56a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c56c:	b93b      	cbnz	r3, 800c57e <_EnlargeBlocks+0x1a>
 800c56e:	4b23      	ldr	r3, [pc, #140]	; (800c5fc <_EnlargeBlocks+0x98>)
 800c570:	689d      	ldr	r5, [r3, #8]
 800c572:	685b      	ldr	r3, [r3, #4]
 800c574:	3508      	adds	r5, #8
 800c576:	fbb3 f5f5 	udiv	r5, r3, r5
 800c57a:	3502      	adds	r5, #2
 800c57c:	e003      	b.n	800c586 <_EnlargeBlocks+0x22>
 800c57e:	6923      	ldr	r3, [r4, #16]
 800c580:	1d1d      	adds	r5, r3, #4
 800c582:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800c586:	00e8      	lsls	r0, r5, #3
 800c588:	f000 f8f4 	bl	800c774 <_Alloc>
 800c58c:	4680      	mov	r8, r0
 800c58e:	b368      	cbz	r0, 800c5ec <_EnlargeBlocks+0x88>
 800c590:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c592:	6922      	ldr	r2, [r4, #16]
 800c594:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800c596:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800c59a:	00d2      	lsls	r2, r2, #3
 800c59c:	685e      	ldr	r6, [r3, #4]
 800c59e:	4b18      	ldr	r3, [pc, #96]	; (800c600 <_EnlargeBlocks+0x9c>)
 800c5a0:	3608      	adds	r6, #8
 800c5a2:	681b      	ldr	r3, [r3, #0]
 800c5a4:	4630      	mov	r0, r6
 800c5a6:	4798      	blx	r3
 800c5a8:	6922      	ldr	r2, [r4, #16]
 800c5aa:	6366      	str	r6, [r4, #52]	; 0x34
 800c5ac:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800c5b0:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800c5b4:	3104      	adds	r1, #4
 800c5b6:	4613      	mov	r3, r2
 800c5b8:	1e68      	subs	r0, r5, #1
 800c5ba:	4283      	cmp	r3, r0
 800c5bc:	f101 0108 	add.w	r1, r1, #8
 800c5c0:	d203      	bcs.n	800c5ca <_EnlargeBlocks+0x66>
 800c5c2:	3301      	adds	r3, #1
 800c5c4:	f841 3c08 	str.w	r3, [r1, #-8]
 800c5c8:	e7f6      	b.n	800c5b8 <_EnlargeBlocks+0x54>
 800c5ca:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800c5ce:	2600      	movs	r6, #0
 800c5d0:	605e      	str	r6, [r3, #4]
 800c5d2:	6863      	ldr	r3, [r4, #4]
 800c5d4:	6262      	str	r2, [r4, #36]	; 0x24
 800c5d6:	1a9b      	subs	r3, r3, r2
 800c5d8:	442b      	add	r3, r5
 800c5da:	6063      	str	r3, [r4, #4]
 800c5dc:	6125      	str	r5, [r4, #16]
 800c5de:	4638      	mov	r0, r7
 800c5e0:	b13f      	cbz	r7, 800c5f2 <_EnlargeBlocks+0x8e>
 800c5e2:	f7ff ffab 	bl	800c53c <GUI_ALLOC_Free>
 800c5e6:	4630      	mov	r0, r6
 800c5e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5ec:	2001      	movs	r0, #1
 800c5ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5f6:	bf00      	nop
 800c5f8:	20002d44 	.word	0x20002d44
 800c5fc:	20002c38 	.word	0x20002c38
 800c600:	200000b0 	.word	0x200000b0

0800c604 <_InitOnce>:
 800c604:	b538      	push	{r3, r4, r5, lr}
 800c606:	4916      	ldr	r1, [pc, #88]	; (800c660 <_InitOnce+0x5c>)
 800c608:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c60c:	bb3b      	cbnz	r3, 800c65e <_InitOnce+0x5a>
 800c60e:	4a15      	ldr	r2, [pc, #84]	; (800c664 <_InitOnce+0x60>)
 800c610:	2301      	movs	r3, #1
 800c612:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 800c616:	6893      	ldr	r3, [r2, #8]
 800c618:	b913      	cbnz	r3, 800c620 <_InitOnce+0x1c>
 800c61a:	6853      	ldr	r3, [r2, #4]
 800c61c:	089b      	lsrs	r3, r3, #2
 800c61e:	6093      	str	r3, [r2, #8]
 800c620:	235a      	movs	r3, #90	; 0x5a
 800c622:	620b      	str	r3, [r1, #32]
 800c624:	2300      	movs	r3, #0
 800c626:	2510      	movs	r5, #16
 800c628:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 800c62c:	409d      	lsls	r5, r3
 800c62e:	3301      	adds	r3, #1
 800c630:	2b10      	cmp	r3, #16
 800c632:	4c0b      	ldr	r4, [pc, #44]	; (800c660 <_InitOnce+0x5c>)
 800c634:	6405      	str	r5, [r0, #64]	; 0x40
 800c636:	d1f6      	bne.n	800c626 <_InitOnce+0x22>
 800c638:	6850      	ldr	r0, [r2, #4]
 800c63a:	6811      	ldr	r1, [r2, #0]
 800c63c:	63a1      	str	r1, [r4, #56]	; 0x38
 800c63e:	2302      	movs	r3, #2
 800c640:	6123      	str	r3, [r4, #16]
 800c642:	f1a0 0314 	sub.w	r3, r0, #20
 800c646:	440b      	add	r3, r1
 800c648:	2501      	movs	r5, #1
 800c64a:	6363      	str	r3, [r4, #52]	; 0x34
 800c64c:	60e0      	str	r0, [r4, #12]
 800c64e:	605d      	str	r5, [r3, #4]
 800c650:	6265      	str	r5, [r4, #36]	; 0x24
 800c652:	6065      	str	r5, [r4, #4]
 800c654:	f7ff fe86 	bl	800c364 <_AddFreeMemory>
 800c658:	f7ff ff84 	bl	800c564 <_EnlargeBlocks>
 800c65c:	6325      	str	r5, [r4, #48]	; 0x30
 800c65e:	bd38      	pop	{r3, r4, r5, pc}
 800c660:	20002d44 	.word	0x20002d44
 800c664:	20002c38 	.word	0x20002c38

0800c668 <GUI_ALLOC_GetFixedBlock>:
 800c668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c66c:	4605      	mov	r5, r0
 800c66e:	4e26      	ldr	r6, [pc, #152]	; (800c708 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800c670:	3503      	adds	r5, #3
 800c672:	f7ff ffc7 	bl	800c604 <_InitOnce>
 800c676:	f025 0503 	bic.w	r5, r5, #3
 800c67a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c67c:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800c67e:	3504      	adds	r5, #4
 800c680:	429d      	cmp	r5, r3
 800c682:	bf38      	it	cc
 800c684:	461d      	movcc	r5, r3
 800c686:	4614      	mov	r4, r2
 800c688:	b12c      	cbz	r4, 800c696 <GUI_ALLOC_GetFixedBlock+0x2e>
 800c68a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c68e:	42ab      	cmp	r3, r5
 800c690:	d02c      	beq.n	800c6ec <GUI_ALLOC_GetFixedBlock+0x84>
 800c692:	6824      	ldr	r4, [r4, #0]
 800c694:	e7f8      	b.n	800c688 <GUI_ALLOC_GetFixedBlock+0x20>
 800c696:	68f3      	ldr	r3, [r6, #12]
 800c698:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800c69a:	eb02 0803 	add.w	r8, r2, r3
 800c69e:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800c6a2:	ebc7 0708 	rsb	r7, r7, r8
 800c6a6:	683b      	ldr	r3, [r7, #0]
 800c6a8:	b133      	cbz	r3, 800c6b8 <GUI_ALLOC_GetFixedBlock+0x50>
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	f7ff feaa 	bl	800c404 <_RemoveHoles>
 800c6b0:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800c6b4:	ebc7 0708 	rsb	r7, r7, r8
 800c6b8:	683b      	ldr	r3, [r7, #0]
 800c6ba:	bb13      	cbnz	r3, 800c702 <GUI_ALLOC_GetFixedBlock+0x9a>
 800c6bc:	687b      	ldr	r3, [r7, #4]
 800c6be:	42ab      	cmp	r3, r5
 800c6c0:	db1f      	blt.n	800c702 <GUI_ALLOC_GetFixedBlock+0x9a>
 800c6c2:	4638      	mov	r0, r7
 800c6c4:	1d1c      	adds	r4, r3, #4
 800c6c6:	f7ff fe2d 	bl	800c324 <_RemoveFreeBlock>
 800c6ca:	68f3      	ldr	r3, [r6, #12]
 800c6cc:	6878      	ldr	r0, [r7, #4]
 800c6ce:	1b5b      	subs	r3, r3, r5
 800c6d0:	60f3      	str	r3, [r6, #12]
 800c6d2:	6973      	ldr	r3, [r6, #20]
 800c6d4:	1b64      	subs	r4, r4, r5
 800c6d6:	442b      	add	r3, r5
 800c6d8:	1b40      	subs	r0, r0, r5
 800c6da:	443c      	add	r4, r7
 800c6dc:	6173      	str	r3, [r6, #20]
 800c6de:	d002      	beq.n	800c6e6 <GUI_ALLOC_GetFixedBlock+0x7e>
 800c6e0:	4639      	mov	r1, r7
 800c6e2:	f7ff fe3f 	bl	800c364 <_AddFreeMemory>
 800c6e6:	f844 5c04 	str.w	r5, [r4, #-4]
 800c6ea:	e00a      	b.n	800c702 <GUI_ALLOC_GetFixedBlock+0x9a>
 800c6ec:	6823      	ldr	r3, [r4, #0]
 800c6ee:	b10b      	cbz	r3, 800c6f4 <GUI_ALLOC_GetFixedBlock+0x8c>
 800c6f0:	6861      	ldr	r1, [r4, #4]
 800c6f2:	6059      	str	r1, [r3, #4]
 800c6f4:	6861      	ldr	r1, [r4, #4]
 800c6f6:	b101      	cbz	r1, 800c6fa <GUI_ALLOC_GetFixedBlock+0x92>
 800c6f8:	600b      	str	r3, [r1, #0]
 800c6fa:	42a2      	cmp	r2, r4
 800c6fc:	d101      	bne.n	800c702 <GUI_ALLOC_GetFixedBlock+0x9a>
 800c6fe:	6823      	ldr	r3, [r4, #0]
 800c700:	63f3      	str	r3, [r6, #60]	; 0x3c
 800c702:	4620      	mov	r0, r4
 800c704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c708:	20002d44 	.word	0x20002d44

0800c70c <GUI_ALLOC_GetMaxSize>:
 800c70c:	b508      	push	{r3, lr}
 800c70e:	f7ff ff79 	bl	800c604 <_InitOnce>
 800c712:	2200      	movs	r2, #0
 800c714:	4b0b      	ldr	r3, [pc, #44]	; (800c744 <GUI_ALLOC_GetMaxSize+0x38>)
 800c716:	4413      	add	r3, r2
 800c718:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c71c:	b113      	cbz	r3, 800c724 <GUI_ALLOC_GetMaxSize+0x18>
 800c71e:	689b      	ldr	r3, [r3, #8]
 800c720:	2000      	movs	r0, #0
 800c722:	e00b      	b.n	800c73c <GUI_ALLOC_GetMaxSize+0x30>
 800c724:	3a08      	subs	r2, #8
 800c726:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800c72a:	d1f3      	bne.n	800c714 <GUI_ALLOC_GetMaxSize+0x8>
 800c72c:	e7f8      	b.n	800c720 <GUI_ALLOC_GetMaxSize+0x14>
 800c72e:	685a      	ldr	r2, [r3, #4]
 800c730:	689b      	ldr	r3, [r3, #8]
 800c732:	4290      	cmp	r0, r2
 800c734:	bf38      	it	cc
 800c736:	4610      	movcc	r0, r2
 800c738:	b113      	cbz	r3, 800c740 <GUI_ALLOC_GetMaxSize+0x34>
 800c73a:	689b      	ldr	r3, [r3, #8]
 800c73c:	2b00      	cmp	r3, #0
 800c73e:	d1f6      	bne.n	800c72e <GUI_ALLOC_GetMaxSize+0x22>
 800c740:	380c      	subs	r0, #12
 800c742:	bd08      	pop	{r3, pc}
 800c744:	20002d44 	.word	0x20002d44

0800c748 <GUI_ALLOC_RequestSize>:
 800c748:	b508      	push	{r3, lr}
 800c74a:	f7ff ffdf 	bl	800c70c <GUI_ALLOC_GetMaxSize>
 800c74e:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800c752:	f04f 0364 	mov.w	r3, #100	; 0x64
 800c756:	4a06      	ldr	r2, [pc, #24]	; (800c770 <GUI_ALLOC_RequestSize+0x28>)
 800c758:	d904      	bls.n	800c764 <GUI_ALLOC_RequestSize+0x1c>
 800c75a:	fb90 f0f3 	sdiv	r0, r0, r3
 800c75e:	6a13      	ldr	r3, [r2, #32]
 800c760:	4358      	muls	r0, r3
 800c762:	bd08      	pop	{r3, pc}
 800c764:	6a12      	ldr	r2, [r2, #32]
 800c766:	4350      	muls	r0, r2
 800c768:	fbb0 f0f3 	udiv	r0, r0, r3
 800c76c:	bd08      	pop	{r3, pc}
 800c76e:	bf00      	nop
 800c770:	20002d44 	.word	0x20002d44

0800c774 <_Alloc>:
 800c774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c778:	4d38      	ldr	r5, [pc, #224]	; (800c85c <_Alloc+0xe8>)
 800c77a:	4604      	mov	r4, r0
 800c77c:	f7ff ff42 	bl	800c604 <_InitOnce>
 800c780:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800c782:	682b      	ldr	r3, [r5, #0]
 800c784:	42bc      	cmp	r4, r7
 800c786:	bf24      	itt	cs
 800c788:	1ce7      	addcs	r7, r4, #3
 800c78a:	f027 0703 	biccs.w	r7, r7, #3
 800c78e:	370c      	adds	r7, #12
 800c790:	429f      	cmp	r7, r3
 800c792:	4c32      	ldr	r4, [pc, #200]	; (800c85c <_Alloc+0xe8>)
 800c794:	d83e      	bhi.n	800c814 <_Alloc+0xa0>
 800c796:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c798:	6862      	ldr	r2, [r4, #4]
 800c79a:	429a      	cmp	r2, r3
 800c79c:	d90f      	bls.n	800c7be <_Alloc+0x4a>
 800c79e:	686b      	ldr	r3, [r5, #4]
 800c7a0:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800c7a2:	3b01      	subs	r3, #1
 800c7a4:	606b      	str	r3, [r5, #4]
 800c7a6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800c7a8:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800c7ac:	eb03 0209 	add.w	r2, r3, r9
 800c7b0:	6852      	ldr	r2, [r2, #4]
 800c7b2:	626a      	str	r2, [r5, #36]	; 0x24
 800c7b4:	2201      	movs	r2, #1
 800c7b6:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800c7ba:	b956      	cbnz	r6, 800c7d2 <_Alloc+0x5e>
 800c7bc:	e02a      	b.n	800c814 <_Alloc+0xa0>
 800c7be:	3b01      	subs	r3, #1
 800c7c0:	6323      	str	r3, [r4, #48]	; 0x30
 800c7c2:	f7ff fecf 	bl	800c564 <_EnlargeBlocks>
 800c7c6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c7c8:	3301      	adds	r3, #1
 800c7ca:	6323      	str	r3, [r4, #48]	; 0x30
 800c7cc:	2800      	cmp	r0, #0
 800c7ce:	d0e6      	beq.n	800c79e <_Alloc+0x2a>
 800c7d0:	e020      	b.n	800c814 <_Alloc+0xa0>
 800c7d2:	230f      	movs	r3, #15
 800c7d4:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800c7d8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800c7da:	4297      	cmp	r7, r2
 800c7dc:	d20c      	bcs.n	800c7f8 <_Alloc+0x84>
 800c7de:	f113 33ff 	adds.w	r3, r3, #4294967295
 800c7e2:	d2f7      	bcs.n	800c7d4 <_Alloc+0x60>
 800c7e4:	e008      	b.n	800c7f8 <_Alloc+0x84>
 800c7e6:	6894      	ldr	r4, [r2, #8]
 800c7e8:	b12c      	cbz	r4, 800c7f6 <_Alloc+0x82>
 800c7ea:	6862      	ldr	r2, [r4, #4]
 800c7ec:	4297      	cmp	r7, r2
 800c7ee:	d914      	bls.n	800c81a <_Alloc+0xa6>
 800c7f0:	68a2      	ldr	r2, [r4, #8]
 800c7f2:	2a00      	cmp	r2, #0
 800c7f4:	d1f7      	bne.n	800c7e6 <_Alloc+0x72>
 800c7f6:	3301      	adds	r3, #1
 800c7f8:	2b0f      	cmp	r3, #15
 800c7fa:	d803      	bhi.n	800c804 <_Alloc+0x90>
 800c7fc:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800c800:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800c802:	e7f6      	b.n	800c7f2 <_Alloc+0x7e>
 800c804:	4638      	mov	r0, r7
 800c806:	f7ff fdfd 	bl	800c404 <_RemoveHoles>
 800c80a:	2800      	cmp	r0, #0
 800c80c:	d0e1      	beq.n	800c7d2 <_Alloc+0x5e>
 800c80e:	4630      	mov	r0, r6
 800c810:	f7ff fd76 	bl	800c300 <_PushFreeBlock>
 800c814:	2000      	movs	r0, #0
 800c816:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c81a:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800c81e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800c820:	ebc7 0208 	rsb	r2, r7, r8
 800c824:	330c      	adds	r3, #12
 800c826:	4620      	mov	r0, r4
 800c828:	429a      	cmp	r2, r3
 800c82a:	bf38      	it	cc
 800c82c:	4647      	movcc	r7, r8
 800c82e:	f7ff fd79 	bl	800c324 <_RemoveFreeBlock>
 800c832:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800c834:	444b      	add	r3, r9
 800c836:	19e1      	adds	r1, r4, r7
 800c838:	605c      	str	r4, [r3, #4]
 800c83a:	45b8      	cmp	r8, r7
 800c83c:	f04f 0300 	mov.w	r3, #0
 800c840:	e884 00c0 	stmia.w	r4, {r6, r7}
 800c844:	60a3      	str	r3, [r4, #8]
 800c846:	6124      	str	r4, [r4, #16]
 800c848:	f841 7c04 	str.w	r7, [r1, #-4]
 800c84c:	dd03      	ble.n	800c856 <_Alloc+0xe2>
 800c84e:	ebc7 0008 	rsb	r0, r7, r8
 800c852:	f7ff fd87 	bl	800c364 <_AddFreeMemory>
 800c856:	4630      	mov	r0, r6
 800c858:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c85c:	20002d44 	.word	0x20002d44

0800c860 <GUI_ALLOC_AllocNoInit>:
 800c860:	b108      	cbz	r0, 800c866 <GUI_ALLOC_AllocNoInit+0x6>
 800c862:	f7ff bf87 	b.w	800c774 <_Alloc>
 800c866:	4770      	bx	lr

0800c868 <GUI_ALLOC_FreePtr>:
 800c868:	b510      	push	{r4, lr}
 800c86a:	4604      	mov	r4, r0
 800c86c:	6800      	ldr	r0, [r0, #0]
 800c86e:	f7ff fe65 	bl	800c53c <GUI_ALLOC_Free>
 800c872:	2300      	movs	r3, #0
 800c874:	6023      	str	r3, [r4, #0]
 800c876:	bd10      	pop	{r4, pc}

0800c878 <GUI_ALLOC_AllocInit>:
 800c878:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c87a:	4605      	mov	r5, r0
 800c87c:	460c      	mov	r4, r1
 800c87e:	b909      	cbnz	r1, 800c884 <GUI_ALLOC_AllocInit+0xc>
 800c880:	2000      	movs	r0, #0
 800c882:	e014      	b.n	800c8ae <GUI_ALLOC_AllocInit+0x36>
 800c884:	4608      	mov	r0, r1
 800c886:	f7ff ffeb 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800c88a:	4606      	mov	r6, r0
 800c88c:	2800      	cmp	r0, #0
 800c88e:	d0f7      	beq.n	800c880 <GUI_ALLOC_AllocInit+0x8>
 800c890:	f7ff fe1a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800c894:	9001      	str	r0, [sp, #4]
 800c896:	b10d      	cbz	r5, 800c89c <GUI_ALLOC_AllocInit+0x24>
 800c898:	4b06      	ldr	r3, [pc, #24]	; (800c8b4 <GUI_ALLOC_AllocInit+0x3c>)
 800c89a:	e000      	b.n	800c89e <GUI_ALLOC_AllocInit+0x26>
 800c89c:	4b06      	ldr	r3, [pc, #24]	; (800c8b8 <GUI_ALLOC_AllocInit+0x40>)
 800c89e:	681b      	ldr	r3, [r3, #0]
 800c8a0:	4629      	mov	r1, r5
 800c8a2:	4622      	mov	r2, r4
 800c8a4:	4798      	blx	r3
 800c8a6:	a801      	add	r0, sp, #4
 800c8a8:	f7ff fe1c 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800c8ac:	4630      	mov	r0, r6
 800c8ae:	b002      	add	sp, #8
 800c8b0:	bd70      	pop	{r4, r5, r6, pc}
 800c8b2:	bf00      	nop
 800c8b4:	200000b0 	.word	0x200000b0
 800c8b8:	200000ac 	.word	0x200000ac

0800c8bc <GUI_ALLOC_AllocZero>:
 800c8bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c8be:	4605      	mov	r5, r0
 800c8c0:	f7ff ffce 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800c8c4:	4606      	mov	r6, r0
 800c8c6:	b160      	cbz	r0, 800c8e2 <GUI_ALLOC_AllocZero+0x26>
 800c8c8:	f7ff fdfe 	bl	800c4c8 <GUI_ALLOC_LockH>
 800c8cc:	ac02      	add	r4, sp, #8
 800c8ce:	4b06      	ldr	r3, [pc, #24]	; (800c8e8 <GUI_ALLOC_AllocZero+0x2c>)
 800c8d0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c8d4:	681b      	ldr	r3, [r3, #0]
 800c8d6:	2100      	movs	r1, #0
 800c8d8:	462a      	mov	r2, r5
 800c8da:	4798      	blx	r3
 800c8dc:	4620      	mov	r0, r4
 800c8de:	f7ff fe01 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800c8e2:	4630      	mov	r0, r6
 800c8e4:	b002      	add	sp, #8
 800c8e6:	bd70      	pop	{r4, r5, r6, pc}
 800c8e8:	200000ac 	.word	0x200000ac

0800c8ec <GUI_ALLOC_Realloc>:
 800c8ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c8ee:	4604      	mov	r4, r0
 800c8f0:	4608      	mov	r0, r1
 800c8f2:	460e      	mov	r6, r1
 800c8f4:	f7ff ffb4 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800c8f8:	4605      	mov	r5, r0
 800c8fa:	b300      	cbz	r0, 800c93e <GUI_ALLOC_Realloc+0x52>
 800c8fc:	b1fc      	cbz	r4, 800c93e <GUI_ALLOC_Realloc+0x52>
 800c8fe:	4620      	mov	r0, r4
 800c900:	f7ff fe10 	bl	800c524 <GUI_ALLOC_GetSize>
 800c904:	42b0      	cmp	r0, r6
 800c906:	bfb4      	ite	lt
 800c908:	4607      	movlt	r7, r0
 800c90a:	4637      	movge	r7, r6
 800c90c:	4628      	mov	r0, r5
 800c90e:	f7ff fddb 	bl	800c4c8 <GUI_ALLOC_LockH>
 800c912:	9000      	str	r0, [sp, #0]
 800c914:	4620      	mov	r0, r4
 800c916:	f7ff fdd7 	bl	800c4c8 <GUI_ALLOC_LockH>
 800c91a:	ae02      	add	r6, sp, #8
 800c91c:	4b09      	ldr	r3, [pc, #36]	; (800c944 <GUI_ALLOC_Realloc+0x58>)
 800c91e:	9001      	str	r0, [sp, #4]
 800c920:	4601      	mov	r1, r0
 800c922:	681b      	ldr	r3, [r3, #0]
 800c924:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800c928:	463a      	mov	r2, r7
 800c92a:	4798      	blx	r3
 800c92c:	4668      	mov	r0, sp
 800c92e:	f7ff fdd9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800c932:	a801      	add	r0, sp, #4
 800c934:	f7ff fdd6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800c938:	4620      	mov	r0, r4
 800c93a:	f7ff fdff 	bl	800c53c <GUI_ALLOC_Free>
 800c93e:	4628      	mov	r0, r5
 800c940:	b003      	add	sp, #12
 800c942:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c944:	200000b0 	.word	0x200000b0

0800c948 <GUI_DrawRect>:
 800c948:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c94c:	4c1e      	ldr	r4, [pc, #120]	; (800c9c8 <GUI_DrawRect+0x80>)
 800c94e:	f8d4 e000 	ldr.w	lr, [r4]
 800c952:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800c956:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800c95a:	1905      	adds	r5, r0, r4
 800c95c:	4414      	add	r4, r2
 800c95e:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800c962:	3a01      	subs	r2, #1
 800c964:	b292      	uxth	r2, r2
 800c966:	198f      	adds	r7, r1, r6
 800c968:	441e      	add	r6, r3
 800c96a:	1aab      	subs	r3, r5, r2
 800c96c:	f8ad 3000 	strh.w	r3, [sp]
 800c970:	1913      	adds	r3, r2, r4
 800c972:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c976:	4668      	mov	r0, sp
 800c978:	1abb      	subs	r3, r7, r2
 800c97a:	4432      	add	r2, r6
 800c97c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c980:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c984:	f7fa f8bc 	bl	8006b00 <WM__InitIVRSearch>
 800c988:	b1d0      	cbz	r0, 800c9c0 <GUI_DrawRect+0x78>
 800c98a:	4628      	mov	r0, r5
 800c98c:	4639      	mov	r1, r7
 800c98e:	4622      	mov	r2, r4
 800c990:	f7fc fdc6 	bl	8009520 <LCD_DrawHLine>
 800c994:	f107 0901 	add.w	r9, r7, #1
 800c998:	4628      	mov	r0, r5
 800c99a:	4631      	mov	r1, r6
 800c99c:	4622      	mov	r2, r4
 800c99e:	f106 38ff 	add.w	r8, r6, #4294967295
 800c9a2:	f7fc fdbd 	bl	8009520 <LCD_DrawHLine>
 800c9a6:	4628      	mov	r0, r5
 800c9a8:	4649      	mov	r1, r9
 800c9aa:	4642      	mov	r2, r8
 800c9ac:	f7fc fdde 	bl	800956c <LCD_DrawVLine>
 800c9b0:	4620      	mov	r0, r4
 800c9b2:	4649      	mov	r1, r9
 800c9b4:	4642      	mov	r2, r8
 800c9b6:	f7fc fdd9 	bl	800956c <LCD_DrawVLine>
 800c9ba:	f7f9 ffdf 	bl	800697c <WM__GetNextIVR>
 800c9be:	e7e3      	b.n	800c988 <GUI_DrawRect+0x40>
 800c9c0:	b003      	add	sp, #12
 800c9c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9c6:	bf00      	nop
 800c9c8:	200000c0 	.word	0x200000c0

0800c9cc <LCD_Index2Color_M565>:
 800c9cc:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800c9d0:	4b06      	ldr	r3, [pc, #24]	; (800c9ec <LCD_Index2Color_M565+0x20>)
 800c9d2:	f000 021f 	and.w	r2, r0, #31
 800c9d6:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800c9da:	5c9a      	ldrb	r2, [r3, r2]
 800c9dc:	5c5b      	ldrb	r3, [r3, r1]
 800c9de:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800c9e2:	4a03      	ldr	r2, [pc, #12]	; (800c9f0 <LCD_Index2Color_M565+0x24>)
 800c9e4:	5c10      	ldrb	r0, [r2, r0]
 800c9e6:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800c9ea:	4770      	bx	lr
 800c9ec:	0801475e 	.word	0x0801475e
 800c9f0:	0801477e 	.word	0x0801477e

0800c9f4 <_Color2Index_M565>:
 800c9f4:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800c9f8:	4b06      	ldr	r3, [pc, #24]	; (800ca14 <_Color2Index_M565+0x20>)
 800c9fa:	b2c2      	uxtb	r2, r0
 800c9fc:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800ca00:	5c9a      	ldrb	r2, [r3, r2]
 800ca02:	5c5b      	ldrb	r3, [r3, r1]
 800ca04:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800ca08:	4a03      	ldr	r2, [pc, #12]	; (800ca18 <_Color2Index_M565+0x24>)
 800ca0a:	5c10      	ldrb	r0, [r2, r0]
 800ca0c:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800ca10:	4770      	bx	lr
 800ca12:	bf00      	nop
 800ca14:	0801465e 	.word	0x0801465e
 800ca18:	080147be 	.word	0x080147be

0800ca1c <_GetIndexMask_M565>:
 800ca1c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ca20:	4770      	bx	lr
	...

0800ca24 <_Color2IndexBulk>:
 800ca24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca26:	4f0f      	ldr	r7, [pc, #60]	; (800ca64 <_Color2IndexBulk+0x40>)
 800ca28:	683f      	ldr	r7, [r7, #0]
 800ca2a:	4606      	mov	r6, r0
 800ca2c:	460d      	mov	r5, r1
 800ca2e:	4614      	mov	r4, r2
 800ca30:	469c      	mov	ip, r3
 800ca32:	b10f      	cbz	r7, 800ca38 <_Color2IndexBulk+0x14>
 800ca34:	47b8      	blx	r7
 800ca36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca38:	f856 2b04 	ldr.w	r2, [r6], #4
 800ca3c:	490a      	ldr	r1, [pc, #40]	; (800ca68 <_Color2IndexBulk+0x44>)
 800ca3e:	b2d3      	uxtb	r3, r2
 800ca40:	3c01      	subs	r4, #1
 800ca42:	5cc8      	ldrb	r0, [r1, r3]
 800ca44:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800ca48:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ca4c:	5ccb      	ldrb	r3, [r1, r3]
 800ca4e:	4907      	ldr	r1, [pc, #28]	; (800ca6c <_Color2IndexBulk+0x48>)
 800ca50:	5c8a      	ldrb	r2, [r1, r2]
 800ca52:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800ca56:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800ca5a:	802b      	strh	r3, [r5, #0]
 800ca5c:	4465      	add	r5, ip
 800ca5e:	d1eb      	bne.n	800ca38 <_Color2IndexBulk+0x14>
 800ca60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca62:	bf00      	nop
 800ca64:	20002c48 	.word	0x20002c48
 800ca68:	0801465e 	.word	0x0801465e
 800ca6c:	080147be 	.word	0x080147be

0800ca70 <_Index2ColorBulk>:
 800ca70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca72:	4e13      	ldr	r6, [pc, #76]	; (800cac0 <_Index2ColorBulk+0x50>)
 800ca74:	6836      	ldr	r6, [r6, #0]
 800ca76:	4684      	mov	ip, r0
 800ca78:	4614      	mov	r4, r2
 800ca7a:	461d      	mov	r5, r3
 800ca7c:	b10e      	cbz	r6, 800ca82 <_Index2ColorBulk+0x12>
 800ca7e:	47b0      	blx	r6
 800ca80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca82:	1e50      	subs	r0, r2, #1
 800ca84:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800ca88:	3a01      	subs	r2, #1
 800ca8a:	fb03 c000 	mla	r0, r3, r0, ip
 800ca8e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ca92:	8802      	ldrh	r2, [r0, #0]
 800ca94:	4b0b      	ldr	r3, [pc, #44]	; (800cac4 <_Index2ColorBulk+0x54>)
 800ca96:	f002 061f 	and.w	r6, r2, #31
 800ca9a:	0ad7      	lsrs	r7, r2, #11
 800ca9c:	5d9e      	ldrb	r6, [r3, r6]
 800ca9e:	5ddb      	ldrb	r3, [r3, r7]
 800caa0:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800caa4:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800caa8:	4e07      	ldr	r6, [pc, #28]	; (800cac8 <_Index2ColorBulk+0x58>)
 800caaa:	5cb2      	ldrb	r2, [r6, r2]
 800caac:	3c01      	subs	r4, #1
 800caae:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800cab2:	f841 3904 	str.w	r3, [r1], #-4
 800cab6:	ebc5 0000 	rsb	r0, r5, r0
 800caba:	d1ea      	bne.n	800ca92 <_Index2ColorBulk+0x22>
 800cabc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cabe:	bf00      	nop
 800cac0:	20002c44 	.word	0x20002c44
 800cac4:	0801475e 	.word	0x0801475e
 800cac8:	0801477e 	.word	0x0801477e

0800cacc <LCD_Index2Color_888>:
 800cacc:	4770      	bx	lr

0800cace <LCD_Index2Color_8888>:
 800cace:	4770      	bx	lr

0800cad0 <_Color2Index_8888>:
 800cad0:	4770      	bx	lr

0800cad2 <_GetIndexMask_8888>:
 800cad2:	f04f 30ff 	mov.w	r0, #4294967295
 800cad6:	4770      	bx	lr

0800cad8 <_Color2IndexBulk>:
 800cad8:	b510      	push	{r4, lr}
 800cada:	f850 4b04 	ldr.w	r4, [r0], #4
 800cade:	600c      	str	r4, [r1, #0]
 800cae0:	3a01      	subs	r2, #1
 800cae2:	4419      	add	r1, r3
 800cae4:	d1f9      	bne.n	800cada <_Color2IndexBulk+0x2>
 800cae6:	bd10      	pop	{r4, pc}

0800cae8 <_Index2ColorBulk>:
 800cae8:	b510      	push	{r4, lr}
 800caea:	6804      	ldr	r4, [r0, #0]
 800caec:	f841 4b04 	str.w	r4, [r1], #4
 800caf0:	3a01      	subs	r2, #1
 800caf2:	4418      	add	r0, r3
 800caf4:	d1f9      	bne.n	800caea <_Index2ColorBulk+0x2>
 800caf6:	bd10      	pop	{r4, pc}

0800caf8 <_DrawDown>:
 800caf8:	4770      	bx	lr

0800cafa <_DrawUp>:
 800cafa:	4770      	bx	lr

0800cafc <_DrawDownRect>:
 800cafc:	4770      	bx	lr

0800cafe <_DrawUpRect>:
 800cafe:	4770      	bx	lr

0800cb00 <_DrawFlat>:
 800cb00:	4770      	bx	lr

0800cb02 <_EffectRequiresRedraw>:
 800cb02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb04:	460d      	mov	r5, r1
 800cb06:	f100 0108 	add.w	r1, r0, #8
 800cb0a:	4602      	mov	r2, r0
 800cb0c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800cb0e:	c903      	ldmia	r1, {r0, r1}
 800cb10:	681c      	ldr	r4, [r3, #0]
 800cb12:	e88d 0003 	stmia.w	sp, {r0, r1}
 800cb16:	4610      	mov	r0, r2
 800cb18:	4669      	mov	r1, sp
 800cb1a:	f7f8 fa07 	bl	8004f2c <WM__Screen2Client>
 800cb1e:	f9b5 2000 	ldrsh.w	r2, [r5]
 800cb22:	f9bd 3000 	ldrsh.w	r3, [sp]
 800cb26:	4422      	add	r2, r4
 800cb28:	429a      	cmp	r2, r3
 800cb2a:	dc17      	bgt.n	800cb5c <_EffectRequiresRedraw+0x5a>
 800cb2c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800cb30:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800cb34:	1b12      	subs	r2, r2, r4
 800cb36:	429a      	cmp	r2, r3
 800cb38:	db10      	blt.n	800cb5c <_EffectRequiresRedraw+0x5a>
 800cb3a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cb3e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800cb42:	4422      	add	r2, r4
 800cb44:	429a      	cmp	r2, r3
 800cb46:	dc09      	bgt.n	800cb5c <_EffectRequiresRedraw+0x5a>
 800cb48:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800cb4c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800cb50:	1b04      	subs	r4, r0, r4
 800cb52:	429c      	cmp	r4, r3
 800cb54:	bfac      	ite	ge
 800cb56:	2000      	movge	r0, #0
 800cb58:	2001      	movlt	r0, #1
 800cb5a:	e000      	b.n	800cb5e <_EffectRequiresRedraw+0x5c>
 800cb5c:	2001      	movs	r0, #1
 800cb5e:	b003      	add	sp, #12
 800cb60:	bd30      	pop	{r4, r5, pc}

0800cb62 <WIDGET__RotateRect90>:
 800cb62:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cb66:	b570      	push	{r4, r5, r6, lr}
 800cb68:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800cb6c:	8815      	ldrh	r5, [r2, #0]
 800cb6e:	88d0      	ldrh	r0, [r2, #6]
 800cb70:	8894      	ldrh	r4, [r2, #4]
 800cb72:	8852      	ldrh	r2, [r2, #2]
 800cb74:	804d      	strh	r5, [r1, #2]
 800cb76:	1af3      	subs	r3, r6, r3
 800cb78:	b29b      	uxth	r3, r3
 800cb7a:	1a18      	subs	r0, r3, r0
 800cb7c:	1a9b      	subs	r3, r3, r2
 800cb7e:	8008      	strh	r0, [r1, #0]
 800cb80:	808b      	strh	r3, [r1, #4]
 800cb82:	80cc      	strh	r4, [r1, #6]
 800cb84:	bd70      	pop	{r4, r5, r6, pc}

0800cb86 <WIDGET__GetClientRect>:
 800cb86:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800cb88:	071b      	lsls	r3, r3, #28
 800cb8a:	b513      	push	{r0, r1, r4, lr}
 800cb8c:	460c      	mov	r4, r1
 800cb8e:	d50f      	bpl.n	800cbb0 <WIDGET__GetClientRect+0x2a>
 800cb90:	4668      	mov	r0, sp
 800cb92:	f7f8 fc83 	bl	800549c <WM_GetClientRect>
 800cb96:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cb9a:	8023      	strh	r3, [r4, #0]
 800cb9c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cba0:	80a3      	strh	r3, [r4, #4]
 800cba2:	f8bd 3000 	ldrh.w	r3, [sp]
 800cba6:	8063      	strh	r3, [r4, #2]
 800cba8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cbac:	80e3      	strh	r3, [r4, #6]
 800cbae:	e002      	b.n	800cbb6 <WIDGET__GetClientRect+0x30>
 800cbb0:	4608      	mov	r0, r1
 800cbb2:	f7f8 fc73 	bl	800549c <WM_GetClientRect>
 800cbb6:	b002      	add	sp, #8
 800cbb8:	bd10      	pop	{r4, pc}

0800cbba <WIDGET__GetInsideRect>:
 800cbba:	b538      	push	{r3, r4, r5, lr}
 800cbbc:	4604      	mov	r4, r0
 800cbbe:	460d      	mov	r5, r1
 800cbc0:	f7f9 fbe8 	bl	8006394 <WM__GetClientRectWin>
 800cbc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800cbc6:	4628      	mov	r0, r5
 800cbc8:	4629      	mov	r1, r5
 800cbca:	681a      	ldr	r2, [r3, #0]
 800cbcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cbd0:	f7fd b871 	b.w	8009cb6 <GUI__ReduceRect>

0800cbd4 <WIDGET__Init>:
 800cbd4:	4b02      	ldr	r3, [pc, #8]	; (800cbe0 <WIDGET__Init+0xc>)
 800cbd6:	8642      	strh	r2, [r0, #50]	; 0x32
 800cbd8:	681b      	ldr	r3, [r3, #0]
 800cbda:	62c3      	str	r3, [r0, #44]	; 0x2c
 800cbdc:	8601      	strh	r1, [r0, #48]	; 0x30
 800cbde:	4770      	bx	lr
 800cbe0:	200000d0 	.word	0x200000d0

0800cbe4 <WIDGET_SetState>:
 800cbe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cbe6:	460c      	mov	r4, r1
 800cbe8:	4605      	mov	r5, r0
 800cbea:	f7ff fc6d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800cbee:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800cbf0:	9001      	str	r0, [sp, #4]
 800cbf2:	4294      	cmp	r4, r2
 800cbf4:	d003      	beq.n	800cbfe <WIDGET_SetState+0x1a>
 800cbf6:	8644      	strh	r4, [r0, #50]	; 0x32
 800cbf8:	4628      	mov	r0, r5
 800cbfa:	f7f9 fd15 	bl	8006628 <WM_InvalidateWindow>
 800cbfe:	a801      	add	r0, sp, #4
 800cc00:	f7ff fc70 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cc04:	b003      	add	sp, #12
 800cc06:	bd30      	pop	{r4, r5, pc}

0800cc08 <WIDGET_OrState>:
 800cc08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cc0a:	460c      	mov	r4, r1
 800cc0c:	4605      	mov	r5, r0
 800cc0e:	b178      	cbz	r0, 800cc30 <WIDGET_OrState+0x28>
 800cc10:	f7ff fc5a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800cc14:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800cc16:	9001      	str	r0, [sp, #4]
 800cc18:	ea04 0102 	and.w	r1, r4, r2
 800cc1c:	428c      	cmp	r4, r1
 800cc1e:	d004      	beq.n	800cc2a <WIDGET_OrState+0x22>
 800cc20:	4314      	orrs	r4, r2
 800cc22:	8644      	strh	r4, [r0, #50]	; 0x32
 800cc24:	4628      	mov	r0, r5
 800cc26:	f7f9 fcff 	bl	8006628 <WM_InvalidateWindow>
 800cc2a:	a801      	add	r0, sp, #4
 800cc2c:	f7ff fc5a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cc30:	b003      	add	sp, #12
 800cc32:	bd30      	pop	{r4, r5, pc}

0800cc34 <WIDGET_AndState>:
 800cc34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cc36:	460d      	mov	r5, r1
 800cc38:	4604      	mov	r4, r0
 800cc3a:	b170      	cbz	r0, 800cc5a <WIDGET_AndState+0x26>
 800cc3c:	f7ff fc44 	bl	800c4c8 <GUI_ALLOC_LockH>
 800cc40:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800cc42:	9001      	str	r0, [sp, #4]
 800cc44:	ea22 0105 	bic.w	r1, r2, r5
 800cc48:	428a      	cmp	r2, r1
 800cc4a:	d003      	beq.n	800cc54 <WIDGET_AndState+0x20>
 800cc4c:	8641      	strh	r1, [r0, #50]	; 0x32
 800cc4e:	4620      	mov	r0, r4
 800cc50:	f7f9 fcea 	bl	8006628 <WM_InvalidateWindow>
 800cc54:	a801      	add	r0, sp, #4
 800cc56:	f7ff fc45 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cc5a:	b003      	add	sp, #12
 800cc5c:	bd30      	pop	{r4, r5, pc}

0800cc5e <WIDGET_HandleActive>:
 800cc5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc60:	460d      	mov	r5, r1
 800cc62:	b085      	sub	sp, #20
 800cc64:	4606      	mov	r6, r0
 800cc66:	2800      	cmp	r0, #0
 800cc68:	f000 8095 	beq.w	800cd96 <WIDGET_HandleActive+0x138>
 800cc6c:	f7ff fc2c 	bl	800c4c8 <GUI_ALLOC_LockH>
 800cc70:	682b      	ldr	r3, [r5, #0]
 800cc72:	9002      	str	r0, [sp, #8]
 800cc74:	2b16      	cmp	r3, #22
 800cc76:	d054      	beq.n	800cd22 <WIDGET_HandleActive+0xc4>
 800cc78:	dc0c      	bgt.n	800cc94 <WIDGET_HandleActive+0x36>
 800cc7a:	2b11      	cmp	r3, #17
 800cc7c:	d033      	beq.n	800cce6 <WIDGET_HandleActive+0x88>
 800cc7e:	dc02      	bgt.n	800cc86 <WIDGET_HandleActive+0x28>
 800cc80:	2b0d      	cmp	r3, #13
 800cc82:	d040      	beq.n	800cd06 <WIDGET_HandleActive+0xa8>
 800cc84:	e080      	b.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cc86:	2b14      	cmp	r3, #20
 800cc88:	d079      	beq.n	800cd7e <WIDGET_HandleActive+0x120>
 800cc8a:	2b15      	cmp	r3, #21
 800cc8c:	d17c      	bne.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cc8e:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 800cc92:	e072      	b.n	800cd7a <WIDGET_HandleActive+0x11c>
 800cc94:	2b1f      	cmp	r3, #31
 800cc96:	d06d      	beq.n	800cd74 <WIDGET_HandleActive+0x116>
 800cc98:	dc02      	bgt.n	800cca0 <WIDGET_HandleActive+0x42>
 800cc9a:	2b1e      	cmp	r3, #30
 800cc9c:	d044      	beq.n	800cd28 <WIDGET_HandleActive+0xca>
 800cc9e:	e073      	b.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cca0:	2b31      	cmp	r3, #49	; 0x31
 800cca2:	d01e      	beq.n	800cce2 <WIDGET_HandleActive+0x84>
 800cca4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800cca8:	d16e      	bne.n	800cd88 <WIDGET_HandleActive+0x12a>
 800ccaa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ccac:	6819      	ldr	r1, [r3, #0]
 800ccae:	68eb      	ldr	r3, [r5, #12]
 800ccb0:	62c3      	str	r3, [r0, #44]	; 0x2c
 800ccb2:	681b      	ldr	r3, [r3, #0]
 800ccb4:	a802      	add	r0, sp, #8
 800ccb6:	1acd      	subs	r5, r1, r3
 800ccb8:	f7ff fc14 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ccbc:	4630      	mov	r0, r6
 800ccbe:	f7ff fc03 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ccc2:	ac04      	add	r4, sp, #16
 800ccc4:	4269      	negs	r1, r5
 800ccc6:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ccca:	460a      	mov	r2, r1
 800cccc:	462b      	mov	r3, r5
 800ccce:	9500      	str	r5, [sp, #0]
 800ccd0:	f7f8 f968 	bl	8004fa4 <WM__UpdateChildPositions>
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	f7ff fc05 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ccda:	4630      	mov	r0, r6
 800ccdc:	f7f9 fca4 	bl	8006628 <WM_InvalidateWindow>
 800cce0:	e050      	b.n	800cd84 <WIDGET_HandleActive+0x126>
 800cce2:	2400      	movs	r4, #0
 800cce4:	e041      	b.n	800cd6a <WIDGET_HandleActive+0x10c>
 800cce6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800cce8:	06d9      	lsls	r1, r3, #27
 800ccea:	d54d      	bpl.n	800cd88 <WIDGET_HandleActive+0x12a>
 800ccec:	68eb      	ldr	r3, [r5, #12]
 800ccee:	2b00      	cmp	r3, #0
 800ccf0:	d04a      	beq.n	800cd88 <WIDGET_HandleActive+0x12a>
 800ccf2:	7a1b      	ldrb	r3, [r3, #8]
 800ccf4:	2b00      	cmp	r3, #0
 800ccf6:	d047      	beq.n	800cd88 <WIDGET_HandleActive+0x12a>
 800ccf8:	a802      	add	r0, sp, #8
 800ccfa:	f7ff fbf3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ccfe:	4630      	mov	r0, r6
 800cd00:	f7f8 fe54 	bl	80059ac <WM_SetFocus>
 800cd04:	e040      	b.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cd06:	68eb      	ldr	r3, [r5, #12]
 800cd08:	68db      	ldr	r3, [r3, #12]
 800cd0a:	2b00      	cmp	r3, #0
 800cd0c:	d03c      	beq.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cd0e:	7a1b      	ldrb	r3, [r3, #8]
 800cd10:	2b00      	cmp	r3, #0
 800cd12:	d039      	beq.n	800cd88 <WIDGET_HandleActive+0x12a>
 800cd14:	a802      	add	r0, sp, #8
 800cd16:	f7ff fbe5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cd1a:	4630      	mov	r0, r6
 800cd1c:	f7f8 ff60 	bl	8005be0 <WM_BringToTop>
 800cd20:	e030      	b.n	800cd84 <WIDGET_HandleActive+0x126>
 800cd22:	68eb      	ldr	r3, [r5, #12]
 800cd24:	8603      	strh	r3, [r0, #48]	; 0x30
 800cd26:	e02d      	b.n	800cd84 <WIDGET_HandleActive+0x126>
 800cd28:	68eb      	ldr	r3, [r5, #12]
 800cd2a:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800cd2c:	2b01      	cmp	r3, #1
 800cd2e:	d108      	bne.n	800cd42 <WIDGET_HandleActive+0xe4>
 800cd30:	06ca      	lsls	r2, r1, #27
 800cd32:	d50d      	bpl.n	800cd50 <WIDGET_HandleActive+0xf2>
 800cd34:	4630      	mov	r0, r6
 800cd36:	f041 0101 	orr.w	r1, r1, #1
 800cd3a:	f7ff ff53 	bl	800cbe4 <WIDGET_SetState>
 800cd3e:	2708      	movs	r7, #8
 800cd40:	e008      	b.n	800cd54 <WIDGET_HandleActive+0xf6>
 800cd42:	f021 0101 	bic.w	r1, r1, #1
 800cd46:	4630      	mov	r0, r6
 800cd48:	f7ff ff4c 	bl	800cbe4 <WIDGET_SetState>
 800cd4c:	2709      	movs	r7, #9
 800cd4e:	e001      	b.n	800cd54 <WIDGET_HandleActive+0xf6>
 800cd50:	f04f 37ff 	mov.w	r7, #4294967295
 800cd54:	a802      	add	r0, sp, #8
 800cd56:	f7ff fbc5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cd5a:	1c7b      	adds	r3, r7, #1
 800cd5c:	f04f 0400 	mov.w	r4, #0
 800cd60:	d005      	beq.n	800cd6e <WIDGET_HandleActive+0x110>
 800cd62:	4630      	mov	r0, r6
 800cd64:	4639      	mov	r1, r7
 800cd66:	f7f8 fe16 	bl	8005996 <WM_NotifyParent>
 800cd6a:	60ec      	str	r4, [r5, #12]
 800cd6c:	e00d      	b.n	800cd8a <WIDGET_HandleActive+0x12c>
 800cd6e:	2301      	movs	r3, #1
 800cd70:	60eb      	str	r3, [r5, #12]
 800cd72:	e00a      	b.n	800cd8a <WIDGET_HandleActive+0x12c>
 800cd74:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800cd76:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800cd7a:	60eb      	str	r3, [r5, #12]
 800cd7c:	e002      	b.n	800cd84 <WIDGET_HandleActive+0x126>
 800cd7e:	68e9      	ldr	r1, [r5, #12]
 800cd80:	f7ff ff1b 	bl	800cbba <WIDGET__GetInsideRect>
 800cd84:	2400      	movs	r4, #0
 800cd86:	e000      	b.n	800cd8a <WIDGET_HandleActive+0x12c>
 800cd88:	2401      	movs	r4, #1
 800cd8a:	9b02      	ldr	r3, [sp, #8]
 800cd8c:	b123      	cbz	r3, 800cd98 <WIDGET_HandleActive+0x13a>
 800cd8e:	a802      	add	r0, sp, #8
 800cd90:	f7ff fba8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cd94:	e000      	b.n	800cd98 <WIDGET_HandleActive+0x13a>
 800cd96:	2401      	movs	r4, #1
 800cd98:	4620      	mov	r0, r4
 800cd9a:	b005      	add	sp, #20
 800cd9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cd9e <WIDGET__SetScrollState>:
 800cd9e:	b570      	push	{r4, r5, r6, lr}
 800cda0:	460d      	mov	r5, r1
 800cda2:	21fe      	movs	r1, #254	; 0xfe
 800cda4:	4616      	mov	r6, r2
 800cda6:	4604      	mov	r4, r0
 800cda8:	f7f8 fbfa 	bl	80055a0 <WM_GetDialogItem>
 800cdac:	4629      	mov	r1, r5
 800cdae:	f7f8 fe4b 	bl	8005a48 <WM_SetScrollState>
 800cdb2:	4620      	mov	r0, r4
 800cdb4:	21ff      	movs	r1, #255	; 0xff
 800cdb6:	f7f8 fbf3 	bl	80055a0 <WM_GetDialogItem>
 800cdba:	4631      	mov	r1, r6
 800cdbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdc0:	f7f8 be42 	b.w	8005a48 <WM_SetScrollState>

0800cdc4 <WIDGET__DrawTriangle>:
 800cdc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdc6:	461c      	mov	r4, r3
 800cdc8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800cdca:	9f06      	ldr	r7, [sp, #24]
 800cdcc:	071b      	lsls	r3, r3, #28
 800cdce:	460d      	mov	r5, r1
 800cdd0:	4616      	mov	r6, r2
 800cdd2:	d50a      	bpl.n	800cdea <WIDGET__DrawTriangle+0x26>
 800cdd4:	2c00      	cmp	r4, #0
 800cdd6:	db07      	blt.n	800cde8 <WIDGET__DrawTriangle+0x24>
 800cdd8:	4628      	mov	r0, r5
 800cdda:	1b31      	subs	r1, r6, r4
 800cddc:	19a2      	adds	r2, r4, r6
 800cdde:	f7fd ffe5 	bl	800adac <GUI_DrawHLine>
 800cde2:	3c01      	subs	r4, #1
 800cde4:	443d      	add	r5, r7
 800cde6:	e7f5      	b.n	800cdd4 <WIDGET__DrawTriangle+0x10>
 800cde8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdea:	2c00      	cmp	r4, #0
 800cdec:	db07      	blt.n	800cdfe <WIDGET__DrawTriangle+0x3a>
 800cdee:	4628      	mov	r0, r5
 800cdf0:	1b31      	subs	r1, r6, r4
 800cdf2:	19a2      	adds	r2, r4, r6
 800cdf4:	f7fe f834 	bl	800ae60 <GUI_DrawVLine>
 800cdf8:	3c01      	subs	r4, #1
 800cdfa:	443d      	add	r5, r7
 800cdfc:	e7f5      	b.n	800cdea <WIDGET__DrawTriangle+0x26>
 800cdfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ce00 <WIDGET__EFFECT_DrawDownRect>:
 800ce00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce02:	4605      	mov	r5, r0
 800ce04:	460c      	mov	r4, r1
 800ce06:	b919      	cbnz	r1, 800ce10 <WIDGET__EFFECT_DrawDownRect+0x10>
 800ce08:	4668      	mov	r0, sp
 800ce0a:	f7f8 fb47 	bl	800549c <WM_GetClientRect>
 800ce0e:	466c      	mov	r4, sp
 800ce10:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800ce12:	071b      	lsls	r3, r3, #28
 800ce14:	d505      	bpl.n	800ce22 <WIDGET__EFFECT_DrawDownRect+0x22>
 800ce16:	4622      	mov	r2, r4
 800ce18:	4628      	mov	r0, r5
 800ce1a:	4669      	mov	r1, sp
 800ce1c:	f7ff fea1 	bl	800cb62 <WIDGET__RotateRect90>
 800ce20:	466c      	mov	r4, sp
 800ce22:	4628      	mov	r0, r5
 800ce24:	4621      	mov	r1, r4
 800ce26:	f7ff fe6c 	bl	800cb02 <_EffectRequiresRedraw>
 800ce2a:	b118      	cbz	r0, 800ce34 <WIDGET__EFFECT_DrawDownRect+0x34>
 800ce2c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ce2e:	4620      	mov	r0, r4
 800ce30:	691b      	ldr	r3, [r3, #16]
 800ce32:	4798      	blx	r3
 800ce34:	b003      	add	sp, #12
 800ce36:	bd30      	pop	{r4, r5, pc}

0800ce38 <WIDGET_SetEffect>:
 800ce38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ce3a:	2300      	movs	r3, #0
 800ce3c:	9302      	str	r3, [sp, #8]
 800ce3e:	9103      	str	r1, [sp, #12]
 800ce40:	f44f 7340 	mov.w	r3, #768	; 0x300
 800ce44:	4669      	mov	r1, sp
 800ce46:	9300      	str	r3, [sp, #0]
 800ce48:	f7f9 fa95 	bl	8006376 <WM_SendMessage>
 800ce4c:	b005      	add	sp, #20
 800ce4e:	f85d fb04 	ldr.w	pc, [sp], #4

0800ce52 <_DeleteTimer>:
 800ce52:	b507      	push	{r0, r1, r2, lr}
 800ce54:	f7ff fb38 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ce58:	9001      	str	r0, [sp, #4]
 800ce5a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800ce5c:	f000 ff93 	bl	800dd86 <WM_DeleteTimer>
 800ce60:	a802      	add	r0, sp, #8
 800ce62:	2200      	movs	r2, #0
 800ce64:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800ce68:	665a      	str	r2, [r3, #100]	; 0x64
 800ce6a:	65da      	str	r2, [r3, #92]	; 0x5c
 800ce6c:	f7ff fb3a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ce70:	b003      	add	sp, #12
 800ce72:	f85d fb04 	ldr.w	pc, [sp], #4

0800ce76 <SCROLLBAR__Rect2VRect>:
 800ce76:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800ce78:	071b      	lsls	r3, r3, #28
 800ce7a:	b510      	push	{r4, lr}
 800ce7c:	d512      	bpl.n	800cea4 <SCROLLBAR__Rect2VRect+0x2e>
 800ce7e:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800ce82:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ce86:	8808      	ldrh	r0, [r1, #0]
 800ce88:	884c      	ldrh	r4, [r1, #2]
 800ce8a:	800c      	strh	r4, [r1, #0]
 800ce8c:	1ad3      	subs	r3, r2, r3
 800ce8e:	888a      	ldrh	r2, [r1, #4]
 800ce90:	88cc      	ldrh	r4, [r1, #6]
 800ce92:	808c      	strh	r4, [r1, #4]
 800ce94:	3301      	adds	r3, #1
 800ce96:	b29b      	uxth	r3, r3
 800ce98:	43c0      	mvns	r0, r0
 800ce9a:	43d2      	mvns	r2, r2
 800ce9c:	4418      	add	r0, r3
 800ce9e:	4413      	add	r3, r2
 800cea0:	80c8      	strh	r0, [r1, #6]
 800cea2:	804b      	strh	r3, [r1, #2]
 800cea4:	bd10      	pop	{r4, pc}

0800cea6 <SCROLLBAR__InvalidatePartner>:
 800cea6:	b510      	push	{r4, lr}
 800cea8:	4604      	mov	r4, r0
 800ceaa:	f7f8 fc24 	bl	80056f6 <WM_GetScrollPartner>
 800ceae:	f7f9 fbbb 	bl	8006628 <WM_InvalidateWindow>
 800ceb2:	4620      	mov	r0, r4
 800ceb4:	f7f8 fbca 	bl	800564c <WM_GetParent>
 800ceb8:	2125      	movs	r1, #37	; 0x25
 800ceba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cebe:	f7f8 bd5a 	b.w	8005976 <WM_SendMessageNoPara>
	...

0800cec4 <SCROLLBAR_CreateUser>:
 800cec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cec6:	b089      	sub	sp, #36	; 0x24
 800cec8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ceca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800cecc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800cece:	b9fa      	cbnz	r2, 800cf10 <SCROLLBAR_CreateUser+0x4c>
 800ced0:	b9f3      	cbnz	r3, 800cf10 <SCROLLBAR_CreateUser+0x4c>
 800ced2:	4630      	mov	r0, r6
 800ced4:	a906      	add	r1, sp, #24
 800ced6:	f7f8 fb84 	bl	80055e2 <WM_GetInsideRectEx>
 800ceda:	f014 0f08 	tst.w	r4, #8
 800cede:	4b2c      	ldr	r3, [pc, #176]	; (800cf90 <SCROLLBAR_CreateUser+0xcc>)
 800cee0:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800cee4:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800cee8:	d009      	beq.n	800cefe <SCROLLBAR_CreateUser+0x3a>
 800ceea:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800ceee:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cef2:	1c78      	adds	r0, r7, #1
 800cef4:	ebc1 030e 	rsb	r3, r1, lr
 800cef8:	1a80      	subs	r0, r0, r2
 800cefa:	3301      	adds	r3, #1
 800cefc:	e008      	b.n	800cf10 <SCROLLBAR_CreateUser+0x4c>
 800cefe:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800cf02:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cf06:	f10e 0101 	add.w	r1, lr, #1
 800cf0a:	1a3a      	subs	r2, r7, r0
 800cf0c:	1ac9      	subs	r1, r1, r3
 800cf0e:	3201      	adds	r2, #1
 800cf10:	9600      	str	r6, [sp, #0]
 800cf12:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800cf14:	9601      	str	r6, [sp, #4]
 800cf16:	4e1f      	ldr	r6, [pc, #124]	; (800cf94 <SCROLLBAR_CreateUser+0xd0>)
 800cf18:	9602      	str	r6, [sp, #8]
 800cf1a:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800cf1c:	363c      	adds	r6, #60	; 0x3c
 800cf1e:	9603      	str	r6, [sp, #12]
 800cf20:	f7f9 fbb0 	bl	8006684 <WM_CreateWindowAsChild>
 800cf24:	4606      	mov	r6, r0
 800cf26:	2800      	cmp	r0, #0
 800cf28:	d02f      	beq.n	800cf8a <SCROLLBAR_CreateUser+0xc6>
 800cf2a:	f7ff facd 	bl	800c4c8 <GUI_ALLOC_LockH>
 800cf2e:	f004 0208 	and.w	r2, r4, #8
 800cf32:	06e3      	lsls	r3, r4, #27
 800cf34:	bf48      	it	mi
 800cf36:	f042 0210 	orrmi.w	r2, r2, #16
 800cf3a:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800cf3e:	bf48      	it	mi
 800cf40:	b292      	uxthmi	r2, r2
 800cf42:	2b01      	cmp	r3, #1
 800cf44:	bf88      	it	hi
 800cf46:	f042 0210 	orrhi.w	r2, r2, #16
 800cf4a:	4629      	mov	r1, r5
 800cf4c:	9005      	str	r0, [sp, #20]
 800cf4e:	f7ff fe41 	bl	800cbd4 <WIDGET__Init>
 800cf52:	4b11      	ldr	r3, [pc, #68]	; (800cf98 <SCROLLBAR_CreateUser+0xd4>)
 800cf54:	af08      	add	r7, sp, #32
 800cf56:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800cf58:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800cf5c:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800cf60:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800cf64:	2364      	movs	r3, #100	; 0x64
 800cf66:	64e3      	str	r3, [r4, #76]	; 0x4c
 800cf68:	4d0c      	ldr	r5, [pc, #48]	; (800cf9c <SCROLLBAR_CreateUser+0xd8>)
 800cf6a:	230a      	movs	r3, #10
 800cf6c:	6563      	str	r3, [r4, #84]	; 0x54
 800cf6e:	2300      	movs	r3, #0
 800cf70:	6523      	str	r3, [r4, #80]	; 0x50
 800cf72:	682b      	ldr	r3, [r5, #0]
 800cf74:	6463      	str	r3, [r4, #68]	; 0x44
 800cf76:	4638      	mov	r0, r7
 800cf78:	f7ff fab4 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800cf7c:	682b      	ldr	r3, [r5, #0]
 800cf7e:	4630      	mov	r0, r6
 800cf80:	685b      	ldr	r3, [r3, #4]
 800cf82:	4798      	blx	r3
 800cf84:	4630      	mov	r0, r6
 800cf86:	f7ff ff8e 	bl	800cea6 <SCROLLBAR__InvalidatePartner>
 800cf8a:	4630      	mov	r0, r6
 800cf8c:	b009      	add	sp, #36	; 0x24
 800cf8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf90:	200000e8 	.word	0x200000e8
 800cf94:	0800d07f 	.word	0x0800d07f
 800cf98:	200000d4 	.word	0x200000d4
 800cf9c:	200000e4 	.word	0x200000e4

0800cfa0 <SCROLLBAR_CreateEx>:
 800cfa0:	b510      	push	{r4, lr}
 800cfa2:	b086      	sub	sp, #24
 800cfa4:	9c08      	ldr	r4, [sp, #32]
 800cfa6:	9400      	str	r4, [sp, #0]
 800cfa8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800cfaa:	9401      	str	r4, [sp, #4]
 800cfac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cfae:	9402      	str	r4, [sp, #8]
 800cfb0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800cfb2:	9403      	str	r4, [sp, #12]
 800cfb4:	2400      	movs	r4, #0
 800cfb6:	9404      	str	r4, [sp, #16]
 800cfb8:	f7ff ff84 	bl	800cec4 <SCROLLBAR_CreateUser>
 800cfbc:	b006      	add	sp, #24
 800cfbe:	bd10      	pop	{r4, pc}

0800cfc0 <SCROLLBAR_CreateAttached>:
 800cfc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cfc2:	f001 0308 	and.w	r3, r1, #8
 800cfc6:	2b00      	cmp	r3, #0
 800cfc8:	f240 348a 	movw	r4, #906	; 0x38a
 800cfcc:	f240 528a 	movw	r2, #1418	; 0x58a
 800cfd0:	bf08      	it	eq
 800cfd2:	4622      	moveq	r2, r4
 800cfd4:	bf0c      	ite	eq
 800cfd6:	23ff      	moveq	r3, #255	; 0xff
 800cfd8:	23fe      	movne	r3, #254	; 0xfe
 800cfda:	e88d 0005 	stmia.w	sp, {r0, r2}
 800cfde:	2000      	movs	r0, #0
 800cfe0:	9102      	str	r1, [sp, #8]
 800cfe2:	9303      	str	r3, [sp, #12]
 800cfe4:	4602      	mov	r2, r0
 800cfe6:	4603      	mov	r3, r0
 800cfe8:	4601      	mov	r1, r0
 800cfea:	f7ff ffd9 	bl	800cfa0 <SCROLLBAR_CreateEx>
 800cfee:	2106      	movs	r1, #6
 800cff0:	4604      	mov	r4, r0
 800cff2:	f7f8 fcd0 	bl	8005996 <WM_NotifyParent>
 800cff6:	4620      	mov	r0, r4
 800cff8:	b004      	add	sp, #16
 800cffa:	bd10      	pop	{r4, pc}

0800cffc <SCROLLBAR_SetValue>:
 800cffc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cffe:	460c      	mov	r4, r1
 800d000:	4605      	mov	r5, r0
 800d002:	b300      	cbz	r0, 800d046 <SCROLLBAR_SetValue+0x4a>
 800d004:	f7ff fa60 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d008:	2c00      	cmp	r4, #0
 800d00a:	9001      	str	r0, [sp, #4]
 800d00c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800d00e:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800d010:	db05      	blt.n	800d01e <SCROLLBAR_SetValue+0x22>
 800d012:	1a8a      	subs	r2, r1, r2
 800d014:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d018:	4294      	cmp	r4, r2
 800d01a:	dc02      	bgt.n	800d022 <SCROLLBAR_SetValue+0x26>
 800d01c:	e000      	b.n	800d020 <SCROLLBAR_SetValue+0x24>
 800d01e:	2400      	movs	r4, #0
 800d020:	4622      	mov	r2, r4
 800d022:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800d024:	4291      	cmp	r1, r2
 800d026:	d00b      	beq.n	800d040 <SCROLLBAR_SetValue+0x44>
 800d028:	6502      	str	r2, [r0, #80]	; 0x50
 800d02a:	4628      	mov	r0, r5
 800d02c:	f7f9 fafc 	bl	8006628 <WM_InvalidateWindow>
 800d030:	a801      	add	r0, sp, #4
 800d032:	f7ff fa57 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d036:	4628      	mov	r0, r5
 800d038:	2105      	movs	r1, #5
 800d03a:	f7f8 fcac 	bl	8005996 <WM_NotifyParent>
 800d03e:	e002      	b.n	800d046 <SCROLLBAR_SetValue+0x4a>
 800d040:	a801      	add	r0, sp, #4
 800d042:	f7ff fa4f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d046:	b003      	add	sp, #12
 800d048:	bd30      	pop	{r4, r5, pc}

0800d04a <SCROLLBAR_AddValue>:
 800d04a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d04c:	460d      	mov	r5, r1
 800d04e:	4606      	mov	r6, r0
 800d050:	b160      	cbz	r0, 800d06c <SCROLLBAR_AddValue+0x22>
 800d052:	f7ff fa39 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d056:	4602      	mov	r2, r0
 800d058:	a802      	add	r0, sp, #8
 800d05a:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800d05c:	f840 2d04 	str.w	r2, [r0, #-4]!
 800d060:	f7ff fa40 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d064:	4630      	mov	r0, r6
 800d066:	1961      	adds	r1, r4, r5
 800d068:	f7ff ffc8 	bl	800cffc <SCROLLBAR_SetValue>
 800d06c:	b002      	add	sp, #8
 800d06e:	bd70      	pop	{r4, r5, r6, pc}

0800d070 <SCROLLBAR_Dec>:
 800d070:	f04f 31ff 	mov.w	r1, #4294967295
 800d074:	f7ff bfe9 	b.w	800d04a <SCROLLBAR_AddValue>

0800d078 <SCROLLBAR_Inc>:
 800d078:	2101      	movs	r1, #1
 800d07a:	f7ff bfe6 	b.w	800d04a <SCROLLBAR_AddValue>

0800d07e <SCROLLBAR_Callback>:
 800d07e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d082:	6844      	ldr	r4, [r0, #4]
 800d084:	4680      	mov	r8, r0
 800d086:	b08f      	sub	sp, #60	; 0x3c
 800d088:	4620      	mov	r0, r4
 800d08a:	4641      	mov	r1, r8
 800d08c:	f7ff fde7 	bl	800cc5e <WIDGET_HandleActive>
 800d090:	2800      	cmp	r0, #0
 800d092:	f000 81c0 	beq.w	800d416 <SCROLLBAR_Callback+0x398>
 800d096:	f8d8 3000 	ldr.w	r3, [r8]
 800d09a:	2b23      	cmp	r3, #35	; 0x23
 800d09c:	f000 8182 	beq.w	800d3a4 <SCROLLBAR_Callback+0x326>
 800d0a0:	dc0b      	bgt.n	800d0ba <SCROLLBAR_Callback+0x3c>
 800d0a2:	2b0e      	cmp	r3, #14
 800d0a4:	f000 812a 	beq.w	800d2fc <SCROLLBAR_Callback+0x27e>
 800d0a8:	2b0f      	cmp	r3, #15
 800d0aa:	d012      	beq.n	800d0d2 <SCROLLBAR_Callback+0x54>
 800d0ac:	2b0b      	cmp	r3, #11
 800d0ae:	f040 81af 	bne.w	800d410 <SCROLLBAR_Callback+0x392>
 800d0b2:	4620      	mov	r0, r4
 800d0b4:	f7ff fef7 	bl	800cea6 <SCROLLBAR__InvalidatePartner>
 800d0b8:	e1aa      	b.n	800d410 <SCROLLBAR_Callback+0x392>
 800d0ba:	f240 1213 	movw	r2, #275	; 0x113
 800d0be:	4293      	cmp	r3, r2
 800d0c0:	f000 817f 	beq.w	800d3c2 <SCROLLBAR_Callback+0x344>
 800d0c4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800d0c8:	d012      	beq.n	800d0f0 <SCROLLBAR_Callback+0x72>
 800d0ca:	2b24      	cmp	r3, #36	; 0x24
 800d0cc:	f040 81a0 	bne.w	800d410 <SCROLLBAR_Callback+0x392>
 800d0d0:	e143      	b.n	800d35a <SCROLLBAR_Callback+0x2dc>
 800d0d2:	4620      	mov	r0, r4
 800d0d4:	f7ff f9f8 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d0d8:	9005      	str	r0, [sp, #20]
 800d0da:	2800      	cmp	r0, #0
 800d0dc:	f000 819b 	beq.w	800d416 <SCROLLBAR_Callback+0x398>
 800d0e0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800d0e2:	a805      	add	r0, sp, #20
 800d0e4:	681d      	ldr	r5, [r3, #0]
 800d0e6:	f7ff f9fd 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d0ea:	4620      	mov	r0, r4
 800d0ec:	47a8      	blx	r5
 800d0ee:	e192      	b.n	800d416 <SCROLLBAR_Callback+0x398>
 800d0f0:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800d0f4:	2f00      	cmp	r7, #0
 800d0f6:	f000 818b 	beq.w	800d410 <SCROLLBAR_Callback+0x392>
 800d0fa:	7a3b      	ldrb	r3, [r7, #8]
 800d0fc:	4620      	mov	r0, r4
 800d0fe:	2b00      	cmp	r3, #0
 800d100:	f000 80d6 	beq.w	800d2b0 <SCROLLBAR_Callback+0x232>
 800d104:	f7ff f9e0 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d108:	a905      	add	r1, sp, #20
 800d10a:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800d10c:	9003      	str	r0, [sp, #12]
 800d10e:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800d110:	4620      	mov	r0, r4
 800d112:	4798      	blx	r3
 800d114:	9b03      	ldr	r3, [sp, #12]
 800d116:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800d11a:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800d11c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800d11e:	f01a 0f08 	tst.w	sl, #8
 800d122:	ebc5 0902 	rsb	r9, r5, r2
 800d126:	d003      	beq.n	800d130 <SCROLLBAR_Callback+0xb2>
 800d128:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d12c:	603a      	str	r2, [r7, #0]
 800d12e:	6079      	str	r1, [r7, #4]
 800d130:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800d132:	683f      	ldr	r7, [r7, #0]
 800d134:	2a03      	cmp	r2, #3
 800d136:	d114      	bne.n	800d162 <SCROLLBAR_Callback+0xe4>
 800d138:	4620      	mov	r0, r4
 800d13a:	f7ff fe8a 	bl	800ce52 <_DeleteTimer>
 800d13e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d140:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d142:	2002      	movs	r0, #2
 800d144:	fb93 f3f0 	sdiv	r3, r3, r0
 800d148:	1aff      	subs	r7, r7, r3
 800d14a:	9b06      	ldr	r3, [sp, #24]
 800d14c:	1afb      	subs	r3, r7, r3
 800d14e:	1e58      	subs	r0, r3, #1
 800d150:	fb00 f009 	mul.w	r0, r0, r9
 800d154:	f7fc fd10 	bl	8009b78 <GUI__DivideRound32>
 800d158:	9b03      	ldr	r3, [sp, #12]
 800d15a:	4606      	mov	r6, r0
 800d15c:	6618      	str	r0, [r3, #96]	; 0x60
 800d15e:	a803      	add	r0, sp, #12
 800d160:	e07e      	b.n	800d260 <SCROLLBAR_Callback+0x1e2>
 800d162:	9806      	ldr	r0, [sp, #24]
 800d164:	4287      	cmp	r7, r0
 800d166:	dc0b      	bgt.n	800d180 <SCROLLBAR_Callback+0x102>
 800d168:	2a02      	cmp	r2, #2
 800d16a:	d039      	beq.n	800d1e0 <SCROLLBAR_Callback+0x162>
 800d16c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d16e:	b113      	cbz	r3, 800d176 <SCROLLBAR_Callback+0xf8>
 800d170:	4620      	mov	r0, r4
 800d172:	f7ff fe6e 	bl	800ce52 <_DeleteTimer>
 800d176:	9b03      	ldr	r3, [sp, #12]
 800d178:	2202      	movs	r2, #2
 800d17a:	3e01      	subs	r6, #1
 800d17c:	659a      	str	r2, [r3, #88]	; 0x58
 800d17e:	e02f      	b.n	800d1e0 <SCROLLBAR_Callback+0x162>
 800d180:	9907      	ldr	r1, [sp, #28]
 800d182:	428f      	cmp	r7, r1
 800d184:	da02      	bge.n	800d18c <SCROLLBAR_Callback+0x10e>
 800d186:	1b76      	subs	r6, r6, r5
 800d188:	426d      	negs	r5, r5
 800d18a:	e02f      	b.n	800d1ec <SCROLLBAR_Callback+0x16e>
 800d18c:	9908      	ldr	r1, [sp, #32]
 800d18e:	428f      	cmp	r7, r1
 800d190:	dc12      	bgt.n	800d1b8 <SCROLLBAR_Callback+0x13a>
 800d192:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d194:	2900      	cmp	r1, #0
 800d196:	dd0b      	ble.n	800d1b0 <SCROLLBAR_Callback+0x132>
 800d198:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d19a:	2202      	movs	r2, #2
 800d19c:	fb93 f3f2 	sdiv	r3, r3, r2
 800d1a0:	1aff      	subs	r7, r7, r3
 800d1a2:	1a3f      	subs	r7, r7, r0
 800d1a4:	3f01      	subs	r7, #1
 800d1a6:	fb07 f009 	mul.w	r0, r7, r9
 800d1aa:	f7fc fce5 	bl	8009b78 <GUI__DivideRound32>
 800d1ae:	4606      	mov	r6, r0
 800d1b0:	9b03      	ldr	r3, [sp, #12]
 800d1b2:	2203      	movs	r2, #3
 800d1b4:	659a      	str	r2, [r3, #88]	; 0x58
 800d1b6:	e016      	b.n	800d1e6 <SCROLLBAR_Callback+0x168>
 800d1b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d1ba:	428f      	cmp	r7, r1
 800d1bc:	da01      	bge.n	800d1c2 <SCROLLBAR_Callback+0x144>
 800d1be:	442e      	add	r6, r5
 800d1c0:	e014      	b.n	800d1ec <SCROLLBAR_Callback+0x16e>
 800d1c2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d1c4:	428f      	cmp	r7, r1
 800d1c6:	dc0e      	bgt.n	800d1e6 <SCROLLBAR_Callback+0x168>
 800d1c8:	2a01      	cmp	r2, #1
 800d1ca:	d00e      	beq.n	800d1ea <SCROLLBAR_Callback+0x16c>
 800d1cc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d1ce:	b113      	cbz	r3, 800d1d6 <SCROLLBAR_Callback+0x158>
 800d1d0:	4620      	mov	r0, r4
 800d1d2:	f7ff fe3e 	bl	800ce52 <_DeleteTimer>
 800d1d6:	9b03      	ldr	r3, [sp, #12]
 800d1d8:	2501      	movs	r5, #1
 800d1da:	3601      	adds	r6, #1
 800d1dc:	659d      	str	r5, [r3, #88]	; 0x58
 800d1de:	e005      	b.n	800d1ec <SCROLLBAR_Callback+0x16e>
 800d1e0:	f04f 35ff 	mov.w	r5, #4294967295
 800d1e4:	e002      	b.n	800d1ec <SCROLLBAR_Callback+0x16e>
 800d1e6:	2500      	movs	r5, #0
 800d1e8:	e000      	b.n	800d1ec <SCROLLBAR_Callback+0x16e>
 800d1ea:	4615      	mov	r5, r2
 800d1ec:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800d1f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d1f2:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800d1f6:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800d1fa:	9a06      	ldr	r2, [sp, #24]
 800d1fc:	b171      	cbz	r1, 800d21c <SCROLLBAR_Callback+0x19e>
 800d1fe:	2002      	movs	r0, #2
 800d200:	fb9e f0f0 	sdiv	r0, lr, r0
 800d204:	1a38      	subs	r0, r7, r0
 800d206:	1a80      	subs	r0, r0, r2
 800d208:	3801      	subs	r0, #1
 800d20a:	fb00 f009 	mul.w	r0, r0, r9
 800d20e:	9301      	str	r3, [sp, #4]
 800d210:	f7fc fcb2 	bl	8009b78 <GUI__DivideRound32>
 800d214:	9b01      	ldr	r3, [sp, #4]
 800d216:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800d21a:	e009      	b.n	800d230 <SCROLLBAR_Callback+0x1b2>
 800d21c:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800d220:	2a01      	cmp	r2, #1
 800d222:	bf04      	itt	eq
 800d224:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800d228:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800d22c:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800d230:	a803      	add	r0, sp, #12
 800d232:	9301      	str	r3, [sp, #4]
 800d234:	f7ff f956 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d238:	9b01      	ldr	r3, [sp, #4]
 800d23a:	b1a5      	cbz	r5, 800d266 <SCROLLBAR_Callback+0x1e8>
 800d23c:	b9bb      	cbnz	r3, 800d26e <SCROLLBAR_Callback+0x1f0>
 800d23e:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800d242:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800d246:	4620      	mov	r0, r4
 800d248:	f000 fdd6 	bl	800ddf8 <WM_CreateTimer>
 800d24c:	4607      	mov	r7, r0
 800d24e:	4620      	mov	r0, r4
 800d250:	f7ff f93a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d254:	4602      	mov	r2, r0
 800d256:	a80e      	add	r0, sp, #56	; 0x38
 800d258:	f840 2d28 	str.w	r2, [r0, #-40]!
 800d25c:	6657      	str	r7, [r2, #100]	; 0x64
 800d25e:	65d5      	str	r5, [r2, #92]	; 0x5c
 800d260:	f7ff f940 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d264:	e003      	b.n	800d26e <SCROLLBAR_Callback+0x1f0>
 800d266:	b113      	cbz	r3, 800d26e <SCROLLBAR_Callback+0x1f0>
 800d268:	4620      	mov	r0, r4
 800d26a:	f7ff fdf2 	bl	800ce52 <_DeleteTimer>
 800d26e:	4620      	mov	r0, r4
 800d270:	2101      	movs	r1, #1
 800d272:	f7f8 f85d 	bl	8005330 <WM_SetCapture>
 800d276:	4620      	mov	r0, r4
 800d278:	4631      	mov	r1, r6
 800d27a:	f7ff febf 	bl	800cffc <SCROLLBAR_SetValue>
 800d27e:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800d282:	f040 80c5 	bne.w	800d410 <SCROLLBAR_Callback+0x392>
 800d286:	4620      	mov	r0, r4
 800d288:	f7ff f91e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d28c:	ab0e      	add	r3, sp, #56	; 0x38
 800d28e:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800d290:	f843 0d28 	str.w	r0, [r3, #-40]!
 800d294:	4618      	mov	r0, r3
 800d296:	f7ff f925 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d29a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800d29e:	4620      	mov	r0, r4
 800d2a0:	f7ff fcb2 	bl	800cc08 <WIDGET_OrState>
 800d2a4:	07a9      	lsls	r1, r5, #30
 800d2a6:	f140 80b3 	bpl.w	800d410 <SCROLLBAR_Callback+0x392>
 800d2aa:	4620      	mov	r0, r4
 800d2ac:	2101      	movs	r1, #1
 800d2ae:	e074      	b.n	800d39a <SCROLLBAR_Callback+0x31c>
 800d2b0:	f7ff f90a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d2b4:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800d2b6:	9003      	str	r0, [sp, #12]
 800d2b8:	a803      	add	r0, sp, #12
 800d2ba:	f7ff f913 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d2be:	05ea      	lsls	r2, r5, #23
 800d2c0:	f140 80a6 	bpl.w	800d410 <SCROLLBAR_Callback+0x392>
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 800d2ca:	f7ff fcb3 	bl	800cc34 <WIDGET_AndState>
 800d2ce:	4620      	mov	r0, r4
 800d2d0:	f7ff f8fa 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d2d4:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800d2d6:	9005      	str	r0, [sp, #20]
 800d2d8:	b113      	cbz	r3, 800d2e0 <SCROLLBAR_Callback+0x262>
 800d2da:	4620      	mov	r0, r4
 800d2dc:	f7ff fdb9 	bl	800ce52 <_DeleteTimer>
 800d2e0:	a80e      	add	r0, sp, #56	; 0x38
 800d2e2:	2200      	movs	r2, #0
 800d2e4:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800d2e8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d2ea:	659a      	str	r2, [r3, #88]	; 0x58
 800d2ec:	f7ff f8fa 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d2f0:	07ab      	lsls	r3, r5, #30
 800d2f2:	f140 808d 	bpl.w	800d410 <SCROLLBAR_Callback+0x392>
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	2102      	movs	r1, #2
 800d2fa:	e04e      	b.n	800d39a <SCROLLBAR_Callback+0x31c>
 800d2fc:	4620      	mov	r0, r4
 800d2fe:	f7ff f8e3 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d302:	ab0e      	add	r3, sp, #56	; 0x38
 800d304:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800d306:	f843 0d24 	str.w	r0, [r3, #-36]!
 800d30a:	4618      	mov	r0, r3
 800d30c:	f7ff f8ea 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d310:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800d314:	6813      	ldr	r3, [r2, #0]
 800d316:	6852      	ldr	r2, [r2, #4]
 800d318:	2a00      	cmp	r2, #0
 800d31a:	dd79      	ble.n	800d410 <SCROLLBAR_Callback+0x392>
 800d31c:	3b10      	subs	r3, #16
 800d31e:	2b12      	cmp	r3, #18
 800d320:	d876      	bhi.n	800d410 <SCROLLBAR_Callback+0x392>
 800d322:	e8df f003 	tbb	[pc, r3]
 800d326:	1616      	.short	0x1616
 800d328:	75751212 	.word	0x75751212
 800d32c:	75757575 	.word	0x75757575
 800d330:	75757575 	.word	0x75757575
 800d334:	0a757575 	.word	0x0a757575
 800d338:	0d          	.byte	0x0d
 800d339:	00          	.byte	0x00
 800d33a:	4620      	mov	r0, r4
 800d33c:	4629      	mov	r1, r5
 800d33e:	e001      	b.n	800d344 <SCROLLBAR_Callback+0x2c6>
 800d340:	4620      	mov	r0, r4
 800d342:	4269      	negs	r1, r5
 800d344:	f7ff fe81 	bl	800d04a <SCROLLBAR_AddValue>
 800d348:	e062      	b.n	800d410 <SCROLLBAR_Callback+0x392>
 800d34a:	4620      	mov	r0, r4
 800d34c:	f7ff fe94 	bl	800d078 <SCROLLBAR_Inc>
 800d350:	e05e      	b.n	800d410 <SCROLLBAR_Callback+0x392>
 800d352:	4620      	mov	r0, r4
 800d354:	f7ff fe8c 	bl	800d070 <SCROLLBAR_Dec>
 800d358:	e05a      	b.n	800d410 <SCROLLBAR_Callback+0x392>
 800d35a:	4620      	mov	r0, r4
 800d35c:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800d360:	f7ff f8b2 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d364:	ad0e      	add	r5, sp, #56	; 0x38
 800d366:	4603      	mov	r3, r0
 800d368:	f845 0d24 	str.w	r0, [r5, #-36]!
 800d36c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800d36e:	6830      	ldr	r0, [r6, #0]
 800d370:	68b1      	ldr	r1, [r6, #8]
 800d372:	4290      	cmp	r0, r2
 800d374:	6872      	ldr	r2, [r6, #4]
 800d376:	d105      	bne.n	800d384 <SCROLLBAR_Callback+0x306>
 800d378:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800d37a:	428e      	cmp	r6, r1
 800d37c:	d102      	bne.n	800d384 <SCROLLBAR_Callback+0x306>
 800d37e:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800d380:	4296      	cmp	r6, r2
 800d382:	d00d      	beq.n	800d3a0 <SCROLLBAR_Callback+0x322>
 800d384:	64d8      	str	r0, [r3, #76]	; 0x4c
 800d386:	6559      	str	r1, [r3, #84]	; 0x54
 800d388:	651a      	str	r2, [r3, #80]	; 0x50
 800d38a:	4620      	mov	r0, r4
 800d38c:	f7f9 f94c 	bl	8006628 <WM_InvalidateWindow>
 800d390:	4628      	mov	r0, r5
 800d392:	f7ff f8a7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d396:	4620      	mov	r0, r4
 800d398:	2105      	movs	r1, #5
 800d39a:	f7f8 fafc 	bl	8005996 <WM_NotifyParent>
 800d39e:	e037      	b.n	800d410 <SCROLLBAR_Callback+0x392>
 800d3a0:	4628      	mov	r0, r5
 800d3a2:	e033      	b.n	800d40c <SCROLLBAR_Callback+0x38e>
 800d3a4:	4620      	mov	r0, r4
 800d3a6:	f7ff f88f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d3aa:	9005      	str	r0, [sp, #20]
 800d3ac:	2800      	cmp	r0, #0
 800d3ae:	d02f      	beq.n	800d410 <SCROLLBAR_Callback+0x392>
 800d3b0:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d3b4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800d3b6:	601a      	str	r2, [r3, #0]
 800d3b8:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800d3ba:	609a      	str	r2, [r3, #8]
 800d3bc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800d3be:	605a      	str	r2, [r3, #4]
 800d3c0:	e023      	b.n	800d40a <SCROLLBAR_Callback+0x38c>
 800d3c2:	4620      	mov	r0, r4
 800d3c4:	f7ff f880 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d3c8:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800d3ca:	9005      	str	r0, [sp, #20]
 800d3cc:	b111      	cbz	r1, 800d3d4 <SCROLLBAR_Callback+0x356>
 800d3ce:	4620      	mov	r0, r4
 800d3d0:	f7ff fe3b 	bl	800d04a <SCROLLBAR_AddValue>
 800d3d4:	9b05      	ldr	r3, [sp, #20]
 800d3d6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800d3d8:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800d3da:	2a00      	cmp	r2, #0
 800d3dc:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800d3de:	dd05      	ble.n	800d3ec <SCROLLBAR_Callback+0x36e>
 800d3e0:	4291      	cmp	r1, r2
 800d3e2:	bfb4      	ite	lt
 800d3e4:	2100      	movlt	r1, #0
 800d3e6:	2101      	movge	r1, #1
 800d3e8:	dd06      	ble.n	800d3f8 <SCROLLBAR_Callback+0x37a>
 800d3ea:	e004      	b.n	800d3f6 <SCROLLBAR_Callback+0x378>
 800d3ec:	4291      	cmp	r1, r2
 800d3ee:	bfcc      	ite	gt
 800d3f0:	2100      	movgt	r1, #0
 800d3f2:	2101      	movle	r1, #1
 800d3f4:	da00      	bge.n	800d3f8 <SCROLLBAR_Callback+0x37a>
 800d3f6:	651a      	str	r2, [r3, #80]	; 0x50
 800d3f8:	b119      	cbz	r1, 800d402 <SCROLLBAR_Callback+0x384>
 800d3fa:	4620      	mov	r0, r4
 800d3fc:	f7ff fd29 	bl	800ce52 <_DeleteTimer>
 800d400:	e003      	b.n	800d40a <SCROLLBAR_Callback+0x38c>
 800d402:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800d404:	2132      	movs	r1, #50	; 0x32
 800d406:	f000 fd27 	bl	800de58 <WM_RestartTimer>
 800d40a:	a805      	add	r0, sp, #20
 800d40c:	f7ff f86a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d410:	4640      	mov	r0, r8
 800d412:	f7f9 fd37 	bl	8006e84 <WM_DefaultProc>
 800d416:	b00f      	add	sp, #60	; 0x3c
 800d418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d41c <SCROLLBAR_GetValue>:
 800d41c:	b513      	push	{r0, r1, r4, lr}
 800d41e:	4604      	mov	r4, r0
 800d420:	b140      	cbz	r0, 800d434 <SCROLLBAR_GetValue+0x18>
 800d422:	f7ff f851 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d426:	ab02      	add	r3, sp, #8
 800d428:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800d42a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d42e:	4618      	mov	r0, r3
 800d430:	f7ff f858 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d434:	4620      	mov	r0, r4
 800d436:	b002      	add	sp, #8
 800d438:	bd10      	pop	{r4, pc}
	...

0800d43c <PROGBAR_DrawSkinFlex>:
 800d43c:	6843      	ldr	r3, [r0, #4]
 800d43e:	2b0b      	cmp	r3, #11
 800d440:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d444:	4604      	mov	r4, r0
 800d446:	6a06      	ldr	r6, [r0, #32]
 800d448:	d006      	beq.n	800d458 <PROGBAR_DrawSkinFlex+0x1c>
 800d44a:	2b12      	cmp	r3, #18
 800d44c:	f000 8094 	beq.w	800d578 <PROGBAR_DrawSkinFlex+0x13c>
 800d450:	2b05      	cmp	r3, #5
 800d452:	f040 80a0 	bne.w	800d596 <PROGBAR_DrawSkinFlex+0x15a>
 800d456:	e01c      	b.n	800d492 <PROGBAR_DrawSkinFlex+0x56>
 800d458:	4b51      	ldr	r3, [pc, #324]	; (800d5a0 <PROGBAR_DrawSkinFlex+0x164>)
 800d45a:	6a18      	ldr	r0, [r3, #32]
 800d45c:	f7fe fbd3 	bl	800bc06 <GUI_SetColor>
 800d460:	6960      	ldr	r0, [r4, #20]
 800d462:	6921      	ldr	r1, [r4, #16]
 800d464:	69a2      	ldr	r2, [r4, #24]
 800d466:	f7fd fca1 	bl	800adac <GUI_DrawHLine>
 800d46a:	69e0      	ldr	r0, [r4, #28]
 800d46c:	6921      	ldr	r1, [r4, #16]
 800d46e:	69a2      	ldr	r2, [r4, #24]
 800d470:	f7fd fc9c 	bl	800adac <GUI_DrawHLine>
 800d474:	6961      	ldr	r1, [r4, #20]
 800d476:	69e2      	ldr	r2, [r4, #28]
 800d478:	6920      	ldr	r0, [r4, #16]
 800d47a:	3101      	adds	r1, #1
 800d47c:	3a01      	subs	r2, #1
 800d47e:	f7fd fcef 	bl	800ae60 <GUI_DrawVLine>
 800d482:	6961      	ldr	r1, [r4, #20]
 800d484:	69e2      	ldr	r2, [r4, #28]
 800d486:	69a0      	ldr	r0, [r4, #24]
 800d488:	3101      	adds	r1, #1
 800d48a:	3a01      	subs	r2, #1
 800d48c:	f7fd fce8 	bl	800ae60 <GUI_DrawVLine>
 800d490:	e081      	b.n	800d596 <PROGBAR_DrawSkinFlex+0x15a>
 800d492:	6830      	ldr	r0, [r6, #0]
 800d494:	4d42      	ldr	r5, [pc, #264]	; (800d5a0 <PROGBAR_DrawSkinFlex+0x164>)
 800d496:	6967      	ldr	r7, [r4, #20]
 800d498:	69e3      	ldr	r3, [r4, #28]
 800d49a:	6922      	ldr	r2, [r4, #16]
 800d49c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800d4a0:	6871      	ldr	r1, [r6, #4]
 800d4a2:	2800      	cmp	r0, #0
 800d4a4:	d034      	beq.n	800d510 <PROGBAR_DrawSkinFlex+0xd4>
 800d4a6:	ebc2 0909 	rsb	r9, r2, r9
 800d4aa:	f109 0901 	add.w	r9, r9, #1
 800d4ae:	ea4f 0969 	mov.w	r9, r9, asr #1
 800d4b2:	b929      	cbnz	r1, 800d4c0 <PROGBAR_DrawSkinFlex+0x84>
 800d4b4:	468e      	mov	lr, r1
 800d4b6:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800d4ba:	6968      	ldr	r0, [r5, #20]
 800d4bc:	2101      	movs	r1, #1
 800d4be:	e005      	b.n	800d4cc <PROGBAR_DrawSkinFlex+0x90>
 800d4c0:	f8d5 c000 	ldr.w	ip, [r5]
 800d4c4:	6868      	ldr	r0, [r5, #4]
 800d4c6:	f04f 0e01 	mov.w	lr, #1
 800d4ca:	2100      	movs	r1, #0
 800d4cc:	9001      	str	r0, [sp, #4]
 800d4ce:	ebce 0303 	rsb	r3, lr, r3
 800d4d2:	1c50      	adds	r0, r2, #1
 800d4d4:	f8cd c000 	str.w	ip, [sp]
 800d4d8:	4439      	add	r1, r7
 800d4da:	444a      	add	r2, r9
 800d4dc:	f002 ff9c 	bl	8010418 <GUI_DrawGradientH>
 800d4e0:	6873      	ldr	r3, [r6, #4]
 800d4e2:	b91b      	cbnz	r3, 800d4ec <PROGBAR_DrawSkinFlex+0xb0>
 800d4e4:	69ae      	ldr	r6, [r5, #24]
 800d4e6:	69ed      	ldr	r5, [r5, #28]
 800d4e8:	2101      	movs	r1, #1
 800d4ea:	e003      	b.n	800d4f4 <PROGBAR_DrawSkinFlex+0xb8>
 800d4ec:	68ae      	ldr	r6, [r5, #8]
 800d4ee:	68ed      	ldr	r5, [r5, #12]
 800d4f0:	2301      	movs	r3, #1
 800d4f2:	2100      	movs	r1, #0
 800d4f4:	6920      	ldr	r0, [r4, #16]
 800d4f6:	6967      	ldr	r7, [r4, #20]
 800d4f8:	69a2      	ldr	r2, [r4, #24]
 800d4fa:	69e4      	ldr	r4, [r4, #28]
 800d4fc:	9600      	str	r6, [sp, #0]
 800d4fe:	4448      	add	r0, r9
 800d500:	9501      	str	r5, [sp, #4]
 800d502:	3001      	adds	r0, #1
 800d504:	4439      	add	r1, r7
 800d506:	3a01      	subs	r2, #1
 800d508:	1ae3      	subs	r3, r4, r3
 800d50a:	f002 ff85 	bl	8010418 <GUI_DrawGradientH>
 800d50e:	e042      	b.n	800d596 <PROGBAR_DrawSkinFlex+0x15a>
 800d510:	ebc7 0803 	rsb	r8, r7, r3
 800d514:	f108 0801 	add.w	r8, r8, #1
 800d518:	ea4f 0868 	mov.w	r8, r8, asr #1
 800d51c:	b921      	cbnz	r1, 800d528 <PROGBAR_DrawSkinFlex+0xec>
 800d51e:	e895 5000 	ldmia.w	r5, {ip, lr}
 800d522:	460b      	mov	r3, r1
 800d524:	2001      	movs	r0, #1
 800d526:	e004      	b.n	800d532 <PROGBAR_DrawSkinFlex+0xf6>
 800d528:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800d52c:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800d530:	2301      	movs	r3, #1
 800d532:	4410      	add	r0, r2
 800d534:	e88d 5000 	stmia.w	sp, {ip, lr}
 800d538:	ebc3 0209 	rsb	r2, r3, r9
 800d53c:	1c79      	adds	r1, r7, #1
 800d53e:	eb07 0308 	add.w	r3, r7, r8
 800d542:	f002 ff37 	bl	80103b4 <GUI_DrawGradientV>
 800d546:	6872      	ldr	r2, [r6, #4]
 800d548:	b91a      	cbnz	r2, 800d552 <PROGBAR_DrawSkinFlex+0x116>
 800d54a:	68ae      	ldr	r6, [r5, #8]
 800d54c:	68ed      	ldr	r5, [r5, #12]
 800d54e:	2001      	movs	r0, #1
 800d550:	e003      	b.n	800d55a <PROGBAR_DrawSkinFlex+0x11e>
 800d552:	69ae      	ldr	r6, [r5, #24]
 800d554:	69ed      	ldr	r5, [r5, #28]
 800d556:	2201      	movs	r2, #1
 800d558:	2000      	movs	r0, #0
 800d55a:	6961      	ldr	r1, [r4, #20]
 800d55c:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800d560:	69a7      	ldr	r7, [r4, #24]
 800d562:	69e3      	ldr	r3, [r4, #28]
 800d564:	9600      	str	r6, [sp, #0]
 800d566:	4441      	add	r1, r8
 800d568:	9501      	str	r5, [sp, #4]
 800d56a:	4470      	add	r0, lr
 800d56c:	3101      	adds	r1, #1
 800d56e:	1aba      	subs	r2, r7, r2
 800d570:	3b01      	subs	r3, #1
 800d572:	f002 ff1f 	bl	80103b4 <GUI_DrawGradientV>
 800d576:	e00e      	b.n	800d596 <PROGBAR_DrawSkinFlex+0x15a>
 800d578:	6833      	ldr	r3, [r6, #0]
 800d57a:	b963      	cbnz	r3, 800d596 <PROGBAR_DrawSkinFlex+0x15a>
 800d57c:	4b08      	ldr	r3, [pc, #32]	; (800d5a0 <PROGBAR_DrawSkinFlex+0x164>)
 800d57e:	68b5      	ldr	r5, [r6, #8]
 800d580:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800d582:	f7fe fb40 	bl	800bc06 <GUI_SetColor>
 800d586:	2002      	movs	r0, #2
 800d588:	f7fe fb78 	bl	800bc7c <GUI_SetTextMode>
 800d58c:	4628      	mov	r0, r5
 800d58e:	6921      	ldr	r1, [r4, #16]
 800d590:	6962      	ldr	r2, [r4, #20]
 800d592:	f7fd fe41 	bl	800b218 <GUI_DispStringAt>
 800d596:	2000      	movs	r0, #0
 800d598:	b003      	add	sp, #12
 800d59a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d59e:	bf00      	nop
 800d5a0:	200000ec 	.word	0x200000ec

0800d5a4 <_Create>:
 800d5a4:	b530      	push	{r4, r5, lr}
 800d5a6:	b08b      	sub	sp, #44	; 0x2c
 800d5a8:	4605      	mov	r5, r0
 800d5aa:	f7fe ff8d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d5ae:	ab0a      	add	r3, sp, #40	; 0x28
 800d5b0:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800d5b2:	f843 0d28 	str.w	r0, [r3, #-40]!
 800d5b6:	4668      	mov	r0, sp
 800d5b8:	6894      	ldr	r4, [r2, #8]
 800d5ba:	f7fe ff93 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d5be:	a80a      	add	r0, sp, #40	; 0x28
 800d5c0:	2300      	movs	r3, #0
 800d5c2:	9302      	str	r3, [sp, #8]
 800d5c4:	f840 5d24 	str.w	r5, [r0, #-36]!
 800d5c8:	6823      	ldr	r3, [r4, #0]
 800d5ca:	4798      	blx	r3
 800d5cc:	b00b      	add	sp, #44	; 0x2c
 800d5ce:	bd30      	pop	{r4, r5, pc}

0800d5d0 <_Paint>:
 800d5d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d5d4:	b093      	sub	sp, #76	; 0x4c
 800d5d6:	4604      	mov	r4, r0
 800d5d8:	f7fe ff76 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d5dc:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800d5e0:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800d5e2:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800d5e4:	9000      	str	r0, [sp, #0]
 800d5e6:	f002 0201 	and.w	r2, r2, #1
 800d5ea:	9206      	str	r2, [sp, #24]
 800d5ec:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800d5f0:	f7f5 ffeb 	bl	80035ca <PROGBAR__Value2Pos>
 800d5f4:	af02      	add	r7, sp, #8
 800d5f6:	4680      	mov	r8, r0
 800d5f8:	4668      	mov	r0, sp
 800d5fa:	f7fe ff73 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d5fe:	ab06      	add	r3, sp, #24
 800d600:	4639      	mov	r1, r7
 800d602:	4620      	mov	r0, r4
 800d604:	9311      	str	r3, [sp, #68]	; 0x44
 800d606:	f7f7 ff46 	bl	8005496 <WM_GetClientRectEx>
 800d60a:	230b      	movs	r3, #11
 800d60c:	930a      	str	r3, [sp, #40]	; 0x28
 800d60e:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d612:	930d      	str	r3, [sp, #52]	; 0x34
 800d614:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d618:	930e      	str	r3, [sp, #56]	; 0x38
 800d61a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d61e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d620:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d624:	9310      	str	r3, [sp, #64]	; 0x40
 800d626:	9409      	str	r4, [sp, #36]	; 0x24
 800d628:	a809      	add	r0, sp, #36	; 0x24
 800d62a:	47b0      	blx	r6
 800d62c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d630:	ad04      	add	r5, sp, #16
 800d632:	e885 0003 	stmia.w	r5, {r0, r1}
 800d636:	2201      	movs	r2, #1
 800d638:	4629      	mov	r1, r5
 800d63a:	4628      	mov	r0, r5
 800d63c:	f7fc fb3b 	bl	8009cb6 <GUI__ReduceRect>
 800d640:	4628      	mov	r0, r5
 800d642:	f7f8 fa31 	bl	8005aa8 <WM_SetUserClipRect>
 800d646:	2305      	movs	r3, #5
 800d648:	9906      	ldr	r1, [sp, #24]
 800d64a:	930a      	str	r3, [sp, #40]	; 0x28
 800d64c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800d650:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d654:	9409      	str	r4, [sp, #36]	; 0x24
 800d656:	930d      	str	r3, [sp, #52]	; 0x34
 800d658:	920e      	str	r2, [sp, #56]	; 0x38
 800d65a:	b129      	cbz	r1, 800d668 <_Paint+0x98>
 800d65c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d660:	930f      	str	r3, [sp, #60]	; 0x3c
 800d662:	4442      	add	r2, r8
 800d664:	9210      	str	r2, [sp, #64]	; 0x40
 800d666:	e004      	b.n	800d672 <_Paint+0xa2>
 800d668:	4443      	add	r3, r8
 800d66a:	930f      	str	r3, [sp, #60]	; 0x3c
 800d66c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d670:	9310      	str	r3, [sp, #64]	; 0x40
 800d672:	2300      	movs	r3, #0
 800d674:	9307      	str	r3, [sp, #28]
 800d676:	a809      	add	r0, sp, #36	; 0x24
 800d678:	47b0      	blx	r6
 800d67a:	9906      	ldr	r1, [sp, #24]
 800d67c:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800d680:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800d684:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d688:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d68c:	b119      	cbz	r1, 800d696 <_Paint+0xc6>
 800d68e:	4440      	add	r0, r8
 800d690:	950d      	str	r5, [sp, #52]	; 0x34
 800d692:	3001      	adds	r0, #1
 800d694:	e002      	b.n	800d69c <_Paint+0xcc>
 800d696:	4445      	add	r5, r8
 800d698:	3501      	adds	r5, #1
 800d69a:	950d      	str	r5, [sp, #52]	; 0x34
 800d69c:	9310      	str	r3, [sp, #64]	; 0x40
 800d69e:	2301      	movs	r3, #1
 800d6a0:	920f      	str	r2, [sp, #60]	; 0x3c
 800d6a2:	9307      	str	r3, [sp, #28]
 800d6a4:	900e      	str	r0, [sp, #56]	; 0x38
 800d6a6:	a809      	add	r0, sp, #36	; 0x24
 800d6a8:	47b0      	blx	r6
 800d6aa:	4620      	mov	r0, r4
 800d6ac:	f7fe ff0c 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d6b0:	9000      	str	r0, [sp, #0]
 800d6b2:	f7f5 ff43 	bl	800353c <PROGBAR__GetTextLocked>
 800d6b6:	9001      	str	r0, [sp, #4]
 800d6b8:	b1f8      	cbz	r0, 800d6fa <_Paint+0x12a>
 800d6ba:	4648      	mov	r0, r9
 800d6bc:	f7fe faa8 	bl	800bc10 <GUI_SetFont>
 800d6c0:	4639      	mov	r1, r7
 800d6c2:	9a01      	ldr	r2, [sp, #4]
 800d6c4:	9800      	ldr	r0, [sp, #0]
 800d6c6:	f7f5 ff3c 	bl	8003542 <PROGBAR__GetTextRect>
 800d6ca:	4668      	mov	r0, sp
 800d6cc:	f7fe ff0a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d6d0:	9b01      	ldr	r3, [sp, #4]
 800d6d2:	9308      	str	r3, [sp, #32]
 800d6d4:	2312      	movs	r3, #18
 800d6d6:	930a      	str	r3, [sp, #40]	; 0x28
 800d6d8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800d6dc:	930d      	str	r3, [sp, #52]	; 0x34
 800d6de:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d6e2:	930e      	str	r3, [sp, #56]	; 0x38
 800d6e4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d6e8:	930f      	str	r3, [sp, #60]	; 0x3c
 800d6ea:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d6ee:	9409      	str	r4, [sp, #36]	; 0x24
 800d6f0:	9310      	str	r3, [sp, #64]	; 0x40
 800d6f2:	a809      	add	r0, sp, #36	; 0x24
 800d6f4:	47b0      	blx	r6
 800d6f6:	a801      	add	r0, sp, #4
 800d6f8:	e000      	b.n	800d6fc <_Paint+0x12c>
 800d6fa:	4668      	mov	r0, sp
 800d6fc:	f7fe fef2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d700:	2000      	movs	r0, #0
 800d702:	f7f8 f9d1 	bl	8005aa8 <WM_SetUserClipRect>
 800d706:	b013      	add	sp, #76	; 0x4c
 800d708:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d70c <GUI_ARRAY__GethItem>:
 800d70c:	8803      	ldrh	r3, [r0, #0]
 800d70e:	4299      	cmp	r1, r3
 800d710:	b513      	push	{r0, r1, r4, lr}
 800d712:	460c      	mov	r4, r1
 800d714:	d20e      	bcs.n	800d734 <GUI_ARRAY__GethItem+0x28>
 800d716:	6840      	ldr	r0, [r0, #4]
 800d718:	b150      	cbz	r0, 800d730 <GUI_ARRAY__GethItem+0x24>
 800d71a:	f7fe fed5 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d71e:	ab02      	add	r3, sp, #8
 800d720:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800d724:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d728:	4618      	mov	r0, r3
 800d72a:	f7fe fedb 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d72e:	e002      	b.n	800d736 <GUI_ARRAY__GethItem+0x2a>
 800d730:	4604      	mov	r4, r0
 800d732:	e000      	b.n	800d736 <GUI_ARRAY__GethItem+0x2a>
 800d734:	2400      	movs	r4, #0
 800d736:	4620      	mov	r0, r4
 800d738:	b002      	add	sp, #8
 800d73a:	bd10      	pop	{r4, pc}

0800d73c <GUI_ARRAY_GetNumItems>:
 800d73c:	b513      	push	{r0, r1, r4, lr}
 800d73e:	4604      	mov	r4, r0
 800d740:	b140      	cbz	r0, 800d754 <GUI_ARRAY_GetNumItems+0x18>
 800d742:	f7fe fec1 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d746:	ab02      	add	r3, sp, #8
 800d748:	8804      	ldrh	r4, [r0, #0]
 800d74a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d74e:	4618      	mov	r0, r3
 800d750:	f7fe fec8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d754:	4620      	mov	r0, r4
 800d756:	b002      	add	sp, #8
 800d758:	bd10      	pop	{r4, pc}

0800d75a <GUI_ARRAY_AddItem>:
 800d75a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d75e:	4605      	mov	r5, r0
 800d760:	2800      	cmp	r0, #0
 800d762:	d03d      	beq.n	800d7e0 <GUI_ARRAY_AddItem+0x86>
 800d764:	b14a      	cbz	r2, 800d77a <GUI_ARRAY_AddItem+0x20>
 800d766:	4608      	mov	r0, r1
 800d768:	4611      	mov	r1, r2
 800d76a:	f7ff f885 	bl	800c878 <GUI_ALLOC_AllocInit>
 800d76e:	f1d0 0401 	rsbs	r4, r0, #1
 800d772:	4607      	mov	r7, r0
 800d774:	bf38      	it	cc
 800d776:	2400      	movcc	r4, #0
 800d778:	e001      	b.n	800d77e <GUI_ARRAY_AddItem+0x24>
 800d77a:	4614      	mov	r4, r2
 800d77c:	4617      	mov	r7, r2
 800d77e:	4628      	mov	r0, r5
 800d780:	f7fe fea2 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d784:	ae02      	add	r6, sp, #8
 800d786:	f8b0 8000 	ldrh.w	r8, [r0]
 800d78a:	f846 0d08 	str.w	r0, [r6, #-8]!
 800d78e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800d792:	4668      	mov	r0, sp
 800d794:	f7fe fea6 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d798:	bb24      	cbnz	r4, 800d7e4 <GUI_ARRAY_AddItem+0x8a>
 800d79a:	f108 0101 	add.w	r1, r8, #1
 800d79e:	4648      	mov	r0, r9
 800d7a0:	0089      	lsls	r1, r1, #2
 800d7a2:	f7ff f8a3 	bl	800c8ec <GUI_ALLOC_Realloc>
 800d7a6:	4681      	mov	r9, r0
 800d7a8:	b918      	cbnz	r0, 800d7b2 <GUI_ARRAY_AddItem+0x58>
 800d7aa:	4638      	mov	r0, r7
 800d7ac:	f7fe fec6 	bl	800c53c <GUI_ALLOC_Free>
 800d7b0:	e018      	b.n	800d7e4 <GUI_ARRAY_AddItem+0x8a>
 800d7b2:	f7fe fe89 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d7b6:	ab02      	add	r3, sp, #8
 800d7b8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d7bc:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800d7c0:	4618      	mov	r0, r3
 800d7c2:	f7fe fe8f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d7c6:	4628      	mov	r0, r5
 800d7c8:	f7fe fe7e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d7cc:	8803      	ldrh	r3, [r0, #0]
 800d7ce:	9000      	str	r0, [sp, #0]
 800d7d0:	3301      	adds	r3, #1
 800d7d2:	f8c0 9004 	str.w	r9, [r0, #4]
 800d7d6:	8003      	strh	r3, [r0, #0]
 800d7d8:	4668      	mov	r0, sp
 800d7da:	f7fe fe83 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d7de:	e002      	b.n	800d7e6 <GUI_ARRAY_AddItem+0x8c>
 800d7e0:	4604      	mov	r4, r0
 800d7e2:	e000      	b.n	800d7e6 <GUI_ARRAY_AddItem+0x8c>
 800d7e4:	2401      	movs	r4, #1
 800d7e6:	4620      	mov	r0, r4
 800d7e8:	b003      	add	sp, #12
 800d7ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d7ee <GUI_ARRAY_Delete>:
 800d7ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d7f0:	4605      	mov	r5, r0
 800d7f2:	b318      	cbz	r0, 800d83c <GUI_ARRAY_Delete+0x4e>
 800d7f4:	f7fe fe68 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d7f8:	9000      	str	r0, [sp, #0]
 800d7fa:	6840      	ldr	r0, [r0, #4]
 800d7fc:	b1c0      	cbz	r0, 800d830 <GUI_ARRAY_Delete+0x42>
 800d7fe:	f7fe fe63 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d802:	2400      	movs	r4, #0
 800d804:	9001      	str	r0, [sp, #4]
 800d806:	9b00      	ldr	r3, [sp, #0]
 800d808:	881b      	ldrh	r3, [r3, #0]
 800d80a:	429c      	cmp	r4, r3
 800d80c:	da06      	bge.n	800d81c <GUI_ARRAY_Delete+0x2e>
 800d80e:	9801      	ldr	r0, [sp, #4]
 800d810:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800d814:	f7ff f828 	bl	800c868 <GUI_ALLOC_FreePtr>
 800d818:	3401      	adds	r4, #1
 800d81a:	e7f4      	b.n	800d806 <GUI_ARRAY_Delete+0x18>
 800d81c:	a801      	add	r0, sp, #4
 800d81e:	f7fe fe61 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d822:	9800      	ldr	r0, [sp, #0]
 800d824:	3004      	adds	r0, #4
 800d826:	f7ff f81f 	bl	800c868 <GUI_ALLOC_FreePtr>
 800d82a:	9b00      	ldr	r3, [sp, #0]
 800d82c:	2200      	movs	r2, #0
 800d82e:	801a      	strh	r2, [r3, #0]
 800d830:	4668      	mov	r0, sp
 800d832:	f7fe fe57 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d836:	4628      	mov	r0, r5
 800d838:	f7fe fe80 	bl	800c53c <GUI_ALLOC_Free>
 800d83c:	b003      	add	sp, #12
 800d83e:	bd30      	pop	{r4, r5, pc}

0800d840 <GUI_ARRAY_GethItem>:
 800d840:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d842:	460e      	mov	r6, r1
 800d844:	4605      	mov	r5, r0
 800d846:	b158      	cbz	r0, 800d860 <GUI_ARRAY_GethItem+0x20>
 800d848:	f7fe fe3e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d84c:	ac02      	add	r4, sp, #8
 800d84e:	4631      	mov	r1, r6
 800d850:	f844 0d04 	str.w	r0, [r4, #-4]!
 800d854:	f7ff ff5a 	bl	800d70c <GUI_ARRAY__GethItem>
 800d858:	4605      	mov	r5, r0
 800d85a:	4620      	mov	r0, r4
 800d85c:	f7fe fe42 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d860:	4628      	mov	r0, r5
 800d862:	b002      	add	sp, #8
 800d864:	bd70      	pop	{r4, r5, r6, pc}

0800d866 <GUI_ARRAY_Create>:
 800d866:	2008      	movs	r0, #8
 800d868:	f7ff b828 	b.w	800c8bc <GUI_ALLOC_AllocZero>

0800d86c <FRAMEWIN_DrawSkinFlex>:
 800d86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d870:	4604      	mov	r4, r0
 800d872:	b090      	sub	sp, #64	; 0x40
 800d874:	6800      	ldr	r0, [r0, #0]
 800d876:	4d9b      	ldr	r5, [pc, #620]	; (800dae4 <FRAMEWIN_DrawSkinFlex+0x278>)
 800d878:	f7f7 fa7a 	bl	8004d70 <FRAMEWIN_GetActive>
 800d87c:	4b9a      	ldr	r3, [pc, #616]	; (800dae8 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800d87e:	6866      	ldr	r6, [r4, #4]
 800d880:	2800      	cmp	r0, #0
 800d882:	bf18      	it	ne
 800d884:	461d      	movne	r5, r3
 800d886:	2e1c      	cmp	r6, #28
 800d888:	f200 81a6 	bhi.w	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800d88c:	e8df f016 	tbh	[pc, r6, lsl #1]
 800d890:	01a40191 	.word	0x01a40191
 800d894:	01a401a4 	.word	0x01a401a4
 800d898:	012e01a4 	.word	0x012e01a4
 800d89c:	01a401a4 	.word	0x01a401a4
 800d8a0:	01a401a4 	.word	0x01a401a4
 800d8a4:	002701a4 	.word	0x002701a4
 800d8a8:	01a401a4 	.word	0x01a401a4
 800d8ac:	01a4017e 	.word	0x01a4017e
 800d8b0:	01a401a4 	.word	0x01a401a4
 800d8b4:	01a40145 	.word	0x01a40145
 800d8b8:	002301a4 	.word	0x002301a4
 800d8bc:	001f001d 	.word	0x001f001d
 800d8c0:	01a40021 	.word	0x01a40021
 800d8c4:	01a401a4 	.word	0x01a401a4
 800d8c8:	0025      	.short	0x0025
 800d8ca:	69ee      	ldr	r6, [r5, #28]
 800d8cc:	e189      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800d8ce:	6a2e      	ldr	r6, [r5, #32]
 800d8d0:	e187      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800d8d2:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800d8d4:	e185      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800d8d6:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800d8d8:	e183      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800d8da:	696e      	ldr	r6, [r5, #20]
 800d8dc:	e181      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800d8de:	231c      	movs	r3, #28
 800d8e0:	6820      	ldr	r0, [r4, #0]
 800d8e2:	9308      	str	r3, [sp, #32]
 800d8e4:	9007      	str	r0, [sp, #28]
 800d8e6:	f7fe fdef 	bl	800c4c8 <GUI_ALLOC_LockH>
 800d8ea:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d8ec:	9005      	str	r0, [sp, #20]
 800d8ee:	a807      	add	r0, sp, #28
 800d8f0:	4798      	blx	r3
 800d8f2:	4606      	mov	r6, r0
 800d8f4:	a805      	add	r0, sp, #20
 800d8f6:	f7fe fdf5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800d8fa:	2e01      	cmp	r6, #1
 800d8fc:	dd11      	ble.n	800d922 <FRAMEWIN_DrawSkinFlex+0xb6>
 800d8fe:	682b      	ldr	r3, [r5, #0]
 800d900:	9300      	str	r3, [sp, #0]
 800d902:	686b      	ldr	r3, [r5, #4]
 800d904:	9301      	str	r3, [sp, #4]
 800d906:	68ab      	ldr	r3, [r5, #8]
 800d908:	9302      	str	r3, [sp, #8]
 800d90a:	6920      	ldr	r0, [r4, #16]
 800d90c:	69a1      	ldr	r1, [r4, #24]
 800d90e:	6962      	ldr	r2, [r4, #20]
 800d910:	4633      	mov	r3, r6
 800d912:	f002 f923 	bl	800fb5c <GUI__DrawTwinArc2>
 800d916:	6923      	ldr	r3, [r4, #16]
 800d918:	69a7      	ldr	r7, [r4, #24]
 800d91a:	eb06 0803 	add.w	r8, r6, r3
 800d91e:	1bbf      	subs	r7, r7, r6
 800d920:	e02c      	b.n	800d97c <FRAMEWIN_DrawSkinFlex+0x110>
 800d922:	6828      	ldr	r0, [r5, #0]
 800d924:	f7fe f96f 	bl	800bc06 <GUI_SetColor>
 800d928:	6921      	ldr	r1, [r4, #16]
 800d92a:	69ea      	ldr	r2, [r5, #28]
 800d92c:	6960      	ldr	r0, [r4, #20]
 800d92e:	440a      	add	r2, r1
 800d930:	3a01      	subs	r2, #1
 800d932:	f7fd fa3b 	bl	800adac <GUI_DrawHLine>
 800d936:	69a2      	ldr	r2, [r4, #24]
 800d938:	69e9      	ldr	r1, [r5, #28]
 800d93a:	6960      	ldr	r0, [r4, #20]
 800d93c:	1a51      	subs	r1, r2, r1
 800d93e:	3101      	adds	r1, #1
 800d940:	f7fd fa34 	bl	800adac <GUI_DrawHLine>
 800d944:	6967      	ldr	r7, [r4, #20]
 800d946:	6920      	ldr	r0, [r4, #16]
 800d948:	3701      	adds	r7, #1
 800d94a:	4639      	mov	r1, r7
 800d94c:	f7fd fa52 	bl	800adf4 <GUI_DrawPixel>
 800d950:	4639      	mov	r1, r7
 800d952:	69a0      	ldr	r0, [r4, #24]
 800d954:	f7fd fa4e 	bl	800adf4 <GUI_DrawPixel>
 800d958:	6868      	ldr	r0, [r5, #4]
 800d95a:	f7fe f954 	bl	800bc06 <GUI_SetColor>
 800d95e:	6920      	ldr	r0, [r4, #16]
 800d960:	4639      	mov	r1, r7
 800d962:	3001      	adds	r0, #1
 800d964:	f7fd fa46 	bl	800adf4 <GUI_DrawPixel>
 800d968:	69a0      	ldr	r0, [r4, #24]
 800d96a:	4639      	mov	r1, r7
 800d96c:	3801      	subs	r0, #1
 800d96e:	f7fd fa41 	bl	800adf4 <GUI_DrawPixel>
 800d972:	6923      	ldr	r3, [r4, #16]
 800d974:	69a7      	ldr	r7, [r4, #24]
 800d976:	f103 0802 	add.w	r8, r3, #2
 800d97a:	3f02      	subs	r7, #2
 800d97c:	6828      	ldr	r0, [r5, #0]
 800d97e:	f7fe f942 	bl	800bc06 <GUI_SetColor>
 800d982:	4641      	mov	r1, r8
 800d984:	463a      	mov	r2, r7
 800d986:	6960      	ldr	r0, [r4, #20]
 800d988:	f7fd fa10 	bl	800adac <GUI_DrawHLine>
 800d98c:	6868      	ldr	r0, [r5, #4]
 800d98e:	f7fe f93a 	bl	800bc06 <GUI_SetColor>
 800d992:	6960      	ldr	r0, [r4, #20]
 800d994:	4641      	mov	r1, r8
 800d996:	3001      	adds	r0, #1
 800d998:	463a      	mov	r2, r7
 800d99a:	f7fd fa07 	bl	800adac <GUI_DrawHLine>
 800d99e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d9a0:	2b02      	cmp	r3, #2
 800d9a2:	dd0a      	ble.n	800d9ba <FRAMEWIN_DrawSkinFlex+0x14e>
 800d9a4:	68a8      	ldr	r0, [r5, #8]
 800d9a6:	f7fe f92e 	bl	800bc06 <GUI_SetColor>
 800d9aa:	6961      	ldr	r1, [r4, #20]
 800d9ac:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d9ae:	440b      	add	r3, r1
 800d9b0:	4640      	mov	r0, r8
 800d9b2:	3102      	adds	r1, #2
 800d9b4:	463a      	mov	r2, r7
 800d9b6:	3b01      	subs	r3, #1
 800d9b8:	e01d      	b.n	800d9f6 <FRAMEWIN_DrawSkinFlex+0x18a>
 800d9ba:	6a2a      	ldr	r2, [r5, #32]
 800d9bc:	42b2      	cmp	r2, r6
 800d9be:	dd1c      	ble.n	800d9fa <FRAMEWIN_DrawSkinFlex+0x18e>
 800d9c0:	6967      	ldr	r7, [r4, #20]
 800d9c2:	6923      	ldr	r3, [r4, #16]
 800d9c4:	2e01      	cmp	r6, #1
 800d9c6:	f107 0802 	add.w	r8, r7, #2
 800d9ca:	f340 8107 	ble.w	800dbdc <FRAMEWIN_DrawSkinFlex+0x370>
 800d9ce:	4437      	add	r7, r6
 800d9d0:	18f0      	adds	r0, r6, r3
 800d9d2:	441a      	add	r2, r3
 800d9d4:	3a01      	subs	r2, #1
 800d9d6:	4641      	mov	r1, r8
 800d9d8:	463b      	mov	r3, r7
 800d9da:	f7fd fa63 	bl	800aea4 <GUI_FillRect>
 800d9de:	69a3      	ldr	r3, [r4, #24]
 800d9e0:	69e8      	ldr	r0, [r5, #28]
 800d9e2:	2e01      	cmp	r6, #1
 800d9e4:	ebc0 0003 	rsb	r0, r0, r3
 800d9e8:	bfcc      	ite	gt
 800d9ea:	ebc6 0203 	rsbgt	r2, r6, r3
 800d9ee:	1e9a      	suble	r2, r3, #2
 800d9f0:	3001      	adds	r0, #1
 800d9f2:	4641      	mov	r1, r8
 800d9f4:	463b      	mov	r3, r7
 800d9f6:	f7fd fa55 	bl	800aea4 <GUI_FillRect>
 800d9fa:	6963      	ldr	r3, [r4, #20]
 800d9fc:	69e7      	ldr	r7, [r4, #28]
 800d9fe:	6828      	ldr	r0, [r5, #0]
 800da00:	2e01      	cmp	r6, #1
 800da02:	bfcc      	ite	gt
 800da04:	18f6      	addgt	r6, r6, r3
 800da06:	1c9e      	addle	r6, r3, #2
 800da08:	3f01      	subs	r7, #1
 800da0a:	f7fe f8fc 	bl	800bc06 <GUI_SetColor>
 800da0e:	463a      	mov	r2, r7
 800da10:	6920      	ldr	r0, [r4, #16]
 800da12:	4631      	mov	r1, r6
 800da14:	f7fd fa24 	bl	800ae60 <GUI_DrawVLine>
 800da18:	463a      	mov	r2, r7
 800da1a:	4631      	mov	r1, r6
 800da1c:	69a0      	ldr	r0, [r4, #24]
 800da1e:	f7fd fa1f 	bl	800ae60 <GUI_DrawVLine>
 800da22:	69e7      	ldr	r7, [r4, #28]
 800da24:	6868      	ldr	r0, [r5, #4]
 800da26:	f7fe f8ee 	bl	800bc06 <GUI_SetColor>
 800da2a:	6920      	ldr	r0, [r4, #16]
 800da2c:	3f02      	subs	r7, #2
 800da2e:	3001      	adds	r0, #1
 800da30:	4631      	mov	r1, r6
 800da32:	463a      	mov	r2, r7
 800da34:	f7fd fa14 	bl	800ae60 <GUI_DrawVLine>
 800da38:	69a0      	ldr	r0, [r4, #24]
 800da3a:	4631      	mov	r1, r6
 800da3c:	3801      	subs	r0, #1
 800da3e:	463a      	mov	r2, r7
 800da40:	f7fd fa0e 	bl	800ae60 <GUI_DrawVLine>
 800da44:	69eb      	ldr	r3, [r5, #28]
 800da46:	2b02      	cmp	r3, #2
 800da48:	dc02      	bgt.n	800da50 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800da4a:	6a2b      	ldr	r3, [r5, #32]
 800da4c:	2b02      	cmp	r3, #2
 800da4e:	dd20      	ble.n	800da92 <FRAMEWIN_DrawSkinFlex+0x226>
 800da50:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800da52:	69e7      	ldr	r7, [r4, #28]
 800da54:	68a8      	ldr	r0, [r5, #8]
 800da56:	2b02      	cmp	r3, #2
 800da58:	bfcc      	ite	gt
 800da5a:	ebc3 0707 	rsbgt	r7, r3, r7
 800da5e:	3f02      	suble	r7, #2
 800da60:	f7fe f8d1 	bl	800bc06 <GUI_SetColor>
 800da64:	69ea      	ldr	r2, [r5, #28]
 800da66:	2a02      	cmp	r2, #2
 800da68:	dd07      	ble.n	800da7a <FRAMEWIN_DrawSkinFlex+0x20e>
 800da6a:	6920      	ldr	r0, [r4, #16]
 800da6c:	4402      	add	r2, r0
 800da6e:	4631      	mov	r1, r6
 800da70:	3002      	adds	r0, #2
 800da72:	3a01      	subs	r2, #1
 800da74:	463b      	mov	r3, r7
 800da76:	f7fd fa15 	bl	800aea4 <GUI_FillRect>
 800da7a:	6a2b      	ldr	r3, [r5, #32]
 800da7c:	2b02      	cmp	r3, #2
 800da7e:	dd08      	ble.n	800da92 <FRAMEWIN_DrawSkinFlex+0x226>
 800da80:	69a2      	ldr	r2, [r4, #24]
 800da82:	69e8      	ldr	r0, [r5, #28]
 800da84:	1a10      	subs	r0, r2, r0
 800da86:	3001      	adds	r0, #1
 800da88:	4631      	mov	r1, r6
 800da8a:	3a02      	subs	r2, #2
 800da8c:	463b      	mov	r3, r7
 800da8e:	f7fd fa09 	bl	800aea4 <GUI_FillRect>
 800da92:	6828      	ldr	r0, [r5, #0]
 800da94:	f7fe f8b7 	bl	800bc06 <GUI_SetColor>
 800da98:	6921      	ldr	r1, [r4, #16]
 800da9a:	69a2      	ldr	r2, [r4, #24]
 800da9c:	69e0      	ldr	r0, [r4, #28]
 800da9e:	f7fd f985 	bl	800adac <GUI_DrawHLine>
 800daa2:	6868      	ldr	r0, [r5, #4]
 800daa4:	f7fe f8af 	bl	800bc06 <GUI_SetColor>
 800daa8:	69e0      	ldr	r0, [r4, #28]
 800daaa:	6921      	ldr	r1, [r4, #16]
 800daac:	69a2      	ldr	r2, [r4, #24]
 800daae:	3801      	subs	r0, #1
 800dab0:	3101      	adds	r1, #1
 800dab2:	3a01      	subs	r2, #1
 800dab4:	f7fd f97a 	bl	800adac <GUI_DrawHLine>
 800dab8:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800daba:	2e02      	cmp	r6, #2
 800dabc:	f340 808c 	ble.w	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800dac0:	6920      	ldr	r0, [r4, #16]
 800dac2:	69a2      	ldr	r2, [r4, #24]
 800dac4:	69e4      	ldr	r4, [r4, #28]
 800dac6:	f100 0802 	add.w	r8, r0, #2
 800daca:	68a8      	ldr	r0, [r5, #8]
 800dacc:	1e97      	subs	r7, r2, #2
 800dace:	f7fe f89a 	bl	800bc06 <GUI_SetColor>
 800dad2:	1ba1      	subs	r1, r4, r6
 800dad4:	4640      	mov	r0, r8
 800dad6:	3101      	adds	r1, #1
 800dad8:	463a      	mov	r2, r7
 800dada:	1ea3      	subs	r3, r4, #2
 800dadc:	f7fd f9e2 	bl	800aea4 <GUI_FillRect>
 800dae0:	e07a      	b.n	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800dae2:	bf00      	nop
 800dae4:	2000014c 	.word	0x2000014c
 800dae8:	20000120 	.word	0x20000120
 800daec:	8a20      	ldrh	r0, [r4, #16]
 800daee:	8aa1      	ldrh	r1, [r4, #20]
 800daf0:	8b22      	ldrh	r2, [r4, #24]
 800daf2:	8ba3      	ldrh	r3, [r4, #28]
 800daf4:	68ec      	ldr	r4, [r5, #12]
 800daf6:	9400      	str	r4, [sp, #0]
 800daf8:	692c      	ldr	r4, [r5, #16]
 800dafa:	f8ad 001c 	strh.w	r0, [sp, #28]
 800dafe:	f8ad 101e 	strh.w	r1, [sp, #30]
 800db02:	f8ad 2020 	strh.w	r2, [sp, #32]
 800db06:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800db0a:	9401      	str	r4, [sp, #4]
 800db0c:	b200      	sxth	r0, r0
 800db0e:	b209      	sxth	r1, r1
 800db10:	b212      	sxth	r2, r2
 800db12:	b21b      	sxth	r3, r3
 800db14:	f002 fc4e 	bl	80103b4 <GUI_DrawGradientV>
 800db18:	e05e      	b.n	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800db1a:	8b2b      	ldrh	r3, [r5, #24]
 800db1c:	6922      	ldr	r2, [r4, #16]
 800db1e:	6820      	ldr	r0, [r4, #0]
 800db20:	441a      	add	r2, r3
 800db22:	f8ad 201c 	strh.w	r2, [sp, #28]
 800db26:	6962      	ldr	r2, [r4, #20]
 800db28:	f8ad 201e 	strh.w	r2, [sp, #30]
 800db2c:	69a2      	ldr	r2, [r4, #24]
 800db2e:	1ad3      	subs	r3, r2, r3
 800db30:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db34:	69e3      	ldr	r3, [r4, #28]
 800db36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800db3a:	f7fe fcc5 	bl	800c4c8 <GUI_ALLOC_LockH>
 800db3e:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800db40:	9005      	str	r0, [sp, #20]
 800db42:	b1fb      	cbz	r3, 800db84 <FRAMEWIN_DrawSkinFlex+0x318>
 800db44:	2002      	movs	r0, #2
 800db46:	f7fe f899 	bl	800bc7c <GUI_SetTextMode>
 800db4a:	9b05      	ldr	r3, [sp, #20]
 800db4c:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800db50:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800db54:	320e      	adds	r2, #14
 800db56:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800db5a:	6898      	ldr	r0, [r3, #8]
 800db5c:	f7fe f853 	bl	800bc06 <GUI_SetColor>
 800db60:	9b05      	ldr	r3, [sp, #20]
 800db62:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800db64:	f7fe f854 	bl	800bc10 <GUI_SetFont>
 800db68:	9b05      	ldr	r3, [sp, #20]
 800db6a:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800db6c:	f7fe fcac 	bl	800c4c8 <GUI_ALLOC_LockH>
 800db70:	9b05      	ldr	r3, [sp, #20]
 800db72:	9006      	str	r0, [sp, #24]
 800db74:	a907      	add	r1, sp, #28
 800db76:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800db7a:	f7fd fc1e 	bl	800b3ba <GUI_DispStringInRect>
 800db7e:	a806      	add	r0, sp, #24
 800db80:	f7fe fcb0 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800db84:	a805      	add	r0, sp, #20
 800db86:	f7fe fcad 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800db8a:	e025      	b.n	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800db8c:	6923      	ldr	r3, [r4, #16]
 800db8e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800db92:	6963      	ldr	r3, [r4, #20]
 800db94:	f8ad 301e 	strh.w	r3, [sp, #30]
 800db98:	69a3      	ldr	r3, [r4, #24]
 800db9a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db9e:	68a8      	ldr	r0, [r5, #8]
 800dba0:	69e3      	ldr	r3, [r4, #28]
 800dba2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800dba6:	f7fe f82e 	bl	800bc06 <GUI_SetColor>
 800dbaa:	a807      	add	r0, sp, #28
 800dbac:	f7fd f99c 	bl	800aee8 <GUI_FillRectEx>
 800dbb0:	e012      	b.n	800dbd8 <FRAMEWIN_DrawSkinFlex+0x36c>
 800dbb2:	6820      	ldr	r0, [r4, #0]
 800dbb4:	f7fe fc88 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dbb8:	ab10      	add	r3, sp, #64	; 0x40
 800dbba:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800dbbe:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800dbc2:	f042 020c 	orr.w	r2, r2, #12
 800dbc6:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800dbca:	4618      	mov	r0, r3
 800dbcc:	f7fe fc8a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800dbd0:	6820      	ldr	r0, [r4, #0]
 800dbd2:	f7f7 fa7b 	bl	80050cc <WM_SetHasTrans>
 800dbd6:	e004      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800dbd8:	2600      	movs	r6, #0
 800dbda:	e002      	b.n	800dbe2 <FRAMEWIN_DrawSkinFlex+0x376>
 800dbdc:	1c98      	adds	r0, r3, #2
 800dbde:	4647      	mov	r7, r8
 800dbe0:	e6f7      	b.n	800d9d2 <FRAMEWIN_DrawSkinFlex+0x166>
 800dbe2:	4630      	mov	r0, r6
 800dbe4:	b010      	add	sp, #64	; 0x40
 800dbe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbea:	bf00      	nop

0800dbec <_GetBorderSize>:
 800dbec:	b570      	push	{r4, r5, r6, lr}
 800dbee:	b08a      	sub	sp, #40	; 0x28
 800dbf0:	4605      	mov	r5, r0
 800dbf2:	460c      	mov	r4, r1
 800dbf4:	f7fe fc68 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dbf8:	ab0a      	add	r3, sp, #40	; 0x28
 800dbfa:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800dbfc:	f843 0d28 	str.w	r0, [r3, #-40]!
 800dc00:	4668      	mov	r0, sp
 800dc02:	f7fe fc6f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800dc06:	9501      	str	r5, [sp, #4]
 800dc08:	2c03      	cmp	r4, #3
 800dc0a:	d80b      	bhi.n	800dc24 <_GetBorderSize+0x38>
 800dc0c:	e8df f004 	tbb	[pc, r4]
 800dc10:	08060402 	.word	0x08060402
 800dc14:	2318      	movs	r3, #24
 800dc16:	e004      	b.n	800dc22 <_GetBorderSize+0x36>
 800dc18:	2316      	movs	r3, #22
 800dc1a:	e002      	b.n	800dc22 <_GetBorderSize+0x36>
 800dc1c:	2315      	movs	r3, #21
 800dc1e:	e000      	b.n	800dc22 <_GetBorderSize+0x36>
 800dc20:	2317      	movs	r3, #23
 800dc22:	9302      	str	r3, [sp, #8]
 800dc24:	a801      	add	r0, sp, #4
 800dc26:	47b0      	blx	r6
 800dc28:	b00a      	add	sp, #40	; 0x28
 800dc2a:	bd70      	pop	{r4, r5, r6, pc}

0800dc2c <_Create>:
 800dc2c:	b530      	push	{r4, r5, lr}
 800dc2e:	b08b      	sub	sp, #44	; 0x2c
 800dc30:	4605      	mov	r5, r0
 800dc32:	f7fe fc49 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dc36:	ab0a      	add	r3, sp, #40	; 0x28
 800dc38:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800dc3a:	f843 0d28 	str.w	r0, [r3, #-40]!
 800dc3e:	4668      	mov	r0, sp
 800dc40:	6894      	ldr	r4, [r2, #8]
 800dc42:	f7fe fc4f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800dc46:	a80a      	add	r0, sp, #40	; 0x28
 800dc48:	2300      	movs	r3, #0
 800dc4a:	9302      	str	r3, [sp, #8]
 800dc4c:	f840 5d24 	str.w	r5, [r0, #-36]!
 800dc50:	6863      	ldr	r3, [r4, #4]
 800dc52:	4798      	blx	r3
 800dc54:	b00b      	add	sp, #44	; 0x2c
 800dc56:	bd30      	pop	{r4, r5, pc}

0800dc58 <_Paint>:
 800dc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc5c:	b091      	sub	sp, #68	; 0x44
 800dc5e:	4604      	mov	r4, r0
 800dc60:	f7fe fc32 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dc64:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800dc66:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800dc68:	9603      	str	r6, [sp, #12]
 800dc6a:	9006      	str	r0, [sp, #24]
 800dc6c:	689e      	ldr	r6, [r3, #8]
 800dc6e:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800dc70:	f7f6 fdb4 	bl	80047dc <FRAMEWIN__CalcTitleHeight>
 800dc74:	4683      	mov	fp, r0
 800dc76:	a810      	add	r0, sp, #64	; 0x40
 800dc78:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800dc7c:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800dc80:	9204      	str	r2, [sp, #16]
 800dc82:	f7fe fc2f 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800dc86:	4620      	mov	r0, r4
 800dc88:	f7f7 ff7e 	bl	8005b88 <WM_GetWindowSizeX>
 800dc8c:	4681      	mov	r9, r0
 800dc8e:	4620      	mov	r0, r4
 800dc90:	f7f7 ff8f 	bl	8005bb2 <WM_GetWindowSizeY>
 800dc94:	6832      	ldr	r2, [r6, #0]
 800dc96:	2101      	movs	r1, #1
 800dc98:	4680      	mov	r8, r0
 800dc9a:	4620      	mov	r0, r4
 800dc9c:	4790      	blx	r2
 800dc9e:	6832      	ldr	r2, [r6, #0]
 800dca0:	2103      	movs	r1, #3
 800dca2:	4607      	mov	r7, r0
 800dca4:	4620      	mov	r0, r4
 800dca6:	4790      	blx	r2
 800dca8:	6832      	ldr	r2, [r6, #0]
 800dcaa:	2100      	movs	r1, #0
 800dcac:	4682      	mov	sl, r0
 800dcae:	4620      	mov	r0, r4
 800dcb0:	4790      	blx	r2
 800dcb2:	6833      	ldr	r3, [r6, #0]
 800dcb4:	9002      	str	r0, [sp, #8]
 800dcb6:	2102      	movs	r1, #2
 800dcb8:	4620      	mov	r0, r4
 800dcba:	4798      	blx	r3
 800dcbc:	9005      	str	r0, [sp, #20]
 800dcbe:	2000      	movs	r0, #0
 800dcc0:	9407      	str	r4, [sp, #28]
 800dcc2:	f7f8 ff1d 	bl	8006b00 <WM__InitIVRSearch>
 800dcc6:	2800      	cmp	r0, #0
 800dcc8:	d044      	beq.n	800dd54 <_Paint+0xfc>
 800dcca:	2300      	movs	r3, #0
 800dccc:	930c      	str	r3, [sp, #48]	; 0x30
 800dcce:	930b      	str	r3, [sp, #44]	; 0x2c
 800dcd0:	f109 33ff 	add.w	r3, r9, #4294967295
 800dcd4:	930d      	str	r3, [sp, #52]	; 0x34
 800dcd6:	f108 33ff 	add.w	r3, r8, #4294967295
 800dcda:	930e      	str	r3, [sp, #56]	; 0x38
 800dcdc:	230b      	movs	r3, #11
 800dcde:	9308      	str	r3, [sp, #32]
 800dce0:	a807      	add	r0, sp, #28
 800dce2:	47a8      	blx	r5
 800dce4:	9b02      	ldr	r3, [sp, #8]
 800dce6:	9e04      	ldr	r6, [sp, #16]
 800dce8:	970b      	str	r7, [sp, #44]	; 0x2c
 800dcea:	445b      	add	r3, fp
 800dcec:	fa03 f086 	sxtah	r0, r3, r6
 800dcf0:	9e05      	ldr	r6, [sp, #20]
 800dcf2:	930c      	str	r3, [sp, #48]	; 0x30
 800dcf4:	ebc6 0108 	rsb	r1, r6, r8
 800dcf8:	ebca 0209 	rsb	r2, sl, r9
 800dcfc:	3801      	subs	r0, #1
 800dcfe:	3901      	subs	r1, #1
 800dd00:	3a01      	subs	r2, #1
 800dd02:	4288      	cmp	r0, r1
 800dd04:	bfd4      	ite	le
 800dd06:	900e      	strle	r0, [sp, #56]	; 0x38
 800dd08:	910e      	strgt	r1, [sp, #56]	; 0x38
 800dd0a:	210e      	movs	r1, #14
 800dd0c:	9108      	str	r1, [sp, #32]
 800dd0e:	e88d 000c 	stmia.w	sp, {r2, r3}
 800dd12:	920d      	str	r2, [sp, #52]	; 0x34
 800dd14:	a807      	add	r0, sp, #28
 800dd16:	47a8      	blx	r5
 800dd18:	9b01      	ldr	r3, [sp, #4]
 800dd1a:	9a00      	ldr	r2, [sp, #0]
 800dd1c:	9e02      	ldr	r6, [sp, #8]
 800dd1e:	920d      	str	r2, [sp, #52]	; 0x34
 800dd20:	3b01      	subs	r3, #1
 800dd22:	930e      	str	r3, [sp, #56]	; 0x38
 800dd24:	2305      	movs	r3, #5
 800dd26:	9308      	str	r3, [sp, #32]
 800dd28:	970b      	str	r7, [sp, #44]	; 0x2c
 800dd2a:	960c      	str	r6, [sp, #48]	; 0x30
 800dd2c:	a807      	add	r0, sp, #28
 800dd2e:	47a8      	blx	r5
 800dd30:	a90b      	add	r1, sp, #44	; 0x2c
 800dd32:	aa0d      	add	r2, sp, #52	; 0x34
 800dd34:	4620      	mov	r0, r4
 800dd36:	f7f6 fd60 	bl	80047fa <FRAMEWIN__GetTitleLimits>
 800dd3a:	2002      	movs	r0, #2
 800dd3c:	f7fd ff9e 	bl	800bc7c <GUI_SetTextMode>
 800dd40:	9803      	ldr	r0, [sp, #12]
 800dd42:	f7fd ff65 	bl	800bc10 <GUI_SetFont>
 800dd46:	2312      	movs	r3, #18
 800dd48:	9308      	str	r3, [sp, #32]
 800dd4a:	a807      	add	r0, sp, #28
 800dd4c:	47a8      	blx	r5
 800dd4e:	f7f8 fe15 	bl	800697c <WM__GetNextIVR>
 800dd52:	e7b8      	b.n	800dcc6 <_Paint+0x6e>
 800dd54:	b011      	add	sp, #68	; 0x44
 800dd56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dd5a <_cbTimer>:
 800dd5a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dd5c:	4604      	mov	r4, r0
 800dd5e:	2100      	movs	r1, #0
 800dd60:	4668      	mov	r0, sp
 800dd62:	2210      	movs	r2, #16
 800dd64:	f002 ffee 	bl	8010d44 <memset>
 800dd68:	6860      	ldr	r0, [r4, #4]
 800dd6a:	b150      	cbz	r0, 800dd82 <_cbTimer+0x28>
 800dd6c:	f7fe fba2 	bl	800c4b4 <GUI_ALLOC_h2p>
 800dd70:	f240 1313 	movw	r3, #275	; 0x113
 800dd74:	6840      	ldr	r0, [r0, #4]
 800dd76:	9300      	str	r3, [sp, #0]
 800dd78:	4669      	mov	r1, sp
 800dd7a:	6863      	ldr	r3, [r4, #4]
 800dd7c:	9303      	str	r3, [sp, #12]
 800dd7e:	f7f8 fafa 	bl	8006376 <WM_SendMessage>
 800dd82:	b004      	add	sp, #16
 800dd84:	bd10      	pop	{r4, pc}

0800dd86 <WM_DeleteTimer>:
 800dd86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd88:	4605      	mov	r5, r0
 800dd8a:	b168      	cbz	r0, 800dda8 <WM_DeleteTimer+0x22>
 800dd8c:	f7fe fb9c 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dd90:	ac02      	add	r4, sp, #8
 800dd92:	f844 0d04 	str.w	r0, [r4, #-4]!
 800dd96:	6800      	ldr	r0, [r0, #0]
 800dd98:	f7fc fcf4 	bl	800a784 <GUI_TIMER_Delete>
 800dd9c:	4620      	mov	r0, r4
 800dd9e:	f7fe fba1 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800dda2:	4628      	mov	r0, r5
 800dda4:	f7fe fbca 	bl	800c53c <GUI_ALLOC_Free>
 800dda8:	b003      	add	sp, #12
 800ddaa:	bd30      	pop	{r4, r5, pc}

0800ddac <WM__DeleteAssocTimer>:
 800ddac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ddae:	4605      	mov	r5, r0
 800ddb0:	a801      	add	r0, sp, #4
 800ddb2:	f7fc fc65 	bl	800a680 <GUI_TIMER__GetFirstTimer>
 800ddb6:	4604      	mov	r4, r0
 800ddb8:	b1dc      	cbz	r4, 800ddf2 <WM__DeleteAssocTimer+0x46>
 800ddba:	4620      	mov	r0, r4
 800ddbc:	2101      	movs	r1, #1
 800ddbe:	f7fc fd3c 	bl	800a83a <GUI_TIMER_GetFlag>
 800ddc2:	9b01      	ldr	r3, [sp, #4]
 800ddc4:	b183      	cbz	r3, 800dde8 <WM__DeleteAssocTimer+0x3c>
 800ddc6:	b178      	cbz	r0, 800dde8 <WM__DeleteAssocTimer+0x3c>
 800ddc8:	4618      	mov	r0, r3
 800ddca:	f7fe fb73 	bl	800c4b4 <GUI_ALLOC_h2p>
 800ddce:	6843      	ldr	r3, [r0, #4]
 800ddd0:	42ab      	cmp	r3, r5
 800ddd2:	d109      	bne.n	800dde8 <WM__DeleteAssocTimer+0x3c>
 800ddd4:	4620      	mov	r0, r4
 800ddd6:	a901      	add	r1, sp, #4
 800ddd8:	9e01      	ldr	r6, [sp, #4]
 800ddda:	f7fc fc69 	bl	800a6b0 <GUI_TIMER__GetNextTimerLin>
 800ddde:	4604      	mov	r4, r0
 800dde0:	4630      	mov	r0, r6
 800dde2:	f7ff ffd0 	bl	800dd86 <WM_DeleteTimer>
 800dde6:	e7e7      	b.n	800ddb8 <WM__DeleteAssocTimer+0xc>
 800dde8:	4620      	mov	r0, r4
 800ddea:	a901      	add	r1, sp, #4
 800ddec:	f7fc fc60 	bl	800a6b0 <GUI_TIMER__GetNextTimerLin>
 800ddf0:	e7e1      	b.n	800ddb6 <WM__DeleteAssocTimer+0xa>
 800ddf2:	b002      	add	sp, #8
 800ddf4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800ddf8 <WM_CreateTimer>:
 800ddf8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ddfc:	4680      	mov	r8, r0
 800ddfe:	200c      	movs	r0, #12
 800de00:	460f      	mov	r7, r1
 800de02:	4616      	mov	r6, r2
 800de04:	f7fe fd5a 	bl	800c8bc <GUI_ALLOC_AllocZero>
 800de08:	4604      	mov	r4, r0
 800de0a:	b1f0      	cbz	r0, 800de4a <WM_CreateTimer+0x52>
 800de0c:	f7fc fd2a 	bl	800a864 <GUI_GetTime>
 800de10:	4622      	mov	r2, r4
 800de12:	1981      	adds	r1, r0, r6
 800de14:	2301      	movs	r3, #1
 800de16:	480f      	ldr	r0, [pc, #60]	; (800de54 <WM_CreateTimer+0x5c>)
 800de18:	f7fc fc66 	bl	800a6e8 <GUI_TIMER_Create>
 800de1c:	4605      	mov	r5, r0
 800de1e:	4620      	mov	r0, r4
 800de20:	b185      	cbz	r5, 800de44 <WM_CreateTimer+0x4c>
 800de22:	f7fe fb51 	bl	800c4c8 <GUI_ALLOC_LockH>
 800de26:	4603      	mov	r3, r0
 800de28:	a802      	add	r0, sp, #8
 800de2a:	f8c3 8004 	str.w	r8, [r3, #4]
 800de2e:	f840 3d04 	str.w	r3, [r0, #-4]!
 800de32:	609f      	str	r7, [r3, #8]
 800de34:	601d      	str	r5, [r3, #0]
 800de36:	f7fe fb55 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800de3a:	4628      	mov	r0, r5
 800de3c:	4631      	mov	r1, r6
 800de3e:	f7fc fcd5 	bl	800a7ec <GUI_TIMER_SetPeriod>
 800de42:	e002      	b.n	800de4a <WM_CreateTimer+0x52>
 800de44:	f7fe fb7a 	bl	800c53c <GUI_ALLOC_Free>
 800de48:	462c      	mov	r4, r5
 800de4a:	4620      	mov	r0, r4
 800de4c:	b002      	add	sp, #8
 800de4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de52:	bf00      	nop
 800de54:	0800dd5b 	.word	0x0800dd5b

0800de58 <WM_RestartTimer>:
 800de58:	b513      	push	{r0, r1, r4, lr}
 800de5a:	460c      	mov	r4, r1
 800de5c:	b180      	cbz	r0, 800de80 <WM_RestartTimer+0x28>
 800de5e:	f7fe fb33 	bl	800c4c8 <GUI_ALLOC_LockH>
 800de62:	9001      	str	r0, [sp, #4]
 800de64:	b11c      	cbz	r4, 800de6e <WM_RestartTimer+0x16>
 800de66:	6800      	ldr	r0, [r0, #0]
 800de68:	4621      	mov	r1, r4
 800de6a:	f7fc fcbf 	bl	800a7ec <GUI_TIMER_SetPeriod>
 800de6e:	ac02      	add	r4, sp, #8
 800de70:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800de74:	6818      	ldr	r0, [r3, #0]
 800de76:	f7fc fcc7 	bl	800a808 <GUI_TIMER_Restart>
 800de7a:	4620      	mov	r0, r4
 800de7c:	f7fe fb32 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800de80:	b002      	add	sp, #8
 800de82:	bd10      	pop	{r4, pc}

0800de84 <_Convert16>:
 800de84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de88:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800de8c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800de90:	4605      	mov	r5, r0
 800de92:	460e      	mov	r6, r1
 800de94:	4690      	mov	r8, r2
 800de96:	461f      	mov	r7, r3
 800de98:	4614      	mov	r4, r2
 800de9a:	4689      	mov	r9, r1
 800de9c:	f835 0b02 	ldrh.w	r0, [r5], #2
 800dea0:	47d8      	blx	fp
 800dea2:	47d0      	blx	sl
 800dea4:	3c01      	subs	r4, #1
 800dea6:	f849 0b04 	str.w	r0, [r9], #4
 800deaa:	d1f7      	bne.n	800de9c <_Convert16+0x18>
 800deac:	2f1f      	cmp	r7, #31
 800deae:	d806      	bhi.n	800debe <_Convert16+0x3a>
 800deb0:	4630      	mov	r0, r6
 800deb2:	4641      	mov	r1, r8
 800deb4:	463a      	mov	r2, r7
 800deb6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deba:	f001 bf03 	b.w	800fcc4 <GUI__CompactPixelIndices>
 800debe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dec2 <_Convert8>:
 800dec2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dec6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800deca:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800dece:	4605      	mov	r5, r0
 800ded0:	460e      	mov	r6, r1
 800ded2:	4690      	mov	r8, r2
 800ded4:	461f      	mov	r7, r3
 800ded6:	4689      	mov	r9, r1
 800ded8:	4604      	mov	r4, r0
 800deda:	f814 0b01 	ldrb.w	r0, [r4], #1
 800dede:	47d8      	blx	fp
 800dee0:	47d0      	blx	sl
 800dee2:	1b2b      	subs	r3, r5, r4
 800dee4:	4443      	add	r3, r8
 800dee6:	f849 0b04 	str.w	r0, [r9], #4
 800deea:	2b00      	cmp	r3, #0
 800deec:	d1f5      	bne.n	800deda <_Convert8+0x18>
 800deee:	2f1f      	cmp	r7, #31
 800def0:	d806      	bhi.n	800df00 <_Convert8+0x3e>
 800def2:	4630      	mov	r0, r6
 800def4:	4641      	mov	r1, r8
 800def6:	463a      	mov	r2, r7
 800def8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800defc:	f001 bee2 	b.w	800fcc4 <GUI__CompactPixelIndices>
 800df00:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800df04 <GUI_MEMDEV__WriteToActiveOpaque>:
 800df04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df08:	b09d      	sub	sp, #116	; 0x74
 800df0a:	4606      	mov	r6, r0
 800df0c:	910f      	str	r1, [sp, #60]	; 0x3c
 800df0e:	920d      	str	r2, [sp, #52]	; 0x34
 800df10:	2800      	cmp	r0, #0
 800df12:	f000 8386 	beq.w	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800df16:	f7fe fad7 	bl	800c4c8 <GUI_ALLOC_LockH>
 800df1a:	ab1c      	add	r3, sp, #112	; 0x70
 800df1c:	6944      	ldr	r4, [r0, #20]
 800df1e:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800df22:	4618      	mov	r0, r3
 800df24:	f7fe fade 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800df28:	4630      	mov	r0, r6
 800df2a:	f7f9 ffed 	bl	8007f08 <GUI_MEMDEV_GetBitsPerPixel>
 800df2e:	2808      	cmp	r0, #8
 800df30:	4601      	mov	r1, r0
 800df32:	dd02      	ble.n	800df3a <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800df34:	2c00      	cmp	r4, #0
 800df36:	f000 81c3 	beq.w	800e2c0 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800df3a:	2201      	movs	r2, #1
 800df3c:	f04f 0800 	mov.w	r8, #0
 800df40:	4630      	mov	r0, r6
 800df42:	921b      	str	r2, [sp, #108]	; 0x6c
 800df44:	920b      	str	r2, [sp, #44]	; 0x2c
 800df46:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800df4a:	f7fe fabd 	bl	800c4c8 <GUI_ALLOC_LockH>
 800df4e:	6803      	ldr	r3, [r0, #0]
 800df50:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800e560 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800df54:	691b      	ldr	r3, [r3, #16]
 800df56:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800df5a:	685b      	ldr	r3, [r3, #4]
 800df5c:	930e      	str	r3, [sp, #56]	; 0x38
 800df5e:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800df62:	f8da 3000 	ldr.w	r3, [sl]
 800df66:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800df6a:	6904      	ldr	r4, [r0, #16]
 800df6c:	6945      	ldr	r5, [r0, #20]
 800df6e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800df72:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800df76:	7c58      	ldrb	r0, [r3, #17]
 800df78:	9112      	str	r1, [sp, #72]	; 0x48
 800df7a:	f7fb f9e3 	bl	8009344 <GUI_GetBitsPerPixelEx>
 800df7e:	f8da 3000 	ldr.w	r3, [sl]
 800df82:	9010      	str	r0, [sp, #64]	; 0x40
 800df84:	7c58      	ldrb	r0, [r3, #17]
 800df86:	f7fb f9fb 	bl	8009380 <GUI_GetpfIndex2ColorEx>
 800df8a:	4603      	mov	r3, r0
 800df8c:	4658      	mov	r0, fp
 800df8e:	9309      	str	r3, [sp, #36]	; 0x24
 800df90:	f7fe faa8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800df94:	2c08      	cmp	r4, #8
 800df96:	4651      	mov	r1, sl
 800df98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800df9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800df9c:	d904      	bls.n	800dfa8 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800df9e:	2c10      	cmp	r4, #16
 800dfa0:	bf8c      	ite	hi
 800dfa2:	2204      	movhi	r2, #4
 800dfa4:	2202      	movls	r2, #2
 800dfa6:	e005      	b.n	800dfb4 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800dfa8:	2c01      	cmp	r4, #1
 800dfaa:	d103      	bne.n	800dfb4 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800dfac:	9411      	str	r4, [sp, #68]	; 0x44
 800dfae:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800dfb2:	e000      	b.n	800dfb6 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800dfb4:	9211      	str	r2, [sp, #68]	; 0x44
 800dfb6:	980e      	ldr	r0, [sp, #56]	; 0x38
 800dfb8:	4298      	cmp	r0, r3
 800dfba:	f000 80e2 	beq.w	800e182 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800dfbe:	680b      	ldr	r3, [r1, #0]
 800dfc0:	7c58      	ldrb	r0, [r3, #17]
 800dfc2:	f7fb f9e5 	bl	8009390 <GUI_GetpfColor2IndexEx>
 800dfc6:	9013      	str	r0, [sp, #76]	; 0x4c
 800dfc8:	00b8      	lsls	r0, r7, #2
 800dfca:	f7fe fc49 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800dfce:	900c      	str	r0, [sp, #48]	; 0x30
 800dfd0:	2800      	cmp	r0, #0
 800dfd2:	f000 8326 	beq.w	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800dfd6:	4630      	mov	r0, r6
 800dfd8:	f7f9 f92e 	bl	8007238 <GUI_MEMDEV_GetDataPtr>
 800dfdc:	4606      	mov	r6, r0
 800dfde:	2d00      	cmp	r5, #0
 800dfe0:	f000 80be 	beq.w	800e160 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800dfe4:	4628      	mov	r0, r5
 800dfe6:	f7fe fa6f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800dfea:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800dfee:	9018      	str	r0, [sp, #96]	; 0x60
 800dff0:	f04f 0a00 	mov.w	sl, #0
 800dff4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dff6:	4592      	cmp	sl, r2
 800dff8:	f280 80ae 	bge.w	800e158 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800dffc:	9818      	ldr	r0, [sp, #96]	; 0x60
 800dffe:	2300      	movs	r3, #0
 800e000:	9319      	str	r3, [sp, #100]	; 0x64
 800e002:	6883      	ldr	r3, [r0, #8]
 800e004:	a919      	add	r1, sp, #100	; 0x64
 800e006:	695b      	ldr	r3, [r3, #20]
 800e008:	4652      	mov	r2, sl
 800e00a:	4798      	blx	r3
 800e00c:	42b8      	cmp	r0, r7
 800e00e:	4605      	mov	r5, r0
 800e010:	d12f      	bne.n	800e072 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800e012:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e014:	f7fe fa58 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e018:	2c08      	cmp	r4, #8
 800e01a:	4601      	mov	r1, r0
 800e01c:	9016      	str	r0, [sp, #88]	; 0x58
 800e01e:	d909      	bls.n	800e034 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800e020:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e022:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e024:	9200      	str	r2, [sp, #0]
 800e026:	9301      	str	r3, [sp, #4]
 800e028:	4630      	mov	r0, r6
 800e02a:	463a      	mov	r2, r7
 800e02c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e02e:	f7ff ff29 	bl	800de84 <_Convert16>
 800e032:	e008      	b.n	800e046 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800e034:	980e      	ldr	r0, [sp, #56]	; 0x38
 800e036:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e038:	9000      	str	r0, [sp, #0]
 800e03a:	9201      	str	r2, [sp, #4]
 800e03c:	4630      	mov	r0, r6
 800e03e:	463a      	mov	r2, r7
 800e040:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e042:	f7ff ff3e 	bl	800dec2 <_Convert8>
 800e046:	2301      	movs	r3, #1
 800e048:	9810      	ldr	r0, [sp, #64]	; 0x40
 800e04a:	9002      	str	r0, [sp, #8]
 800e04c:	ad1c      	add	r5, sp, #112	; 0x70
 800e04e:	2200      	movs	r2, #0
 800e050:	9300      	str	r3, [sp, #0]
 800e052:	9301      	str	r3, [sp, #4]
 800e054:	9203      	str	r2, [sp, #12]
 800e056:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800e05a:	9204      	str	r2, [sp, #16]
 800e05c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e05e:	f8cd 8014 	str.w	r8, [sp, #20]
 800e062:	4659      	mov	r1, fp
 800e064:	463a      	mov	r2, r7
 800e066:	f7fb fbaf 	bl	80097c8 <LCD_DrawBitmap>
 800e06a:	4628      	mov	r0, r5
 800e06c:	f7fe fa3a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e070:	e060      	b.n	800e134 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800e072:	2c01      	cmp	r4, #1
 800e074:	d15c      	bne.n	800e130 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800e076:	2d00      	cmp	r5, #0
 800e078:	d05c      	beq.n	800e134 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800e07a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e07c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e07e:	f8cd 900c 	str.w	r9, [sp, #12]
 800e082:	2208      	movs	r2, #8
 800e084:	fb90 f2f2 	sdiv	r2, r0, r2
 800e088:	4432      	add	r2, r6
 800e08a:	2301      	movs	r3, #1
 800e08c:	9204      	str	r2, [sp, #16]
 800e08e:	f000 0207 	and.w	r2, r0, #7
 800e092:	9300      	str	r3, [sp, #0]
 800e094:	4408      	add	r0, r1
 800e096:	9301      	str	r3, [sp, #4]
 800e098:	9302      	str	r3, [sp, #8]
 800e09a:	9206      	str	r2, [sp, #24]
 800e09c:	4659      	mov	r1, fp
 800e09e:	462a      	mov	r2, r5
 800e0a0:	f8cd 8014 	str.w	r8, [sp, #20]
 800e0a4:	f7fb fab4 	bl	8009610 <LCD__DrawBitmap_1bpp>
 800e0a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e0aa:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e0ac:	441d      	add	r5, r3
 800e0ae:	6883      	ldr	r3, [r0, #8]
 800e0b0:	9519      	str	r5, [sp, #100]	; 0x64
 800e0b2:	695b      	ldr	r3, [r3, #20]
 800e0b4:	a919      	add	r1, sp, #100	; 0x64
 800e0b6:	4652      	mov	r2, sl
 800e0b8:	4798      	blx	r3
 800e0ba:	4605      	mov	r5, r0
 800e0bc:	e7db      	b.n	800e076 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800e0be:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e0c0:	f7fe fa02 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e0c4:	2c08      	cmp	r4, #8
 800e0c6:	4601      	mov	r1, r0
 800e0c8:	9016      	str	r0, [sp, #88]	; 0x58
 800e0ca:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e0cc:	d938      	bls.n	800e140 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800e0ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e0d0:	9200      	str	r2, [sp, #0]
 800e0d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e0d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e0d6:	9301      	str	r3, [sp, #4]
 800e0d8:	fb00 6002 	mla	r0, r0, r2, r6
 800e0dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0de:	462a      	mov	r2, r5
 800e0e0:	f7ff fed0 	bl	800de84 <_Convert16>
 800e0e4:	2301      	movs	r3, #1
 800e0e6:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800e0ea:	9810      	ldr	r0, [sp, #64]	; 0x40
 800e0ec:	9300      	str	r3, [sp, #0]
 800e0ee:	2200      	movs	r2, #0
 800e0f0:	9301      	str	r3, [sp, #4]
 800e0f2:	9002      	str	r0, [sp, #8]
 800e0f4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e0f6:	9203      	str	r2, [sp, #12]
 800e0f8:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e0fa:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800e0fe:	9204      	str	r2, [sp, #16]
 800e100:	4408      	add	r0, r1
 800e102:	462a      	mov	r2, r5
 800e104:	4659      	mov	r1, fp
 800e106:	f8cd 8014 	str.w	r8, [sp, #20]
 800e10a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800e10e:	f7fb fb5b 	bl	80097c8 <LCD_DrawBitmap>
 800e112:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800e116:	4660      	mov	r0, ip
 800e118:	f7fe f9e4 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e11c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e11e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e120:	441d      	add	r5, r3
 800e122:	6883      	ldr	r3, [r0, #8]
 800e124:	9519      	str	r5, [sp, #100]	; 0x64
 800e126:	695b      	ldr	r3, [r3, #20]
 800e128:	a919      	add	r1, sp, #100	; 0x64
 800e12a:	4652      	mov	r2, sl
 800e12c:	4798      	blx	r3
 800e12e:	4605      	mov	r5, r0
 800e130:	2d00      	cmp	r5, #0
 800e132:	d1c4      	bne.n	800e0be <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800e134:	444e      	add	r6, r9
 800e136:	f10a 0a01 	add.w	sl, sl, #1
 800e13a:	f10b 0b01 	add.w	fp, fp, #1
 800e13e:	e759      	b.n	800dff4 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800e140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e142:	9300      	str	r3, [sp, #0]
 800e144:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e146:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e148:	9201      	str	r2, [sp, #4]
 800e14a:	fb00 6003 	mla	r0, r0, r3, r6
 800e14e:	462a      	mov	r2, r5
 800e150:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e152:	f7ff feb6 	bl	800dec2 <_Convert8>
 800e156:	e7c5      	b.n	800e0e4 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800e158:	a818      	add	r0, sp, #96	; 0x60
 800e15a:	f7fe f9c3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e15e:	e00e      	b.n	800e17e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800e160:	2301      	movs	r3, #1
 800e162:	9300      	str	r3, [sp, #0]
 800e164:	9301      	str	r3, [sp, #4]
 800e166:	9004      	str	r0, [sp, #16]
 800e168:	9402      	str	r4, [sp, #8]
 800e16a:	f8cd 900c 	str.w	r9, [sp, #12]
 800e16e:	f8cd 8014 	str.w	r8, [sp, #20]
 800e172:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e174:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e176:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e178:	463a      	mov	r2, r7
 800e17a:	f7fb fb25 	bl	80097c8 <LCD_DrawBitmap>
 800e17e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e180:	e24d      	b.n	800e61e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800e182:	4630      	mov	r0, r6
 800e184:	f7f9 f858 	bl	8007238 <GUI_MEMDEV_GetDataPtr>
 800e188:	4606      	mov	r6, r0
 800e18a:	2d00      	cmp	r5, #0
 800e18c:	f000 808a 	beq.w	800e2a4 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800e190:	4628      	mov	r0, r5
 800e192:	f7fe f999 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e196:	2500      	movs	r5, #0
 800e198:	9018      	str	r0, [sp, #96]	; 0x60
 800e19a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e19c:	429d      	cmp	r5, r3
 800e19e:	da7d      	bge.n	800e29c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800e1a0:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e1a2:	2300      	movs	r3, #0
 800e1a4:	9319      	str	r3, [sp, #100]	; 0x64
 800e1a6:	6883      	ldr	r3, [r0, #8]
 800e1a8:	a919      	add	r1, sp, #100	; 0x64
 800e1aa:	695b      	ldr	r3, [r3, #20]
 800e1ac:	462a      	mov	r2, r5
 800e1ae:	4798      	blx	r3
 800e1b0:	42b8      	cmp	r0, r7
 800e1b2:	4682      	mov	sl, r0
 800e1b4:	d124      	bne.n	800e200 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800e1b6:	46aa      	mov	sl, r5
 800e1b8:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e1ba:	6883      	ldr	r3, [r0, #8]
 800e1bc:	f10a 0b01 	add.w	fp, sl, #1
 800e1c0:	695b      	ldr	r3, [r3, #20]
 800e1c2:	a919      	add	r1, sp, #100	; 0x64
 800e1c4:	465a      	mov	r2, fp
 800e1c6:	4798      	blx	r3
 800e1c8:	42b8      	cmp	r0, r7
 800e1ca:	d101      	bne.n	800e1d0 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800e1cc:	46da      	mov	sl, fp
 800e1ce:	e7f3      	b.n	800e1b8 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800e1d0:	ebc5 0b0a 	rsb	fp, r5, sl
 800e1d4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e1d6:	9604      	str	r6, [sp, #16]
 800e1d8:	2301      	movs	r3, #1
 800e1da:	f10b 0b01 	add.w	fp, fp, #1
 800e1de:	9300      	str	r3, [sp, #0]
 800e1e0:	9301      	str	r3, [sp, #4]
 800e1e2:	4429      	add	r1, r5
 800e1e4:	9402      	str	r4, [sp, #8]
 800e1e6:	f8cd 900c 	str.w	r9, [sp, #12]
 800e1ea:	f8cd 8014 	str.w	r8, [sp, #20]
 800e1ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e1f0:	463a      	mov	r2, r7
 800e1f2:	465b      	mov	r3, fp
 800e1f4:	f7fb fae8 	bl	80097c8 <LCD_DrawBitmap>
 800e1f8:	fb09 660b 	mla	r6, r9, fp, r6
 800e1fc:	4655      	mov	r5, sl
 800e1fe:	e04b      	b.n	800e298 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800e200:	2c01      	cmp	r4, #1
 800e202:	d127      	bne.n	800e254 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800e204:	f1ba 0f00 	cmp.w	sl, #0
 800e208:	d022      	beq.n	800e250 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800e20a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e20c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e20e:	f8cd 900c 	str.w	r9, [sp, #12]
 800e212:	2208      	movs	r2, #8
 800e214:	fb90 f2f2 	sdiv	r2, r0, r2
 800e218:	4432      	add	r2, r6
 800e21a:	9204      	str	r2, [sp, #16]
 800e21c:	f000 0207 	and.w	r2, r0, #7
 800e220:	4408      	add	r0, r1
 800e222:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e224:	9206      	str	r2, [sp, #24]
 800e226:	2301      	movs	r3, #1
 800e228:	4652      	mov	r2, sl
 800e22a:	9300      	str	r3, [sp, #0]
 800e22c:	9301      	str	r3, [sp, #4]
 800e22e:	9302      	str	r3, [sp, #8]
 800e230:	4429      	add	r1, r5
 800e232:	f8cd 8014 	str.w	r8, [sp, #20]
 800e236:	f7fb f9eb 	bl	8009610 <LCD__DrawBitmap_1bpp>
 800e23a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e23c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e23e:	4453      	add	r3, sl
 800e240:	9319      	str	r3, [sp, #100]	; 0x64
 800e242:	6883      	ldr	r3, [r0, #8]
 800e244:	a919      	add	r1, sp, #100	; 0x64
 800e246:	695b      	ldr	r3, [r3, #20]
 800e248:	462a      	mov	r2, r5
 800e24a:	4798      	blx	r3
 800e24c:	4682      	mov	sl, r0
 800e24e:	e7d9      	b.n	800e204 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800e250:	444e      	add	r6, r9
 800e252:	e021      	b.n	800e298 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800e254:	f1ba 0f00 	cmp.w	sl, #0
 800e258:	d0fa      	beq.n	800e250 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800e25a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e25c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e25e:	9402      	str	r4, [sp, #8]
 800e260:	fb00 6201 	mla	r2, r0, r1, r6
 800e264:	9204      	str	r2, [sp, #16]
 800e266:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e268:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e26a:	f8cd 900c 	str.w	r9, [sp, #12]
 800e26e:	2301      	movs	r3, #1
 800e270:	4410      	add	r0, r2
 800e272:	9300      	str	r3, [sp, #0]
 800e274:	4652      	mov	r2, sl
 800e276:	9301      	str	r3, [sp, #4]
 800e278:	4429      	add	r1, r5
 800e27a:	f8cd 8014 	str.w	r8, [sp, #20]
 800e27e:	f7fb faa3 	bl	80097c8 <LCD_DrawBitmap>
 800e282:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e284:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e286:	4453      	add	r3, sl
 800e288:	9319      	str	r3, [sp, #100]	; 0x64
 800e28a:	6883      	ldr	r3, [r0, #8]
 800e28c:	a919      	add	r1, sp, #100	; 0x64
 800e28e:	695b      	ldr	r3, [r3, #20]
 800e290:	462a      	mov	r2, r5
 800e292:	4798      	blx	r3
 800e294:	4682      	mov	sl, r0
 800e296:	e7dd      	b.n	800e254 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800e298:	3501      	adds	r5, #1
 800e29a:	e77e      	b.n	800e19a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800e29c:	a818      	add	r0, sp, #96	; 0x60
 800e29e:	f7fe f921 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e2a2:	e1be      	b.n	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800e2a4:	2301      	movs	r3, #1
 800e2a6:	9300      	str	r3, [sp, #0]
 800e2a8:	9301      	str	r3, [sp, #4]
 800e2aa:	9004      	str	r0, [sp, #16]
 800e2ac:	9402      	str	r4, [sp, #8]
 800e2ae:	f8cd 900c 	str.w	r9, [sp, #12]
 800e2b2:	f8cd 8014 	str.w	r8, [sp, #20]
 800e2b6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e2b8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e2ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e2bc:	463a      	mov	r2, r7
 800e2be:	e041      	b.n	800e344 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800e2c0:	4630      	mov	r0, r6
 800e2c2:	910a      	str	r1, [sp, #40]	; 0x28
 800e2c4:	f7fe f900 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e2c8:	4682      	mov	sl, r0
 800e2ca:	a81c      	add	r0, sp, #112	; 0x70
 800e2cc:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800e2d0:	f840 ad10 	str.w	sl, [r0, #-16]!
 800e2d4:	f8da 4000 	ldr.w	r4, [sl]
 800e2d8:	9210      	str	r2, [sp, #64]	; 0x40
 800e2da:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800e2de:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800e2e2:	4c9e      	ldr	r4, [pc, #632]	; (800e55c <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800e2e4:	b213      	sxth	r3, r2
 800e2e6:	f8da 200c 	ldr.w	r2, [sl, #12]
 800e2ea:	920b      	str	r2, [sp, #44]	; 0x2c
 800e2ec:	9309      	str	r3, [sp, #36]	; 0x24
 800e2ee:	f7fe f8f9 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e2f2:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800e2f6:	900e      	str	r0, [sp, #56]	; 0x38
 800e2f8:	4899      	ldr	r0, [pc, #612]	; (800e560 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800e2fa:	6800      	ldr	r0, [r0, #0]
 800e2fc:	7c40      	ldrb	r0, [r0, #17]
 800e2fe:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800e302:	6925      	ldr	r5, [r4, #16]
 800e304:	f8d5 8000 	ldr.w	r8, [r5]
 800e308:	f7fb f81c 	bl	8009344 <GUI_GetBitsPerPixelEx>
 800e30c:	2808      	cmp	r0, #8
 800e30e:	fa0f fb87 	sxth.w	fp, r7
 800e312:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e314:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e318:	d904      	bls.n	800e324 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800e31a:	2810      	cmp	r0, #16
 800e31c:	bf8c      	ite	hi
 800e31e:	2404      	movhi	r4, #4
 800e320:	2402      	movls	r4, #2
 800e322:	e000      	b.n	800e326 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800e324:	2401      	movs	r4, #1
 800e326:	45a9      	cmp	r9, r5
 800e328:	d10f      	bne.n	800e34a <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800e32a:	2001      	movs	r0, #1
 800e32c:	9203      	str	r2, [sp, #12]
 800e32e:	f10a 0218 	add.w	r2, sl, #24
 800e332:	9000      	str	r0, [sp, #0]
 800e334:	9001      	str	r0, [sp, #4]
 800e336:	9102      	str	r1, [sp, #8]
 800e338:	9204      	str	r2, [sp, #16]
 800e33a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e33c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e33e:	2200      	movs	r2, #0
 800e340:	9205      	str	r2, [sp, #20]
 800e342:	465a      	mov	r2, fp
 800e344:	f7fb fa40 	bl	80097c8 <LCD_DrawBitmap>
 800e348:	e16b      	b.n	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800e34a:	2920      	cmp	r1, #32
 800e34c:	f040 808e 	bne.w	800e46c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800e350:	fb0b f004 	mul.w	r0, fp, r4
 800e354:	f7fe fa84 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800e358:	900e      	str	r0, [sp, #56]	; 0x38
 800e35a:	2800      	cmp	r0, #0
 800e35c:	f000 8161 	beq.w	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800e360:	f7fe f8b2 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e364:	901a      	str	r0, [sp, #104]	; 0x68
 800e366:	4630      	mov	r0, r6
 800e368:	f7fe f8ae 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e36c:	9018      	str	r0, [sp, #96]	; 0x60
 800e36e:	692b      	ldr	r3, [r5, #16]
 800e370:	f100 0a18 	add.w	sl, r0, #24
 800e374:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800e378:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800e37c:	2b00      	cmp	r3, #0
 800e37e:	d02f      	beq.n	800e3e0 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800e380:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800e384:	2c02      	cmp	r4, #2
 800e386:	d003      	beq.n	800e390 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800e388:	2c04      	cmp	r4, #4
 800e38a:	d001      	beq.n	800e390 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800e38c:	2c01      	cmp	r4, #1
 800e38e:	d106      	bne.n	800e39e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800e390:	4650      	mov	r0, sl
 800e392:	692f      	ldr	r7, [r5, #16]
 800e394:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e396:	465a      	mov	r2, fp
 800e398:	4623      	mov	r3, r4
 800e39a:	47b8      	blx	r7
 800e39c:	44b2      	add	sl, r6
 800e39e:	2301      	movs	r3, #1
 800e3a0:	2200      	movs	r2, #0
 800e3a2:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e3a4:	9300      	str	r3, [sp, #0]
 800e3a6:	9301      	str	r3, [sp, #4]
 800e3a8:	9203      	str	r2, [sp, #12]
 800e3aa:	9104      	str	r1, [sp, #16]
 800e3ac:	9205      	str	r2, [sp, #20]
 800e3ae:	4641      	mov	r1, r8
 800e3b0:	465a      	mov	r2, fp
 800e3b2:	f8cd 9008 	str.w	r9, [sp, #8]
 800e3b6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e3b8:	f7fb fa06 	bl	80097c8 <LCD_DrawBitmap>
 800e3bc:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e3be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e3c0:	f108 0701 	add.w	r7, r8, #1
 800e3c4:	fa02 f381 	sxtah	r3, r2, r1
 800e3c8:	42bb      	cmp	r3, r7
 800e3ca:	d107      	bne.n	800e3dc <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800e3cc:	a818      	add	r0, sp, #96	; 0x60
 800e3ce:	f7fe f889 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e3d2:	a81a      	add	r0, sp, #104	; 0x68
 800e3d4:	f7fe f886 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e3d8:	980e      	ldr	r0, [sp, #56]	; 0x38
 800e3da:	e120      	b.n	800e61e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800e3dc:	46b8      	mov	r8, r7
 800e3de:	e7d1      	b.n	800e384 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800e3e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800e3e2:	2c02      	cmp	r4, #2
 800e3e4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800e3e6:	d00e      	beq.n	800e406 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800e3e8:	2c04      	cmp	r4, #4
 800e3ea:	d018      	beq.n	800e41e <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800e3ec:	2c01      	cmp	r4, #1
 800e3ee:	d125      	bne.n	800e43c <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800e3f0:	2300      	movs	r3, #0
 800e3f2:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800e3f6:	9309      	str	r3, [sp, #36]	; 0x24
 800e3f8:	47c0      	blx	r8
 800e3fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e3fc:	54f8      	strb	r0, [r7, r3]
 800e3fe:	3301      	adds	r3, #1
 800e400:	459b      	cmp	fp, r3
 800e402:	d1f6      	bne.n	800e3f2 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800e404:	e019      	b.n	800e43a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800e406:	2300      	movs	r3, #0
 800e408:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800e40c:	9309      	str	r3, [sp, #36]	; 0x24
 800e40e:	47c0      	blx	r8
 800e410:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e412:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800e416:	3301      	adds	r3, #1
 800e418:	459b      	cmp	fp, r3
 800e41a:	d1f5      	bne.n	800e408 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800e41c:	e00d      	b.n	800e43a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800e41e:	465a      	mov	r2, fp
 800e420:	2300      	movs	r3, #0
 800e422:	f85a 0003 	ldr.w	r0, [sl, r3]
 800e426:	920b      	str	r2, [sp, #44]	; 0x2c
 800e428:	9309      	str	r3, [sp, #36]	; 0x24
 800e42a:	47c0      	blx	r8
 800e42c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e42e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e430:	3a01      	subs	r2, #1
 800e432:	50f8      	str	r0, [r7, r3]
 800e434:	f103 0304 	add.w	r3, r3, #4
 800e438:	d1f3      	bne.n	800e422 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800e43a:	44b2      	add	sl, r6
 800e43c:	2301      	movs	r3, #1
 800e43e:	2200      	movs	r2, #0
 800e440:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e442:	9300      	str	r3, [sp, #0]
 800e444:	9301      	str	r3, [sp, #4]
 800e446:	9203      	str	r2, [sp, #12]
 800e448:	9104      	str	r1, [sp, #16]
 800e44a:	9205      	str	r2, [sp, #20]
 800e44c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e44e:	f8cd 9008 	str.w	r9, [sp, #8]
 800e452:	4629      	mov	r1, r5
 800e454:	465a      	mov	r2, fp
 800e456:	f7fb f9b7 	bl	80097c8 <LCD_DrawBitmap>
 800e45a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800e45c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e45e:	1c6f      	adds	r7, r5, #1
 800e460:	fa01 f380 	sxtah	r3, r1, r0
 800e464:	42bb      	cmp	r3, r7
 800e466:	d0b1      	beq.n	800e3cc <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800e468:	463d      	mov	r5, r7
 800e46a:	e7ba      	b.n	800e3e2 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800e46c:	2910      	cmp	r1, #16
 800e46e:	f040 80d8 	bne.w	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800e472:	fa0f fa87 	sxth.w	sl, r7
 800e476:	fb0a f004 	mul.w	r0, sl, r4
 800e47a:	f7fe f9f1 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800e47e:	9012      	str	r0, [sp, #72]	; 0x48
 800e480:	2800      	cmp	r0, #0
 800e482:	f000 80ce 	beq.w	800e622 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800e486:	f7fe f81f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e48a:	901a      	str	r0, [sp, #104]	; 0x68
 800e48c:	4630      	mov	r0, r6
 800e48e:	f7fe f81b 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e492:	9018      	str	r0, [sp, #96]	; 0x60
 800e494:	692b      	ldr	r3, [r5, #16]
 800e496:	f100 0618 	add.w	r6, r0, #24
 800e49a:	b113      	cbz	r3, 800e4a2 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800e49c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800e4a0:	b92b      	cbnz	r3, 800e4ae <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800e4a2:	00e2      	lsls	r2, r4, #3
 800e4a4:	b23f      	sxth	r7, r7
 800e4a6:	9211      	str	r2, [sp, #68]	; 0x44
 800e4a8:	007f      	lsls	r7, r7, #1
 800e4aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800e4ac:	e088      	b.n	800e5c0 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800e4ae:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800e4b2:	0080      	lsls	r0, r0, #2
 800e4b4:	f7fe f9d4 	bl	800c860 <GUI_ALLOC_AllocNoInit>
 800e4b8:	9011      	str	r0, [sp, #68]	; 0x44
 800e4ba:	b118      	cbz	r0, 800e4c4 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800e4bc:	f7fe f804 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e4c0:	9019      	str	r0, [sp, #100]	; 0x64
 800e4c2:	e001      	b.n	800e4c8 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800e4c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e4c6:	9319      	str	r3, [sp, #100]	; 0x64
 800e4c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e4ca:	2b00      	cmp	r3, #0
 800e4cc:	f000 80a0 	beq.w	800e610 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800e4d0:	b23f      	sxth	r7, r7
 800e4d2:	007f      	lsls	r7, r7, #1
 800e4d4:	970e      	str	r7, [sp, #56]	; 0x38
 800e4d6:	00e7      	lsls	r7, r4, #3
 800e4d8:	9713      	str	r7, [sp, #76]	; 0x4c
 800e4da:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800e4dc:	970c      	str	r7, [sp, #48]	; 0x30
 800e4de:	2c02      	cmp	r4, #2
 800e4e0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800e4e4:	d004      	beq.n	800e4f0 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800e4e6:	2c04      	cmp	r4, #4
 800e4e8:	d007      	beq.n	800e4fa <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800e4ea:	2c01      	cmp	r4, #1
 800e4ec:	d114      	bne.n	800e518 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800e4ee:	e004      	b.n	800e4fa <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800e4f0:	4630      	mov	r0, r6
 800e4f2:	9919      	ldr	r1, [sp, #100]	; 0x64
 800e4f4:	4652      	mov	r2, sl
 800e4f6:	4623      	mov	r3, r4
 800e4f8:	e003      	b.n	800e502 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800e4fa:	9919      	ldr	r1, [sp, #100]	; 0x64
 800e4fc:	4630      	mov	r0, r6
 800e4fe:	4652      	mov	r2, sl
 800e500:	2302      	movs	r3, #2
 800e502:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800e506:	47b8      	blx	r7
 800e508:	692f      	ldr	r7, [r5, #16]
 800e50a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800e50c:	4641      	mov	r1, r8
 800e50e:	4652      	mov	r2, sl
 800e510:	4623      	mov	r3, r4
 800e512:	47b8      	blx	r7
 800e514:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800e516:	443e      	add	r6, r7
 800e518:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800e51a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e51c:	9104      	str	r1, [sp, #16]
 800e51e:	2301      	movs	r3, #1
 800e520:	2200      	movs	r2, #0
 800e522:	f107 0801 	add.w	r8, r7, #1
 800e526:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800e528:	9300      	str	r3, [sp, #0]
 800e52a:	9301      	str	r3, [sp, #4]
 800e52c:	9702      	str	r7, [sp, #8]
 800e52e:	9203      	str	r2, [sp, #12]
 800e530:	9205      	str	r2, [sp, #20]
 800e532:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e534:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e536:	465a      	mov	r2, fp
 800e538:	f7fb f946 	bl	80097c8 <LCD_DrawBitmap>
 800e53c:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800e53e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e540:	fa00 f387 	sxtah	r3, r0, r7
 800e544:	4543      	cmp	r3, r8
 800e546:	d002      	beq.n	800e54e <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800e548:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800e54c:	e7c7      	b.n	800e4de <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800e54e:	a819      	add	r0, sp, #100	; 0x64
 800e550:	f7fd ffc8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e554:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e556:	f7fd fff1 	bl	800c53c <GUI_ALLOC_Free>
 800e55a:	e059      	b.n	800e610 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800e55c:	20002d34 	.word	0x20002d34
 800e560:	200000c0 	.word	0x200000c0
 800e564:	2c04      	cmp	r4, #4
 800e566:	d041      	beq.n	800e5ec <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800e568:	2c01      	cmp	r4, #1
 800e56a:	d111      	bne.n	800e590 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800e56c:	464a      	mov	r2, r9
 800e56e:	4631      	mov	r1, r6
 800e570:	f831 0b02 	ldrh.w	r0, [r1], #2
 800e574:	910a      	str	r1, [sp, #40]	; 0x28
 800e576:	920b      	str	r2, [sp, #44]	; 0x2c
 800e578:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e57a:	4798      	blx	r3
 800e57c:	47c0      	blx	r8
 800e57e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e580:	f802 0b01 	strb.w	r0, [r2], #1
 800e584:	eb09 000a 	add.w	r0, r9, sl
 800e588:	4282      	cmp	r2, r0
 800e58a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e58c:	d1f0      	bne.n	800e570 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800e58e:	443e      	add	r6, r7
 800e590:	2301      	movs	r3, #1
 800e592:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e594:	991a      	ldr	r1, [sp, #104]	; 0x68
 800e596:	9300      	str	r3, [sp, #0]
 800e598:	2200      	movs	r2, #0
 800e59a:	9301      	str	r3, [sp, #4]
 800e59c:	9002      	str	r0, [sp, #8]
 800e59e:	9203      	str	r2, [sp, #12]
 800e5a0:	9104      	str	r1, [sp, #16]
 800e5a2:	9205      	str	r2, [sp, #20]
 800e5a4:	4629      	mov	r1, r5
 800e5a6:	465a      	mov	r2, fp
 800e5a8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e5aa:	f7fb f90d 	bl	80097c8 <LCD_DrawBitmap>
 800e5ae:	9910      	ldr	r1, [sp, #64]	; 0x40
 800e5b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e5b2:	f105 0901 	add.w	r9, r5, #1
 800e5b6:	fa02 f381 	sxtah	r3, r2, r1
 800e5ba:	454b      	cmp	r3, r9
 800e5bc:	d028      	beq.n	800e610 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800e5be:	464d      	mov	r5, r9
 800e5c0:	2c02      	cmp	r4, #2
 800e5c2:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800e5c6:	d1cd      	bne.n	800e564 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800e5c8:	464b      	mov	r3, r9
 800e5ca:	4631      	mov	r1, r6
 800e5cc:	46d9      	mov	r9, fp
 800e5ce:	f831 0b02 	ldrh.w	r0, [r1], #2
 800e5d2:	910a      	str	r1, [sp, #40]	; 0x28
 800e5d4:	9309      	str	r3, [sp, #36]	; 0x24
 800e5d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e5d8:	4790      	blx	r2
 800e5da:	47c0      	blx	r8
 800e5dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e5de:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e5e0:	f823 0b02 	strh.w	r0, [r3], #2
 800e5e4:	f1b9 0901 	subs.w	r9, r9, #1
 800e5e8:	d1f1      	bne.n	800e5ce <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800e5ea:	e7d0      	b.n	800e58e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800e5ec:	464b      	mov	r3, r9
 800e5ee:	4631      	mov	r1, r6
 800e5f0:	46d9      	mov	r9, fp
 800e5f2:	f831 0b02 	ldrh.w	r0, [r1], #2
 800e5f6:	910a      	str	r1, [sp, #40]	; 0x28
 800e5f8:	9309      	str	r3, [sp, #36]	; 0x24
 800e5fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e5fc:	4790      	blx	r2
 800e5fe:	47c0      	blx	r8
 800e600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e602:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e604:	f843 0b04 	str.w	r0, [r3], #4
 800e608:	f1b9 0901 	subs.w	r9, r9, #1
 800e60c:	d1f1      	bne.n	800e5f2 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800e60e:	e7be      	b.n	800e58e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800e610:	a818      	add	r0, sp, #96	; 0x60
 800e612:	f7fd ff67 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e616:	a81a      	add	r0, sp, #104	; 0x68
 800e618:	f7fd ff64 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e61c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800e61e:	f7fd ff8d 	bl	800c53c <GUI_ALLOC_Free>
 800e622:	b01d      	add	sp, #116	; 0x74
 800e624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e628 <GUI_MEMDEV__WriteToActiveAlpha>:
 800e628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e62c:	4d5f      	ldr	r5, [pc, #380]	; (800e7ac <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800e62e:	4f60      	ldr	r7, [pc, #384]	; (800e7b0 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800e630:	682b      	ldr	r3, [r5, #0]
 800e632:	7c5b      	ldrb	r3, [r3, #17]
 800e634:	b091      	sub	sp, #68	; 0x44
 800e636:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800e63a:	900d      	str	r0, [sp, #52]	; 0x34
 800e63c:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800e640:	460e      	mov	r6, r1
 800e642:	4614      	mov	r4, r2
 800e644:	f7fd ff40 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e648:	4602      	mov	r2, r0
 800e64a:	a810      	add	r0, sp, #64	; 0x40
 800e64c:	6813      	ldr	r3, [r2, #0]
 800e64e:	f840 2d08 	str.w	r2, [r0, #-8]!
 800e652:	691b      	ldr	r3, [r3, #16]
 800e654:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800e658:	685b      	ldr	r3, [r3, #4]
 800e65a:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800e65e:	9309      	str	r3, [sp, #36]	; 0x24
 800e660:	f7fd ff40 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e664:	682b      	ldr	r3, [r5, #0]
 800e666:	7c5b      	ldrb	r3, [r3, #17]
 800e668:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800e66c:	68c3      	ldr	r3, [r0, #12]
 800e66e:	2108      	movs	r1, #8
 800e670:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e672:	4798      	blx	r3
 800e674:	2817      	cmp	r0, #23
 800e676:	bf88      	it	hi
 800e678:	2020      	movhi	r0, #32
 800e67a:	9008      	str	r0, [sp, #32]
 800e67c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800e680:	f8d8 2000 	ldr.w	r2, [r8]
 800e684:	910a      	str	r1, [sp, #40]	; 0x28
 800e686:	2000      	movs	r0, #0
 800e688:	920b      	str	r2, [sp, #44]	; 0x2c
 800e68a:	f7fb fdbf 	bl	800a20c <GUI__AllocAlphaBuffer>
 800e68e:	2800      	cmp	r0, #0
 800e690:	f040 8089 	bne.w	800e7a6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800e694:	682a      	ldr	r2, [r5, #0]
 800e696:	fa0f f78a 	sxth.w	r7, sl
 800e69a:	19f5      	adds	r5, r6, r7
 800e69c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800e6a0:	3d01      	subs	r5, #1
 800e6a2:	1aed      	subs	r5, r5, r3
 800e6a4:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800e6a8:	2d00      	cmp	r5, #0
 800e6aa:	bfcc      	ite	gt
 800e6ac:	ebc5 0507 	rsbgt	r5, r5, r7
 800e6b0:	463d      	movle	r5, r7
 800e6b2:	42b3      	cmp	r3, r6
 800e6b4:	bfc3      	ittte	gt
 800e6b6:	ebc6 0103 	rsbgt	r1, r6, r3
 800e6ba:	ebc1 0505 	rsbgt	r5, r1, r5
 800e6be:	461e      	movgt	r6, r3
 800e6c0:	2100      	movle	r1, #0
 800e6c2:	2d00      	cmp	r5, #0
 800e6c4:	dd6f      	ble.n	800e7a6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800e6c6:	fa0f f389 	sxth.w	r3, r9
 800e6ca:	18e0      	adds	r0, r4, r3
 800e6cc:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800e6d0:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800e6d4:	3801      	subs	r0, #1
 800e6d6:	ebcc 0000 	rsb	r0, ip, r0
 800e6da:	2800      	cmp	r0, #0
 800e6dc:	bfc8      	it	gt
 800e6de:	ebc0 0303 	rsbgt	r3, r0, r3
 800e6e2:	4294      	cmp	r4, r2
 800e6e4:	bfbd      	ittte	lt
 800e6e6:	ebc4 0b02 	rsblt	fp, r4, r2
 800e6ea:	ebcb 0303 	rsblt	r3, fp, r3
 800e6ee:	4614      	movlt	r4, r2
 800e6f0:	f04f 0b00 	movge.w	fp, #0
 800e6f4:	2b00      	cmp	r3, #0
 800e6f6:	dd56      	ble.n	800e7a6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800e6f8:	fb07 1b0b 	mla	fp, r7, fp, r1
 800e6fc:	18e3      	adds	r3, r4, r3
 800e6fe:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800e702:	930c      	str	r3, [sp, #48]	; 0x30
 800e704:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e706:	f7f8 fd97 	bl	8007238 <GUI_MEMDEV_GetDataPtr>
 800e70a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e70c:	9300      	str	r3, [sp, #0]
 800e70e:	ab0f      	add	r3, sp, #60	; 0x3c
 800e710:	eb00 020b 	add.w	r2, r0, fp
 800e714:	9301      	str	r3, [sp, #4]
 800e716:	4630      	mov	r0, r6
 800e718:	4621      	mov	r1, r4
 800e71a:	462b      	mov	r3, r5
 800e71c:	f7fb fc8c 	bl	800a038 <GUI__DoAlphaBlending>
 800e720:	4681      	mov	r9, r0
 800e722:	2800      	cmp	r0, #0
 800e724:	d03f      	beq.n	800e7a6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800e726:	4b23      	ldr	r3, [pc, #140]	; (800e7b4 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800e728:	990a      	ldr	r1, [sp, #40]	; 0x28
 800e72a:	4299      	cmp	r1, r3
 800e72c:	d01e      	beq.n	800e76c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800e72e:	4629      	mov	r1, r5
 800e730:	9a08      	ldr	r2, [sp, #32]
 800e732:	4643      	mov	r3, r8
 800e734:	f001 fc50 	bl	800ffd8 <GUI__CompactPixelIndicesEx>
 800e738:	b9c0      	cbnz	r0, 800e76c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800e73a:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800e73e:	f1bc 0f00 	cmp.w	ip, #0
 800e742:	d006      	beq.n	800e752 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800e744:	4648      	mov	r0, r9
 800e746:	4649      	mov	r1, r9
 800e748:	fa0f f28a 	sxth.w	r2, sl
 800e74c:	2304      	movs	r3, #4
 800e74e:	47e0      	blx	ip
 800e750:	e00c      	b.n	800e76c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800e752:	464a      	mov	r2, r9
 800e754:	463b      	mov	r3, r7
 800e756:	6810      	ldr	r0, [r2, #0]
 800e758:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e75a:	9206      	str	r2, [sp, #24]
 800e75c:	9307      	str	r3, [sp, #28]
 800e75e:	4788      	blx	r1
 800e760:	9b07      	ldr	r3, [sp, #28]
 800e762:	9a06      	ldr	r2, [sp, #24]
 800e764:	3b01      	subs	r3, #1
 800e766:	f842 0b04 	str.w	r0, [r2], #4
 800e76a:	d1f4      	bne.n	800e756 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800e76c:	9a08      	ldr	r2, [sp, #32]
 800e76e:	9202      	str	r2, [sp, #8]
 800e770:	2301      	movs	r3, #1
 800e772:	2200      	movs	r2, #0
 800e774:	f104 0c01 	add.w	ip, r4, #1
 800e778:	9300      	str	r3, [sp, #0]
 800e77a:	9301      	str	r3, [sp, #4]
 800e77c:	9203      	str	r2, [sp, #12]
 800e77e:	9205      	str	r2, [sp, #20]
 800e780:	f8cd 9010 	str.w	r9, [sp, #16]
 800e784:	4630      	mov	r0, r6
 800e786:	4621      	mov	r1, r4
 800e788:	462a      	mov	r2, r5
 800e78a:	f8cd c01c 	str.w	ip, [sp, #28]
 800e78e:	f7fb f81b 	bl	80097c8 <LCD_DrawBitmap>
 800e792:	2304      	movs	r3, #4
 800e794:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800e798:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800e79c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e79e:	459c      	cmp	ip, r3
 800e7a0:	d001      	beq.n	800e7a6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800e7a2:	4664      	mov	r4, ip
 800e7a4:	e7ae      	b.n	800e704 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800e7a6:	b011      	add	sp, #68	; 0x44
 800e7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7ac:	200000c0 	.word	0x200000c0
 800e7b0:	20002d34 	.word	0x20002d34
 800e7b4:	0800cacf 	.word	0x0800cacf

0800e7b8 <GUI_MEMDEV_WriteAt>:
 800e7b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7ba:	460c      	mov	r4, r1
 800e7bc:	4615      	mov	r5, r2
 800e7be:	4606      	mov	r6, r0
 800e7c0:	b330      	cbz	r0, 800e810 <GUI_MEMDEV_WriteAt+0x58>
 800e7c2:	f7fd fe81 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e7c6:	4a13      	ldr	r2, [pc, #76]	; (800e814 <GUI_MEMDEV_WriteAt+0x5c>)
 800e7c8:	8943      	ldrh	r3, [r0, #10]
 800e7ca:	9001      	str	r0, [sp, #4]
 800e7cc:	4294      	cmp	r4, r2
 800e7ce:	8902      	ldrh	r2, [r0, #8]
 800e7d0:	bf04      	itt	eq
 800e7d2:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800e7d6:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800e7da:	f8ad 4008 	strh.w	r4, [sp, #8]
 800e7de:	3a01      	subs	r2, #1
 800e7e0:	3b01      	subs	r3, #1
 800e7e2:	4422      	add	r2, r4
 800e7e4:	442b      	add	r3, r5
 800e7e6:	a801      	add	r0, sp, #4
 800e7e8:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e7ec:	f8ad 500a 	strh.w	r5, [sp, #10]
 800e7f0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e7f4:	f7fd fe76 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e7f8:	a802      	add	r0, sp, #8
 800e7fa:	f7f8 f981 	bl	8006b00 <WM__InitIVRSearch>
 800e7fe:	b138      	cbz	r0, 800e810 <GUI_MEMDEV_WriteAt+0x58>
 800e800:	4630      	mov	r0, r6
 800e802:	4621      	mov	r1, r4
 800e804:	462a      	mov	r2, r5
 800e806:	f7f9 fae1 	bl	8007dcc <GUI_MEMDEV__WriteToActiveAt>
 800e80a:	f7f8 f8b7 	bl	800697c <WM__GetNextIVR>
 800e80e:	e7f6      	b.n	800e7fe <GUI_MEMDEV_WriteAt+0x46>
 800e810:	b004      	add	sp, #16
 800e812:	bd70      	pop	{r4, r5, r6, pc}
 800e814:	fffff001 	.word	0xfffff001

0800e818 <GUI_MEMDEV_Write>:
 800e818:	4901      	ldr	r1, [pc, #4]	; (800e820 <GUI_MEMDEV_Write+0x8>)
 800e81a:	460a      	mov	r2, r1
 800e81c:	f7ff bfcc 	b.w	800e7b8 <GUI_MEMDEV_WriteAt>
 800e820:	fffff001 	.word	0xfffff001

0800e824 <GUI_USAGE_BM_AddPixel>:
 800e824:	4603      	mov	r3, r0
 800e826:	b510      	push	{r4, lr}
 800e828:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800e82c:	1b09      	subs	r1, r1, r4
 800e82e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800e832:	6900      	ldr	r0, [r0, #16]
 800e834:	1b12      	subs	r2, r2, r4
 800e836:	fb00 3302 	mla	r3, r0, r2, r3
 800e83a:	10c8      	asrs	r0, r1, #3
 800e83c:	2280      	movs	r2, #128	; 0x80
 800e83e:	f001 0107 	and.w	r1, r1, #7
 800e842:	fa42 f101 	asr.w	r1, r2, r1
 800e846:	5c1a      	ldrb	r2, [r3, r0]
 800e848:	4311      	orrs	r1, r2
 800e84a:	5419      	strb	r1, [r3, r0]
 800e84c:	bd10      	pop	{r4, pc}

0800e84e <GUI_USAGE_BM_GetNextDirty>:
 800e84e:	b570      	push	{r4, r5, r6, lr}
 800e850:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800e854:	680b      	ldr	r3, [r1, #0]
 800e856:	8886      	ldrh	r6, [r0, #4]
 800e858:	42a2      	cmp	r2, r4
 800e85a:	da41      	bge.n	800e8e0 <GUI_USAGE_BM_GetNextDirty+0x92>
 800e85c:	b236      	sxth	r6, r6
 800e85e:	42b3      	cmp	r3, r6
 800e860:	6904      	ldr	r4, [r0, #16]
 800e862:	da3d      	bge.n	800e8e0 <GUI_USAGE_BM_GetNextDirty+0x92>
 800e864:	3014      	adds	r0, #20
 800e866:	fb04 0202 	mla	r2, r4, r2, r0
 800e86a:	10dd      	asrs	r5, r3, #3
 800e86c:	1e70      	subs	r0, r6, #1
 800e86e:	1954      	adds	r4, r2, r5
 800e870:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800e874:	5d55      	ldrb	r5, [r2, r5]
 800e876:	f003 0207 	and.w	r2, r3, #7
 800e87a:	fa05 f202 	lsl.w	r2, r5, r2
 800e87e:	3401      	adds	r4, #1
 800e880:	b2d2      	uxtb	r2, r2
 800e882:	b93a      	cbnz	r2, 800e894 <GUI_USAGE_BM_GetNextDirty+0x46>
 800e884:	b368      	cbz	r0, 800e8e2 <GUI_USAGE_BM_GetNextDirty+0x94>
 800e886:	3308      	adds	r3, #8
 800e888:	f814 2b01 	ldrb.w	r2, [r4], #1
 800e88c:	3801      	subs	r0, #1
 800e88e:	f023 0307 	bic.w	r3, r3, #7
 800e892:	e7f6      	b.n	800e882 <GUI_USAGE_BM_GetNextDirty+0x34>
 800e894:	0615      	lsls	r5, r2, #24
 800e896:	d403      	bmi.n	800e8a0 <GUI_USAGE_BM_GetNextDirty+0x52>
 800e898:	0052      	lsls	r2, r2, #1
 800e89a:	b2d2      	uxtb	r2, r2
 800e89c:	3301      	adds	r3, #1
 800e89e:	e7f9      	b.n	800e894 <GUI_USAGE_BM_GetNextDirty+0x46>
 800e8a0:	2aff      	cmp	r2, #255	; 0xff
 800e8a2:	461d      	mov	r5, r3
 800e8a4:	d005      	beq.n	800e8b2 <GUI_USAGE_BM_GetNextDirty+0x64>
 800e8a6:	0656      	lsls	r6, r2, #25
 800e8a8:	d504      	bpl.n	800e8b4 <GUI_USAGE_BM_GetNextDirty+0x66>
 800e8aa:	0052      	lsls	r2, r2, #1
 800e8ac:	b2d2      	uxtb	r2, r2
 800e8ae:	3301      	adds	r3, #1
 800e8b0:	e7f9      	b.n	800e8a6 <GUI_USAGE_BM_GetNextDirty+0x58>
 800e8b2:	3307      	adds	r3, #7
 800e8b4:	f003 0207 	and.w	r2, r3, #7
 800e8b8:	2a07      	cmp	r2, #7
 800e8ba:	d10d      	bne.n	800e8d8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800e8bc:	3801      	subs	r0, #1
 800e8be:	d40b      	bmi.n	800e8d8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800e8c0:	f814 2b01 	ldrb.w	r2, [r4], #1
 800e8c4:	2aff      	cmp	r2, #255	; 0xff
 800e8c6:	d101      	bne.n	800e8cc <GUI_USAGE_BM_GetNextDirty+0x7e>
 800e8c8:	3308      	adds	r3, #8
 800e8ca:	e7f7      	b.n	800e8bc <GUI_USAGE_BM_GetNextDirty+0x6e>
 800e8cc:	0610      	lsls	r0, r2, #24
 800e8ce:	d503      	bpl.n	800e8d8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800e8d0:	0052      	lsls	r2, r2, #1
 800e8d2:	b2d2      	uxtb	r2, r2
 800e8d4:	3301      	adds	r3, #1
 800e8d6:	e7f9      	b.n	800e8cc <GUI_USAGE_BM_GetNextDirty+0x7e>
 800e8d8:	1b58      	subs	r0, r3, r5
 800e8da:	600d      	str	r5, [r1, #0]
 800e8dc:	3001      	adds	r0, #1
 800e8de:	bd70      	pop	{r4, r5, r6, pc}
 800e8e0:	2000      	movs	r0, #0
 800e8e2:	bd70      	pop	{r4, r5, r6, pc}

0800e8e4 <_GUI_USAGE_BM_Delete>:
 800e8e4:	f7fd be2a 	b.w	800c53c <GUI_ALLOC_Free>

0800e8e8 <GUI_USAGE_BM_Clear>:
 800e8e8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800e8ec:	6902      	ldr	r2, [r0, #16]
 800e8ee:	2100      	movs	r1, #0
 800e8f0:	3014      	adds	r0, #20
 800e8f2:	435a      	muls	r2, r3
 800e8f4:	f002 ba26 	b.w	8010d44 <memset>

0800e8f8 <GUI_USAGE_BM_AddHLine>:
 800e8f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e8fa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e8fe:	1b09      	subs	r1, r1, r4
 800e900:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e904:	42a1      	cmp	r1, r4
 800e906:	da2f      	bge.n	800e968 <GUI_USAGE_BM_AddHLine+0x70>
 800e908:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800e90c:	440b      	add	r3, r1
 800e90e:	f100 0414 	add.w	r4, r0, #20
 800e912:	3b01      	subs	r3, #1
 800e914:	6900      	ldr	r0, [r0, #16]
 800e916:	1b52      	subs	r2, r2, r5
 800e918:	43de      	mvns	r6, r3
 800e91a:	fb00 4202 	mla	r2, r0, r2, r4
 800e91e:	f001 0707 	and.w	r7, r1, #7
 800e922:	10cc      	asrs	r4, r1, #3
 800e924:	f006 0607 	and.w	r6, r6, #7
 800e928:	21ff      	movs	r1, #255	; 0xff
 800e92a:	fa41 f707 	asr.w	r7, r1, r7
 800e92e:	fa01 f606 	lsl.w	r6, r1, r6
 800e932:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800e936:	eb02 0504 	add.w	r5, r2, r4
 800e93a:	b2ff      	uxtb	r7, r7
 800e93c:	b2f6      	uxtb	r6, r6
 800e93e:	5d10      	ldrb	r0, [r2, r4]
 800e940:	d103      	bne.n	800e94a <GUI_USAGE_BM_AddHLine+0x52>
 800e942:	403e      	ands	r6, r7
 800e944:	4330      	orrs	r0, r6
 800e946:	5510      	strb	r0, [r2, r4]
 800e948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e94a:	4338      	orrs	r0, r7
 800e94c:	5510      	strb	r0, [r2, r4]
 800e94e:	1e5c      	subs	r4, r3, #1
 800e950:	2c00      	cmp	r4, #0
 800e952:	f105 0501 	add.w	r5, r5, #1
 800e956:	dd04      	ble.n	800e962 <GUI_USAGE_BM_AddHLine+0x6a>
 800e958:	4628      	mov	r0, r5
 800e95a:	4622      	mov	r2, r4
 800e95c:	f002 f9f2 	bl	8010d44 <memset>
 800e960:	4425      	add	r5, r4
 800e962:	782b      	ldrb	r3, [r5, #0]
 800e964:	431e      	orrs	r6, r3
 800e966:	702e      	strb	r6, [r5, #0]
 800e968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800e96c <GUI_USAGE_BM_Create>:
 800e96c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800e970:	f102 060f 	add.w	r6, r2, #15
 800e974:	1136      	asrs	r6, r6, #4
 800e976:	0076      	lsls	r6, r6, #1
 800e978:	4682      	mov	sl, r0
 800e97a:	fb06 f003 	mul.w	r0, r6, r3
 800e97e:	3014      	adds	r0, #20
 800e980:	4689      	mov	r9, r1
 800e982:	4690      	mov	r8, r2
 800e984:	461f      	mov	r7, r3
 800e986:	f7fd ff99 	bl	800c8bc <GUI_ALLOC_AllocZero>
 800e98a:	4683      	mov	fp, r0
 800e98c:	b198      	cbz	r0, 800e9b6 <GUI_USAGE_BM_Create+0x4a>
 800e98e:	f7fd fd9b 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e992:	4604      	mov	r4, r0
 800e994:	4b0a      	ldr	r3, [pc, #40]	; (800e9c0 <GUI_USAGE_BM_Create+0x54>)
 800e996:	60a3      	str	r3, [r4, #8]
 800e998:	a802      	add	r0, sp, #8
 800e99a:	2301      	movs	r3, #1
 800e99c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800e9a0:	f8a4 8004 	strh.w	r8, [r4, #4]
 800e9a4:	f8a4 a000 	strh.w	sl, [r4]
 800e9a8:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e9ac:	80e7      	strh	r7, [r4, #6]
 800e9ae:	81a3      	strh	r3, [r4, #12]
 800e9b0:	6126      	str	r6, [r4, #16]
 800e9b2:	f7fd fd97 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e9b6:	4658      	mov	r0, fp
 800e9b8:	b002      	add	sp, #8
 800e9ba:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800e9be:	bf00      	nop
 800e9c0:	08013dd0 	.word	0x08013dd0

0800e9c4 <GUI_USAGE_DecUseCnt>:
 800e9c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e9c6:	4605      	mov	r5, r0
 800e9c8:	f7fd fd7e 	bl	800c4c8 <GUI_ALLOC_LockH>
 800e9cc:	4602      	mov	r2, r0
 800e9ce:	a802      	add	r0, sp, #8
 800e9d0:	8994      	ldrh	r4, [r2, #12]
 800e9d2:	f840 2d04 	str.w	r2, [r0, #-4]!
 800e9d6:	3c01      	subs	r4, #1
 800e9d8:	b2a4      	uxth	r4, r4
 800e9da:	8194      	strh	r4, [r2, #12]
 800e9dc:	f7fd fd82 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800e9e0:	b914      	cbnz	r4, 800e9e8 <GUI_USAGE_DecUseCnt+0x24>
 800e9e2:	4628      	mov	r0, r5
 800e9e4:	f7fd fdaa 	bl	800c53c <GUI_ALLOC_Free>
 800e9e8:	b003      	add	sp, #12
 800e9ea:	bd30      	pop	{r4, r5, pc}

0800e9ec <GUI_USAGE_AddRect>:
 800e9ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e9f0:	4605      	mov	r5, r0
 800e9f2:	4688      	mov	r8, r1
 800e9f4:	4617      	mov	r7, r2
 800e9f6:	4699      	mov	r9, r3
 800e9f8:	68a8      	ldr	r0, [r5, #8]
 800e9fa:	464b      	mov	r3, r9
 800e9fc:	6846      	ldr	r6, [r0, #4]
 800e9fe:	4641      	mov	r1, r8
 800ea00:	4628      	mov	r0, r5
 800ea02:	1c54      	adds	r4, r2, #1
 800ea04:	47b0      	blx	r6
 800ea06:	9b08      	ldr	r3, [sp, #32]
 800ea08:	443b      	add	r3, r7
 800ea0a:	42a3      	cmp	r3, r4
 800ea0c:	d001      	beq.n	800ea12 <GUI_USAGE_AddRect+0x26>
 800ea0e:	4622      	mov	r2, r4
 800ea10:	e7f2      	b.n	800e9f8 <GUI_USAGE_AddRect+0xc>
 800ea12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ea18 <GUI_MEMDEV_ReduceYSize>:
 800ea18:	b513      	push	{r0, r1, r4, lr}
 800ea1a:	460c      	mov	r4, r1
 800ea1c:	b918      	cbnz	r0, 800ea26 <GUI_MEMDEV_ReduceYSize+0xe>
 800ea1e:	4b08      	ldr	r3, [pc, #32]	; (800ea40 <GUI_MEMDEV_ReduceYSize+0x28>)
 800ea20:	681b      	ldr	r3, [r3, #0]
 800ea22:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ea24:	b150      	cbz	r0, 800ea3c <GUI_MEMDEV_ReduceYSize+0x24>
 800ea26:	f7fd fd4f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ea2a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ea2e:	9001      	str	r0, [sp, #4]
 800ea30:	429c      	cmp	r4, r3
 800ea32:	bfb8      	it	lt
 800ea34:	8144      	strhlt	r4, [r0, #10]
 800ea36:	a801      	add	r0, sp, #4
 800ea38:	f7fd fd54 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ea3c:	b002      	add	sp, #8
 800ea3e:	bd10      	pop	{r4, pc}
 800ea40:	200000c0 	.word	0x200000c0

0800ea44 <GUI_MEMDEV_Clear>:
 800ea44:	b513      	push	{r0, r1, r4, lr}
 800ea46:	b918      	cbnz	r0, 800ea50 <GUI_MEMDEV_Clear+0xc>
 800ea48:	4b0d      	ldr	r3, [pc, #52]	; (800ea80 <GUI_MEMDEV_Clear+0x3c>)
 800ea4a:	681b      	ldr	r3, [r3, #0]
 800ea4c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ea4e:	b1a8      	cbz	r0, 800ea7c <GUI_MEMDEV_Clear+0x38>
 800ea50:	f7fd fd3a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ea54:	ab02      	add	r3, sp, #8
 800ea56:	6944      	ldr	r4, [r0, #20]
 800ea58:	f843 0d08 	str.w	r0, [r3, #-8]!
 800ea5c:	4668      	mov	r0, sp
 800ea5e:	f7fd fd41 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ea62:	b15c      	cbz	r4, 800ea7c <GUI_MEMDEV_Clear+0x38>
 800ea64:	4620      	mov	r0, r4
 800ea66:	f7fd fd2f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ea6a:	ac02      	add	r4, sp, #8
 800ea6c:	6883      	ldr	r3, [r0, #8]
 800ea6e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ea72:	689b      	ldr	r3, [r3, #8]
 800ea74:	4798      	blx	r3
 800ea76:	4620      	mov	r0, r4
 800ea78:	f7fd fd34 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ea7c:	b002      	add	sp, #8
 800ea7e:	bd10      	pop	{r4, pc}
 800ea80:	200000c0 	.word	0x200000c0

0800ea84 <_GetDevData>:
 800ea84:	4802      	ldr	r0, [pc, #8]	; (800ea90 <_GetDevData+0xc>)
 800ea86:	2901      	cmp	r1, #1
 800ea88:	bf18      	it	ne
 800ea8a:	2000      	movne	r0, #0
 800ea8c:	4770      	bx	lr
 800ea8e:	bf00      	nop
 800ea90:	08013e28 	.word	0x08013e28

0800ea94 <_GetDevFunc>:
 800ea94:	4802      	ldr	r0, [pc, #8]	; (800eaa0 <_GetDevFunc+0xc>)
 800ea96:	2916      	cmp	r1, #22
 800ea98:	bf18      	it	ne
 800ea9a:	2000      	movne	r0, #0
 800ea9c:	4770      	bx	lr
 800ea9e:	bf00      	nop
 800eaa0:	0800df05 	.word	0x0800df05

0800eaa4 <_SetOrg>:
 800eaa4:	6800      	ldr	r0, [r0, #0]
 800eaa6:	b508      	push	{r3, lr}
 800eaa8:	b110      	cbz	r0, 800eab0 <_SetOrg+0xc>
 800eaaa:	68c3      	ldr	r3, [r0, #12]
 800eaac:	6a1b      	ldr	r3, [r3, #32]
 800eaae:	4798      	blx	r3
 800eab0:	bd08      	pop	{r3, pc}

0800eab2 <_GetRect>:
 800eab2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eab4:	6880      	ldr	r0, [r0, #8]
 800eab6:	460c      	mov	r4, r1
 800eab8:	f7fd fd06 	bl	800c4c8 <GUI_ALLOC_LockH>
 800eabc:	4603      	mov	r3, r0
 800eabe:	a802      	add	r0, sp, #8
 800eac0:	8899      	ldrh	r1, [r3, #4]
 800eac2:	88da      	ldrh	r2, [r3, #6]
 800eac4:	891d      	ldrh	r5, [r3, #8]
 800eac6:	f840 3d04 	str.w	r3, [r0, #-4]!
 800eaca:	895b      	ldrh	r3, [r3, #10]
 800eacc:	8021      	strh	r1, [r4, #0]
 800eace:	8062      	strh	r2, [r4, #2]
 800ead0:	4429      	add	r1, r5
 800ead2:	441a      	add	r2, r3
 800ead4:	3901      	subs	r1, #1
 800ead6:	3a01      	subs	r2, #1
 800ead8:	80a1      	strh	r1, [r4, #4]
 800eada:	80e2      	strh	r2, [r4, #6]
 800eadc:	f7fd fd02 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800eae0:	b003      	add	sp, #12
 800eae2:	bd30      	pop	{r4, r5, pc}

0800eae4 <_XY2PTR>:
 800eae4:	4b0e      	ldr	r3, [pc, #56]	; (800eb20 <_XY2PTR+0x3c>)
 800eae6:	681b      	ldr	r3, [r3, #0]
 800eae8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800eaea:	4605      	mov	r5, r0
 800eaec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800eaee:	460e      	mov	r6, r1
 800eaf0:	f7fd fcea 	bl	800c4c8 <GUI_ALLOC_LockH>
 800eaf4:	4603      	mov	r3, r0
 800eaf6:	a802      	add	r0, sp, #8
 800eaf8:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800eafc:	f840 3d04 	str.w	r3, [r0, #-4]!
 800eb00:	f103 0118 	add.w	r1, r3, #24
 800eb04:	1b36      	subs	r6, r6, r4
 800eb06:	68dc      	ldr	r4, [r3, #12]
 800eb08:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800eb0c:	fb04 1406 	mla	r4, r4, r6, r1
 800eb10:	1aed      	subs	r5, r5, r3
 800eb12:	f7fd fce7 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800eb16:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800eb1a:	4620      	mov	r0, r4
 800eb1c:	b002      	add	sp, #8
 800eb1e:	bd70      	pop	{r4, r5, r6, pc}
 800eb20:	200000c0 	.word	0x200000c0

0800eb24 <_GetPixelIndex>:
 800eb24:	b508      	push	{r3, lr}
 800eb26:	4608      	mov	r0, r1
 800eb28:	4611      	mov	r1, r2
 800eb2a:	f7ff ffdb 	bl	800eae4 <_XY2PTR>
 800eb2e:	8800      	ldrh	r0, [r0, #0]
 800eb30:	bd08      	pop	{r3, pc}
	...

0800eb34 <_XorPixel>:
 800eb34:	4b14      	ldr	r3, [pc, #80]	; (800eb88 <_XorPixel+0x54>)
 800eb36:	681b      	ldr	r3, [r3, #0]
 800eb38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800eb3a:	4607      	mov	r7, r0
 800eb3c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800eb3e:	4615      	mov	r5, r2
 800eb40:	460e      	mov	r6, r1
 800eb42:	f7fd fcc1 	bl	800c4c8 <GUI_ALLOC_LockH>
 800eb46:	4629      	mov	r1, r5
 800eb48:	9000      	str	r0, [sp, #0]
 800eb4a:	4630      	mov	r0, r6
 800eb4c:	f7ff ffca 	bl	800eae4 <_XY2PTR>
 800eb50:	693b      	ldr	r3, [r7, #16]
 800eb52:	4604      	mov	r4, r0
 800eb54:	689b      	ldr	r3, [r3, #8]
 800eb56:	4798      	blx	r3
 800eb58:	8823      	ldrh	r3, [r4, #0]
 800eb5a:	4058      	eors	r0, r3
 800eb5c:	9b00      	ldr	r3, [sp, #0]
 800eb5e:	8020      	strh	r0, [r4, #0]
 800eb60:	6958      	ldr	r0, [r3, #20]
 800eb62:	b160      	cbz	r0, 800eb7e <_XorPixel+0x4a>
 800eb64:	f7fd fcb0 	bl	800c4c8 <GUI_ALLOC_LockH>
 800eb68:	ac02      	add	r4, sp, #8
 800eb6a:	6883      	ldr	r3, [r0, #8]
 800eb6c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800eb70:	681b      	ldr	r3, [r3, #0]
 800eb72:	4631      	mov	r1, r6
 800eb74:	462a      	mov	r2, r5
 800eb76:	4798      	blx	r3
 800eb78:	4620      	mov	r0, r4
 800eb7a:	f7fd fcb3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800eb7e:	4668      	mov	r0, sp
 800eb80:	f7fd fcb0 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800eb84:	b003      	add	sp, #12
 800eb86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb88:	200000c0 	.word	0x200000c0

0800eb8c <_SetPixelIndex>:
 800eb8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800eb8e:	461c      	mov	r4, r3
 800eb90:	4b10      	ldr	r3, [pc, #64]	; (800ebd4 <_SetPixelIndex+0x48>)
 800eb92:	681b      	ldr	r3, [r3, #0]
 800eb94:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800eb96:	460e      	mov	r6, r1
 800eb98:	4615      	mov	r5, r2
 800eb9a:	f7fd fc95 	bl	800c4c8 <GUI_ALLOC_LockH>
 800eb9e:	4629      	mov	r1, r5
 800eba0:	9000      	str	r0, [sp, #0]
 800eba2:	4630      	mov	r0, r6
 800eba4:	f7ff ff9e 	bl	800eae4 <_XY2PTR>
 800eba8:	9b00      	ldr	r3, [sp, #0]
 800ebaa:	8004      	strh	r4, [r0, #0]
 800ebac:	6958      	ldr	r0, [r3, #20]
 800ebae:	b160      	cbz	r0, 800ebca <_SetPixelIndex+0x3e>
 800ebb0:	f7fd fc8a 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ebb4:	ac02      	add	r4, sp, #8
 800ebb6:	6883      	ldr	r3, [r0, #8]
 800ebb8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ebbc:	681b      	ldr	r3, [r3, #0]
 800ebbe:	4631      	mov	r1, r6
 800ebc0:	462a      	mov	r2, r5
 800ebc2:	4798      	blx	r3
 800ebc4:	4620      	mov	r0, r4
 800ebc6:	f7fd fc8d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ebca:	4668      	mov	r0, sp
 800ebcc:	f7fd fc8a 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ebd0:	b002      	add	sp, #8
 800ebd2:	bd70      	pop	{r4, r5, r6, pc}
 800ebd4:	200000c0 	.word	0x200000c0

0800ebd8 <_DrawVLine>:
 800ebd8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ebdc:	4d2c      	ldr	r5, [pc, #176]	; (800ec90 <_DrawVLine+0xb8>)
 800ebde:	461e      	mov	r6, r3
 800ebe0:	682b      	ldr	r3, [r5, #0]
 800ebe2:	4681      	mov	r9, r0
 800ebe4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ebe6:	460f      	mov	r7, r1
 800ebe8:	4614      	mov	r4, r2
 800ebea:	f7fd fc6d 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ebee:	9000      	str	r0, [sp, #0]
 800ebf0:	6940      	ldr	r0, [r0, #20]
 800ebf2:	46aa      	mov	sl, r5
 800ebf4:	b108      	cbz	r0, 800ebfa <_DrawVLine+0x22>
 800ebf6:	f7fd fc67 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ebfa:	9001      	str	r0, [sp, #4]
 800ebfc:	4621      	mov	r1, r4
 800ebfe:	4638      	mov	r0, r7
 800ec00:	f7ff ff70 	bl	800eae4 <_XY2PTR>
 800ec04:	9b00      	ldr	r3, [sp, #0]
 800ec06:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800ec0a:	f8da 3000 	ldr.w	r3, [sl]
 800ec0e:	7c1a      	ldrb	r2, [r3, #16]
 800ec10:	07d2      	lsls	r2, r2, #31
 800ec12:	4605      	mov	r5, r0
 800ec14:	d51f      	bpl.n	800ec56 <_DrawVLine+0x7e>
 800ec16:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800ec1a:	689b      	ldr	r3, [r3, #8]
 800ec1c:	4798      	blx	r3
 800ec1e:	fa1f f880 	uxth.w	r8, r0
 800ec22:	9801      	ldr	r0, [sp, #4]
 800ec24:	b120      	cbz	r0, 800ec30 <_DrawVLine+0x58>
 800ec26:	6883      	ldr	r3, [r0, #8]
 800ec28:	4639      	mov	r1, r7
 800ec2a:	681b      	ldr	r3, [r3, #0]
 800ec2c:	4622      	mov	r2, r4
 800ec2e:	4798      	blx	r3
 800ec30:	882b      	ldrh	r3, [r5, #0]
 800ec32:	ea88 0303 	eor.w	r3, r8, r3
 800ec36:	802b      	strh	r3, [r5, #0]
 800ec38:	9b00      	ldr	r3, [sp, #0]
 800ec3a:	3401      	adds	r4, #1
 800ec3c:	68db      	ldr	r3, [r3, #12]
 800ec3e:	42b4      	cmp	r4, r6
 800ec40:	441d      	add	r5, r3
 800ec42:	ddee      	ble.n	800ec22 <_DrawVLine+0x4a>
 800ec44:	4668      	mov	r0, sp
 800ec46:	f7fd fc4d 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ec4a:	9b01      	ldr	r3, [sp, #4]
 800ec4c:	b1eb      	cbz	r3, 800ec8a <_DrawVLine+0xb2>
 800ec4e:	a801      	add	r0, sp, #4
 800ec50:	f7fd fc48 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ec54:	e019      	b.n	800ec8a <_DrawVLine+0xb2>
 800ec56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec58:	f8d3 9000 	ldr.w	r9, [r3]
 800ec5c:	9b01      	ldr	r3, [sp, #4]
 800ec5e:	b163      	cbz	r3, 800ec7a <_DrawVLine+0xa2>
 800ec60:	9801      	ldr	r0, [sp, #4]
 800ec62:	6883      	ldr	r3, [r0, #8]
 800ec64:	4622      	mov	r2, r4
 800ec66:	681b      	ldr	r3, [r3, #0]
 800ec68:	4639      	mov	r1, r7
 800ec6a:	3401      	adds	r4, #1
 800ec6c:	4798      	blx	r3
 800ec6e:	42b4      	cmp	r4, r6
 800ec70:	f8a5 9000 	strh.w	r9, [r5]
 800ec74:	4445      	add	r5, r8
 800ec76:	ddf3      	ble.n	800ec60 <_DrawVLine+0x88>
 800ec78:	e7e4      	b.n	800ec44 <_DrawVLine+0x6c>
 800ec7a:	1b34      	subs	r4, r6, r4
 800ec7c:	3401      	adds	r4, #1
 800ec7e:	3c01      	subs	r4, #1
 800ec80:	f8a5 9000 	strh.w	r9, [r5]
 800ec84:	4445      	add	r5, r8
 800ec86:	d1fa      	bne.n	800ec7e <_DrawVLine+0xa6>
 800ec88:	e7dc      	b.n	800ec44 <_DrawVLine+0x6c>
 800ec8a:	b002      	add	sp, #8
 800ec8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ec90:	200000c0 	.word	0x200000c0

0800ec94 <_FillRect>:
 800ec94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec98:	4f2a      	ldr	r7, [pc, #168]	; (800ed44 <_FillRect+0xb0>)
 800ec9a:	4614      	mov	r4, r2
 800ec9c:	683a      	ldr	r2, [r7, #0]
 800ec9e:	4698      	mov	r8, r3
 800eca0:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800eca2:	b087      	sub	sp, #28
 800eca4:	681b      	ldr	r3, [r3, #0]
 800eca6:	9302      	str	r3, [sp, #8]
 800eca8:	4682      	mov	sl, r0
 800ecaa:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800ecac:	460e      	mov	r6, r1
 800ecae:	f7fd fc0b 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ecb2:	4621      	mov	r1, r4
 800ecb4:	9004      	str	r0, [sp, #16]
 800ecb6:	4630      	mov	r0, r6
 800ecb8:	f7ff ff14 	bl	800eae4 <_XY2PTR>
 800ecbc:	9a04      	ldr	r2, [sp, #16]
 800ecbe:	4605      	mov	r5, r0
 800ecc0:	6950      	ldr	r0, [r2, #20]
 800ecc2:	68d3      	ldr	r3, [r2, #12]
 800ecc4:	9303      	str	r3, [sp, #12]
 800ecc6:	ebc6 0908 	rsb	r9, r6, r8
 800ecca:	f109 0801 	add.w	r8, r9, #1
 800ecce:	46bb      	mov	fp, r7
 800ecd0:	b180      	cbz	r0, 800ecf4 <_FillRect+0x60>
 800ecd2:	f7fd fbf9 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ecd6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ecd8:	af06      	add	r7, sp, #24
 800ecda:	1b13      	subs	r3, r2, r4
 800ecdc:	f847 0d04 	str.w	r0, [r7, #-4]!
 800ece0:	3301      	adds	r3, #1
 800ece2:	9300      	str	r3, [sp, #0]
 800ece4:	4631      	mov	r1, r6
 800ece6:	4622      	mov	r2, r4
 800ece8:	4643      	mov	r3, r8
 800ecea:	f7ff fe7f 	bl	800e9ec <GUI_USAGE_AddRect>
 800ecee:	4638      	mov	r0, r7
 800ecf0:	f7fd fbf8 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ecf4:	ea4f 0649 	mov.w	r6, r9, lsl #1
 800ecf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecfa:	429c      	cmp	r4, r3
 800ecfc:	dc1c      	bgt.n	800ed38 <_FillRect+0xa4>
 800ecfe:	f8db 3000 	ldr.w	r3, [fp]
 800ed02:	7c1b      	ldrb	r3, [r3, #16]
 800ed04:	07db      	lsls	r3, r3, #31
 800ed06:	d50d      	bpl.n	800ed24 <_FillRect+0x90>
 800ed08:	f8da 3010 	ldr.w	r3, [sl, #16]
 800ed0c:	689b      	ldr	r3, [r3, #8]
 800ed0e:	4798      	blx	r3
 800ed10:	19aa      	adds	r2, r5, r6
 800ed12:	b280      	uxth	r0, r0
 800ed14:	1eab      	subs	r3, r5, #2
 800ed16:	8859      	ldrh	r1, [r3, #2]
 800ed18:	4041      	eors	r1, r0
 800ed1a:	f823 1f02 	strh.w	r1, [r3, #2]!
 800ed1e:	4293      	cmp	r3, r2
 800ed20:	d1f9      	bne.n	800ed16 <_FillRect+0x82>
 800ed22:	e005      	b.n	800ed30 <_FillRect+0x9c>
 800ed24:	9b02      	ldr	r3, [sp, #8]
 800ed26:	4628      	mov	r0, r5
 800ed28:	b299      	uxth	r1, r3
 800ed2a:	4642      	mov	r2, r8
 800ed2c:	f7fa ff95 	bl	8009c5a <GUI__memset16>
 800ed30:	9a03      	ldr	r2, [sp, #12]
 800ed32:	3401      	adds	r4, #1
 800ed34:	4415      	add	r5, r2
 800ed36:	e7df      	b.n	800ecf8 <_FillRect+0x64>
 800ed38:	a804      	add	r0, sp, #16
 800ed3a:	f7fd fbd3 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ed3e:	b007      	add	sp, #28
 800ed40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed44:	200000c0 	.word	0x200000c0

0800ed48 <_DrawHLine>:
 800ed48:	b507      	push	{r0, r1, r2, lr}
 800ed4a:	9200      	str	r2, [sp, #0]
 800ed4c:	f7ff ffa2 	bl	800ec94 <_FillRect>
 800ed50:	b003      	add	sp, #12
 800ed52:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800ed58 <_DrawBitmap>:
 800ed58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed5c:	4c8b      	ldr	r4, [pc, #556]	; (800ef8c <_DrawBitmap+0x234>)
 800ed5e:	b093      	sub	sp, #76	; 0x4c
 800ed60:	469b      	mov	fp, r3
 800ed62:	6823      	ldr	r3, [r4, #0]
 800ed64:	900d      	str	r0, [sp, #52]	; 0x34
 800ed66:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ed68:	9207      	str	r2, [sp, #28]
 800ed6a:	460d      	mov	r5, r1
 800ed6c:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800ed70:	f7fd fbaa 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ed74:	9010      	str	r0, [sp, #64]	; 0x40
 800ed76:	6940      	ldr	r0, [r0, #20]
 800ed78:	b108      	cbz	r0, 800ed7e <_DrawBitmap+0x26>
 800ed7a:	f7fd fba5 	bl	800c4c8 <GUI_ALLOC_LockH>
 800ed7e:	9011      	str	r0, [sp, #68]	; 0x44
 800ed80:	a812      	add	r0, sp, #72	; 0x48
 800ed82:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800ed86:	68db      	ldr	r3, [r3, #12]
 800ed88:	9308      	str	r3, [sp, #32]
 800ed8a:	f7fd fbab 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800ed8e:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800ed90:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ed92:	442e      	add	r6, r5
 800ed94:	9604      	str	r6, [sp, #16]
 800ed96:	b150      	cbz	r0, 800edae <_DrawBitmap+0x56>
 800ed98:	6823      	ldr	r3, [r4, #0]
 800ed9a:	7c1b      	ldrb	r3, [r3, #16]
 800ed9c:	0799      	lsls	r1, r3, #30
 800ed9e:	d106      	bne.n	800edae <_DrawBitmap+0x56>
 800eda0:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800eda2:	9700      	str	r7, [sp, #0]
 800eda4:	4631      	mov	r1, r6
 800eda6:	9a07      	ldr	r2, [sp, #28]
 800eda8:	465b      	mov	r3, fp
 800edaa:	f7ff fe1f 	bl	800e9ec <GUI_USAGE_AddRect>
 800edae:	9804      	ldr	r0, [sp, #16]
 800edb0:	9907      	ldr	r1, [sp, #28]
 800edb2:	f7ff fe97 	bl	800eae4 <_XY2PTR>
 800edb6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800edb8:	2e10      	cmp	r6, #16
 800edba:	4604      	mov	r4, r0
 800edbc:	d13a      	bne.n	800ee34 <_DrawBitmap+0xdc>
 800edbe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800edc0:	b11b      	cbz	r3, 800edca <_DrawBitmap+0x72>
 800edc2:	ea4f 064b 	mov.w	r6, fp, lsl #1
 800edc6:	2500      	movs	r5, #0
 800edc8:	e014      	b.n	800edf4 <_DrawBitmap+0x9c>
 800edca:	4b71      	ldr	r3, [pc, #452]	; (800ef90 <_DrawBitmap+0x238>)
 800edcc:	681d      	ldr	r5, [r3, #0]
 800edce:	2d00      	cmp	r5, #0
 800edd0:	d0f7      	beq.n	800edc2 <_DrawBitmap+0x6a>
 800edd2:	9e08      	ldr	r6, [sp, #32]
 800edd4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800edd6:	9600      	str	r6, [sp, #0]
 800edd8:	9701      	str	r7, [sp, #4]
 800edda:	4651      	mov	r1, sl
 800eddc:	465a      	mov	r2, fp
 800edde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ede0:	47a8      	blx	r5
 800ede2:	e349      	b.n	800f478 <_DrawBitmap+0x720>
 800ede4:	f1ba 0f00 	cmp.w	sl, #0
 800ede8:	d10a      	bne.n	800ee00 <_DrawBitmap+0xa8>
 800edea:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800edec:	44ba      	add	sl, r7
 800edee:	9f08      	ldr	r7, [sp, #32]
 800edf0:	3501      	adds	r5, #1
 800edf2:	443c      	add	r4, r7
 800edf4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800edf6:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800edfa:	42bd      	cmp	r5, r7
 800edfc:	dbf2      	blt.n	800ede4 <_DrawBitmap+0x8c>
 800edfe:	e014      	b.n	800ee2a <_DrawBitmap+0xd2>
 800ee00:	2c00      	cmp	r4, #0
 800ee02:	d0f2      	beq.n	800edea <_DrawBitmap+0x92>
 800ee04:	4b63      	ldr	r3, [pc, #396]	; (800ef94 <_DrawBitmap+0x23c>)
 800ee06:	4620      	mov	r0, r4
 800ee08:	681b      	ldr	r3, [r3, #0]
 800ee0a:	4651      	mov	r1, sl
 800ee0c:	4632      	mov	r2, r6
 800ee0e:	4798      	blx	r3
 800ee10:	f1b8 0f00 	cmp.w	r8, #0
 800ee14:	d0e9      	beq.n	800edea <_DrawBitmap+0x92>
 800ee16:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ee1a:	9a07      	ldr	r2, [sp, #28]
 800ee1c:	685f      	ldr	r7, [r3, #4]
 800ee1e:	9904      	ldr	r1, [sp, #16]
 800ee20:	4640      	mov	r0, r8
 800ee22:	442a      	add	r2, r5
 800ee24:	465b      	mov	r3, fp
 800ee26:	47b8      	blx	r7
 800ee28:	e7df      	b.n	800edea <_DrawBitmap+0x92>
 800ee2a:	f1b8 0f00 	cmp.w	r8, #0
 800ee2e:	f040 8320 	bne.w	800f472 <_DrawBitmap+0x71a>
 800ee32:	e321      	b.n	800f478 <_DrawBitmap+0x720>
 800ee34:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800ee36:	2e17      	cmp	r6, #23
 800ee38:	dd38      	ble.n	800eeac <_DrawBitmap+0x154>
 800ee3a:	2600      	movs	r6, #0
 800ee3c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ee3e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ee40:	42be      	cmp	r6, r7
 800ee42:	f280 809e 	bge.w	800ef82 <_DrawBitmap+0x22a>
 800ee46:	9f07      	ldr	r7, [sp, #28]
 800ee48:	4437      	add	r7, r6
 800ee4a:	f1ba 0f00 	cmp.w	sl, #0
 800ee4e:	d027      	beq.n	800eea0 <_DrawBitmap+0x148>
 800ee50:	b334      	cbz	r4, 800eea0 <_DrawBitmap+0x148>
 800ee52:	b13d      	cbz	r5, 800ee64 <_DrawBitmap+0x10c>
 800ee54:	68ab      	ldr	r3, [r5, #8]
 800ee56:	9904      	ldr	r1, [sp, #16]
 800ee58:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800ee5c:	4628      	mov	r0, r5
 800ee5e:	463a      	mov	r2, r7
 800ee60:	465b      	mov	r3, fp
 800ee62:	47e0      	blx	ip
 800ee64:	1ea3      	subs	r3, r4, #2
 800ee66:	f1aa 0904 	sub.w	r9, sl, #4
 800ee6a:	9303      	str	r3, [sp, #12]
 800ee6c:	46d8      	mov	r8, fp
 800ee6e:	9b04      	ldr	r3, [sp, #16]
 800ee70:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ee72:	445b      	add	r3, fp
 800ee74:	ebc8 0103 	rsb	r1, r8, r3
 800ee78:	6903      	ldr	r3, [r0, #16]
 800ee7a:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800ee7e:	681b      	ldr	r3, [r3, #0]
 800ee80:	9102      	str	r1, [sp, #8]
 800ee82:	4798      	blx	r3
 800ee84:	9b03      	ldr	r3, [sp, #12]
 800ee86:	9902      	ldr	r1, [sp, #8]
 800ee88:	f823 0f02 	strh.w	r0, [r3, #2]!
 800ee8c:	9303      	str	r3, [sp, #12]
 800ee8e:	b125      	cbz	r5, 800ee9a <_DrawBitmap+0x142>
 800ee90:	68ab      	ldr	r3, [r5, #8]
 800ee92:	4628      	mov	r0, r5
 800ee94:	681b      	ldr	r3, [r3, #0]
 800ee96:	463a      	mov	r2, r7
 800ee98:	4798      	blx	r3
 800ee9a:	f1b8 0801 	subs.w	r8, r8, #1
 800ee9e:	d1e6      	bne.n	800ee6e <_DrawBitmap+0x116>
 800eea0:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800eea2:	44ba      	add	sl, r7
 800eea4:	9f08      	ldr	r7, [sp, #32]
 800eea6:	3601      	adds	r6, #1
 800eea8:	443c      	add	r4, r7
 800eeaa:	e7c7      	b.n	800ee3c <_DrawBitmap+0xe4>
 800eeac:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800eeae:	2e08      	cmp	r6, #8
 800eeb0:	f100 0402 	add.w	r4, r0, #2
 800eeb4:	d170      	bne.n	800ef98 <_DrawBitmap+0x240>
 800eeb6:	9e07      	ldr	r6, [sp, #28]
 800eeb8:	9f07      	ldr	r7, [sp, #28]
 800eeba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800eebc:	1bf3      	subs	r3, r6, r7
 800eebe:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800eec0:	42bb      	cmp	r3, r7
 800eec2:	f1a4 0002 	sub.w	r0, r4, #2
 800eec6:	da5c      	bge.n	800ef82 <_DrawBitmap+0x22a>
 800eec8:	4b30      	ldr	r3, [pc, #192]	; (800ef8c <_DrawBitmap+0x234>)
 800eeca:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800eecc:	681b      	ldr	r3, [r3, #0]
 800eece:	7c1b      	ldrb	r3, [r3, #16]
 800eed0:	b367      	cbz	r7, 800ef2c <_DrawBitmap+0x1d4>
 800eed2:	f013 0303 	ands.w	r3, r3, #3
 800eed6:	d004      	beq.n	800eee2 <_DrawBitmap+0x18a>
 800eed8:	2b02      	cmp	r3, #2
 800eeda:	d14c      	bne.n	800ef76 <_DrawBitmap+0x21e>
 800eedc:	46a0      	mov	r8, r4
 800eede:	9f04      	ldr	r7, [sp, #16]
 800eee0:	e01d      	b.n	800ef1e <_DrawBitmap+0x1c6>
 800eee2:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800eee6:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800eee8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800eeec:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800eef0:	3301      	adds	r3, #1
 800eef2:	455b      	cmp	r3, fp
 800eef4:	d1f5      	bne.n	800eee2 <_DrawBitmap+0x18a>
 800eef6:	e03e      	b.n	800ef76 <_DrawBitmap+0x21e>
 800eef8:	9921      	ldr	r1, [sp, #132]	; 0x84
 800eefa:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800eefe:	f828 3c02 	strh.w	r3, [r8, #-2]
 800ef02:	b12d      	cbz	r5, 800ef10 <_DrawBitmap+0x1b8>
 800ef04:	68ab      	ldr	r3, [r5, #8]
 800ef06:	4628      	mov	r0, r5
 800ef08:	681b      	ldr	r3, [r3, #0]
 800ef0a:	4639      	mov	r1, r7
 800ef0c:	4632      	mov	r2, r6
 800ef0e:	4798      	blx	r3
 800ef10:	9b04      	ldr	r3, [sp, #16]
 800ef12:	3701      	adds	r7, #1
 800ef14:	445b      	add	r3, fp
 800ef16:	42bb      	cmp	r3, r7
 800ef18:	f108 0802 	add.w	r8, r8, #2
 800ef1c:	d02b      	beq.n	800ef76 <_DrawBitmap+0x21e>
 800ef1e:	9804      	ldr	r0, [sp, #16]
 800ef20:	ebc0 030a 	rsb	r3, r0, sl
 800ef24:	5ddb      	ldrb	r3, [r3, r7]
 800ef26:	2b00      	cmp	r3, #0
 800ef28:	d0f2      	beq.n	800ef10 <_DrawBitmap+0x1b8>
 800ef2a:	e7e5      	b.n	800eef8 <_DrawBitmap+0x1a0>
 800ef2c:	f013 0303 	ands.w	r3, r3, #3
 800ef30:	d004      	beq.n	800ef3c <_DrawBitmap+0x1e4>
 800ef32:	2b02      	cmp	r3, #2
 800ef34:	d11f      	bne.n	800ef76 <_DrawBitmap+0x21e>
 800ef36:	46a0      	mov	r8, r4
 800ef38:	9f04      	ldr	r7, [sp, #16]
 800ef3a:	e015      	b.n	800ef68 <_DrawBitmap+0x210>
 800ef3c:	4b15      	ldr	r3, [pc, #84]	; (800ef94 <_DrawBitmap+0x23c>)
 800ef3e:	4651      	mov	r1, sl
 800ef40:	681b      	ldr	r3, [r3, #0]
 800ef42:	465a      	mov	r2, fp
 800ef44:	4798      	blx	r3
 800ef46:	e016      	b.n	800ef76 <_DrawBitmap+0x21e>
 800ef48:	f828 3c02 	strh.w	r3, [r8, #-2]
 800ef4c:	b12d      	cbz	r5, 800ef5a <_DrawBitmap+0x202>
 800ef4e:	68ab      	ldr	r3, [r5, #8]
 800ef50:	4628      	mov	r0, r5
 800ef52:	681b      	ldr	r3, [r3, #0]
 800ef54:	4639      	mov	r1, r7
 800ef56:	4632      	mov	r2, r6
 800ef58:	4798      	blx	r3
 800ef5a:	9b04      	ldr	r3, [sp, #16]
 800ef5c:	3701      	adds	r7, #1
 800ef5e:	445b      	add	r3, fp
 800ef60:	42bb      	cmp	r3, r7
 800ef62:	f108 0802 	add.w	r8, r8, #2
 800ef66:	d006      	beq.n	800ef76 <_DrawBitmap+0x21e>
 800ef68:	9a04      	ldr	r2, [sp, #16]
 800ef6a:	ebc2 030a 	rsb	r3, r2, sl
 800ef6e:	5ddb      	ldrb	r3, [r3, r7]
 800ef70:	2b00      	cmp	r3, #0
 800ef72:	d0f2      	beq.n	800ef5a <_DrawBitmap+0x202>
 800ef74:	e7e8      	b.n	800ef48 <_DrawBitmap+0x1f0>
 800ef76:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ef78:	44ba      	add	sl, r7
 800ef7a:	9f08      	ldr	r7, [sp, #32]
 800ef7c:	3601      	adds	r6, #1
 800ef7e:	443c      	add	r4, r7
 800ef80:	e79a      	b.n	800eeb8 <_DrawBitmap+0x160>
 800ef82:	2d00      	cmp	r5, #0
 800ef84:	f040 8275 	bne.w	800f472 <_DrawBitmap+0x71a>
 800ef88:	e276      	b.n	800f478 <_DrawBitmap+0x720>
 800ef8a:	bf00      	nop
 800ef8c:	200000c0 	.word	0x200000c0
 800ef90:	20002c4c 	.word	0x20002c4c
 800ef94:	200000b0 	.word	0x200000b0
 800ef98:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800ef9a:	4bab      	ldr	r3, [pc, #684]	; (800f248 <_DrawBitmap+0x4f0>)
 800ef9c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800ef9e:	9409      	str	r4, [sp, #36]	; 0x24
 800efa0:	2e00      	cmp	r6, #0
 800efa2:	bf08      	it	eq
 800efa4:	461e      	moveq	r6, r3
 800efa6:	9621      	str	r6, [sp, #132]	; 0x84
 800efa8:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800efaa:	0076      	lsls	r6, r6, #1
 800efac:	960e      	str	r6, [sp, #56]	; 0x38
 800efae:	00bf      	lsls	r7, r7, #2
 800efb0:	9e07      	ldr	r6, [sp, #28]
 800efb2:	970f      	str	r7, [sp, #60]	; 0x3c
 800efb4:	9605      	str	r6, [sp, #20]
 800efb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800efb8:	9e05      	ldr	r6, [sp, #20]
 800efba:	9f07      	ldr	r7, [sp, #28]
 800efbc:	1e9c      	subs	r4, r3, #2
 800efbe:	1bf3      	subs	r3, r6, r7
 800efc0:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800efc2:	42b3      	cmp	r3, r6
 800efc4:	f280 8253 	bge.w	800f46e <_DrawBitmap+0x716>
 800efc8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800efca:	2f02      	cmp	r7, #2
 800efcc:	f000 80d9 	beq.w	800f182 <_DrawBitmap+0x42a>
 800efd0:	2f04      	cmp	r7, #4
 800efd2:	f000 8178 	beq.w	800f2c6 <_DrawBitmap+0x56e>
 800efd6:	2f01      	cmp	r7, #1
 800efd8:	f040 823f 	bne.w	800f45a <_DrawBitmap+0x702>
 800efdc:	f8df 9270 	ldr.w	r9, [pc, #624]	; 800f250 <_DrawBitmap+0x4f8>
 800efe0:	f8d9 3000 	ldr.w	r3, [r9]
 800efe4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800efe6:	f7fd fa6f 	bl	800c4c8 <GUI_ALLOC_LockH>
 800efea:	f89a 3000 	ldrb.w	r3, [sl]
 800efee:	4a97      	ldr	r2, [pc, #604]	; (800f24c <_DrawBitmap+0x4f4>)
 800eff0:	9010      	str	r0, [sp, #64]	; 0x40
 800eff2:	5cd5      	ldrb	r5, [r2, r3]
 800eff4:	f8d9 3000 	ldr.w	r3, [r9]
 800eff8:	9820      	ldr	r0, [sp, #128]	; 0x80
 800effa:	7c1b      	ldrb	r3, [r3, #16]
 800effc:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800effe:	f003 0303 	and.w	r3, r3, #3
 800f002:	2b02      	cmp	r3, #2
 800f004:	465e      	mov	r6, fp
 800f006:	f1c0 0808 	rsb	r8, r0, #8
 800f00a:	fa45 f500 	asr.w	r5, r5, r0
 800f00e:	d022      	beq.n	800f056 <_DrawBitmap+0x2fe>
 800f010:	2b03      	cmp	r3, #3
 800f012:	d062      	beq.n	800f0da <_DrawBitmap+0x382>
 800f014:	2b01      	cmp	r3, #1
 800f016:	d060      	beq.n	800f0da <_DrawBitmap+0x382>
 800f018:	4652      	mov	r2, sl
 800f01a:	4546      	cmp	r6, r8
 800f01c:	bf38      	it	cc
 800f01e:	46b0      	movcc	r8, r6
 800f020:	ebc8 0606 	rsb	r6, r8, r6
 800f024:	4643      	mov	r3, r8
 800f026:	4621      	mov	r1, r4
 800f028:	f005 0001 	and.w	r0, r5, #1
 800f02c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800f02e:	3b01      	subs	r3, #1
 800f030:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800f034:	f821 0b02 	strh.w	r0, [r1], #2
 800f038:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800f03c:	d1f4      	bne.n	800f028 <_DrawBitmap+0x2d0>
 800f03e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800f042:	2e00      	cmp	r6, #0
 800f044:	f000 8099 	beq.w	800f17a <_DrawBitmap+0x422>
 800f048:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800f04c:	497f      	ldr	r1, [pc, #508]	; (800f24c <_DrawBitmap+0x4f4>)
 800f04e:	f04f 0808 	mov.w	r8, #8
 800f052:	5ccd      	ldrb	r5, [r1, r3]
 800f054:	e7e1      	b.n	800f01a <_DrawBitmap+0x2c2>
 800f056:	9821      	ldr	r0, [sp, #132]	; 0x84
 800f058:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800f05c:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 800f060:	f8cd a018 	str.w	sl, [sp, #24]
 800f064:	4546      	cmp	r6, r8
 800f066:	bf38      	it	cc
 800f068:	46b0      	movcc	r8, r6
 800f06a:	ebc8 0606 	rsb	r6, r8, r6
 800f06e:	b32f      	cbz	r7, 800f0bc <_DrawBitmap+0x364>
 800f070:	b91d      	cbnz	r5, 800f07a <_DrawBitmap+0x322>
 800f072:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800f076:	44c1      	add	r9, r8
 800f078:	e024      	b.n	800f0c4 <_DrawBitmap+0x36c>
 800f07a:	07ea      	lsls	r2, r5, #31
 800f07c:	d50b      	bpl.n	800f096 <_DrawBitmap+0x33e>
 800f07e:	68bb      	ldr	r3, [r7, #8]
 800f080:	9a05      	ldr	r2, [sp, #20]
 800f082:	681b      	ldr	r3, [r3, #0]
 800f084:	f8cd c008 	str.w	ip, [sp, #8]
 800f088:	4638      	mov	r0, r7
 800f08a:	4649      	mov	r1, r9
 800f08c:	4798      	blx	r3
 800f08e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800f092:	f8a4 c000 	strh.w	ip, [r4]
 800f096:	f1b8 0801 	subs.w	r8, r8, #1
 800f09a:	f109 0901 	add.w	r9, r9, #1
 800f09e:	f104 0402 	add.w	r4, r4, #2
 800f0a2:	d00f      	beq.n	800f0c4 <_DrawBitmap+0x36c>
 800f0a4:	086d      	lsrs	r5, r5, #1
 800f0a6:	e7e3      	b.n	800f070 <_DrawBitmap+0x318>
 800f0a8:	07eb      	lsls	r3, r5, #31
 800f0aa:	bf48      	it	mi
 800f0ac:	f8a4 c000 	strhmi.w	ip, [r4]
 800f0b0:	f1b8 0801 	subs.w	r8, r8, #1
 800f0b4:	f104 0402 	add.w	r4, r4, #2
 800f0b8:	d004      	beq.n	800f0c4 <_DrawBitmap+0x36c>
 800f0ba:	086d      	lsrs	r5, r5, #1
 800f0bc:	2d00      	cmp	r5, #0
 800f0be:	d1f3      	bne.n	800f0a8 <_DrawBitmap+0x350>
 800f0c0:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800f0c4:	2e00      	cmp	r6, #0
 800f0c6:	d058      	beq.n	800f17a <_DrawBitmap+0x422>
 800f0c8:	9906      	ldr	r1, [sp, #24]
 800f0ca:	4a60      	ldr	r2, [pc, #384]	; (800f24c <_DrawBitmap+0x4f4>)
 800f0cc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800f0d0:	9106      	str	r1, [sp, #24]
 800f0d2:	5cd5      	ldrb	r5, [r2, r3]
 800f0d4:	f04f 0808 	mov.w	r8, #8
 800f0d8:	e7c4      	b.n	800f064 <_DrawBitmap+0x30c>
 800f0da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f0dc:	6913      	ldr	r3, [r2, #16]
 800f0de:	689b      	ldr	r3, [r3, #8]
 800f0e0:	4798      	blx	r3
 800f0e2:	9b04      	ldr	r3, [sp, #16]
 800f0e4:	930b      	str	r3, [sp, #44]	; 0x2c
 800f0e6:	b280      	uxth	r0, r0
 800f0e8:	900a      	str	r0, [sp, #40]	; 0x28
 800f0ea:	f10a 0901 	add.w	r9, sl, #1
 800f0ee:	4546      	cmp	r6, r8
 800f0f0:	bf38      	it	cc
 800f0f2:	46b0      	movcc	r8, r6
 800f0f4:	ebc8 0606 	rsb	r6, r8, r6
 800f0f8:	1ca3      	adds	r3, r4, #2
 800f0fa:	b31f      	cbz	r7, 800f144 <_DrawBitmap+0x3ec>
 800f0fc:	f8cd 8018 	str.w	r8, [sp, #24]
 800f100:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f102:	9a06      	ldr	r2, [sp, #24]
 800f104:	4440      	add	r0, r8
 800f106:	900c      	str	r0, [sp, #48]	; 0x30
 800f108:	1a81      	subs	r1, r0, r2
 800f10a:	07e8      	lsls	r0, r5, #31
 800f10c:	d50d      	bpl.n	800f12a <_DrawBitmap+0x3d2>
 800f10e:	68ba      	ldr	r2, [r7, #8]
 800f110:	4638      	mov	r0, r7
 800f112:	f8d2 c000 	ldr.w	ip, [r2]
 800f116:	9a05      	ldr	r2, [sp, #20]
 800f118:	9302      	str	r3, [sp, #8]
 800f11a:	47e0      	blx	ip
 800f11c:	9b02      	ldr	r3, [sp, #8]
 800f11e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f120:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 800f124:	4042      	eors	r2, r0
 800f126:	f823 2c02 	strh.w	r2, [r3, #-2]
 800f12a:	9906      	ldr	r1, [sp, #24]
 800f12c:	3901      	subs	r1, #1
 800f12e:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800f132:	f103 0302 	add.w	r3, r3, #2
 800f136:	9106      	str	r1, [sp, #24]
 800f138:	d1e2      	bne.n	800f100 <_DrawBitmap+0x3a8>
 800f13a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f13c:	930b      	str	r3, [sp, #44]	; 0x2c
 800f13e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800f142:	e010      	b.n	800f166 <_DrawBitmap+0x40e>
 800f144:	4642      	mov	r2, r8
 800f146:	07e9      	lsls	r1, r5, #31
 800f148:	d505      	bpl.n	800f156 <_DrawBitmap+0x3fe>
 800f14a:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 800f14e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f150:	4041      	eors	r1, r0
 800f152:	f823 1c02 	strh.w	r1, [r3, #-2]
 800f156:	3a01      	subs	r2, #1
 800f158:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800f15c:	f103 0302 	add.w	r3, r3, #2
 800f160:	d1f1      	bne.n	800f146 <_DrawBitmap+0x3ee>
 800f162:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800f166:	b146      	cbz	r6, 800f17a <_DrawBitmap+0x422>
 800f168:	f899 3000 	ldrb.w	r3, [r9]
 800f16c:	4a37      	ldr	r2, [pc, #220]	; (800f24c <_DrawBitmap+0x4f4>)
 800f16e:	f109 0901 	add.w	r9, r9, #1
 800f172:	5cd5      	ldrb	r5, [r2, r3]
 800f174:	f04f 0808 	mov.w	r8, #8
 800f178:	e7b9      	b.n	800f0ee <_DrawBitmap+0x396>
 800f17a:	a810      	add	r0, sp, #64	; 0x40
 800f17c:	f7fd f9b2 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800f180:	e16b      	b.n	800f45a <_DrawBitmap+0x702>
 800f182:	4b33      	ldr	r3, [pc, #204]	; (800f250 <_DrawBitmap+0x4f8>)
 800f184:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800f186:	681b      	ldr	r3, [r3, #0]
 800f188:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f18a:	7c1b      	ldrb	r3, [r3, #16]
 800f18c:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 800f190:	f1c6 0504 	rsb	r5, r6, #4
 800f194:	f89a 6000 	ldrb.w	r6, [sl]
 800f198:	f003 0303 	and.w	r3, r3, #3
 800f19c:	40be      	lsls	r6, r7
 800f19e:	2b01      	cmp	r3, #1
 800f1a0:	b2ed      	uxtb	r5, r5
 800f1a2:	b2f6      	uxtb	r6, r6
 800f1a4:	d06a      	beq.n	800f27c <_DrawBitmap+0x524>
 800f1a6:	d308      	bcc.n	800f1ba <_DrawBitmap+0x462>
 800f1a8:	2b02      	cmp	r3, #2
 800f1aa:	f040 8156 	bne.w	800f45a <_DrawBitmap+0x702>
 800f1ae:	f8cd a018 	str.w	sl, [sp, #24]
 800f1b2:	465f      	mov	r7, fp
 800f1b4:	f8dd c010 	ldr.w	ip, [sp, #16]
 800f1b8:	e03e      	b.n	800f238 <_DrawBitmap+0x4e0>
 800f1ba:	4652      	mov	r2, sl
 800f1bc:	465b      	mov	r3, fp
 800f1be:	429d      	cmp	r5, r3
 800f1c0:	bfc8      	it	gt
 800f1c2:	b2dd      	uxtbgt	r5, r3
 800f1c4:	1b5b      	subs	r3, r3, r5
 800f1c6:	4629      	mov	r1, r5
 800f1c8:	4620      	mov	r0, r4
 800f1ca:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800f1ce:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800f1d0:	3901      	subs	r1, #1
 800f1d2:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 800f1d6:	f820 cb02 	strh.w	ip, [r0], #2
 800f1da:	00b6      	lsls	r6, r6, #2
 800f1dc:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800f1e0:	b2f6      	uxtb	r6, r6
 800f1e2:	d1f2      	bne.n	800f1ca <_DrawBitmap+0x472>
 800f1e4:	3d01      	subs	r5, #1
 800f1e6:	b2ed      	uxtb	r5, r5
 800f1e8:	3501      	adds	r5, #1
 800f1ea:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f1ee:	2b00      	cmp	r3, #0
 800f1f0:	f000 8133 	beq.w	800f45a <_DrawBitmap+0x702>
 800f1f4:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800f1f8:	2504      	movs	r5, #4
 800f1fa:	e7e0      	b.n	800f1be <_DrawBitmap+0x466>
 800f1fc:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800f200:	eb08 010c 	add.w	r1, r8, ip
 800f204:	d126      	bne.n	800f254 <_DrawBitmap+0x4fc>
 800f206:	f108 0801 	add.w	r8, r8, #1
 800f20a:	fa5f f388 	uxtb.w	r3, r8
 800f20e:	00b6      	lsls	r6, r6, #2
 800f210:	429d      	cmp	r5, r3
 800f212:	b2f6      	uxtb	r6, r6
 800f214:	d1f2      	bne.n	800f1fc <_DrawBitmap+0x4a4>
 800f216:	3d01      	subs	r5, #1
 800f218:	b2ed      	uxtb	r5, r5
 800f21a:	1c6b      	adds	r3, r5, #1
 800f21c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f220:	f10c 0301 	add.w	r3, ip, #1
 800f224:	eb03 0c05 	add.w	ip, r3, r5
 800f228:	2f00      	cmp	r7, #0
 800f22a:	f000 8116 	beq.w	800f45a <_DrawBitmap+0x702>
 800f22e:	9b06      	ldr	r3, [sp, #24]
 800f230:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800f234:	9306      	str	r3, [sp, #24]
 800f236:	2504      	movs	r5, #4
 800f238:	42bd      	cmp	r5, r7
 800f23a:	bfc8      	it	gt
 800f23c:	b2fd      	uxtbgt	r5, r7
 800f23e:	1b7f      	subs	r7, r7, r5
 800f240:	f04f 0800 	mov.w	r8, #0
 800f244:	e7da      	b.n	800f1fc <_DrawBitmap+0x4a4>
 800f246:	bf00      	nop
 800f248:	08013de8 	.word	0x08013de8
 800f24c:	08013c04 	.word	0x08013c04
 800f250:	200000c0 	.word	0x200000c0
 800f254:	09b3      	lsrs	r3, r6, #6
 800f256:	9821      	ldr	r0, [sp, #132]	; 0x84
 800f258:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f25c:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 800f260:	f1b9 0f00 	cmp.w	r9, #0
 800f264:	d0cf      	beq.n	800f206 <_DrawBitmap+0x4ae>
 800f266:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800f26a:	9a05      	ldr	r2, [sp, #20]
 800f26c:	681b      	ldr	r3, [r3, #0]
 800f26e:	f8cd c008 	str.w	ip, [sp, #8]
 800f272:	4648      	mov	r0, r9
 800f274:	4798      	blx	r3
 800f276:	f8dd c008 	ldr.w	ip, [sp, #8]
 800f27a:	e7c4      	b.n	800f206 <_DrawBitmap+0x4ae>
 800f27c:	4651      	mov	r1, sl
 800f27e:	465b      	mov	r3, fp
 800f280:	429d      	cmp	r5, r3
 800f282:	bfc8      	it	gt
 800f284:	b2dd      	uxtbgt	r5, r3
 800f286:	1b5b      	subs	r3, r3, r5
 800f288:	1ca2      	adds	r2, r4, #2
 800f28a:	4628      	mov	r0, r5
 800f28c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800f290:	d005      	beq.n	800f29e <_DrawBitmap+0x546>
 800f292:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 800f296:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800f29a:	f822 7c02 	strh.w	r7, [r2, #-2]
 800f29e:	3801      	subs	r0, #1
 800f2a0:	00b6      	lsls	r6, r6, #2
 800f2a2:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 800f2a6:	b2f6      	uxtb	r6, r6
 800f2a8:	f102 0202 	add.w	r2, r2, #2
 800f2ac:	d1ee      	bne.n	800f28c <_DrawBitmap+0x534>
 800f2ae:	3d01      	subs	r5, #1
 800f2b0:	b2ed      	uxtb	r5, r5
 800f2b2:	3501      	adds	r5, #1
 800f2b4:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f2b8:	2b00      	cmp	r3, #0
 800f2ba:	f000 80ce 	beq.w	800f45a <_DrawBitmap+0x702>
 800f2be:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800f2c2:	2504      	movs	r5, #4
 800f2c4:	e7dc      	b.n	800f280 <_DrawBitmap+0x528>
 800f2c6:	4a6e      	ldr	r2, [pc, #440]	; (800f480 <_DrawBitmap+0x728>)
 800f2c8:	f89a 3000 	ldrb.w	r3, [sl]
 800f2cc:	6812      	ldr	r2, [r2, #0]
 800f2ce:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f2d0:	7c12      	ldrb	r2, [r2, #16]
 800f2d2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f2d4:	f002 0203 	and.w	r2, r2, #3
 800f2d8:	40bb      	lsls	r3, r7
 800f2da:	2a01      	cmp	r2, #1
 800f2dc:	b2dd      	uxtb	r5, r3
 800f2de:	f000 8095 	beq.w	800f40c <_DrawBitmap+0x6b4>
 800f2e2:	d302      	bcc.n	800f2ea <_DrawBitmap+0x592>
 800f2e4:	2a02      	cmp	r2, #2
 800f2e6:	d036      	beq.n	800f356 <_DrawBitmap+0x5fe>
 800f2e8:	e0b7      	b.n	800f45a <_DrawBitmap+0x702>
 800f2ea:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800f2ec:	b166      	cbz	r6, 800f308 <_DrawBitmap+0x5b0>
 800f2ee:	092d      	lsrs	r5, r5, #4
 800f2f0:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800f2f2:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800f2f6:	8023      	strh	r3, [r4, #0]
 800f2f8:	f10a 0201 	add.w	r2, sl, #1
 800f2fc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800f2fe:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800f302:	f10b 33ff 	add.w	r3, fp, #4294967295
 800f306:	e001      	b.n	800f30c <_DrawBitmap+0x5b4>
 800f308:	465b      	mov	r3, fp
 800f30a:	4652      	mov	r2, sl
 800f30c:	2b01      	cmp	r3, #1
 800f30e:	dd19      	ble.n	800f344 <_DrawBitmap+0x5ec>
 800f310:	1058      	asrs	r0, r3, #1
 800f312:	1d21      	adds	r1, r4, #4
 800f314:	f003 0301 	and.w	r3, r3, #1
 800f318:	eb02 0c00 	add.w	ip, r2, r0
 800f31c:	092f      	lsrs	r7, r5, #4
 800f31e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800f320:	f005 050f 	and.w	r5, r5, #15
 800f324:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 800f328:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 800f32c:	f821 7c04 	strh.w	r7, [r1, #-4]
 800f330:	f821 5c02 	strh.w	r5, [r1, #-2]
 800f334:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800f338:	4562      	cmp	r2, ip
 800f33a:	f101 0104 	add.w	r1, r1, #4
 800f33e:	d1ed      	bne.n	800f31c <_DrawBitmap+0x5c4>
 800f340:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800f344:	2b00      	cmp	r3, #0
 800f346:	f000 8088 	beq.w	800f45a <_DrawBitmap+0x702>
 800f34a:	092d      	lsrs	r5, r5, #4
 800f34c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800f34e:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800f352:	8023      	strh	r3, [r4, #0]
 800f354:	e081      	b.n	800f45a <_DrawBitmap+0x702>
 800f356:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800f358:	b1c7      	cbz	r7, 800f38c <_DrawBitmap+0x634>
 800f35a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800f35e:	d00b      	beq.n	800f378 <_DrawBitmap+0x620>
 800f360:	092d      	lsrs	r5, r5, #4
 800f362:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800f364:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800f368:	8023      	strh	r3, [r4, #0]
 800f36a:	b12e      	cbz	r6, 800f378 <_DrawBitmap+0x620>
 800f36c:	68b3      	ldr	r3, [r6, #8]
 800f36e:	9904      	ldr	r1, [sp, #16]
 800f370:	681b      	ldr	r3, [r3, #0]
 800f372:	9a05      	ldr	r2, [sp, #20]
 800f374:	4630      	mov	r0, r6
 800f376:	4798      	blx	r3
 800f378:	9804      	ldr	r0, [sp, #16]
 800f37a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800f37c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800f380:	1c47      	adds	r7, r0, #1
 800f382:	f10b 39ff 	add.w	r9, fp, #4294967295
 800f386:	f10a 0801 	add.w	r8, sl, #1
 800f38a:	e00f      	b.n	800f3ac <_DrawBitmap+0x654>
 800f38c:	46d9      	mov	r9, fp
 800f38e:	46d0      	mov	r8, sl
 800f390:	9f04      	ldr	r7, [sp, #16]
 800f392:	e00b      	b.n	800f3ac <_DrawBitmap+0x654>
 800f394:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800f398:	d10c      	bne.n	800f3b4 <_DrawBitmap+0x65c>
 800f39a:	f015 050f 	ands.w	r5, r5, #15
 800f39e:	d117      	bne.n	800f3d0 <_DrawBitmap+0x678>
 800f3a0:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800f3a4:	3404      	adds	r4, #4
 800f3a6:	3702      	adds	r7, #2
 800f3a8:	f1a9 0902 	sub.w	r9, r9, #2
 800f3ac:	f1b9 0f01 	cmp.w	r9, #1
 800f3b0:	dcf0      	bgt.n	800f394 <_DrawBitmap+0x63c>
 800f3b2:	e01a      	b.n	800f3ea <_DrawBitmap+0x692>
 800f3b4:	092b      	lsrs	r3, r5, #4
 800f3b6:	9921      	ldr	r1, [sp, #132]	; 0x84
 800f3b8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800f3bc:	8023      	strh	r3, [r4, #0]
 800f3be:	2e00      	cmp	r6, #0
 800f3c0:	d0eb      	beq.n	800f39a <_DrawBitmap+0x642>
 800f3c2:	68b3      	ldr	r3, [r6, #8]
 800f3c4:	9a05      	ldr	r2, [sp, #20]
 800f3c6:	681b      	ldr	r3, [r3, #0]
 800f3c8:	4630      	mov	r0, r6
 800f3ca:	4639      	mov	r1, r7
 800f3cc:	4798      	blx	r3
 800f3ce:	e7e4      	b.n	800f39a <_DrawBitmap+0x642>
 800f3d0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f3d2:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 800f3d6:	8063      	strh	r3, [r4, #2]
 800f3d8:	2e00      	cmp	r6, #0
 800f3da:	d0e1      	beq.n	800f3a0 <_DrawBitmap+0x648>
 800f3dc:	68b3      	ldr	r3, [r6, #8]
 800f3de:	9a05      	ldr	r2, [sp, #20]
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	4630      	mov	r0, r6
 800f3e4:	1c79      	adds	r1, r7, #1
 800f3e6:	4798      	blx	r3
 800f3e8:	e7da      	b.n	800f3a0 <_DrawBitmap+0x648>
 800f3ea:	f1b9 0f00 	cmp.w	r9, #0
 800f3ee:	d034      	beq.n	800f45a <_DrawBitmap+0x702>
 800f3f0:	092d      	lsrs	r5, r5, #4
 800f3f2:	d032      	beq.n	800f45a <_DrawBitmap+0x702>
 800f3f4:	9821      	ldr	r0, [sp, #132]	; 0x84
 800f3f6:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 800f3fa:	8023      	strh	r3, [r4, #0]
 800f3fc:	b36e      	cbz	r6, 800f45a <_DrawBitmap+0x702>
 800f3fe:	68b3      	ldr	r3, [r6, #8]
 800f400:	9a05      	ldr	r2, [sp, #20]
 800f402:	681b      	ldr	r3, [r3, #0]
 800f404:	4630      	mov	r0, r6
 800f406:	4639      	mov	r1, r7
 800f408:	4798      	blx	r3
 800f40a:	e026      	b.n	800f45a <_DrawBitmap+0x702>
 800f40c:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800f40e:	f1c6 0302 	rsb	r3, r6, #2
 800f412:	b2db      	uxtb	r3, r3
 800f414:	4650      	mov	r0, sl
 800f416:	465a      	mov	r2, fp
 800f418:	4293      	cmp	r3, r2
 800f41a:	bfc8      	it	gt
 800f41c:	b2d3      	uxtbgt	r3, r2
 800f41e:	1ad2      	subs	r2, r2, r3
 800f420:	1ca1      	adds	r1, r4, #2
 800f422:	461e      	mov	r6, r3
 800f424:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800f428:	d005      	beq.n	800f436 <_DrawBitmap+0x6de>
 800f42a:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 800f42e:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800f432:	f821 7c02 	strh.w	r7, [r1, #-2]
 800f436:	3e01      	subs	r6, #1
 800f438:	012d      	lsls	r5, r5, #4
 800f43a:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 800f43e:	b2ed      	uxtb	r5, r5
 800f440:	f101 0102 	add.w	r1, r1, #2
 800f444:	d1ee      	bne.n	800f424 <_DrawBitmap+0x6cc>
 800f446:	3b01      	subs	r3, #1
 800f448:	b2db      	uxtb	r3, r3
 800f44a:	3301      	adds	r3, #1
 800f44c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f450:	b11a      	cbz	r2, 800f45a <_DrawBitmap+0x702>
 800f452:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800f456:	2302      	movs	r3, #2
 800f458:	e7de      	b.n	800f418 <_DrawBitmap+0x6c0>
 800f45a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800f45c:	9b05      	ldr	r3, [sp, #20]
 800f45e:	9e08      	ldr	r6, [sp, #32]
 800f460:	44ba      	add	sl, r7
 800f462:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f464:	3301      	adds	r3, #1
 800f466:	4437      	add	r7, r6
 800f468:	9305      	str	r3, [sp, #20]
 800f46a:	9709      	str	r7, [sp, #36]	; 0x24
 800f46c:	e5a3      	b.n	800efb6 <_DrawBitmap+0x25e>
 800f46e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f470:	b113      	cbz	r3, 800f478 <_DrawBitmap+0x720>
 800f472:	a811      	add	r0, sp, #68	; 0x44
 800f474:	f7fd f836 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 800f478:	b013      	add	sp, #76	; 0x4c
 800f47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f47e:	bf00      	nop
 800f480:	200000c0 	.word	0x200000c0

0800f484 <_GetDevProp>:
 800f484:	2908      	cmp	r1, #8
 800f486:	b508      	push	{r3, lr}
 800f488:	d008      	beq.n	800f49c <_GetDevProp+0x18>
 800f48a:	6800      	ldr	r0, [r0, #0]
 800f48c:	b118      	cbz	r0, 800f496 <_GetDevProp+0x12>
 800f48e:	68c3      	ldr	r3, [r0, #12]
 800f490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f492:	4798      	blx	r3
 800f494:	bd08      	pop	{r3, pc}
 800f496:	f04f 30ff 	mov.w	r0, #4294967295
 800f49a:	bd08      	pop	{r3, pc}
 800f49c:	2010      	movs	r0, #16
 800f49e:	bd08      	pop	{r3, pc}

0800f4a0 <LCD_SelectLCD>:
 800f4a0:	b510      	push	{r4, lr}
 800f4a2:	4b0d      	ldr	r3, [pc, #52]	; (800f4d8 <LCD_SelectLCD+0x38>)
 800f4a4:	681a      	ldr	r2, [r3, #0]
 800f4a6:	7c51      	ldrb	r1, [r2, #17]
 800f4a8:	4a0c      	ldr	r2, [pc, #48]	; (800f4dc <LCD_SelectLCD+0x3c>)
 800f4aa:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800f4ae:	461c      	mov	r4, r3
 800f4b0:	b140      	cbz	r0, 800f4c4 <LCD_SelectLCD+0x24>
 800f4b2:	68c3      	ldr	r3, [r0, #12]
 800f4b4:	b113      	cbz	r3, 800f4bc <LCD_SelectLCD+0x1c>
 800f4b6:	681b      	ldr	r3, [r3, #0]
 800f4b8:	2b04      	cmp	r3, #4
 800f4ba:	d001      	beq.n	800f4c0 <LCD_SelectLCD+0x20>
 800f4bc:	6800      	ldr	r0, [r0, #0]
 800f4be:	e7f7      	b.n	800f4b0 <LCD_SelectLCD+0x10>
 800f4c0:	f7fc f870 	bl	800b5a4 <GUI_DEVICE_Unlink>
 800f4c4:	6823      	ldr	r3, [r4, #0]
 800f4c6:	2200      	movs	r2, #0
 800f4c8:	661a      	str	r2, [r3, #96]	; 0x60
 800f4ca:	f103 0208 	add.w	r2, r3, #8
 800f4ce:	615a      	str	r2, [r3, #20]
 800f4d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f4d4:	f7fa ba84 	b.w	80099e0 <LCD_SetClipRectMax>
 800f4d8:	200000c0 	.word	0x200000c0
 800f4dc:	20002d34 	.word	0x20002d34

0800f4e0 <LCD_ReadRectEx>:
 800f4e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4e4:	b087      	sub	sp, #28
 800f4e6:	4617      	mov	r7, r2
 800f4e8:	9304      	str	r3, [sp, #16]
 800f4ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f4ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800f4ee:	68da      	ldr	r2, [r3, #12]
 800f4f0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800f4f2:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800f4f6:	4606      	mov	r6, r0
 800f4f8:	460d      	mov	r5, r1
 800f4fa:	b973      	cbnz	r3, 800f51a <LCD_ReadRectEx+0x3a>
 800f4fc:	4b71      	ldr	r3, [pc, #452]	; (800f6c4 <LCD_ReadRectEx+0x1e4>)
 800f4fe:	681b      	ldr	r3, [r3, #0]
 800f500:	7c58      	ldrb	r0, [r3, #17]
 800f502:	f7f9 ff1f 	bl	8009344 <GUI_GetBitsPerPixelEx>
 800f506:	2808      	cmp	r0, #8
 800f508:	4682      	mov	sl, r0
 800f50a:	dd15      	ble.n	800f538 <LCD_ReadRectEx+0x58>
 800f50c:	2810      	cmp	r0, #16
 800f50e:	bfcc      	ite	gt
 800f510:	f04f 0904 	movgt.w	r9, #4
 800f514:	f04f 0902 	movle.w	r9, #2
 800f518:	e010      	b.n	800f53c <LCD_ReadRectEx+0x5c>
 800f51a:	a811      	add	r0, sp, #68	; 0x44
 800f51c:	2101      	movs	r1, #1
 800f51e:	4798      	blx	r3
 800f520:	4684      	mov	ip, r0
 800f522:	2800      	cmp	r0, #0
 800f524:	d0ea      	beq.n	800f4fc <LCD_ReadRectEx+0x1c>
 800f526:	9b04      	ldr	r3, [sp, #16]
 800f528:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f52a:	e88d 0018 	stmia.w	sp, {r3, r4}
 800f52e:	4631      	mov	r1, r6
 800f530:	462a      	mov	r2, r5
 800f532:	463b      	mov	r3, r7
 800f534:	47e0      	blx	ip
 800f536:	e0c1      	b.n	800f6bc <LCD_ReadRectEx+0x1dc>
 800f538:	f04f 0901 	mov.w	r9, #1
 800f53c:	f04f 0b00 	mov.w	fp, #0
 800f540:	9b04      	ldr	r3, [sp, #16]
 800f542:	429d      	cmp	r5, r3
 800f544:	f300 80ba 	bgt.w	800f6bc <LCD_ReadRectEx+0x1dc>
 800f548:	f1b9 0f02 	cmp.w	r9, #2
 800f54c:	d009      	beq.n	800f562 <LCD_ReadRectEx+0x82>
 800f54e:	f1b9 0f04 	cmp.w	r9, #4
 800f552:	d004      	beq.n	800f55e <LCD_ReadRectEx+0x7e>
 800f554:	f1b9 0f01 	cmp.w	r9, #1
 800f558:	f040 80ae 	bne.w	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f55c:	e003      	b.n	800f566 <LCD_ReadRectEx+0x86>
 800f55e:	46b4      	mov	ip, r6
 800f560:	e09b      	b.n	800f69a <LCD_ReadRectEx+0x1ba>
 800f562:	46b4      	mov	ip, r6
 800f564:	e08a      	b.n	800f67c <LCD_ReadRectEx+0x19c>
 800f566:	f10a 32ff 	add.w	r2, sl, #4294967295
 800f56a:	2a07      	cmp	r2, #7
 800f56c:	f200 80a4 	bhi.w	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f570:	e8df f002 	tbb	[pc, r2]
 800f574:	0606080a 	.word	0x0606080a
 800f578:	04040404 	.word	0x04040404
 800f57c:	46b4      	mov	ip, r6
 800f57e:	e066      	b.n	800f64e <LCD_ReadRectEx+0x16e>
 800f580:	46b4      	mov	ip, r6
 800f582:	e047      	b.n	800f614 <LCD_ReadRectEx+0x134>
 800f584:	46b4      	mov	ip, r6
 800f586:	e022      	b.n	800f5ce <LCD_ReadRectEx+0xee>
 800f588:	46b4      	mov	ip, r6
 800f58a:	45bc      	cmp	ip, r7
 800f58c:	f300 8094 	bgt.w	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f590:	4661      	mov	r1, ip
 800f592:	462a      	mov	r2, r5
 800f594:	f8cd c00c 	str.w	ip, [sp, #12]
 800f598:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f59a:	47c0      	blx	r8
 800f59c:	f1cb 0207 	rsb	r2, fp, #7
 800f5a0:	fa00 f202 	lsl.w	r2, r0, r2
 800f5a4:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800f5a8:	7820      	ldrb	r0, [r4, #0]
 800f5aa:	fa41 f10b 	asr.w	r1, r1, fp
 800f5ae:	4001      	ands	r1, r0
 800f5b0:	430a      	orrs	r2, r1
 800f5b2:	7022      	strb	r2, [r4, #0]
 800f5b4:	f10b 0301 	add.w	r3, fp, #1
 800f5b8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f5bc:	f023 0207 	bic.w	r2, r3, #7
 800f5c0:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800f5c4:	fa43 fb02 	asr.w	fp, r3, r2
 800f5c8:	f10c 0c01 	add.w	ip, ip, #1
 800f5cc:	e7dd      	b.n	800f58a <LCD_ReadRectEx+0xaa>
 800f5ce:	45bc      	cmp	ip, r7
 800f5d0:	dc72      	bgt.n	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f5d2:	4661      	mov	r1, ip
 800f5d4:	462a      	mov	r2, r5
 800f5d6:	f8cd c00c 	str.w	ip, [sp, #12]
 800f5da:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f5dc:	47c0      	blx	r8
 800f5de:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800f5e2:	f1c2 0106 	rsb	r1, r2, #6
 800f5e6:	fa00 f101 	lsl.w	r1, r0, r1
 800f5ea:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800f5ee:	fa40 f202 	asr.w	r2, r0, r2
 800f5f2:	7820      	ldrb	r0, [r4, #0]
 800f5f4:	4002      	ands	r2, r0
 800f5f6:	4311      	orrs	r1, r2
 800f5f8:	7021      	strb	r1, [r4, #0]
 800f5fa:	f10b 0301 	add.w	r3, fp, #1
 800f5fe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f602:	f023 0203 	bic.w	r2, r3, #3
 800f606:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800f60a:	fa43 fb02 	asr.w	fp, r3, r2
 800f60e:	f10c 0c01 	add.w	ip, ip, #1
 800f612:	e7dc      	b.n	800f5ce <LCD_ReadRectEx+0xee>
 800f614:	45bc      	cmp	ip, r7
 800f616:	dc4f      	bgt.n	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f618:	4661      	mov	r1, ip
 800f61a:	462a      	mov	r2, r5
 800f61c:	f8cd c00c 	str.w	ip, [sp, #12]
 800f620:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f622:	47c0      	blx	r8
 800f624:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800f628:	f1c2 0104 	rsb	r1, r2, #4
 800f62c:	fa00 f101 	lsl.w	r1, r0, r1
 800f630:	200f      	movs	r0, #15
 800f632:	fa00 f202 	lsl.w	r2, r0, r2
 800f636:	7820      	ldrb	r0, [r4, #0]
 800f638:	4002      	ands	r2, r0
 800f63a:	4311      	orrs	r1, r2
 800f63c:	7021      	strb	r1, [r4, #0]
 800f63e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f642:	445c      	add	r4, fp
 800f644:	f10c 0c01 	add.w	ip, ip, #1
 800f648:	f08b 0b01 	eor.w	fp, fp, #1
 800f64c:	e7e2      	b.n	800f614 <LCD_ReadRectEx+0x134>
 800f64e:	4273      	negs	r3, r6
 800f650:	1ba2      	subs	r2, r4, r6
 800f652:	45bc      	cmp	ip, r7
 800f654:	9305      	str	r3, [sp, #20]
 800f656:	4462      	add	r2, ip
 800f658:	dc0e      	bgt.n	800f678 <LCD_ReadRectEx+0x198>
 800f65a:	4661      	mov	r1, ip
 800f65c:	462a      	mov	r2, r5
 800f65e:	f8cd c00c 	str.w	ip, [sp, #12]
 800f662:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f664:	47c0      	blx	r8
 800f666:	9a05      	ldr	r2, [sp, #20]
 800f668:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f66c:	4422      	add	r2, r4
 800f66e:	f802 000c 	strb.w	r0, [r2, ip]
 800f672:	f10c 0c01 	add.w	ip, ip, #1
 800f676:	e7ea      	b.n	800f64e <LCD_ReadRectEx+0x16e>
 800f678:	4614      	mov	r4, r2
 800f67a:	e01d      	b.n	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f67c:	45bc      	cmp	ip, r7
 800f67e:	dc1b      	bgt.n	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f680:	4661      	mov	r1, ip
 800f682:	f8cd c00c 	str.w	ip, [sp, #12]
 800f686:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f688:	462a      	mov	r2, r5
 800f68a:	47c0      	blx	r8
 800f68c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f690:	f824 0b02 	strh.w	r0, [r4], #2
 800f694:	f10c 0c01 	add.w	ip, ip, #1
 800f698:	e7f0      	b.n	800f67c <LCD_ReadRectEx+0x19c>
 800f69a:	45bc      	cmp	ip, r7
 800f69c:	dc0c      	bgt.n	800f6b8 <LCD_ReadRectEx+0x1d8>
 800f69e:	4661      	mov	r1, ip
 800f6a0:	f8cd c00c 	str.w	ip, [sp, #12]
 800f6a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f6a6:	462a      	mov	r2, r5
 800f6a8:	47c0      	blx	r8
 800f6aa:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800f6ae:	f844 0b04 	str.w	r0, [r4], #4
 800f6b2:	f10c 0c01 	add.w	ip, ip, #1
 800f6b6:	e7f0      	b.n	800f69a <LCD_ReadRectEx+0x1ba>
 800f6b8:	3501      	adds	r5, #1
 800f6ba:	e741      	b.n	800f540 <LCD_ReadRectEx+0x60>
 800f6bc:	b007      	add	sp, #28
 800f6be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6c2:	bf00      	nop
 800f6c4:	200000c0 	.word	0x200000c0

0800f6c8 <GUI_ReadRectEx>:
 800f6c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6ca:	4d16      	ldr	r5, [pc, #88]	; (800f724 <GUI_ReadRectEx+0x5c>)
 800f6cc:	9e05      	ldr	r6, [sp, #20]
 800f6ce:	682d      	ldr	r5, [r5, #0]
 800f6d0:	9c06      	ldr	r4, [sp, #24]
 800f6d2:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800f6d6:	42b8      	cmp	r0, r7
 800f6d8:	bfb8      	it	lt
 800f6da:	4638      	movlt	r0, r7
 800f6dc:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800f6e0:	42ba      	cmp	r2, r7
 800f6e2:	bfa8      	it	ge
 800f6e4:	463a      	movge	r2, r7
 800f6e6:	4282      	cmp	r2, r0
 800f6e8:	db1b      	blt.n	800f722 <GUI_ReadRectEx+0x5a>
 800f6ea:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800f6ee:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800f6f2:	42b9      	cmp	r1, r7
 800f6f4:	bfb8      	it	lt
 800f6f6:	4639      	movlt	r1, r7
 800f6f8:	42ab      	cmp	r3, r5
 800f6fa:	bfa8      	it	ge
 800f6fc:	462b      	movge	r3, r5
 800f6fe:	428b      	cmp	r3, r1
 800f700:	db0f      	blt.n	800f722 <GUI_ReadRectEx+0x5a>
 800f702:	68e5      	ldr	r5, [r4, #12]
 800f704:	682d      	ldr	r5, [r5, #0]
 800f706:	f035 0704 	bics.w	r7, r5, #4
 800f70a:	d105      	bne.n	800f718 <GUI_ReadRectEx+0x50>
 800f70c:	9605      	str	r6, [sp, #20]
 800f70e:	9406      	str	r4, [sp, #24]
 800f710:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f714:	f7ff bee4 	b.w	800f4e0 <LCD_ReadRectEx>
 800f718:	6825      	ldr	r5, [r4, #0]
 800f71a:	2d00      	cmp	r5, #0
 800f71c:	d0f6      	beq.n	800f70c <GUI_ReadRectEx+0x44>
 800f71e:	462c      	mov	r4, r5
 800f720:	e7ef      	b.n	800f702 <GUI_ReadRectEx+0x3a>
 800f722:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f724:	200000c0 	.word	0x200000c0

0800f728 <LCD_GetBkColorIndex>:
 800f728:	4b02      	ldr	r3, [pc, #8]	; (800f734 <LCD_GetBkColorIndex+0xc>)
 800f72a:	681b      	ldr	r3, [r3, #0]
 800f72c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f72e:	6818      	ldr	r0, [r3, #0]
 800f730:	4770      	bx	lr
 800f732:	bf00      	nop
 800f734:	200000c0 	.word	0x200000c0

0800f738 <LCD_GetColorIndex>:
 800f738:	4b02      	ldr	r3, [pc, #8]	; (800f744 <LCD_GetColorIndex+0xc>)
 800f73a:	681b      	ldr	r3, [r3, #0]
 800f73c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f73e:	6818      	ldr	r0, [r3, #0]
 800f740:	4770      	bx	lr
 800f742:	bf00      	nop
 800f744:	200000c0 	.word	0x200000c0

0800f748 <_OnExit>:
 800f748:	b510      	push	{r4, lr}
 800f74a:	4c04      	ldr	r4, [pc, #16]	; (800f75c <_OnExit+0x14>)
 800f74c:	6820      	ldr	r0, [r4, #0]
 800f74e:	f7fc fea7 	bl	800c4a0 <GUI_ALLOC_FreeFixedBlock>
 800f752:	4a03      	ldr	r2, [pc, #12]	; (800f760 <_OnExit+0x18>)
 800f754:	2300      	movs	r3, #0
 800f756:	6023      	str	r3, [r4, #0]
 800f758:	6013      	str	r3, [r2, #0]
 800f75a:	bd10      	pop	{r4, pc}
 800f75c:	20002e34 	.word	0x20002e34
 800f760:	20002c50 	.word	0x20002c50

0800f764 <LCD_InitColors>:
 800f764:	b538      	push	{r3, r4, r5, lr}
 800f766:	4d09      	ldr	r5, [pc, #36]	; (800f78c <LCD_InitColors+0x28>)
 800f768:	682c      	ldr	r4, [r5, #0]
 800f76a:	b95c      	cbnz	r4, 800f784 <LCD_InitColors+0x20>
 800f76c:	4b08      	ldr	r3, [pc, #32]	; (800f790 <LCD_InitColors+0x2c>)
 800f76e:	6818      	ldr	r0, [r3, #0]
 800f770:	0080      	lsls	r0, r0, #2
 800f772:	f7fc ff79 	bl	800c668 <GUI_ALLOC_GetFixedBlock>
 800f776:	6028      	str	r0, [r5, #0]
 800f778:	b130      	cbz	r0, 800f788 <LCD_InitColors+0x24>
 800f77a:	4806      	ldr	r0, [pc, #24]	; (800f794 <LCD_InitColors+0x30>)
 800f77c:	4b06      	ldr	r3, [pc, #24]	; (800f798 <LCD_InitColors+0x34>)
 800f77e:	6003      	str	r3, [r0, #0]
 800f780:	f7fc f832 	bl	800b7e8 <GUI__RegisterExit>
 800f784:	2000      	movs	r0, #0
 800f786:	bd38      	pop	{r3, r4, r5, pc}
 800f788:	2001      	movs	r0, #1
 800f78a:	bd38      	pop	{r3, r4, r5, pc}
 800f78c:	20002e34 	.word	0x20002e34
 800f790:	2000018c 	.word	0x2000018c
 800f794:	20002c54 	.word	0x20002c54
 800f798:	0800f749 	.word	0x0800f749

0800f79c <LCD_InitLUT>:
 800f79c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f7a0:	f001 fa5b 	bl	8010c5a <LCD_GetNumLayers>
 800f7a4:	2400      	movs	r4, #0
 800f7a6:	4680      	mov	r8, r0
 800f7a8:	4544      	cmp	r4, r8
 800f7aa:	da2c      	bge.n	800f806 <LCD_InitLUT+0x6a>
 800f7ac:	4620      	mov	r0, r4
 800f7ae:	f7fb fec1 	bl	800b534 <GUI_DEVICE__GetpDriver>
 800f7b2:	b330      	cbz	r0, 800f802 <LCD_InitLUT+0x66>
 800f7b4:	4e15      	ldr	r6, [pc, #84]	; (800f80c <LCD_InitLUT+0x70>)
 800f7b6:	6833      	ldr	r3, [r6, #0]
 800f7b8:	4620      	mov	r0, r4
 800f7ba:	f893 9011 	ldrb.w	r9, [r3, #17]
 800f7be:	745c      	strb	r4, [r3, #17]
 800f7c0:	f7f9 fda2 	bl	8009308 <LCD_GetBitsPerPixelEx>
 800f7c4:	2808      	cmp	r0, #8
 800f7c6:	dd03      	ble.n	800f7d0 <LCD_InitLUT+0x34>
 800f7c8:	6833      	ldr	r3, [r6, #0]
 800f7ca:	f883 9011 	strb.w	r9, [r3, #17]
 800f7ce:	e018      	b.n	800f802 <LCD_InitLUT+0x66>
 800f7d0:	4b0f      	ldr	r3, [pc, #60]	; (800f810 <LCD_InitLUT+0x74>)
 800f7d2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800f7d6:	691a      	ldr	r2, [r3, #16]
 800f7d8:	4b0e      	ldr	r3, [pc, #56]	; (800f814 <LCD_InitLUT+0x78>)
 800f7da:	429a      	cmp	r2, r3
 800f7dc:	d0f4      	beq.n	800f7c8 <LCD_InitLUT+0x2c>
 800f7de:	4620      	mov	r0, r4
 800f7e0:	f7f9 fd95 	bl	800930e <LCD_GetNumColorsEx>
 800f7e4:	2500      	movs	r5, #0
 800f7e6:	4682      	mov	sl, r0
 800f7e8:	4555      	cmp	r5, sl
 800f7ea:	daed      	bge.n	800f7c8 <LCD_InitLUT+0x2c>
 800f7ec:	b2ef      	uxtb	r7, r5
 800f7ee:	4638      	mov	r0, r7
 800f7f0:	f7fa f96a 	bl	8009ac8 <LCD_Index2Color>
 800f7f4:	4639      	mov	r1, r7
 800f7f6:	4602      	mov	r2, r0
 800f7f8:	4620      	mov	r0, r4
 800f7fa:	f7f9 fd41 	bl	8009280 <LCD_SetLUTEntryEx>
 800f7fe:	3501      	adds	r5, #1
 800f800:	e7f2      	b.n	800f7e8 <LCD_InitLUT+0x4c>
 800f802:	3401      	adds	r4, #1
 800f804:	e7d0      	b.n	800f7a8 <LCD_InitLUT+0xc>
 800f806:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f80a:	bf00      	nop
 800f80c:	200000c0 	.word	0x200000c0
 800f810:	20002d34 	.word	0x20002d34
 800f814:	080148d0 	.word	0x080148d0

0800f818 <LCD_AA_SetAndMask>:
 800f818:	4b02      	ldr	r3, [pc, #8]	; (800f824 <LCD_AA_SetAndMask+0xc>)
 800f81a:	681a      	ldr	r2, [r3, #0]
 800f81c:	6018      	str	r0, [r3, #0]
 800f81e:	4610      	mov	r0, r2
 800f820:	4770      	bx	lr
 800f822:	bf00      	nop
 800f824:	20000190 	.word	0x20000190

0800f828 <_GetWordWrap>:
 800f828:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f82c:	2500      	movs	r5, #0
 800f82e:	9001      	str	r0, [sp, #4]
 800f830:	4689      	mov	r9, r1
 800f832:	4690      	mov	r8, r2
 800f834:	46aa      	mov	sl, r5
 800f836:	462e      	mov	r6, r5
 800f838:	462c      	mov	r4, r5
 800f83a:	462f      	mov	r7, r5
 800f83c:	a801      	add	r0, sp, #4
 800f83e:	f7fa fe31 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800f842:	2d00      	cmp	r5, #0
 800f844:	bf08      	it	eq
 800f846:	4605      	moveq	r5, r0
 800f848:	b108      	cbz	r0, 800f84e <_GetWordWrap+0x26>
 800f84a:	280a      	cmp	r0, #10
 800f84c:	d10b      	bne.n	800f866 <_GetWordWrap+0x3e>
 800f84e:	4626      	mov	r6, r4
 800f850:	2e00      	cmp	r6, #0
 800f852:	bf18      	it	ne
 800f854:	4634      	movne	r4, r6
 800f856:	f1b8 0f00 	cmp.w	r8, #0
 800f85a:	d025      	beq.n	800f8a8 <_GetWordWrap+0x80>
 800f85c:	ebca 0707 	rsb	r7, sl, r7
 800f860:	f8c8 7000 	str.w	r7, [r8]
 800f864:	e020      	b.n	800f8a8 <_GetWordWrap+0x80>
 800f866:	2820      	cmp	r0, #32
 800f868:	d01c      	beq.n	800f8a4 <_GetWordWrap+0x7c>
 800f86a:	2d20      	cmp	r5, #32
 800f86c:	d00e      	beq.n	800f88c <_GetWordWrap+0x64>
 800f86e:	4b10      	ldr	r3, [pc, #64]	; (800f8b0 <_GetWordWrap+0x88>)
 800f870:	6819      	ldr	r1, [r3, #0]
 800f872:	4b10      	ldr	r3, [pc, #64]	; (800f8b4 <_GetWordWrap+0x8c>)
 800f874:	681a      	ldr	r2, [r3, #0]
 800f876:	2300      	movs	r3, #0
 800f878:	4293      	cmp	r3, r2
 800f87a:	da09      	bge.n	800f890 <_GetWordWrap+0x68>
 800f87c:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800f880:	4586      	cmp	lr, r0
 800f882:	d101      	bne.n	800f888 <_GetWordWrap+0x60>
 800f884:	1c66      	adds	r6, r4, #1
 800f886:	e003      	b.n	800f890 <_GetWordWrap+0x68>
 800f888:	3301      	adds	r3, #1
 800f88a:	e7f5      	b.n	800f878 <_GetWordWrap+0x50>
 800f88c:	4626      	mov	r6, r4
 800f88e:	2500      	movs	r5, #0
 800f890:	f7fc fd22 	bl	800c2d8 <GUI_GetCharDistX>
 800f894:	4407      	add	r7, r0
 800f896:	454f      	cmp	r7, r9
 800f898:	4682      	mov	sl, r0
 800f89a:	dd01      	ble.n	800f8a0 <_GetWordWrap+0x78>
 800f89c:	2c00      	cmp	r4, #0
 800f89e:	d1d7      	bne.n	800f850 <_GetWordWrap+0x28>
 800f8a0:	3401      	adds	r4, #1
 800f8a2:	e7cb      	b.n	800f83c <_GetWordWrap+0x14>
 800f8a4:	4626      	mov	r6, r4
 800f8a6:	e7f3      	b.n	800f890 <_GetWordWrap+0x68>
 800f8a8:	4620      	mov	r0, r4
 800f8aa:	b002      	add	sp, #8
 800f8ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8b0:	20002c5c 	.word	0x20002c5c
 800f8b4:	20002c60 	.word	0x20002c60

0800f8b8 <_GetCharWrap>:
 800f8b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8ba:	2400      	movs	r4, #0
 800f8bc:	9001      	str	r0, [sp, #4]
 800f8be:	460e      	mov	r6, r1
 800f8c0:	4625      	mov	r5, r4
 800f8c2:	a801      	add	r0, sp, #4
 800f8c4:	f7fa fdee 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800f8c8:	4607      	mov	r7, r0
 800f8ca:	b148      	cbz	r0, 800f8e0 <_GetCharWrap+0x28>
 800f8cc:	f7fc fd04 	bl	800c2d8 <GUI_GetCharDistX>
 800f8d0:	4405      	add	r5, r0
 800f8d2:	b10c      	cbz	r4, 800f8d8 <_GetCharWrap+0x20>
 800f8d4:	42b5      	cmp	r5, r6
 800f8d6:	dc03      	bgt.n	800f8e0 <_GetCharWrap+0x28>
 800f8d8:	2f0a      	cmp	r7, #10
 800f8da:	d001      	beq.n	800f8e0 <_GetCharWrap+0x28>
 800f8dc:	3401      	adds	r4, #1
 800f8de:	e7f0      	b.n	800f8c2 <_GetCharWrap+0xa>
 800f8e0:	4620      	mov	r0, r4
 800f8e2:	b003      	add	sp, #12
 800f8e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f8e8 <_WrapGetNumCharsDisp>:
 800f8e8:	2a01      	cmp	r2, #1
 800f8ea:	b510      	push	{r4, lr}
 800f8ec:	d005      	beq.n	800f8fa <_WrapGetNumCharsDisp+0x12>
 800f8ee:	2a02      	cmp	r2, #2
 800f8f0:	d108      	bne.n	800f904 <_WrapGetNumCharsDisp+0x1c>
 800f8f2:	4b07      	ldr	r3, [pc, #28]	; (800f910 <_WrapGetNumCharsDisp+0x28>)
 800f8f4:	681b      	ldr	r3, [r3, #0]
 800f8f6:	4798      	blx	r3
 800f8f8:	bd10      	pop	{r4, pc}
 800f8fa:	4a06      	ldr	r2, [pc, #24]	; (800f914 <_WrapGetNumCharsDisp+0x2c>)
 800f8fc:	6814      	ldr	r4, [r2, #0]
 800f8fe:	461a      	mov	r2, r3
 800f900:	47a0      	blx	r4
 800f902:	bd10      	pop	{r4, pc}
 800f904:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800f908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f90c:	f7fc bc12 	b.w	800c134 <GUI__GetLineNumChars>
 800f910:	20000194 	.word	0x20000194
 800f914:	20000198 	.word	0x20000198

0800f918 <GUI__WrapGetNumCharsDisp>:
 800f918:	2300      	movs	r3, #0
 800f91a:	f7ff bfe5 	b.w	800f8e8 <_WrapGetNumCharsDisp>

0800f91e <GUI__WrapGetNumCharsToNextLine>:
 800f91e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f920:	b085      	sub	sp, #20
 800f922:	ab03      	add	r3, sp, #12
 800f924:	4617      	mov	r7, r2
 800f926:	460e      	mov	r6, r1
 800f928:	9001      	str	r0, [sp, #4]
 800f92a:	f7ff ffdd 	bl	800f8e8 <_WrapGetNumCharsDisp>
 800f92e:	9d01      	ldr	r5, [sp, #4]
 800f930:	4604      	mov	r4, r0
 800f932:	4621      	mov	r1, r4
 800f934:	4628      	mov	r0, r5
 800f936:	f7fa fdc9 	bl	800a4cc <GUI_UC__NumChars2NumBytes>
 800f93a:	4428      	add	r0, r5
 800f93c:	ad04      	add	r5, sp, #16
 800f93e:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800f942:	4628      	mov	r0, r5
 800f944:	f7fa fdae 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800f948:	280a      	cmp	r0, #10
 800f94a:	d101      	bne.n	800f950 <GUI__WrapGetNumCharsToNextLine+0x32>
 800f94c:	3401      	adds	r4, #1
 800f94e:	e012      	b.n	800f976 <GUI__WrapGetNumCharsToNextLine+0x58>
 800f950:	2f01      	cmp	r7, #1
 800f952:	d110      	bne.n	800f976 <GUI__WrapGetNumCharsToNextLine+0x58>
 800f954:	2820      	cmp	r0, #32
 800f956:	d10e      	bne.n	800f976 <GUI__WrapGetNumCharsToNextLine+0x58>
 800f958:	f7fc fcbe 	bl	800c2d8 <GUI_GetCharDistX>
 800f95c:	4607      	mov	r7, r0
 800f95e:	9b03      	ldr	r3, [sp, #12]
 800f960:	429e      	cmp	r6, r3
 800f962:	db08      	blt.n	800f976 <GUI__WrapGetNumCharsToNextLine+0x58>
 800f964:	443b      	add	r3, r7
 800f966:	4628      	mov	r0, r5
 800f968:	9303      	str	r3, [sp, #12]
 800f96a:	f7fa fd9b 	bl	800a4a4 <GUI_UC__GetCharCodeInc>
 800f96e:	2820      	cmp	r0, #32
 800f970:	f104 0401 	add.w	r4, r4, #1
 800f974:	d0f3      	beq.n	800f95e <GUI__WrapGetNumCharsToNextLine+0x40>
 800f976:	4620      	mov	r0, r4
 800f978:	b005      	add	sp, #20
 800f97a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f97c <GUI__WrapGetNumBytesToNextLine>:
 800f97c:	b510      	push	{r4, lr}
 800f97e:	4604      	mov	r4, r0
 800f980:	f7ff ffcd 	bl	800f91e <GUI__WrapGetNumCharsToNextLine>
 800f984:	4601      	mov	r1, r0
 800f986:	4620      	mov	r0, r4
 800f988:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f98c:	f7fa bd9e 	b.w	800a4cc <GUI_UC__NumChars2NumBytes>

0800f990 <GUI__ExpandPixelIndicesEx>:
 800f990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f994:	1e0c      	subs	r4, r1, #0
 800f996:	4605      	mov	r5, r0
 800f998:	f340 80b3 	ble.w	800fb02 <GUI__ExpandPixelIndicesEx+0x172>
 800f99c:	2a08      	cmp	r2, #8
 800f99e:	685f      	ldr	r7, [r3, #4]
 800f9a0:	dd04      	ble.n	800f9ac <GUI__ExpandPixelIndicesEx+0x1c>
 800f9a2:	2a10      	cmp	r2, #16
 800f9a4:	f340 8098 	ble.w	800fad8 <GUI__ExpandPixelIndicesEx+0x148>
 800f9a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f9ac:	3a01      	subs	r2, #1
 800f9ae:	2a07      	cmp	r2, #7
 800f9b0:	f200 80a7 	bhi.w	800fb02 <GUI__ExpandPixelIndicesEx+0x172>
 800f9b4:	e8df f002 	tbb	[pc, r2]
 800f9b8:	58a52d04 	.word	0x58a52d04
 800f9bc:	83a5a5a5 	.word	0x83a5a5a5
 800f9c0:	1e66      	subs	r6, r4, #1
 800f9c2:	10f2      	asrs	r2, r6, #3
 800f9c4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800f9c8:	3b01      	subs	r3, #1
 800f9ca:	eb05 0802 	add.w	r8, r5, r2
 800f9ce:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800f9d2:	f006 0607 	and.w	r6, r6, #7
 800f9d6:	f815 a002 	ldrb.w	sl, [r5, r2]
 800f9da:	2580      	movs	r5, #128	; 0x80
 800f9dc:	4135      	asrs	r5, r6
 800f9de:	f108 38ff 	add.w	r8, r8, #4294967295
 800f9e2:	b2ed      	uxtb	r5, r5
 800f9e4:	f1c6 0307 	rsb	r3, r6, #7
 800f9e8:	ea0a 0005 	and.w	r0, sl, r5
 800f9ec:	4118      	asrs	r0, r3
 800f9ee:	47b8      	blx	r7
 800f9f0:	f849 0904 	str.w	r0, [r9], #-4
 800f9f4:	b936      	cbnz	r6, 800fa04 <GUI__ExpandPixelIndicesEx+0x74>
 800f9f6:	f898 a000 	ldrb.w	sl, [r8]
 800f9fa:	2501      	movs	r5, #1
 800f9fc:	f108 38ff 	add.w	r8, r8, #4294967295
 800fa00:	2607      	movs	r6, #7
 800fa02:	e002      	b.n	800fa0a <GUI__ExpandPixelIndicesEx+0x7a>
 800fa04:	006d      	lsls	r5, r5, #1
 800fa06:	3e01      	subs	r6, #1
 800fa08:	b2ed      	uxtb	r5, r5
 800fa0a:	3c01      	subs	r4, #1
 800fa0c:	d1ea      	bne.n	800f9e4 <GUI__ExpandPixelIndicesEx+0x54>
 800fa0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fa12:	1e66      	subs	r6, r4, #1
 800fa14:	10b2      	asrs	r2, r6, #2
 800fa16:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800fa1a:	3b01      	subs	r3, #1
 800fa1c:	f006 0603 	and.w	r6, r6, #3
 800fa20:	eb05 0802 	add.w	r8, r5, r2
 800fa24:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800fa28:	f815 a002 	ldrb.w	sl, [r5, r2]
 800fa2c:	0073      	lsls	r3, r6, #1
 800fa2e:	25c0      	movs	r5, #192	; 0xc0
 800fa30:	411d      	asrs	r5, r3
 800fa32:	f108 38ff 	add.w	r8, r8, #4294967295
 800fa36:	b2ed      	uxtb	r5, r5
 800fa38:	0073      	lsls	r3, r6, #1
 800fa3a:	f1c3 0306 	rsb	r3, r3, #6
 800fa3e:	ea0a 0005 	and.w	r0, sl, r5
 800fa42:	4118      	asrs	r0, r3
 800fa44:	47b8      	blx	r7
 800fa46:	f849 0904 	str.w	r0, [r9], #-4
 800fa4a:	b936      	cbnz	r6, 800fa5a <GUI__ExpandPixelIndicesEx+0xca>
 800fa4c:	2503      	movs	r5, #3
 800fa4e:	f898 a000 	ldrb.w	sl, [r8]
 800fa52:	462e      	mov	r6, r5
 800fa54:	f108 38ff 	add.w	r8, r8, #4294967295
 800fa58:	e002      	b.n	800fa60 <GUI__ExpandPixelIndicesEx+0xd0>
 800fa5a:	00ad      	lsls	r5, r5, #2
 800fa5c:	3e01      	subs	r6, #1
 800fa5e:	b2ed      	uxtb	r5, r5
 800fa60:	3c01      	subs	r4, #1
 800fa62:	d1e9      	bne.n	800fa38 <GUI__ExpandPixelIndicesEx+0xa8>
 800fa64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fa68:	1e66      	subs	r6, r4, #1
 800fa6a:	1072      	asrs	r2, r6, #1
 800fa6c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800fa70:	3b01      	subs	r3, #1
 800fa72:	f006 0601 	and.w	r6, r6, #1
 800fa76:	eb05 0802 	add.w	r8, r5, r2
 800fa7a:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800fa7e:	f815 a002 	ldrb.w	sl, [r5, r2]
 800fa82:	00b3      	lsls	r3, r6, #2
 800fa84:	25f0      	movs	r5, #240	; 0xf0
 800fa86:	411d      	asrs	r5, r3
 800fa88:	f108 38ff 	add.w	r8, r8, #4294967295
 800fa8c:	b2ed      	uxtb	r5, r5
 800fa8e:	00b3      	lsls	r3, r6, #2
 800fa90:	f1c3 0304 	rsb	r3, r3, #4
 800fa94:	ea0a 0005 	and.w	r0, sl, r5
 800fa98:	4118      	asrs	r0, r3
 800fa9a:	47b8      	blx	r7
 800fa9c:	f849 0904 	str.w	r0, [r9], #-4
 800faa0:	b936      	cbnz	r6, 800fab0 <GUI__ExpandPixelIndicesEx+0x120>
 800faa2:	f898 a000 	ldrb.w	sl, [r8]
 800faa6:	250f      	movs	r5, #15
 800faa8:	f108 38ff 	add.w	r8, r8, #4294967295
 800faac:	2601      	movs	r6, #1
 800faae:	e002      	b.n	800fab6 <GUI__ExpandPixelIndicesEx+0x126>
 800fab0:	012d      	lsls	r5, r5, #4
 800fab2:	b2ed      	uxtb	r5, r5
 800fab4:	2600      	movs	r6, #0
 800fab6:	3c01      	subs	r4, #1
 800fab8:	d1e9      	bne.n	800fa8e <GUI__ExpandPixelIndicesEx+0xfe>
 800faba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fabe:	192e      	adds	r6, r5, r4
 800fac0:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800fac4:	1b34      	subs	r4, r6, r4
 800fac6:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800faca:	47b8      	blx	r7
 800facc:	42a6      	cmp	r6, r4
 800face:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fad2:	d1f8      	bne.n	800fac6 <GUI__ExpandPixelIndicesEx+0x136>
 800fad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fad8:	695e      	ldr	r6, [r3, #20]
 800fada:	b12e      	cbz	r6, 800fae8 <GUI__ExpandPixelIndicesEx+0x158>
 800fadc:	4629      	mov	r1, r5
 800fade:	4622      	mov	r2, r4
 800fae0:	2302      	movs	r3, #2
 800fae2:	47b0      	blx	r6
 800fae4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fae8:	0064      	lsls	r4, r4, #1
 800faea:	4425      	add	r5, r4
 800faec:	192e      	adds	r6, r5, r4
 800faee:	1b2c      	subs	r4, r5, r4
 800faf0:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800faf4:	47b8      	blx	r7
 800faf6:	42a5      	cmp	r5, r4
 800faf8:	f846 0d04 	str.w	r0, [r6, #-4]!
 800fafc:	d1f8      	bne.n	800faf0 <GUI__ExpandPixelIndicesEx+0x160>
 800fafe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800fb06 <_GetTwinArcPara>:
 800fb06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fb0a:	fb01 f901 	mul.w	r9, r1, r1
 800fb0e:	1e47      	subs	r7, r0, #1
 800fb10:	4604      	mov	r4, r0
 800fb12:	4340      	muls	r0, r0
 800fb14:	ebc9 0000 	rsb	r0, r9, r0
 800fb18:	460d      	mov	r5, r1
 800fb1a:	4692      	mov	sl, r2
 800fb1c:	4698      	mov	r8, r3
 800fb1e:	9e08      	ldr	r6, [sp, #32]
 800fb20:	f7fa f8d7 	bl	8009cd2 <GUI__sqrt32>
 800fb24:	42bd      	cmp	r5, r7
 800fb26:	f8ca 0000 	str.w	r0, [sl]
 800fb2a:	da10      	bge.n	800fb4e <_GetTwinArcPara+0x48>
 800fb2c:	fb07 f007 	mul.w	r0, r7, r7
 800fb30:	ebc9 0000 	rsb	r0, r9, r0
 800fb34:	f7fa f8cd 	bl	8009cd2 <GUI__sqrt32>
 800fb38:	3c02      	subs	r4, #2
 800fb3a:	42a5      	cmp	r5, r4
 800fb3c:	f8c8 0000 	str.w	r0, [r8]
 800fb40:	da03      	bge.n	800fb4a <_GetTwinArcPara+0x44>
 800fb42:	3801      	subs	r0, #1
 800fb44:	6030      	str	r0, [r6, #0]
 800fb46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb4a:	2300      	movs	r3, #0
 800fb4c:	e002      	b.n	800fb54 <_GetTwinArcPara+0x4e>
 800fb4e:	2300      	movs	r3, #0
 800fb50:	f8c8 3000 	str.w	r3, [r8]
 800fb54:	6033      	str	r3, [r6, #0]
 800fb56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800fb5c <GUI__DrawTwinArc2>:
 800fb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb60:	461c      	mov	r4, r3
 800fb62:	4b57      	ldr	r3, [pc, #348]	; (800fcc0 <GUI__DrawTwinArc2+0x164>)
 800fb64:	681b      	ldr	r3, [r3, #0]
 800fb66:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800fb68:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800fb6a:	b08b      	sub	sp, #44	; 0x2c
 800fb6c:	4415      	add	r5, r2
 800fb6e:	1e63      	subs	r3, r4, #1
 800fb70:	19c6      	adds	r6, r0, r7
 800fb72:	442b      	add	r3, r5
 800fb74:	440f      	add	r7, r1
 800fb76:	a808      	add	r0, sp, #32
 800fb78:	f8ad 6020 	strh.w	r6, [sp, #32]
 800fb7c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800fb80:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800fb84:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800fb88:	f7f6 ffba 	bl	8006b00 <WM__InitIVRSearch>
 800fb8c:	2800      	cmp	r0, #0
 800fb8e:	f000 8094 	beq.w	800fcba <GUI__DrawTwinArc2+0x15e>
 800fb92:	2c00      	cmp	r4, #0
 800fb94:	dc02      	bgt.n	800fb9c <GUI__DrawTwinArc2+0x40>
 800fb96:	f7f6 fef1 	bl	800697c <WM__GetNextIVR>
 800fb9a:	e7f7      	b.n	800fb8c <GUI__DrawTwinArc2+0x30>
 800fb9c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fb9e:	f7fc f832 	bl	800bc06 <GUI_SetColor>
 800fba2:	f104 38ff 	add.w	r8, r4, #4294967295
 800fba6:	4641      	mov	r1, r8
 800fba8:	f118 38ff 	adds.w	r8, r8, #4294967295
 800fbac:	d324      	bcc.n	800fbf8 <GUI__DrawTwinArc2+0x9c>
 800fbae:	ab07      	add	r3, sp, #28
 800fbb0:	9300      	str	r3, [sp, #0]
 800fbb2:	4620      	mov	r0, r4
 800fbb4:	aa05      	add	r2, sp, #20
 800fbb6:	ab06      	add	r3, sp, #24
 800fbb8:	f7ff ffa5 	bl	800fb06 <_GetTwinArcPara>
 800fbbc:	f104 39ff 	add.w	r9, r4, #4294967295
 800fbc0:	f8dd a018 	ldr.w	sl, [sp, #24]
 800fbc4:	9905      	ldr	r1, [sp, #20]
 800fbc6:	1930      	adds	r0, r6, r4
 800fbc8:	44a9      	add	r9, r5
 800fbca:	ebc8 0909 	rsb	r9, r8, r9
 800fbce:	ebc4 0b07 	rsb	fp, r4, r7
 800fbd2:	ebca 0200 	rsb	r2, sl, r0
 800fbd6:	eb0b 0301 	add.w	r3, fp, r1
 800fbda:	1a40      	subs	r0, r0, r1
 800fbdc:	3a01      	subs	r2, #1
 800fbde:	4649      	mov	r1, r9
 800fbe0:	9302      	str	r3, [sp, #8]
 800fbe2:	f7f9 fc9d 	bl	8009520 <LCD_DrawHLine>
 800fbe6:	9b02      	ldr	r3, [sp, #8]
 800fbe8:	eb0b 000a 	add.w	r0, fp, sl
 800fbec:	3001      	adds	r0, #1
 800fbee:	4649      	mov	r1, r9
 800fbf0:	461a      	mov	r2, r3
 800fbf2:	f7f9 fc95 	bl	8009520 <LCD_DrawHLine>
 800fbf6:	e7d6      	b.n	800fba6 <GUI__DrawTwinArc2+0x4a>
 800fbf8:	2c01      	cmp	r4, #1
 800fbfa:	d0cc      	beq.n	800fb96 <GUI__DrawTwinArc2+0x3a>
 800fbfc:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fbfe:	f7fc f802 	bl	800bc06 <GUI_SetColor>
 800fc02:	f1a4 0902 	sub.w	r9, r4, #2
 800fc06:	eb05 0b04 	add.w	fp, r5, r4
 800fc0a:	f105 0802 	add.w	r8, r5, #2
 800fc0e:	f1b9 0f00 	cmp.w	r9, #0
 800fc12:	d027      	beq.n	800fc64 <GUI__DrawTwinArc2+0x108>
 800fc14:	ab07      	add	r3, sp, #28
 800fc16:	4649      	mov	r1, r9
 800fc18:	9300      	str	r3, [sp, #0]
 800fc1a:	4620      	mov	r0, r4
 800fc1c:	aa05      	add	r2, sp, #20
 800fc1e:	ab06      	add	r3, sp, #24
 800fc20:	f7ff ff71 	bl	800fb06 <_GetTwinArcPara>
 800fc24:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800fc28:	9906      	ldr	r1, [sp, #24]
 800fc2a:	1930      	adds	r0, r6, r4
 800fc2c:	1b3b      	subs	r3, r7, r4
 800fc2e:	ebca 0200 	rsb	r2, sl, r0
 800fc32:	eb03 0c01 	add.w	ip, r3, r1
 800fc36:	1a40      	subs	r0, r0, r1
 800fc38:	3a01      	subs	r2, #1
 800fc3a:	4641      	mov	r1, r8
 800fc3c:	9302      	str	r3, [sp, #8]
 800fc3e:	f8cd c00c 	str.w	ip, [sp, #12]
 800fc42:	f7f9 fc6d 	bl	8009520 <LCD_DrawHLine>
 800fc46:	9b02      	ldr	r3, [sp, #8]
 800fc48:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800fc4c:	eb03 000a 	add.w	r0, r3, sl
 800fc50:	4641      	mov	r1, r8
 800fc52:	3001      	adds	r0, #1
 800fc54:	4662      	mov	r2, ip
 800fc56:	f7f9 fc63 	bl	8009520 <LCD_DrawHLine>
 800fc5a:	f109 39ff 	add.w	r9, r9, #4294967295
 800fc5e:	f108 0801 	add.w	r8, r8, #1
 800fc62:	e7d4      	b.n	800fc0e <GUI__DrawTwinArc2+0xb2>
 800fc64:	2c02      	cmp	r4, #2
 800fc66:	d096      	beq.n	800fb96 <GUI__DrawTwinArc2+0x3a>
 800fc68:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fc6a:	f7fb ffcc 	bl	800bc06 <GUI_SetColor>
 800fc6e:	f1c4 0303 	rsb	r3, r4, #3
 800fc72:	f1a4 0803 	sub.w	r8, r4, #3
 800fc76:	449b      	add	fp, r3
 800fc78:	f1b8 0f00 	cmp.w	r8, #0
 800fc7c:	d08b      	beq.n	800fb96 <GUI__DrawTwinArc2+0x3a>
 800fc7e:	ab07      	add	r3, sp, #28
 800fc80:	4641      	mov	r1, r8
 800fc82:	9300      	str	r3, [sp, #0]
 800fc84:	4620      	mov	r0, r4
 800fc86:	ab06      	add	r3, sp, #24
 800fc88:	aa05      	add	r2, sp, #20
 800fc8a:	f7ff ff3c 	bl	800fb06 <_GetTwinArcPara>
 800fc8e:	9807      	ldr	r0, [sp, #28]
 800fc90:	1932      	adds	r2, r6, r4
 800fc92:	ebc4 0907 	rsb	r9, r4, r7
 800fc96:	4659      	mov	r1, fp
 800fc98:	eb09 0a00 	add.w	sl, r9, r0
 800fc9c:	1a10      	subs	r0, r2, r0
 800fc9e:	3a01      	subs	r2, #1
 800fca0:	f7f9 fc3e 	bl	8009520 <LCD_DrawHLine>
 800fca4:	4659      	mov	r1, fp
 800fca6:	f109 0001 	add.w	r0, r9, #1
 800fcaa:	4652      	mov	r2, sl
 800fcac:	f7f9 fc38 	bl	8009520 <LCD_DrawHLine>
 800fcb0:	f108 38ff 	add.w	r8, r8, #4294967295
 800fcb4:	f10b 0b01 	add.w	fp, fp, #1
 800fcb8:	e7de      	b.n	800fc78 <GUI__DrawTwinArc2+0x11c>
 800fcba:	b00b      	add	sp, #44	; 0x2c
 800fcbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcc0:	200000c0 	.word	0x200000c0

0800fcc4 <GUI__CompactPixelIndices>:
 800fcc4:	2a08      	cmp	r2, #8
 800fcc6:	b510      	push	{r4, lr}
 800fcc8:	dd0e      	ble.n	800fce8 <GUI__CompactPixelIndices+0x24>
 800fcca:	2a10      	cmp	r2, #16
 800fccc:	dc0a      	bgt.n	800fce4 <GUI__CompactPixelIndices+0x20>
 800fcce:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800fcd2:	4603      	mov	r3, r0
 800fcd4:	f850 2b04 	ldr.w	r2, [r0], #4
 800fcd8:	f823 2b02 	strh.w	r2, [r3], #2
 800fcdc:	428b      	cmp	r3, r1
 800fcde:	d1f9      	bne.n	800fcd4 <GUI__CompactPixelIndices+0x10>
 800fce0:	2001      	movs	r0, #1
 800fce2:	bd10      	pop	{r4, pc}
 800fce4:	2000      	movs	r0, #0
 800fce6:	bd10      	pop	{r4, pc}
 800fce8:	2a02      	cmp	r2, #2
 800fcea:	d06d      	beq.n	800fdc8 <GUI__CompactPixelIndices+0x104>
 800fcec:	2a04      	cmp	r2, #4
 800fcee:	d054      	beq.n	800fd9a <GUI__CompactPixelIndices+0xd6>
 800fcf0:	2a01      	cmp	r2, #1
 800fcf2:	f040 8095 	bne.w	800fe20 <GUI__CompactPixelIndices+0x15c>
 800fcf6:	4604      	mov	r4, r0
 800fcf8:	6803      	ldr	r3, [r0, #0]
 800fcfa:	2901      	cmp	r1, #1
 800fcfc:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800fd00:	b2db      	uxtb	r3, r3
 800fd02:	d047      	beq.n	800fd94 <GUI__CompactPixelIndices+0xd0>
 800fd04:	6842      	ldr	r2, [r0, #4]
 800fd06:	2902      	cmp	r1, #2
 800fd08:	f002 0201 	and.w	r2, r2, #1
 800fd0c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800fd10:	d102      	bne.n	800fd18 <GUI__CompactPixelIndices+0x54>
 800fd12:	f100 0208 	add.w	r2, r0, #8
 800fd16:	e03e      	b.n	800fd96 <GUI__CompactPixelIndices+0xd2>
 800fd18:	6882      	ldr	r2, [r0, #8]
 800fd1a:	2903      	cmp	r1, #3
 800fd1c:	f002 0201 	and.w	r2, r2, #1
 800fd20:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800fd24:	d102      	bne.n	800fd2c <GUI__CompactPixelIndices+0x68>
 800fd26:	f100 020c 	add.w	r2, r0, #12
 800fd2a:	e034      	b.n	800fd96 <GUI__CompactPixelIndices+0xd2>
 800fd2c:	68c2      	ldr	r2, [r0, #12]
 800fd2e:	2904      	cmp	r1, #4
 800fd30:	f002 0201 	and.w	r2, r2, #1
 800fd34:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800fd38:	d102      	bne.n	800fd40 <GUI__CompactPixelIndices+0x7c>
 800fd3a:	f100 0210 	add.w	r2, r0, #16
 800fd3e:	e02a      	b.n	800fd96 <GUI__CompactPixelIndices+0xd2>
 800fd40:	6902      	ldr	r2, [r0, #16]
 800fd42:	2905      	cmp	r1, #5
 800fd44:	f002 0201 	and.w	r2, r2, #1
 800fd48:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fd4c:	d102      	bne.n	800fd54 <GUI__CompactPixelIndices+0x90>
 800fd4e:	f100 0214 	add.w	r2, r0, #20
 800fd52:	e020      	b.n	800fd96 <GUI__CompactPixelIndices+0xd2>
 800fd54:	6942      	ldr	r2, [r0, #20]
 800fd56:	2906      	cmp	r1, #6
 800fd58:	f002 0201 	and.w	r2, r2, #1
 800fd5c:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800fd60:	d102      	bne.n	800fd68 <GUI__CompactPixelIndices+0xa4>
 800fd62:	f100 0218 	add.w	r2, r0, #24
 800fd66:	e016      	b.n	800fd96 <GUI__CompactPixelIndices+0xd2>
 800fd68:	6982      	ldr	r2, [r0, #24]
 800fd6a:	3907      	subs	r1, #7
 800fd6c:	f002 0201 	and.w	r2, r2, #1
 800fd70:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800fd74:	d102      	bne.n	800fd7c <GUI__CompactPixelIndices+0xb8>
 800fd76:	f100 021c 	add.w	r2, r0, #28
 800fd7a:	e005      	b.n	800fd88 <GUI__CompactPixelIndices+0xc4>
 800fd7c:	f100 0220 	add.w	r2, r0, #32
 800fd80:	69c0      	ldr	r0, [r0, #28]
 800fd82:	f000 0001 	and.w	r0, r0, #1
 800fd86:	4303      	orrs	r3, r0
 800fd88:	f804 3b01 	strb.w	r3, [r4], #1
 800fd8c:	2900      	cmp	r1, #0
 800fd8e:	d0a7      	beq.n	800fce0 <GUI__CompactPixelIndices+0x1c>
 800fd90:	4610      	mov	r0, r2
 800fd92:	e7b1      	b.n	800fcf8 <GUI__CompactPixelIndices+0x34>
 800fd94:	1d02      	adds	r2, r0, #4
 800fd96:	2100      	movs	r1, #0
 800fd98:	e7f6      	b.n	800fd88 <GUI__CompactPixelIndices+0xc4>
 800fd9a:	4602      	mov	r2, r0
 800fd9c:	6803      	ldr	r3, [r0, #0]
 800fd9e:	2901      	cmp	r1, #1
 800fda0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800fda4:	b2db      	uxtb	r3, r3
 800fda6:	d102      	bne.n	800fdae <GUI__CompactPixelIndices+0xea>
 800fda8:	1d04      	adds	r4, r0, #4
 800fdaa:	2100      	movs	r1, #0
 800fdac:	e006      	b.n	800fdbc <GUI__CompactPixelIndices+0xf8>
 800fdae:	f100 0408 	add.w	r4, r0, #8
 800fdb2:	6840      	ldr	r0, [r0, #4]
 800fdb4:	f000 000f 	and.w	r0, r0, #15
 800fdb8:	4303      	orrs	r3, r0
 800fdba:	3902      	subs	r1, #2
 800fdbc:	f802 3b01 	strb.w	r3, [r2], #1
 800fdc0:	2900      	cmp	r1, #0
 800fdc2:	d08d      	beq.n	800fce0 <GUI__CompactPixelIndices+0x1c>
 800fdc4:	4620      	mov	r0, r4
 800fdc6:	e7e9      	b.n	800fd9c <GUI__CompactPixelIndices+0xd8>
 800fdc8:	4604      	mov	r4, r0
 800fdca:	6803      	ldr	r3, [r0, #0]
 800fdcc:	2901      	cmp	r1, #1
 800fdce:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800fdd2:	b2db      	uxtb	r3, r3
 800fdd4:	d021      	beq.n	800fe1a <GUI__CompactPixelIndices+0x156>
 800fdd6:	6842      	ldr	r2, [r0, #4]
 800fdd8:	2902      	cmp	r1, #2
 800fdda:	f002 0203 	and.w	r2, r2, #3
 800fdde:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800fde2:	d102      	bne.n	800fdea <GUI__CompactPixelIndices+0x126>
 800fde4:	f100 0208 	add.w	r2, r0, #8
 800fde8:	e018      	b.n	800fe1c <GUI__CompactPixelIndices+0x158>
 800fdea:	6882      	ldr	r2, [r0, #8]
 800fdec:	2903      	cmp	r1, #3
 800fdee:	f002 0203 	and.w	r2, r2, #3
 800fdf2:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800fdf6:	d102      	bne.n	800fdfe <GUI__CompactPixelIndices+0x13a>
 800fdf8:	f100 020c 	add.w	r2, r0, #12
 800fdfc:	e00e      	b.n	800fe1c <GUI__CompactPixelIndices+0x158>
 800fdfe:	f100 0210 	add.w	r2, r0, #16
 800fe02:	68c0      	ldr	r0, [r0, #12]
 800fe04:	f000 0003 	and.w	r0, r0, #3
 800fe08:	4303      	orrs	r3, r0
 800fe0a:	3904      	subs	r1, #4
 800fe0c:	f804 3b01 	strb.w	r3, [r4], #1
 800fe10:	2900      	cmp	r1, #0
 800fe12:	f43f af65 	beq.w	800fce0 <GUI__CompactPixelIndices+0x1c>
 800fe16:	4610      	mov	r0, r2
 800fe18:	e7d7      	b.n	800fdca <GUI__CompactPixelIndices+0x106>
 800fe1a:	1d02      	adds	r2, r0, #4
 800fe1c:	2100      	movs	r1, #0
 800fe1e:	e7f5      	b.n	800fe0c <GUI__CompactPixelIndices+0x148>
 800fe20:	2300      	movs	r3, #0
 800fe22:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800fe26:	54c2      	strb	r2, [r0, r3]
 800fe28:	3301      	adds	r3, #1
 800fe2a:	428b      	cmp	r3, r1
 800fe2c:	d1f9      	bne.n	800fe22 <GUI__CompactPixelIndices+0x15e>
 800fe2e:	e757      	b.n	800fce0 <GUI__CompactPixelIndices+0x1c>

0800fe30 <GUI__ConvertColor2Index>:
 800fe30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe34:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800fe38:	681e      	ldr	r6, [r3, #0]
 800fe3a:	f1b8 0f00 	cmp.w	r8, #0
 800fe3e:	bf08      	it	eq
 800fe40:	4680      	moveq	r8, r0
 800fe42:	2a08      	cmp	r2, #8
 800fe44:	4604      	mov	r4, r0
 800fe46:	460d      	mov	r5, r1
 800fe48:	dd05      	ble.n	800fe56 <GUI__ConvertColor2Index+0x26>
 800fe4a:	2a10      	cmp	r2, #16
 800fe4c:	f340 80b6 	ble.w	800ffbc <GUI__ConvertColor2Index+0x18c>
 800fe50:	2000      	movs	r0, #0
 800fe52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fe56:	3a01      	subs	r2, #1
 800fe58:	2a07      	cmp	r2, #7
 800fe5a:	f200 80a4 	bhi.w	800ffa6 <GUI__ConvertColor2Index+0x176>
 800fe5e:	e8df f002 	tbb	[pc, r2]
 800fe62:	6111      	.short	0x6111
 800fe64:	a2a287a2 	.word	0xa2a287a2
 800fe68:	92a2      	.short	0x92a2
 800fe6a:	69e0      	ldr	r0, [r4, #28]
 800fe6c:	47b0      	blx	r6
 800fe6e:	4338      	orrs	r0, r7
 800fe70:	f104 0920 	add.w	r9, r4, #32
 800fe74:	b2c7      	uxtb	r7, r0
 800fe76:	3d08      	subs	r5, #8
 800fe78:	f808 7b01 	strb.w	r7, [r8], #1
 800fe7c:	2d00      	cmp	r5, #0
 800fe7e:	f000 8092 	beq.w	800ffa6 <GUI__ConvertColor2Index+0x176>
 800fe82:	464c      	mov	r4, r9
 800fe84:	6820      	ldr	r0, [r4, #0]
 800fe86:	47b0      	blx	r6
 800fe88:	2d01      	cmp	r5, #1
 800fe8a:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800fe8e:	b2c7      	uxtb	r7, r0
 800fe90:	f000 808c 	beq.w	800ffac <GUI__ConvertColor2Index+0x17c>
 800fe94:	6860      	ldr	r0, [r4, #4]
 800fe96:	47b0      	blx	r6
 800fe98:	2d02      	cmp	r5, #2
 800fe9a:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800fe9e:	b2c7      	uxtb	r7, r0
 800fea0:	d102      	bne.n	800fea8 <GUI__ConvertColor2Index+0x78>
 800fea2:	f104 0908 	add.w	r9, r4, #8
 800fea6:	e083      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800fea8:	68a0      	ldr	r0, [r4, #8]
 800feaa:	47b0      	blx	r6
 800feac:	2d03      	cmp	r5, #3
 800feae:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800feb2:	b2c7      	uxtb	r7, r0
 800feb4:	d102      	bne.n	800febc <GUI__ConvertColor2Index+0x8c>
 800feb6:	f104 090c 	add.w	r9, r4, #12
 800feba:	e079      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800febc:	68e0      	ldr	r0, [r4, #12]
 800febe:	47b0      	blx	r6
 800fec0:	2d04      	cmp	r5, #4
 800fec2:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800fec6:	b2c7      	uxtb	r7, r0
 800fec8:	d102      	bne.n	800fed0 <GUI__ConvertColor2Index+0xa0>
 800feca:	f104 0910 	add.w	r9, r4, #16
 800fece:	e06f      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800fed0:	6920      	ldr	r0, [r4, #16]
 800fed2:	47b0      	blx	r6
 800fed4:	2d05      	cmp	r5, #5
 800fed6:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800feda:	b2c7      	uxtb	r7, r0
 800fedc:	d102      	bne.n	800fee4 <GUI__ConvertColor2Index+0xb4>
 800fede:	f104 0914 	add.w	r9, r4, #20
 800fee2:	e065      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800fee4:	6960      	ldr	r0, [r4, #20]
 800fee6:	47b0      	blx	r6
 800fee8:	2d06      	cmp	r5, #6
 800feea:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800feee:	b2c7      	uxtb	r7, r0
 800fef0:	d102      	bne.n	800fef8 <GUI__ConvertColor2Index+0xc8>
 800fef2:	f104 0918 	add.w	r9, r4, #24
 800fef6:	e05b      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800fef8:	69a0      	ldr	r0, [r4, #24]
 800fefa:	47b0      	blx	r6
 800fefc:	2d07      	cmp	r5, #7
 800fefe:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800ff02:	b2c7      	uxtb	r7, r0
 800ff04:	d1b1      	bne.n	800fe6a <GUI__ConvertColor2Index+0x3a>
 800ff06:	f104 091c 	add.w	r9, r4, #28
 800ff0a:	e051      	b.n	800ffb0 <GUI__ConvertColor2Index+0x180>
 800ff0c:	68e0      	ldr	r0, [r4, #12]
 800ff0e:	47b0      	blx	r6
 800ff10:	4338      	orrs	r0, r7
 800ff12:	f104 0910 	add.w	r9, r4, #16
 800ff16:	b2c7      	uxtb	r7, r0
 800ff18:	3d04      	subs	r5, #4
 800ff1a:	f808 7b01 	strb.w	r7, [r8], #1
 800ff1e:	2d00      	cmp	r5, #0
 800ff20:	d041      	beq.n	800ffa6 <GUI__ConvertColor2Index+0x176>
 800ff22:	464c      	mov	r4, r9
 800ff24:	6820      	ldr	r0, [r4, #0]
 800ff26:	47b0      	blx	r6
 800ff28:	2d01      	cmp	r5, #1
 800ff2a:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800ff2e:	b2c7      	uxtb	r7, r0
 800ff30:	d040      	beq.n	800ffb4 <GUI__ConvertColor2Index+0x184>
 800ff32:	6860      	ldr	r0, [r4, #4]
 800ff34:	47b0      	blx	r6
 800ff36:	2d02      	cmp	r5, #2
 800ff38:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800ff3c:	b2c7      	uxtb	r7, r0
 800ff3e:	d102      	bne.n	800ff46 <GUI__ConvertColor2Index+0x116>
 800ff40:	f104 0908 	add.w	r9, r4, #8
 800ff44:	e038      	b.n	800ffb8 <GUI__ConvertColor2Index+0x188>
 800ff46:	68a0      	ldr	r0, [r4, #8]
 800ff48:	47b0      	blx	r6
 800ff4a:	2d03      	cmp	r5, #3
 800ff4c:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800ff50:	b2c7      	uxtb	r7, r0
 800ff52:	d1db      	bne.n	800ff0c <GUI__ConvertColor2Index+0xdc>
 800ff54:	f104 090c 	add.w	r9, r4, #12
 800ff58:	e02e      	b.n	800ffb8 <GUI__ConvertColor2Index+0x188>
 800ff5a:	6860      	ldr	r0, [r4, #4]
 800ff5c:	47b0      	blx	r6
 800ff5e:	4338      	orrs	r0, r7
 800ff60:	f104 0908 	add.w	r9, r4, #8
 800ff64:	b2c7      	uxtb	r7, r0
 800ff66:	3d02      	subs	r5, #2
 800ff68:	f808 7b01 	strb.w	r7, [r8], #1
 800ff6c:	b1dd      	cbz	r5, 800ffa6 <GUI__ConvertColor2Index+0x176>
 800ff6e:	464c      	mov	r4, r9
 800ff70:	6820      	ldr	r0, [r4, #0]
 800ff72:	47b0      	blx	r6
 800ff74:	2d01      	cmp	r5, #1
 800ff76:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800ff7a:	b2c7      	uxtb	r7, r0
 800ff7c:	d1ed      	bne.n	800ff5a <GUI__ConvertColor2Index+0x12a>
 800ff7e:	f104 0904 	add.w	r9, r4, #4
 800ff82:	2500      	movs	r5, #0
 800ff84:	e7f0      	b.n	800ff68 <GUI__ConvertColor2Index+0x138>
 800ff86:	691f      	ldr	r7, [r3, #16]
 800ff88:	b12f      	cbz	r7, 800ff96 <GUI__ConvertColor2Index+0x166>
 800ff8a:	4620      	mov	r0, r4
 800ff8c:	4641      	mov	r1, r8
 800ff8e:	462a      	mov	r2, r5
 800ff90:	2301      	movs	r3, #1
 800ff92:	47b8      	blx	r7
 800ff94:	e007      	b.n	800ffa6 <GUI__ConvertColor2Index+0x176>
 800ff96:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800ff9a:	47b0      	blx	r6
 800ff9c:	f808 0007 	strb.w	r0, [r8, r7]
 800ffa0:	3701      	adds	r7, #1
 800ffa2:	42bd      	cmp	r5, r7
 800ffa4:	d1f7      	bne.n	800ff96 <GUI__ConvertColor2Index+0x166>
 800ffa6:	2001      	movs	r0, #1
 800ffa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ffac:	f104 0904 	add.w	r9, r4, #4
 800ffb0:	2500      	movs	r5, #0
 800ffb2:	e761      	b.n	800fe78 <GUI__ConvertColor2Index+0x48>
 800ffb4:	f104 0904 	add.w	r9, r4, #4
 800ffb8:	2500      	movs	r5, #0
 800ffba:	e7ae      	b.n	800ff1a <GUI__ConvertColor2Index+0xea>
 800ffbc:	691f      	ldr	r7, [r3, #16]
 800ffbe:	b11f      	cbz	r7, 800ffc8 <GUI__ConvertColor2Index+0x198>
 800ffc0:	4641      	mov	r1, r8
 800ffc2:	462a      	mov	r2, r5
 800ffc4:	2302      	movs	r3, #2
 800ffc6:	e7e4      	b.n	800ff92 <GUI__ConvertColor2Index+0x162>
 800ffc8:	f854 0b04 	ldr.w	r0, [r4], #4
 800ffcc:	47b0      	blx	r6
 800ffce:	3d01      	subs	r5, #1
 800ffd0:	f828 0b02 	strh.w	r0, [r8], #2
 800ffd4:	d1f8      	bne.n	800ffc8 <GUI__ConvertColor2Index+0x198>
 800ffd6:	e7e6      	b.n	800ffa6 <GUI__ConvertColor2Index+0x176>

0800ffd8 <GUI__CompactPixelIndicesEx>:
 800ffd8:	b513      	push	{r0, r1, r4, lr}
 800ffda:	2400      	movs	r4, #0
 800ffdc:	9400      	str	r4, [sp, #0]
 800ffde:	f7ff ff27 	bl	800fe30 <GUI__ConvertColor2Index>
 800ffe2:	b002      	add	sp, #8
 800ffe4:	bd10      	pop	{r4, pc}

0800ffe6 <_GetCharCode>:
 800ffe6:	7800      	ldrb	r0, [r0, #0]
 800ffe8:	4770      	bx	lr

0800ffea <_GetCharSize>:
 800ffea:	2001      	movs	r0, #1
 800ffec:	4770      	bx	lr

0800ffee <_CalcSizeOfChar>:
 800ffee:	2001      	movs	r0, #1
 800fff0:	4770      	bx	lr

0800fff2 <_Encode>:
 800fff2:	7001      	strb	r1, [r0, #0]
 800fff4:	2001      	movs	r0, #1
 800fff6:	4770      	bx	lr

0800fff8 <_Add>:
 800fff8:	4a0f      	ldr	r2, [pc, #60]	; (8010038 <_Add+0x40>)
 800fffa:	6813      	ldr	r3, [r2, #0]
 800fffc:	2b0b      	cmp	r3, #11
 800fffe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010000:	4617      	mov	r7, r2
 8010002:	dc18      	bgt.n	8010036 <_Add+0x3e>
 8010004:	2b00      	cmp	r3, #0
 8010006:	4c0d      	ldr	r4, [pc, #52]	; (801003c <_Add+0x44>)
 8010008:	dc01      	bgt.n	801000e <_Add+0x16>
 801000a:	2200      	movs	r2, #0
 801000c:	e00f      	b.n	801002e <_Add+0x36>
 801000e:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 8010012:	461a      	mov	r2, r3
 8010014:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 8010018:	fa0f fc86 	sxth.w	ip, r6
 801001c:	4584      	cmp	ip, r0
 801001e:	f102 35ff 	add.w	r5, r2, #4294967295
 8010022:	db04      	blt.n	801002e <_Add+0x36>
 8010024:	804e      	strh	r6, [r1, #2]
 8010026:	2d00      	cmp	r5, #0
 8010028:	d0ef      	beq.n	801000a <_Add+0x12>
 801002a:	462a      	mov	r2, r5
 801002c:	e7f2      	b.n	8010014 <_Add+0x1c>
 801002e:	3301      	adds	r3, #1
 8010030:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 8010034:	603b      	str	r3, [r7, #0]
 8010036:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010038:	20002c64 	.word	0x20002c64
 801003c:	20002c68 	.word	0x20002c68

08010040 <GL_FillPolygon>:
 8010040:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010044:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 8010200 <GL_FillPolygon+0x1c0>
 8010048:	9101      	str	r1, [sp, #4]
 801004a:	4692      	mov	sl, r2
 801004c:	4606      	mov	r6, r0
 801004e:	f643 74ff 	movw	r4, #16383	; 0x3fff
 8010052:	2200      	movs	r2, #0
 8010054:	9901      	ldr	r1, [sp, #4]
 8010056:	428a      	cmp	r2, r1
 8010058:	da0b      	bge.n	8010072 <GL_FillPolygon+0x32>
 801005a:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 801005e:	3201      	adds	r2, #1
 8010060:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010064:	428c      	cmp	r4, r1
 8010066:	bfa8      	it	ge
 8010068:	460c      	movge	r4, r1
 801006a:	4589      	cmp	r9, r1
 801006c:	bfb8      	it	lt
 801006e:	4689      	movlt	r9, r1
 8010070:	e7f0      	b.n	8010054 <GL_FillPolygon+0x14>
 8010072:	4960      	ldr	r1, [pc, #384]	; (80101f4 <GL_FillPolygon+0x1b4>)
 8010074:	680a      	ldr	r2, [r1, #0]
 8010076:	6952      	ldr	r2, [r2, #20]
 8010078:	468b      	mov	fp, r1
 801007a:	b15a      	cbz	r2, 8010094 <GL_FillPolygon+0x54>
 801007c:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8010080:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8010084:	1ac9      	subs	r1, r1, r3
 8010086:	1ad2      	subs	r2, r2, r3
 8010088:	4589      	cmp	r9, r1
 801008a:	bfa8      	it	ge
 801008c:	4689      	movge	r9, r1
 801008e:	4294      	cmp	r4, r2
 8010090:	bfb8      	it	lt
 8010092:	4614      	movlt	r4, r2
 8010094:	eb04 0803 	add.w	r8, r4, r3
 8010098:	454c      	cmp	r4, r9
 801009a:	f300 80a7 	bgt.w	80101ec <GL_FillPolygon+0x1ac>
 801009e:	4b56      	ldr	r3, [pc, #344]	; (80101f8 <GL_FillPolygon+0x1b8>)
 80100a0:	2700      	movs	r7, #0
 80100a2:	601f      	str	r7, [r3, #0]
 80100a4:	4635      	mov	r5, r6
 80100a6:	9901      	ldr	r1, [sp, #4]
 80100a8:	428f      	cmp	r7, r1
 80100aa:	da55      	bge.n	8010158 <GL_FillPolygon+0x118>
 80100ac:	9b01      	ldr	r3, [sp, #4]
 80100ae:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80100b2:	1e59      	subs	r1, r3, #1
 80100b4:	428f      	cmp	r7, r1
 80100b6:	bfb4      	ite	lt
 80100b8:	f107 0c01 	addlt.w	ip, r7, #1
 80100bc:	f04f 0c00 	movge.w	ip, #0
 80100c0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80100c4:	eb06 030c 	add.w	r3, r6, ip
 80100c8:	42a2      	cmp	r2, r4
 80100ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80100ce:	d136      	bne.n	801013e <GL_FillPolygon+0xfe>
 80100d0:	42a3      	cmp	r3, r4
 80100d2:	d002      	beq.n	80100da <GL_FillPolygon+0x9a>
 80100d4:	463a      	mov	r2, r7
 80100d6:	2000      	movs	r0, #0
 80100d8:	e01b      	b.n	8010112 <GL_FillPolygon+0xd2>
 80100da:	f9b5 e000 	ldrsh.w	lr, [r5]
 80100de:	f936 200c 	ldrsh.w	r2, [r6, ip]
 80100e2:	f8db 3000 	ldr.w	r3, [fp]
 80100e6:	44d6      	add	lr, sl
 80100e8:	4452      	add	r2, sl
 80100ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80100ec:	4596      	cmp	lr, r2
 80100ee:	681b      	ldr	r3, [r3, #0]
 80100f0:	da02      	bge.n	80100f8 <GL_FillPolygon+0xb8>
 80100f2:	4670      	mov	r0, lr
 80100f4:	4641      	mov	r1, r8
 80100f6:	e020      	b.n	801013a <GL_FillPolygon+0xfa>
 80100f8:	4610      	mov	r0, r2
 80100fa:	4641      	mov	r1, r8
 80100fc:	4672      	mov	r2, lr
 80100fe:	e01c      	b.n	801013a <GL_FillPolygon+0xfa>
 8010100:	b152      	cbz	r2, 8010118 <GL_FillPolygon+0xd8>
 8010102:	3a01      	subs	r2, #1
 8010104:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 8010108:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 801010c:	45a4      	cmp	ip, r4
 801010e:	d105      	bne.n	801011c <GL_FillPolygon+0xdc>
 8010110:	3001      	adds	r0, #1
 8010112:	4288      	cmp	r0, r1
 8010114:	dbf4      	blt.n	8010100 <GL_FillPolygon+0xc0>
 8010116:	e01c      	b.n	8010152 <GL_FillPolygon+0x112>
 8010118:	460a      	mov	r2, r1
 801011a:	e7f3      	b.n	8010104 <GL_FillPolygon+0xc4>
 801011c:	ebc4 0c0c 	rsb	ip, r4, ip
 8010120:	1b1b      	subs	r3, r3, r4
 8010122:	ea9c 0f03 	teq	ip, r3
 8010126:	f9b5 0000 	ldrsh.w	r0, [r5]
 801012a:	d44d      	bmi.n	80101c8 <GL_FillPolygon+0x188>
 801012c:	f8db 3000 	ldr.w	r3, [fp]
 8010130:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010132:	4450      	add	r0, sl
 8010134:	681b      	ldr	r3, [r3, #0]
 8010136:	4641      	mov	r1, r8
 8010138:	4602      	mov	r2, r0
 801013a:	4798      	blx	r3
 801013c:	e009      	b.n	8010152 <GL_FillPolygon+0x112>
 801013e:	42a3      	cmp	r3, r4
 8010140:	d007      	beq.n	8010152 <GL_FillPolygon+0x112>
 8010142:	db44      	blt.n	80101ce <GL_FillPolygon+0x18e>
 8010144:	42a2      	cmp	r2, r4
 8010146:	dd27      	ble.n	8010198 <GL_FillPolygon+0x158>
 8010148:	42a3      	cmp	r3, r4
 801014a:	dd42      	ble.n	80101d2 <GL_FillPolygon+0x192>
 801014c:	e001      	b.n	8010152 <GL_FillPolygon+0x112>
 801014e:	42a3      	cmp	r3, r4
 8010150:	dd49      	ble.n	80101e6 <GL_FillPolygon+0x1a6>
 8010152:	3701      	adds	r7, #1
 8010154:	3504      	adds	r5, #4
 8010156:	e7a6      	b.n	80100a6 <GL_FillPolygon+0x66>
 8010158:	2500      	movs	r5, #0
 801015a:	4628      	mov	r0, r5
 801015c:	462f      	mov	r7, r5
 801015e:	4b26      	ldr	r3, [pc, #152]	; (80101f8 <GL_FillPolygon+0x1b8>)
 8010160:	681b      	ldr	r3, [r3, #0]
 8010162:	429f      	cmp	r7, r3
 8010164:	da14      	bge.n	8010190 <GL_FillPolygon+0x150>
 8010166:	4b25      	ldr	r3, [pc, #148]	; (80101fc <GL_FillPolygon+0x1bc>)
 8010168:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 801016c:	b15d      	cbz	r5, 8010186 <GL_FillPolygon+0x146>
 801016e:	f8db 2000 	ldr.w	r2, [fp]
 8010172:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8010174:	4450      	add	r0, sl
 8010176:	f8d2 c000 	ldr.w	ip, [r2]
 801017a:	9300      	str	r3, [sp, #0]
 801017c:	eb0a 0203 	add.w	r2, sl, r3
 8010180:	4641      	mov	r1, r8
 8010182:	47e0      	blx	ip
 8010184:	9b00      	ldr	r3, [sp, #0]
 8010186:	f085 0501 	eor.w	r5, r5, #1
 801018a:	3701      	adds	r7, #1
 801018c:	4618      	mov	r0, r3
 801018e:	e7e6      	b.n	801015e <GL_FillPolygon+0x11e>
 8010190:	3401      	adds	r4, #1
 8010192:	f108 0801 	add.w	r8, r8, #1
 8010196:	e77f      	b.n	8010098 <GL_FillPolygon+0x58>
 8010198:	429a      	cmp	r2, r3
 801019a:	dcd8      	bgt.n	801014e <GL_FillPolygon+0x10e>
 801019c:	f9b5 1000 	ldrsh.w	r1, [r5]
 80101a0:	f936 000c 	ldrsh.w	r0, [r6, ip]
 80101a4:	ebc2 0e04 	rsb	lr, r2, r4
 80101a8:	1a40      	subs	r0, r0, r1
 80101aa:	fb0e f000 	mul.w	r0, lr, r0
 80101ae:	2800      	cmp	r0, #0
 80101b0:	ebc2 0303 	rsb	r3, r2, r3
 80101b4:	bfdb      	ittet	le
 80101b6:	105a      	asrle	r2, r3, #1
 80101b8:	f1c2 0201 	rsble	r2, r2, #1
 80101bc:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 80101c0:	1880      	addle	r0, r0, r2
 80101c2:	fb90 f0f3 	sdiv	r0, r0, r3
 80101c6:	4408      	add	r0, r1
 80101c8:	f7ff ff16 	bl	800fff8 <_Add>
 80101cc:	e7c1      	b.n	8010152 <GL_FillPolygon+0x112>
 80101ce:	42a2      	cmp	r2, r4
 80101d0:	dbbf      	blt.n	8010152 <GL_FillPolygon+0x112>
 80101d2:	429a      	cmp	r2, r3
 80101d4:	ddbd      	ble.n	8010152 <GL_FillPolygon+0x112>
 80101d6:	4696      	mov	lr, r2
 80101d8:	f936 100c 	ldrsh.w	r1, [r6, ip]
 80101dc:	f9b5 0000 	ldrsh.w	r0, [r5]
 80101e0:	461a      	mov	r2, r3
 80101e2:	4673      	mov	r3, lr
 80101e4:	e7de      	b.n	80101a4 <GL_FillPolygon+0x164>
 80101e6:	42a2      	cmp	r2, r4
 80101e8:	daf5      	bge.n	80101d6 <GL_FillPolygon+0x196>
 80101ea:	e7b2      	b.n	8010152 <GL_FillPolygon+0x112>
 80101ec:	b003      	add	sp, #12
 80101ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101f2:	bf00      	nop
 80101f4:	200000c0 	.word	0x200000c0
 80101f8:	20002c64 	.word	0x20002c64
 80101fc:	20002c68 	.word	0x20002c68
 8010200:	ffffc001 	.word	0xffffc001

08010204 <_DrawGradient>:
 8010204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010208:	b08f      	sub	sp, #60	; 0x3c
 801020a:	4688      	mov	r8, r1
 801020c:	4614      	mov	r4, r2
 801020e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8010210:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8010212:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 8010216:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 801021a:	9104      	str	r1, [sp, #16]
 801021c:	4605      	mov	r5, r0
 801021e:	461e      	mov	r6, r3
 8010220:	9203      	str	r2, [sp, #12]
 8010222:	f7fb fc1c 	bl	800ba5e <GUI_GetColor>
 8010226:	45da      	cmp	sl, fp
 8010228:	9009      	str	r0, [sp, #36]	; 0x24
 801022a:	d109      	bne.n	8010240 <_DrawGradient+0x3c>
 801022c:	4650      	mov	r0, sl
 801022e:	f7f9 fc9b 	bl	8009b68 <LCD_SetColor>
 8010232:	9b03      	ldr	r3, [sp, #12]
 8010234:	b113      	cbz	r3, 801023c <_DrawGradient+0x38>
 8010236:	4628      	mov	r0, r5
 8010238:	4641      	mov	r1, r8
 801023a:	e09d      	b.n	8010378 <_DrawGradient+0x174>
 801023c:	4640      	mov	r0, r8
 801023e:	e0a1      	b.n	8010384 <_DrawGradient+0x180>
 8010240:	ebb6 0708 	subs.w	r7, r6, r8
 8010244:	f000 80b2 	beq.w	80103ac <_DrawGradient+0x1a8>
 8010248:	fa5f f28a 	uxtb.w	r2, sl
 801024c:	fa5f f38b 	uxtb.w	r3, fp
 8010250:	1a9b      	subs	r3, r3, r2
 8010252:	930a      	str	r3, [sp, #40]	; 0x28
 8010254:	2302      	movs	r3, #2
 8010256:	fb97 f3f3 	sdiv	r3, r7, r3
 801025a:	fb02 3207 	mla	r2, r2, r7, r3
 801025e:	f3cb 2107 	ubfx	r1, fp, #8, #8
 8010262:	9205      	str	r2, [sp, #20]
 8010264:	f3ca 2207 	ubfx	r2, sl, #8, #8
 8010268:	1a89      	subs	r1, r1, r2
 801026a:	fb02 3207 	mla	r2, r2, r7, r3
 801026e:	910b      	str	r1, [sp, #44]	; 0x2c
 8010270:	9206      	str	r2, [sp, #24]
 8010272:	f3cb 4107 	ubfx	r1, fp, #16, #8
 8010276:	f3ca 4207 	ubfx	r2, sl, #16, #8
 801027a:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 801027e:	1a89      	subs	r1, r1, r2
 8010280:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 8010284:	fb02 3207 	mla	r2, r2, r7, r3
 8010288:	fb0a 3a07 	mla	sl, sl, r7, r3
 801028c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801028e:	910c      	str	r1, [sp, #48]	; 0x30
 8010290:	9207      	str	r2, [sp, #28]
 8010292:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 8010296:	f8cd a020 	str.w	sl, [sp, #32]
 801029a:	f108 33ff 	add.w	r3, r8, #4294967295
 801029e:	f04f 0901 	mov.w	r9, #1
 80102a2:	f103 0a01 	add.w	sl, r3, #1
 80102a6:	45b2      	cmp	sl, r6
 80102a8:	dc5b      	bgt.n	8010362 <_DrawGradient+0x15e>
 80102aa:	f8dd c014 	ldr.w	ip, [sp, #20]
 80102ae:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 80102b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80102b4:	fb9c fcf7 	sdiv	ip, ip, r7
 80102b8:	f8cd c004 	str.w	ip, [sp, #4]
 80102bc:	f8dd c014 	ldr.w	ip, [sp, #20]
 80102c0:	44f4      	add	ip, lr
 80102c2:	f8cd c014 	str.w	ip, [sp, #20]
 80102c6:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 80102ca:	f8dd c018 	ldr.w	ip, [sp, #24]
 80102ce:	fb9c f1f7 	sdiv	r1, ip, r7
 80102d2:	44f4      	add	ip, lr
 80102d4:	f8cd c018 	str.w	ip, [sp, #24]
 80102d8:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 80102dc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80102e0:	fb9c fbf7 	sdiv	fp, ip, r7
 80102e4:	44f4      	add	ip, lr
 80102e6:	f8cd c01c 	str.w	ip, [sp, #28]
 80102ea:	f8dd c020 	ldr.w	ip, [sp, #32]
 80102ee:	fb9c fef7 	sdiv	lr, ip, r7
 80102f2:	4494      	add	ip, r2
 80102f4:	f8cd c020 	str.w	ip, [sp, #32]
 80102f8:	f8dd c004 	ldr.w	ip, [sp, #4]
 80102fc:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 8010300:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 8010304:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 8010308:	45c2      	cmp	sl, r8
 801030a:	ea4b 0b02 	orr.w	fp, fp, r2
 801030e:	dd25      	ble.n	801035c <_DrawGradient+0x158>
 8010310:	4583      	cmp	fp, r0
 8010312:	d102      	bne.n	801031a <_DrawGradient+0x116>
 8010314:	f109 0901 	add.w	r9, r9, #1
 8010318:	e020      	b.n	801035c <_DrawGradient+0x158>
 801031a:	9302      	str	r3, [sp, #8]
 801031c:	f7f9 fc24 	bl	8009b68 <LCD_SetColor>
 8010320:	f1b9 0f01 	cmp.w	r9, #1
 8010324:	9b02      	ldr	r3, [sp, #8]
 8010326:	d00f      	beq.n	8010348 <_DrawGradient+0x144>
 8010328:	9a03      	ldr	r2, [sp, #12]
 801032a:	ebc9 010a 	rsb	r1, r9, sl
 801032e:	b112      	cbz	r2, 8010336 <_DrawGradient+0x132>
 8010330:	4628      	mov	r0, r5
 8010332:	4622      	mov	r2, r4
 8010334:	e003      	b.n	801033e <_DrawGradient+0x13a>
 8010336:	4608      	mov	r0, r1
 8010338:	461a      	mov	r2, r3
 801033a:	4629      	mov	r1, r5
 801033c:	4623      	mov	r3, r4
 801033e:	f7f9 f93b 	bl	80095b8 <LCD_FillRect>
 8010342:	f04f 0901 	mov.w	r9, #1
 8010346:	e009      	b.n	801035c <_DrawGradient+0x158>
 8010348:	9903      	ldr	r1, [sp, #12]
 801034a:	b111      	cbz	r1, 8010352 <_DrawGradient+0x14e>
 801034c:	4628      	mov	r0, r5
 801034e:	4619      	mov	r1, r3
 8010350:	e001      	b.n	8010356 <_DrawGradient+0x152>
 8010352:	4618      	mov	r0, r3
 8010354:	4629      	mov	r1, r5
 8010356:	4622      	mov	r2, r4
 8010358:	9b04      	ldr	r3, [sp, #16]
 801035a:	4798      	blx	r3
 801035c:	4653      	mov	r3, sl
 801035e:	4658      	mov	r0, fp
 8010360:	e79f      	b.n	80102a2 <_DrawGradient+0x9e>
 8010362:	f7f9 fc01 	bl	8009b68 <LCD_SetColor>
 8010366:	f1b9 0f01 	cmp.w	r9, #1
 801036a:	d00f      	beq.n	801038c <_DrawGradient+0x188>
 801036c:	9a03      	ldr	r2, [sp, #12]
 801036e:	ebc9 0106 	rsb	r1, r9, r6
 8010372:	b132      	cbz	r2, 8010382 <_DrawGradient+0x17e>
 8010374:	4628      	mov	r0, r5
 8010376:	3101      	adds	r1, #1
 8010378:	4622      	mov	r2, r4
 801037a:	4633      	mov	r3, r6
 801037c:	f7f9 f91c 	bl	80095b8 <LCD_FillRect>
 8010380:	e00e      	b.n	80103a0 <_DrawGradient+0x19c>
 8010382:	1c48      	adds	r0, r1, #1
 8010384:	4629      	mov	r1, r5
 8010386:	4632      	mov	r2, r6
 8010388:	4623      	mov	r3, r4
 801038a:	e7f7      	b.n	801037c <_DrawGradient+0x178>
 801038c:	9b03      	ldr	r3, [sp, #12]
 801038e:	b113      	cbz	r3, 8010396 <_DrawGradient+0x192>
 8010390:	4628      	mov	r0, r5
 8010392:	4631      	mov	r1, r6
 8010394:	e001      	b.n	801039a <_DrawGradient+0x196>
 8010396:	4630      	mov	r0, r6
 8010398:	4629      	mov	r1, r5
 801039a:	4622      	mov	r2, r4
 801039c:	9b04      	ldr	r3, [sp, #16]
 801039e:	4798      	blx	r3
 80103a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80103a2:	b00f      	add	sp, #60	; 0x3c
 80103a4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103a8:	f7f9 bbde 	b.w	8009b68 <LCD_SetColor>
 80103ac:	b00f      	add	sp, #60	; 0x3c
 80103ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080103b4 <GUI_DrawGradientV>:
 80103b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103b8:	4c15      	ldr	r4, [pc, #84]	; (8010410 <GUI_DrawGradientV+0x5c>)
 80103ba:	6824      	ldr	r4, [r4, #0]
 80103bc:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80103be:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80103c0:	b087      	sub	sp, #28
 80103c2:	eb00 0905 	add.w	r9, r0, r5
 80103c6:	eb01 0804 	add.w	r8, r1, r4
 80103ca:	4415      	add	r5, r2
 80103cc:	441c      	add	r4, r3
 80103ce:	a804      	add	r0, sp, #16
 80103d0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80103d2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80103d4:	f8ad 9010 	strh.w	r9, [sp, #16]
 80103d8:	f8ad 5014 	strh.w	r5, [sp, #20]
 80103dc:	f8ad 8012 	strh.w	r8, [sp, #18]
 80103e0:	f8ad 4016 	strh.w	r4, [sp, #22]
 80103e4:	f7f6 fb8c 	bl	8006b00 <WM__InitIVRSearch>
 80103e8:	b170      	cbz	r0, 8010408 <GUI_DrawGradientV+0x54>
 80103ea:	4b0a      	ldr	r3, [pc, #40]	; (8010414 <GUI_DrawGradientV+0x60>)
 80103ec:	9302      	str	r3, [sp, #8]
 80103ee:	2301      	movs	r3, #1
 80103f0:	9303      	str	r3, [sp, #12]
 80103f2:	4648      	mov	r0, r9
 80103f4:	4641      	mov	r1, r8
 80103f6:	462a      	mov	r2, r5
 80103f8:	4623      	mov	r3, r4
 80103fa:	9700      	str	r7, [sp, #0]
 80103fc:	9601      	str	r6, [sp, #4]
 80103fe:	f7ff ff01 	bl	8010204 <_DrawGradient>
 8010402:	f7f6 fabb 	bl	800697c <WM__GetNextIVR>
 8010406:	e7ef      	b.n	80103e8 <GUI_DrawGradientV+0x34>
 8010408:	b007      	add	sp, #28
 801040a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801040e:	bf00      	nop
 8010410:	200000c0 	.word	0x200000c0
 8010414:	08009521 	.word	0x08009521

08010418 <GUI_DrawGradientH>:
 8010418:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801041c:	4c15      	ldr	r4, [pc, #84]	; (8010474 <GUI_DrawGradientH+0x5c>)
 801041e:	6825      	ldr	r5, [r4, #0]
 8010420:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8010422:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8010424:	b087      	sub	sp, #28
 8010426:	eb00 0804 	add.w	r8, r0, r4
 801042a:	eb01 0905 	add.w	r9, r1, r5
 801042e:	4414      	add	r4, r2
 8010430:	441d      	add	r5, r3
 8010432:	a804      	add	r0, sp, #16
 8010434:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8010436:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8010438:	f8ad 8010 	strh.w	r8, [sp, #16]
 801043c:	f8ad 4014 	strh.w	r4, [sp, #20]
 8010440:	f8ad 9012 	strh.w	r9, [sp, #18]
 8010444:	f8ad 5016 	strh.w	r5, [sp, #22]
 8010448:	f7f6 fb5a 	bl	8006b00 <WM__InitIVRSearch>
 801044c:	b170      	cbz	r0, 801046c <GUI_DrawGradientH+0x54>
 801044e:	4b0a      	ldr	r3, [pc, #40]	; (8010478 <GUI_DrawGradientH+0x60>)
 8010450:	9302      	str	r3, [sp, #8]
 8010452:	2300      	movs	r3, #0
 8010454:	9303      	str	r3, [sp, #12]
 8010456:	4648      	mov	r0, r9
 8010458:	4641      	mov	r1, r8
 801045a:	462a      	mov	r2, r5
 801045c:	4623      	mov	r3, r4
 801045e:	9700      	str	r7, [sp, #0]
 8010460:	9601      	str	r6, [sp, #4]
 8010462:	f7ff fecf 	bl	8010204 <_DrawGradient>
 8010466:	f7f6 fa89 	bl	800697c <WM__GetNextIVR>
 801046a:	e7ef      	b.n	801044c <GUI_DrawGradientH+0x34>
 801046c:	b007      	add	sp, #28
 801046e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010472:	bf00      	nop
 8010474:	200000c0 	.word	0x200000c0
 8010478:	0800956d 	.word	0x0800956d

0801047c <_GetIndexMask_0>:
 801047c:	b508      	push	{r3, lr}
 801047e:	f7f8 ff59 	bl	8009334 <LCD_GetNumColors>
 8010482:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8010486:	d010      	beq.n	80104aa <_GetIndexMask_0+0x2e>
 8010488:	287f      	cmp	r0, #127	; 0x7f
 801048a:	d810      	bhi.n	80104ae <_GetIndexMask_0+0x32>
 801048c:	283f      	cmp	r0, #63	; 0x3f
 801048e:	d810      	bhi.n	80104b2 <_GetIndexMask_0+0x36>
 8010490:	281f      	cmp	r0, #31
 8010492:	d810      	bhi.n	80104b6 <_GetIndexMask_0+0x3a>
 8010494:	280f      	cmp	r0, #15
 8010496:	d810      	bhi.n	80104ba <_GetIndexMask_0+0x3e>
 8010498:	2807      	cmp	r0, #7
 801049a:	d810      	bhi.n	80104be <_GetIndexMask_0+0x42>
 801049c:	2803      	cmp	r0, #3
 801049e:	d810      	bhi.n	80104c2 <_GetIndexMask_0+0x46>
 80104a0:	2801      	cmp	r0, #1
 80104a2:	bf94      	ite	ls
 80104a4:	2000      	movls	r0, #0
 80104a6:	2001      	movhi	r0, #1
 80104a8:	e00c      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104aa:	2008      	movs	r0, #8
 80104ac:	e00a      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104ae:	2007      	movs	r0, #7
 80104b0:	e008      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104b2:	2006      	movs	r0, #6
 80104b4:	e006      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104b6:	2005      	movs	r0, #5
 80104b8:	e004      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104ba:	2004      	movs	r0, #4
 80104bc:	e002      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104be:	2003      	movs	r0, #3
 80104c0:	e000      	b.n	80104c4 <_GetIndexMask_0+0x48>
 80104c2:	2002      	movs	r0, #2
 80104c4:	2301      	movs	r3, #1
 80104c6:	fa03 f000 	lsl.w	r0, r3, r0
 80104ca:	3801      	subs	r0, #1
 80104cc:	bd08      	pop	{r3, pc}

080104ce <_Index2Color_0>:
 80104ce:	b538      	push	{r3, r4, r5, lr}
 80104d0:	4604      	mov	r4, r0
 80104d2:	f7f8 ff2f 	bl	8009334 <LCD_GetNumColors>
 80104d6:	4605      	mov	r5, r0
 80104d8:	f7f8 ff4a 	bl	8009370 <LCD_GetPalette>
 80104dc:	42ac      	cmp	r4, r5
 80104de:	d203      	bcs.n	80104e8 <_Index2Color_0+0x1a>
 80104e0:	b118      	cbz	r0, 80104ea <_Index2Color_0+0x1c>
 80104e2:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80104e6:	bd38      	pop	{r3, r4, r5, pc}
 80104e8:	2000      	movs	r0, #0
 80104ea:	bd38      	pop	{r3, r4, r5, pc}

080104ec <_Color2Index_0>:
 80104ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104f0:	4682      	mov	sl, r0
 80104f2:	f7f8 ff1f 	bl	8009334 <LCD_GetNumColors>
 80104f6:	4681      	mov	r9, r0
 80104f8:	f7f8 ff3a 	bl	8009370 <LCD_GetPalette>
 80104fc:	4605      	mov	r5, r0
 80104fe:	b1e0      	cbz	r0, 801053a <_Color2Index_0+0x4e>
 8010500:	2300      	movs	r3, #0
 8010502:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 8010506:	4592      	cmp	sl, r2
 8010508:	d019      	beq.n	801053e <_Color2Index_0+0x52>
 801050a:	3301      	adds	r3, #1
 801050c:	454b      	cmp	r3, r9
 801050e:	dbf8      	blt.n	8010502 <_Color2Index_0+0x16>
 8010510:	2700      	movs	r7, #0
 8010512:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 8010516:	463c      	mov	r4, r7
 8010518:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 801051c:	4650      	mov	r0, sl
 801051e:	f7fb fa6b 	bl	800b9f8 <GUI_CalcColorDist>
 8010522:	4626      	mov	r6, r4
 8010524:	4540      	cmp	r0, r8
 8010526:	f104 0401 	add.w	r4, r4, #1
 801052a:	bf24      	itt	cs
 801052c:	4640      	movcs	r0, r8
 801052e:	463e      	movcs	r6, r7
 8010530:	454c      	cmp	r4, r9
 8010532:	da07      	bge.n	8010544 <_Color2Index_0+0x58>
 8010534:	4680      	mov	r8, r0
 8010536:	4637      	mov	r7, r6
 8010538:	e7ee      	b.n	8010518 <_Color2Index_0+0x2c>
 801053a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801053e:	4618      	mov	r0, r3
 8010540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010544:	4630      	mov	r0, r6
 8010546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801054c <_DrawDownRect>:
 801054c:	b510      	push	{r4, lr}
 801054e:	b09c      	sub	sp, #112	; 0x70
 8010550:	4604      	mov	r4, r0
 8010552:	4668      	mov	r0, sp
 8010554:	f7fb fb38 	bl	800bbc8 <GUI_SaveContext_W>
 8010558:	4b09      	ldr	r3, [pc, #36]	; (8010580 <_DrawDownRect+0x34>)
 801055a:	6818      	ldr	r0, [r3, #0]
 801055c:	f7f9 fb04 	bl	8009b68 <LCD_SetColor>
 8010560:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010564:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010568:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801056c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010570:	f7fc f9ea 	bl	800c948 <GUI_DrawRect>
 8010574:	4668      	mov	r0, sp
 8010576:	f7fb fb31 	bl	800bbdc <GUI_RestoreContext>
 801057a:	b01c      	add	sp, #112	; 0x70
 801057c:	bd10      	pop	{r4, pc}
 801057e:	bf00      	nop
 8010580:	20002c80 	.word	0x20002c80

08010584 <_DrawUpRect>:
 8010584:	b510      	push	{r4, lr}
 8010586:	b09c      	sub	sp, #112	; 0x70
 8010588:	4604      	mov	r4, r0
 801058a:	4668      	mov	r0, sp
 801058c:	f7fb fb1c 	bl	800bbc8 <GUI_SaveContext_W>
 8010590:	4b09      	ldr	r3, [pc, #36]	; (80105b8 <_DrawUpRect+0x34>)
 8010592:	6818      	ldr	r0, [r3, #0]
 8010594:	f7f9 fae8 	bl	8009b68 <LCD_SetColor>
 8010598:	f9b4 0000 	ldrsh.w	r0, [r4]
 801059c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80105a0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80105a4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80105a8:	f7fc f9ce 	bl	800c948 <GUI_DrawRect>
 80105ac:	4668      	mov	r0, sp
 80105ae:	f7fb fb15 	bl	800bbdc <GUI_RestoreContext>
 80105b2:	b01c      	add	sp, #112	; 0x70
 80105b4:	bd10      	pop	{r4, pc}
 80105b6:	bf00      	nop
 80105b8:	20002c80 	.word	0x20002c80

080105bc <_DrawDown>:
 80105bc:	b507      	push	{r0, r1, r2, lr}
 80105be:	4668      	mov	r0, sp
 80105c0:	f7f4 ff6c 	bl	800549c <WM_GetClientRect>
 80105c4:	4668      	mov	r0, sp
 80105c6:	f7ff ffc1 	bl	801054c <_DrawDownRect>
 80105ca:	b003      	add	sp, #12
 80105cc:	f85d fb04 	ldr.w	pc, [sp], #4

080105d0 <_DrawUp>:
 80105d0:	b507      	push	{r0, r1, r2, lr}
 80105d2:	4668      	mov	r0, sp
 80105d4:	f7f4 ff62 	bl	800549c <WM_GetClientRect>
 80105d8:	4668      	mov	r0, sp
 80105da:	f7ff ffd3 	bl	8010584 <_DrawUpRect>
 80105de:	b003      	add	sp, #12
 80105e0:	f85d fb04 	ldr.w	pc, [sp], #4

080105e4 <_GetArrowPara>:
 80105e4:	b510      	push	{r4, lr}
 80105e6:	b121      	cbz	r1, 80105f2 <_GetArrowPara+0xe>
 80105e8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80105ec:	f9b0 1000 	ldrsh.w	r1, [r0]
 80105f0:	e003      	b.n	80105fa <_GetArrowPara+0x16>
 80105f2:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80105f6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80105fa:	1a61      	subs	r1, r4, r1
 80105fc:	3101      	adds	r1, #1
 80105fe:	1f0c      	subs	r4, r1, #4
 8010600:	2003      	movs	r0, #3
 8010602:	fb94 f0f0 	sdiv	r0, r4, r0
 8010606:	6010      	str	r0, [r2, #0]
 8010608:	1a08      	subs	r0, r1, r0
 801060a:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 801060e:	3901      	subs	r1, #1
 8010610:	6019      	str	r1, [r3, #0]
 8010612:	bd10      	pop	{r4, pc}

08010614 <_DrawGraspH>:
 8010614:	b570      	push	{r4, r5, r6, lr}
 8010616:	f9b0 3000 	ldrsh.w	r3, [r0]
 801061a:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 801061e:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8010622:	441e      	add	r6, r3
 8010624:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010628:	6a88      	ldr	r0, [r1, #40]	; 0x28
 801062a:	1b5c      	subs	r4, r3, r5
 801062c:	3403      	adds	r4, #3
 801062e:	10a4      	asrs	r4, r4, #2
 8010630:	4425      	add	r5, r4
 8010632:	1076      	asrs	r6, r6, #1
 8010634:	1b1c      	subs	r4, r3, r4
 8010636:	f7fb fae6 	bl	800bc06 <GUI_SetColor>
 801063a:	4630      	mov	r0, r6
 801063c:	4629      	mov	r1, r5
 801063e:	4622      	mov	r2, r4
 8010640:	f7fa fc0e 	bl	800ae60 <GUI_DrawVLine>
 8010644:	1cb0      	adds	r0, r6, #2
 8010646:	4629      	mov	r1, r5
 8010648:	4622      	mov	r2, r4
 801064a:	f7fa fc09 	bl	800ae60 <GUI_DrawVLine>
 801064e:	1d30      	adds	r0, r6, #4
 8010650:	4629      	mov	r1, r5
 8010652:	4622      	mov	r2, r4
 8010654:	f7fa fc04 	bl	800ae60 <GUI_DrawVLine>
 8010658:	1eb0      	subs	r0, r6, #2
 801065a:	4629      	mov	r1, r5
 801065c:	4622      	mov	r2, r4
 801065e:	f7fa fbff 	bl	800ae60 <GUI_DrawVLine>
 8010662:	1f30      	subs	r0, r6, #4
 8010664:	4629      	mov	r1, r5
 8010666:	4622      	mov	r2, r4
 8010668:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801066c:	f7fa bbf8 	b.w	800ae60 <GUI_DrawVLine>

08010670 <_DrawGraspV>:
 8010670:	b570      	push	{r4, r5, r6, lr}
 8010672:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010676:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 801067a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801067e:	441e      	add	r6, r3
 8010680:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010684:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8010686:	1b5c      	subs	r4, r3, r5
 8010688:	3403      	adds	r4, #3
 801068a:	10a4      	asrs	r4, r4, #2
 801068c:	4425      	add	r5, r4
 801068e:	1076      	asrs	r6, r6, #1
 8010690:	1b1c      	subs	r4, r3, r4
 8010692:	f7fb fab8 	bl	800bc06 <GUI_SetColor>
 8010696:	4630      	mov	r0, r6
 8010698:	4629      	mov	r1, r5
 801069a:	4622      	mov	r2, r4
 801069c:	f7fa fb86 	bl	800adac <GUI_DrawHLine>
 80106a0:	1cb0      	adds	r0, r6, #2
 80106a2:	4629      	mov	r1, r5
 80106a4:	4622      	mov	r2, r4
 80106a6:	f7fa fb81 	bl	800adac <GUI_DrawHLine>
 80106aa:	1d30      	adds	r0, r6, #4
 80106ac:	4629      	mov	r1, r5
 80106ae:	4622      	mov	r2, r4
 80106b0:	f7fa fb7c 	bl	800adac <GUI_DrawHLine>
 80106b4:	1eb0      	subs	r0, r6, #2
 80106b6:	4629      	mov	r1, r5
 80106b8:	4622      	mov	r2, r4
 80106ba:	f7fa fb77 	bl	800adac <GUI_DrawHLine>
 80106be:	1f30      	subs	r0, r6, #4
 80106c0:	4629      	mov	r1, r5
 80106c2:	4622      	mov	r2, r4
 80106c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80106c8:	f7fa bb70 	b.w	800adac <GUI_DrawHLine>

080106cc <_DrawFrame>:
 80106cc:	b538      	push	{r3, r4, r5, lr}
 80106ce:	4604      	mov	r4, r0
 80106d0:	6808      	ldr	r0, [r1, #0]
 80106d2:	460d      	mov	r5, r1
 80106d4:	f7fb fa97 	bl	800bc06 <GUI_SetColor>
 80106d8:	f9b4 1000 	ldrsh.w	r1, [r4]
 80106dc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80106e0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80106e4:	3101      	adds	r1, #1
 80106e6:	3a01      	subs	r2, #1
 80106e8:	f7fa fb60 	bl	800adac <GUI_DrawHLine>
 80106ec:	f9b4 1000 	ldrsh.w	r1, [r4]
 80106f0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80106f4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80106f8:	3101      	adds	r1, #1
 80106fa:	3a01      	subs	r2, #1
 80106fc:	f7fa fb56 	bl	800adac <GUI_DrawHLine>
 8010700:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010704:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010708:	f9b4 0000 	ldrsh.w	r0, [r4]
 801070c:	3101      	adds	r1, #1
 801070e:	3a01      	subs	r2, #1
 8010710:	f7fa fba6 	bl	800ae60 <GUI_DrawVLine>
 8010714:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010718:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801071c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010720:	3101      	adds	r1, #1
 8010722:	3a01      	subs	r2, #1
 8010724:	f7fa fb9c 	bl	800ae60 <GUI_DrawVLine>
 8010728:	6868      	ldr	r0, [r5, #4]
 801072a:	f7fb fa6c 	bl	800bc06 <GUI_SetColor>
 801072e:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8010732:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010736:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801073a:	3001      	adds	r0, #1
 801073c:	3101      	adds	r1, #1
 801073e:	3a01      	subs	r2, #1
 8010740:	f7fa fb34 	bl	800adac <GUI_DrawHLine>
 8010744:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8010748:	f9b4 1000 	ldrsh.w	r1, [r4]
 801074c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010750:	3801      	subs	r0, #1
 8010752:	3101      	adds	r1, #1
 8010754:	3a01      	subs	r2, #1
 8010756:	f7fa fb29 	bl	800adac <GUI_DrawHLine>
 801075a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801075e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010762:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010766:	3001      	adds	r0, #1
 8010768:	3102      	adds	r1, #2
 801076a:	3a02      	subs	r2, #2
 801076c:	f7fa fb78 	bl	800ae60 <GUI_DrawVLine>
 8010770:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010774:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010778:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801077c:	3102      	adds	r1, #2
 801077e:	3a02      	subs	r2, #2
 8010780:	3801      	subs	r0, #1
 8010782:	f7fa fb6d 	bl	800ae60 <GUI_DrawVLine>
 8010786:	68a8      	ldr	r0, [r5, #8]
 8010788:	f7fb fa3d 	bl	800bc06 <GUI_SetColor>
 801078c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010790:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010794:	f7fa fb2e 	bl	800adf4 <GUI_DrawPixel>
 8010798:	f9b4 0000 	ldrsh.w	r0, [r4]
 801079c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80107a0:	f7fa fb28 	bl	800adf4 <GUI_DrawPixel>
 80107a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80107a8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80107ac:	f7fa fb22 	bl	800adf4 <GUI_DrawPixel>
 80107b0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80107b4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80107b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80107bc:	f7fa bb1a 	b.w	800adf4 <GUI_DrawPixel>

080107c0 <_DrawBackgroundH>:
 80107c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80107c2:	4604      	mov	r4, r0
 80107c4:	460d      	mov	r5, r1
 80107c6:	f7ff ff81 	bl	80106cc <_DrawFrame>
 80107ca:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80107ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80107d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80107d6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80107da:	68ee      	ldr	r6, [r5, #12]
 80107dc:	9600      	str	r6, [sp, #0]
 80107de:	440b      	add	r3, r1
 80107e0:	692e      	ldr	r6, [r5, #16]
 80107e2:	9601      	str	r6, [sp, #4]
 80107e4:	3002      	adds	r0, #2
 80107e6:	3102      	adds	r1, #2
 80107e8:	3a02      	subs	r2, #2
 80107ea:	105b      	asrs	r3, r3, #1
 80107ec:	f7ff fde2 	bl	80103b4 <GUI_DrawGradientV>
 80107f0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80107f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80107f8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80107fc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010800:	696c      	ldr	r4, [r5, #20]
 8010802:	9400      	str	r4, [sp, #0]
 8010804:	4419      	add	r1, r3
 8010806:	69ac      	ldr	r4, [r5, #24]
 8010808:	9401      	str	r4, [sp, #4]
 801080a:	1049      	asrs	r1, r1, #1
 801080c:	3002      	adds	r0, #2
 801080e:	3101      	adds	r1, #1
 8010810:	3a02      	subs	r2, #2
 8010812:	3b02      	subs	r3, #2
 8010814:	f7ff fdce 	bl	80103b4 <GUI_DrawGradientV>
 8010818:	b002      	add	sp, #8
 801081a:	bd70      	pop	{r4, r5, r6, pc}

0801081c <_DrawBackgroundV>:
 801081c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801081e:	4604      	mov	r4, r0
 8010820:	460d      	mov	r5, r1
 8010822:	f7ff ff53 	bl	80106cc <_DrawFrame>
 8010826:	f9b4 0000 	ldrsh.w	r0, [r4]
 801082a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801082e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010832:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010836:	68ee      	ldr	r6, [r5, #12]
 8010838:	9600      	str	r6, [sp, #0]
 801083a:	4402      	add	r2, r0
 801083c:	692e      	ldr	r6, [r5, #16]
 801083e:	9601      	str	r6, [sp, #4]
 8010840:	3002      	adds	r0, #2
 8010842:	3102      	adds	r1, #2
 8010844:	1052      	asrs	r2, r2, #1
 8010846:	3b02      	subs	r3, #2
 8010848:	f7ff fde6 	bl	8010418 <GUI_DrawGradientH>
 801084c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010850:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010854:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010858:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801085c:	696c      	ldr	r4, [r5, #20]
 801085e:	9400      	str	r4, [sp, #0]
 8010860:	4410      	add	r0, r2
 8010862:	69ac      	ldr	r4, [r5, #24]
 8010864:	9401      	str	r4, [sp, #4]
 8010866:	1040      	asrs	r0, r0, #1
 8010868:	3001      	adds	r0, #1
 801086a:	3102      	adds	r1, #2
 801086c:	3a02      	subs	r2, #2
 801086e:	3b02      	subs	r3, #2
 8010870:	f7ff fdd2 	bl	8010418 <GUI_DrawGradientH>
 8010874:	b002      	add	sp, #8
 8010876:	bd70      	pop	{r4, r5, r6, pc}

08010878 <SCROLLBAR_DrawSkinFlex>:
 8010878:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801087c:	4604      	mov	r4, r0
 801087e:	b08b      	sub	sp, #44	; 0x2c
 8010880:	6800      	ldr	r0, [r0, #0]
 8010882:	f7fb fe21 	bl	800c4c8 <GUI_ALLOC_LockH>
 8010886:	4607      	mov	r7, r0
 8010888:	a80a      	add	r0, sp, #40	; 0x28
 801088a:	ae06      	add	r6, sp, #24
 801088c:	f840 7d1c 	str.w	r7, [r0, #-28]!
 8010890:	f7fb fe28 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8010894:	6923      	ldr	r3, [r4, #16]
 8010896:	f8ad 3018 	strh.w	r3, [sp, #24]
 801089a:	6963      	ldr	r3, [r4, #20]
 801089c:	f8ad 301a 	strh.w	r3, [sp, #26]
 80108a0:	69a3      	ldr	r3, [r4, #24]
 80108a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80108a6:	69e3      	ldr	r3, [r4, #28]
 80108a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80108ac:	6a25      	ldr	r5, [r4, #32]
 80108ae:	e896 0003 	ldmia.w	r6, {r0, r1}
 80108b2:	682b      	ldr	r3, [r5, #0]
 80108b4:	f10d 0820 	add.w	r8, sp, #32
 80108b8:	e888 0003 	stmia.w	r8, {r0, r1}
 80108bc:	b153      	cbz	r3, 80108d4 <SCROLLBAR_DrawSkinFlex+0x5c>
 80108be:	4638      	mov	r0, r7
 80108c0:	4631      	mov	r1, r6
 80108c2:	4632      	mov	r2, r6
 80108c4:	f7fc f94d 	bl	800cb62 <WIDGET__RotateRect90>
 80108c8:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8010a08 <SCROLLBAR_DrawSkinFlex+0x190>
 80108cc:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8010a0c <SCROLLBAR_DrawSkinFlex+0x194>
 80108d0:	4b49      	ldr	r3, [pc, #292]	; (80109f8 <SCROLLBAR_DrawSkinFlex+0x180>)
 80108d2:	e004      	b.n	80108de <SCROLLBAR_DrawSkinFlex+0x66>
 80108d4:	f8df 9138 	ldr.w	r9, [pc, #312]	; 8010a10 <SCROLLBAR_DrawSkinFlex+0x198>
 80108d8:	f8df c138 	ldr.w	ip, [pc, #312]	; 8010a14 <SCROLLBAR_DrawSkinFlex+0x19c>
 80108dc:	4b47      	ldr	r3, [pc, #284]	; (80109fc <SCROLLBAR_DrawSkinFlex+0x184>)
 80108de:	6862      	ldr	r2, [r4, #4]
 80108e0:	3a08      	subs	r2, #8
 80108e2:	2a11      	cmp	r2, #17
 80108e4:	f200 8083 	bhi.w	80109ee <SCROLLBAR_DrawSkinFlex+0x176>
 80108e8:	e8df f002 	tbb	[pc, r2]
 80108ec:	81815f13 	.word	0x81815f13
 80108f0:	81818134 	.word	0x81818134
 80108f4:	43813434 	.word	0x43813434
 80108f8:	81818181 	.word	0x81818181
 80108fc:	0981      	.short	0x0981
 80108fe:	682b      	ldr	r3, [r5, #0]
 8010900:	b113      	cbz	r3, 8010908 <SCROLLBAR_DrawSkinFlex+0x90>
 8010902:	69a0      	ldr	r0, [r4, #24]
 8010904:	6923      	ldr	r3, [r4, #16]
 8010906:	e001      	b.n	801090c <SCROLLBAR_DrawSkinFlex+0x94>
 8010908:	69e0      	ldr	r0, [r4, #28]
 801090a:	6963      	ldr	r3, [r4, #20]
 801090c:	1ac0      	subs	r0, r0, r3
 801090e:	3001      	adds	r0, #1
 8010910:	e06e      	b.n	80109f0 <SCROLLBAR_DrawSkinFlex+0x178>
 8010912:	686a      	ldr	r2, [r5, #4]
 8010914:	493a      	ldr	r1, [pc, #232]	; (8010a00 <SCROLLBAR_DrawSkinFlex+0x188>)
 8010916:	4c3b      	ldr	r4, [pc, #236]	; (8010a04 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8010918:	2a02      	cmp	r2, #2
 801091a:	bf08      	it	eq
 801091c:	460c      	moveq	r4, r1
 801091e:	4630      	mov	r0, r6
 8010920:	4621      	mov	r1, r4
 8010922:	4798      	blx	r3
 8010924:	6829      	ldr	r1, [r5, #0]
 8010926:	aa04      	add	r2, sp, #16
 8010928:	ab05      	add	r3, sp, #20
 801092a:	4640      	mov	r0, r8
 801092c:	f7ff fe5a 	bl	80105e4 <_GetArrowPara>
 8010930:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8010932:	f7fb f968 	bl	800bc06 <GUI_SetColor>
 8010936:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801093a:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 801093e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010942:	1ad2      	subs	r2, r2, r3
 8010944:	f04f 33ff 	mov.w	r3, #4294967295
 8010948:	9300      	str	r3, [sp, #0]
 801094a:	9b05      	ldr	r3, [sp, #20]
 801094c:	3201      	adds	r2, #1
 801094e:	4638      	mov	r0, r7
 8010950:	4419      	add	r1, r3
 8010952:	e048      	b.n	80109e6 <SCROLLBAR_DrawSkinFlex+0x16e>
 8010954:	4c2b      	ldr	r4, [pc, #172]	; (8010a04 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8010956:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 801095a:	69e5      	ldr	r5, [r4, #28]
 801095c:	9500      	str	r5, [sp, #0]
 801095e:	6a24      	ldr	r4, [r4, #32]
 8010960:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8010964:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8010968:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801096c:	9401      	str	r4, [sp, #4]
 801096e:	47e0      	blx	ip
 8010970:	e03d      	b.n	80109ee <SCROLLBAR_DrawSkinFlex+0x176>
 8010972:	686a      	ldr	r2, [r5, #4]
 8010974:	4922      	ldr	r1, [pc, #136]	; (8010a00 <SCROLLBAR_DrawSkinFlex+0x188>)
 8010976:	4c23      	ldr	r4, [pc, #140]	; (8010a04 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8010978:	2a03      	cmp	r2, #3
 801097a:	bf08      	it	eq
 801097c:	460c      	moveq	r4, r1
 801097e:	4630      	mov	r0, r6
 8010980:	4621      	mov	r1, r4
 8010982:	4798      	blx	r3
 8010984:	682b      	ldr	r3, [r5, #0]
 8010986:	b123      	cbz	r3, 8010992 <SCROLLBAR_DrawSkinFlex+0x11a>
 8010988:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 801098c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010990:	e003      	b.n	801099a <SCROLLBAR_DrawSkinFlex+0x122>
 8010992:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8010996:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801099a:	1ad3      	subs	r3, r2, r3
 801099c:	3301      	adds	r3, #1
 801099e:	2b0e      	cmp	r3, #14
 80109a0:	dd25      	ble.n	80109ee <SCROLLBAR_DrawSkinFlex+0x176>
 80109a2:	4630      	mov	r0, r6
 80109a4:	4621      	mov	r1, r4
 80109a6:	47c8      	blx	r9
 80109a8:	e021      	b.n	80109ee <SCROLLBAR_DrawSkinFlex+0x176>
 80109aa:	686a      	ldr	r2, [r5, #4]
 80109ac:	4914      	ldr	r1, [pc, #80]	; (8010a00 <SCROLLBAR_DrawSkinFlex+0x188>)
 80109ae:	4c15      	ldr	r4, [pc, #84]	; (8010a04 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80109b0:	2a01      	cmp	r2, #1
 80109b2:	bf08      	it	eq
 80109b4:	460c      	moveq	r4, r1
 80109b6:	4630      	mov	r0, r6
 80109b8:	4621      	mov	r1, r4
 80109ba:	4798      	blx	r3
 80109bc:	6829      	ldr	r1, [r5, #0]
 80109be:	aa04      	add	r2, sp, #16
 80109c0:	ab05      	add	r3, sp, #20
 80109c2:	4640      	mov	r0, r8
 80109c4:	f7ff fe0e 	bl	80105e4 <_GetArrowPara>
 80109c8:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80109ca:	f7fb f91c 	bl	800bc06 <GUI_SetColor>
 80109ce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80109d2:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 80109d6:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 80109da:	1ad2      	subs	r2, r2, r3
 80109dc:	2301      	movs	r3, #1
 80109de:	9300      	str	r3, [sp, #0]
 80109e0:	9b05      	ldr	r3, [sp, #20]
 80109e2:	4638      	mov	r0, r7
 80109e4:	1ac9      	subs	r1, r1, r3
 80109e6:	1052      	asrs	r2, r2, #1
 80109e8:	9b04      	ldr	r3, [sp, #16]
 80109ea:	f7fc f9eb 	bl	800cdc4 <WIDGET__DrawTriangle>
 80109ee:	2000      	movs	r0, #0
 80109f0:	b00b      	add	sp, #44	; 0x2c
 80109f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109f6:	bf00      	nop
 80109f8:	0801081d 	.word	0x0801081d
 80109fc:	080107c1 	.word	0x080107c1
 8010a00:	2000019c 	.word	0x2000019c
 8010a04:	200001c8 	.word	0x200001c8
 8010a08:	08010671 	.word	0x08010671
 8010a0c:	08010419 	.word	0x08010419
 8010a10:	08010615 	.word	0x08010615
 8010a14:	080103b5 	.word	0x080103b5

08010a18 <_Create>:
 8010a18:	b530      	push	{r4, r5, lr}
 8010a1a:	b08d      	sub	sp, #52	; 0x34
 8010a1c:	4605      	mov	r5, r0
 8010a1e:	f7fb fd53 	bl	800c4c8 <GUI_ALLOC_LockH>
 8010a22:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8010a24:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8010a26:	9000      	str	r0, [sp, #0]
 8010a28:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010a2c:	9301      	str	r3, [sp, #4]
 8010a2e:	4b07      	ldr	r3, [pc, #28]	; (8010a4c <_Create+0x34>)
 8010a30:	6483      	str	r3, [r0, #72]	; 0x48
 8010a32:	4668      	mov	r0, sp
 8010a34:	f7fb fd56 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8010a38:	2300      	movs	r3, #0
 8010a3a:	9304      	str	r3, [sp, #16]
 8010a3c:	ab01      	add	r3, sp, #4
 8010a3e:	9503      	str	r5, [sp, #12]
 8010a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8010a42:	a803      	add	r0, sp, #12
 8010a44:	47a0      	blx	r4
 8010a46:	b00d      	add	sp, #52	; 0x34
 8010a48:	bd30      	pop	{r4, r5, pc}
 8010a4a:	bf00      	nop
 8010a4c:	08010a51 	.word	0x08010a51

08010a50 <_CalcPositions>:
 8010a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010a54:	b090      	sub	sp, #64	; 0x40
 8010a56:	4605      	mov	r5, r0
 8010a58:	460c      	mov	r4, r1
 8010a5a:	f7fb fd35 	bl	800c4c8 <GUI_ALLOC_LockH>
 8010a5e:	4603      	mov	r3, r0
 8010a60:	9000      	str	r0, [sp, #0]
 8010a62:	c803      	ldmia	r0, {r0, r1}
 8010a64:	ae03      	add	r6, sp, #12
 8010a66:	e886 0003 	stmia.w	r6, {r0, r1}
 8010a6a:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 8010a6c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8010a70:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8010a74:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8010a78:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8010a7c:	920e      	str	r2, [sp, #56]	; 0x38
 8010a7e:	f000 0008 	and.w	r0, r0, #8
 8010a82:	2800      	cmp	r0, #0
 8010a84:	bf0c      	ite	eq
 8010a86:	4608      	moveq	r0, r1
 8010a88:	4610      	movne	r0, r2
 8010a8a:	61a0      	str	r0, [r4, #24]
 8010a8c:	bf0c      	ite	eq
 8010a8e:	2000      	moveq	r0, #0
 8010a90:	2001      	movne	r0, #1
 8010a92:	aa01      	add	r2, sp, #4
 8010a94:	9001      	str	r0, [sp, #4]
 8010a96:	2019      	movs	r0, #25
 8010a98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010a9a:	9008      	str	r0, [sp, #32]
 8010a9c:	9507      	str	r5, [sp, #28]
 8010a9e:	920f      	str	r2, [sp, #60]	; 0x3c
 8010aa0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8010aa4:	970c      	str	r7, [sp, #48]	; 0x30
 8010aa6:	910d      	str	r1, [sp, #52]	; 0x34
 8010aa8:	a807      	add	r0, sp, #28
 8010aaa:	4798      	blx	r3
 8010aac:	9b00      	ldr	r3, [sp, #0]
 8010aae:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8010ab2:	2aff      	cmp	r2, #255	; 0xff
 8010ab4:	4605      	mov	r5, r0
 8010ab6:	d111      	bne.n	8010adc <_CalcPositions+0x8c>
 8010ab8:	6998      	ldr	r0, [r3, #24]
 8010aba:	f7f4 fe17 	bl	80056ec <WM_GetScrollbarV>
 8010abe:	b168      	cbz	r0, 8010adc <_CalcPositions+0x8c>
 8010ac0:	a905      	add	r1, sp, #20
 8010ac2:	f7f4 fe2c 	bl	800571e <WM_GetWindowRectEx>
 8010ac6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8010aca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010ace:	429a      	cmp	r2, r3
 8010ad0:	d104      	bne.n	8010adc <_CalcPositions+0x8c>
 8010ad2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8010ad6:	3b01      	subs	r3, #1
 8010ad8:	f8ad 3010 	strh.w	r3, [sp, #16]
 8010adc:	9b00      	ldr	r3, [sp, #0]
 8010ade:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 8010ae2:	2afe      	cmp	r2, #254	; 0xfe
 8010ae4:	d111      	bne.n	8010b0a <_CalcPositions+0xba>
 8010ae6:	6998      	ldr	r0, [r3, #24]
 8010ae8:	f7f4 fdfb 	bl	80056e2 <WM_GetScrollbarH>
 8010aec:	b168      	cbz	r0, 8010b0a <_CalcPositions+0xba>
 8010aee:	a905      	add	r1, sp, #20
 8010af0:	f7f4 fe15 	bl	800571e <WM_GetWindowRectEx>
 8010af4:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8010af8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010afc:	429a      	cmp	r2, r3
 8010afe:	d104      	bne.n	8010b0a <_CalcPositions+0xba>
 8010b00:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010b04:	3b01      	subs	r3, #1
 8010b06:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010b0a:	427a      	negs	r2, r7
 8010b0c:	4630      	mov	r0, r6
 8010b0e:	f1c8 0100 	rsb	r1, r8, #0
 8010b12:	f7fa fff0 	bl	800baf6 <GUI_MoveRect>
 8010b16:	9800      	ldr	r0, [sp, #0]
 8010b18:	4631      	mov	r1, r6
 8010b1a:	f7fc f9ac 	bl	800ce76 <SCROLLBAR__Rect2VRect>
 8010b1e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010b22:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 8010b26:	9b00      	ldr	r3, [sp, #0]
 8010b28:	ebc2 0a0a 	rsb	sl, r2, sl
 8010b2c:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 8010b30:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8010b32:	f10a 0601 	add.w	r6, sl, #1
 8010b36:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 8010b3a:	4649      	mov	r1, r9
 8010b3c:	4370      	muls	r0, r6
 8010b3e:	f7f9 f81b 	bl	8009b78 <GUI__DivideRound32>
 8010b42:	4b17      	ldr	r3, [pc, #92]	; (8010ba0 <_CalcPositions+0x150>)
 8010b44:	f8c4 a014 	str.w	sl, [r4, #20]
 8010b48:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010b4c:	1c5a      	adds	r2, r3, #1
 8010b4e:	4282      	cmp	r2, r0
 8010b50:	bfa8      	it	ge
 8010b52:	1c98      	addge	r0, r3, #2
 8010b54:	42b0      	cmp	r0, r6
 8010b56:	bfb4      	ite	lt
 8010b58:	4607      	movlt	r7, r0
 8010b5a:	4637      	movge	r7, r6
 8010b5c:	ebc7 0806 	rsb	r8, r7, r6
 8010b60:	442e      	add	r6, r5
 8010b62:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010b66:	6126      	str	r6, [r4, #16]
 8010b68:	ae10      	add	r6, sp, #64	; 0x40
 8010b6a:	6023      	str	r3, [r4, #0]
 8010b6c:	1e6b      	subs	r3, r5, #1
 8010b6e:	6063      	str	r3, [r4, #4]
 8010b70:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8010b74:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8010b76:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8010b78:	fb00 f008 	mul.w	r0, r0, r8
 8010b7c:	ebc1 0109 	rsb	r1, r1, r9
 8010b80:	f7f8 fffa 	bl	8009b78 <GUI__DivideRound32>
 8010b84:	4428      	add	r0, r5
 8010b86:	19c5      	adds	r5, r0, r7
 8010b88:	3d01      	subs	r5, #1
 8010b8a:	60a0      	str	r0, [r4, #8]
 8010b8c:	60e5      	str	r5, [r4, #12]
 8010b8e:	f8c4 801c 	str.w	r8, [r4, #28]
 8010b92:	6227      	str	r7, [r4, #32]
 8010b94:	4668      	mov	r0, sp
 8010b96:	f7fb fca5 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8010b9a:	b010      	add	sp, #64	; 0x40
 8010b9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ba0:	200000ea 	.word	0x200000ea

08010ba4 <_Paint>:
 8010ba4:	b570      	push	{r4, r5, r6, lr}
 8010ba6:	b098      	sub	sp, #96	; 0x60
 8010ba8:	4606      	mov	r6, r0
 8010baa:	f7fb fc8d 	bl	800c4c8 <GUI_ALLOC_LockH>
 8010bae:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8010bb0:	9305      	str	r3, [sp, #20]
 8010bb2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8010bb4:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8010bb6:	9001      	str	r0, [sp, #4]
 8010bb8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010bbc:	a906      	add	r1, sp, #24
 8010bbe:	4605      	mov	r5, r0
 8010bc0:	4630      	mov	r0, r6
 8010bc2:	9304      	str	r3, [sp, #16]
 8010bc4:	f7ff ff44 	bl	8010a50 <_CalcPositions>
 8010bc8:	a801      	add	r0, sp, #4
 8010bca:	f7fb fc8b 	bl	800c4e4 <GUI_ALLOC_UnlockH>
 8010bce:	a902      	add	r1, sp, #8
 8010bd0:	4628      	mov	r0, r5
 8010bd2:	f7fb ffd8 	bl	800cb86 <WIDGET__GetClientRect>
 8010bd6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8010bda:	9314      	str	r3, [sp, #80]	; 0x50
 8010bdc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010be0:	9316      	str	r3, [sp, #88]	; 0x58
 8010be2:	ab04      	add	r3, sp, #16
 8010be4:	9317      	str	r3, [sp, #92]	; 0x5c
 8010be6:	2308      	movs	r3, #8
 8010be8:	9310      	str	r3, [sp, #64]	; 0x40
 8010bea:	9b06      	ldr	r3, [sp, #24]
 8010bec:	9313      	str	r3, [sp, #76]	; 0x4c
 8010bee:	9b07      	ldr	r3, [sp, #28]
 8010bf0:	9315      	str	r3, [sp, #84]	; 0x54
 8010bf2:	960f      	str	r6, [sp, #60]	; 0x3c
 8010bf4:	a80f      	add	r0, sp, #60	; 0x3c
 8010bf6:	47a0      	blx	r4
 8010bf8:	2310      	movs	r3, #16
 8010bfa:	9310      	str	r3, [sp, #64]	; 0x40
 8010bfc:	9b07      	ldr	r3, [sp, #28]
 8010bfe:	3301      	adds	r3, #1
 8010c00:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c02:	9b08      	ldr	r3, [sp, #32]
 8010c04:	3b01      	subs	r3, #1
 8010c06:	9315      	str	r3, [sp, #84]	; 0x54
 8010c08:	a80f      	add	r0, sp, #60	; 0x3c
 8010c0a:	47a0      	blx	r4
 8010c0c:	2311      	movs	r3, #17
 8010c0e:	9310      	str	r3, [sp, #64]	; 0x40
 8010c10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c12:	3301      	adds	r3, #1
 8010c14:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010c18:	3b01      	subs	r3, #1
 8010c1a:	9315      	str	r3, [sp, #84]	; 0x54
 8010c1c:	a80f      	add	r0, sp, #60	; 0x3c
 8010c1e:	47a0      	blx	r4
 8010c20:	2313      	movs	r3, #19
 8010c22:	9310      	str	r3, [sp, #64]	; 0x40
 8010c24:	9b08      	ldr	r3, [sp, #32]
 8010c26:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c2a:	9315      	str	r3, [sp, #84]	; 0x54
 8010c2c:	a80f      	add	r0, sp, #60	; 0x3c
 8010c2e:	47a0      	blx	r4
 8010c30:	2309      	movs	r3, #9
 8010c32:	9310      	str	r3, [sp, #64]	; 0x40
 8010c34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010c36:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010c3a:	9315      	str	r3, [sp, #84]	; 0x54
 8010c3c:	a80f      	add	r0, sp, #60	; 0x3c
 8010c3e:	47a0      	blx	r4
 8010c40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010c44:	429a      	cmp	r2, r3
 8010c46:	d006      	beq.n	8010c56 <_Paint+0xb2>
 8010c48:	210c      	movs	r1, #12
 8010c4a:	3201      	adds	r2, #1
 8010c4c:	9110      	str	r1, [sp, #64]	; 0x40
 8010c4e:	9213      	str	r2, [sp, #76]	; 0x4c
 8010c50:	9315      	str	r3, [sp, #84]	; 0x54
 8010c52:	a80f      	add	r0, sp, #60	; 0x3c
 8010c54:	47a0      	blx	r4
 8010c56:	b018      	add	sp, #96	; 0x60
 8010c58:	bd70      	pop	{r4, r5, r6, pc}

08010c5a <LCD_GetNumLayers>:
 8010c5a:	b510      	push	{r4, lr}
 8010c5c:	2000      	movs	r0, #0
 8010c5e:	f7fa fc69 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8010c62:	1c04      	adds	r4, r0, #0
 8010c64:	f04f 0001 	mov.w	r0, #1
 8010c68:	bf18      	it	ne
 8010c6a:	2401      	movne	r4, #1
 8010c6c:	f7fa fc62 	bl	800b534 <GUI_DEVICE__GetpDriver>
 8010c70:	b100      	cbz	r0, 8010c74 <LCD_GetNumLayers+0x1a>
 8010c72:	3401      	adds	r4, #1
 8010c74:	4620      	mov	r0, r4
 8010c76:	bd10      	pop	{r4, pc}

08010c78 <__libc_init_array>:
 8010c78:	b570      	push	{r4, r5, r6, lr}
 8010c7a:	4d0d      	ldr	r5, [pc, #52]	; (8010cb0 <__libc_init_array+0x38>)
 8010c7c:	4c0d      	ldr	r4, [pc, #52]	; (8010cb4 <__libc_init_array+0x3c>)
 8010c7e:	1b64      	subs	r4, r4, r5
 8010c80:	10a4      	asrs	r4, r4, #2
 8010c82:	2600      	movs	r6, #0
 8010c84:	42a6      	cmp	r6, r4
 8010c86:	d109      	bne.n	8010c9c <__libc_init_array+0x24>
 8010c88:	4d0b      	ldr	r5, [pc, #44]	; (8010cb8 <__libc_init_array+0x40>)
 8010c8a:	4c0c      	ldr	r4, [pc, #48]	; (8010cbc <__libc_init_array+0x44>)
 8010c8c:	f000 f9b0 	bl	8010ff0 <_init>
 8010c90:	1b64      	subs	r4, r4, r5
 8010c92:	10a4      	asrs	r4, r4, #2
 8010c94:	2600      	movs	r6, #0
 8010c96:	42a6      	cmp	r6, r4
 8010c98:	d105      	bne.n	8010ca6 <__libc_init_array+0x2e>
 8010c9a:	bd70      	pop	{r4, r5, r6, pc}
 8010c9c:	f855 3b04 	ldr.w	r3, [r5], #4
 8010ca0:	4798      	blx	r3
 8010ca2:	3601      	adds	r6, #1
 8010ca4:	e7ee      	b.n	8010c84 <__libc_init_array+0xc>
 8010ca6:	f855 3b04 	ldr.w	r3, [r5], #4
 8010caa:	4798      	blx	r3
 8010cac:	3601      	adds	r6, #1
 8010cae:	e7f2      	b.n	8010c96 <__libc_init_array+0x1e>
 8010cb0:	08014934 	.word	0x08014934
 8010cb4:	08014934 	.word	0x08014934
 8010cb8:	08014934 	.word	0x08014934
 8010cbc:	08014938 	.word	0x08014938

08010cc0 <__itoa>:
 8010cc0:	1e93      	subs	r3, r2, #2
 8010cc2:	2b22      	cmp	r3, #34	; 0x22
 8010cc4:	b510      	push	{r4, lr}
 8010cc6:	460c      	mov	r4, r1
 8010cc8:	d904      	bls.n	8010cd4 <__itoa+0x14>
 8010cca:	2300      	movs	r3, #0
 8010ccc:	700b      	strb	r3, [r1, #0]
 8010cce:	461c      	mov	r4, r3
 8010cd0:	4620      	mov	r0, r4
 8010cd2:	bd10      	pop	{r4, pc}
 8010cd4:	2a0a      	cmp	r2, #10
 8010cd6:	d109      	bne.n	8010cec <__itoa+0x2c>
 8010cd8:	2800      	cmp	r0, #0
 8010cda:	da07      	bge.n	8010cec <__itoa+0x2c>
 8010cdc:	232d      	movs	r3, #45	; 0x2d
 8010cde:	700b      	strb	r3, [r1, #0]
 8010ce0:	4240      	negs	r0, r0
 8010ce2:	2101      	movs	r1, #1
 8010ce4:	4421      	add	r1, r4
 8010ce6:	f000 f83d 	bl	8010d64 <__utoa>
 8010cea:	e7f1      	b.n	8010cd0 <__itoa+0x10>
 8010cec:	2100      	movs	r1, #0
 8010cee:	e7f9      	b.n	8010ce4 <__itoa+0x24>

08010cf0 <itoa>:
 8010cf0:	f7ff bfe6 	b.w	8010cc0 <__itoa>

08010cf4 <memcpy>:
 8010cf4:	440a      	add	r2, r1
 8010cf6:	4291      	cmp	r1, r2
 8010cf8:	f100 33ff 	add.w	r3, r0, #4294967295
 8010cfc:	d100      	bne.n	8010d00 <memcpy+0xc>
 8010cfe:	4770      	bx	lr
 8010d00:	b510      	push	{r4, lr}
 8010d02:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010d06:	f803 4f01 	strb.w	r4, [r3, #1]!
 8010d0a:	4291      	cmp	r1, r2
 8010d0c:	d1f9      	bne.n	8010d02 <memcpy+0xe>
 8010d0e:	bd10      	pop	{r4, pc}

08010d10 <memmove>:
 8010d10:	4288      	cmp	r0, r1
 8010d12:	b510      	push	{r4, lr}
 8010d14:	eb01 0402 	add.w	r4, r1, r2
 8010d18:	d902      	bls.n	8010d20 <memmove+0x10>
 8010d1a:	4284      	cmp	r4, r0
 8010d1c:	4623      	mov	r3, r4
 8010d1e:	d807      	bhi.n	8010d30 <memmove+0x20>
 8010d20:	1e43      	subs	r3, r0, #1
 8010d22:	42a1      	cmp	r1, r4
 8010d24:	d008      	beq.n	8010d38 <memmove+0x28>
 8010d26:	f811 2b01 	ldrb.w	r2, [r1], #1
 8010d2a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8010d2e:	e7f8      	b.n	8010d22 <memmove+0x12>
 8010d30:	4402      	add	r2, r0
 8010d32:	4601      	mov	r1, r0
 8010d34:	428a      	cmp	r2, r1
 8010d36:	d100      	bne.n	8010d3a <memmove+0x2a>
 8010d38:	bd10      	pop	{r4, pc}
 8010d3a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8010d3e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8010d42:	e7f7      	b.n	8010d34 <memmove+0x24>

08010d44 <memset>:
 8010d44:	4402      	add	r2, r0
 8010d46:	4603      	mov	r3, r0
 8010d48:	4293      	cmp	r3, r2
 8010d4a:	d100      	bne.n	8010d4e <memset+0xa>
 8010d4c:	4770      	bx	lr
 8010d4e:	f803 1b01 	strb.w	r1, [r3], #1
 8010d52:	e7f9      	b.n	8010d48 <memset+0x4>

08010d54 <strcpy>:
 8010d54:	4603      	mov	r3, r0
 8010d56:	f811 2b01 	ldrb.w	r2, [r1], #1
 8010d5a:	f803 2b01 	strb.w	r2, [r3], #1
 8010d5e:	2a00      	cmp	r2, #0
 8010d60:	d1f9      	bne.n	8010d56 <strcpy+0x2>
 8010d62:	4770      	bx	lr

08010d64 <__utoa>:
 8010d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d66:	4c1f      	ldr	r4, [pc, #124]	; (8010de4 <__utoa+0x80>)
 8010d68:	b08b      	sub	sp, #44	; 0x2c
 8010d6a:	4605      	mov	r5, r0
 8010d6c:	460b      	mov	r3, r1
 8010d6e:	466e      	mov	r6, sp
 8010d70:	f104 0c20 	add.w	ip, r4, #32
 8010d74:	6820      	ldr	r0, [r4, #0]
 8010d76:	6861      	ldr	r1, [r4, #4]
 8010d78:	4637      	mov	r7, r6
 8010d7a:	c703      	stmia	r7!, {r0, r1}
 8010d7c:	3408      	adds	r4, #8
 8010d7e:	4564      	cmp	r4, ip
 8010d80:	463e      	mov	r6, r7
 8010d82:	d1f7      	bne.n	8010d74 <__utoa+0x10>
 8010d84:	7921      	ldrb	r1, [r4, #4]
 8010d86:	7139      	strb	r1, [r7, #4]
 8010d88:	1e91      	subs	r1, r2, #2
 8010d8a:	6820      	ldr	r0, [r4, #0]
 8010d8c:	6038      	str	r0, [r7, #0]
 8010d8e:	2922      	cmp	r1, #34	; 0x22
 8010d90:	f04f 0100 	mov.w	r1, #0
 8010d94:	d904      	bls.n	8010da0 <__utoa+0x3c>
 8010d96:	7019      	strb	r1, [r3, #0]
 8010d98:	460b      	mov	r3, r1
 8010d9a:	4618      	mov	r0, r3
 8010d9c:	b00b      	add	sp, #44	; 0x2c
 8010d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010da0:	1e58      	subs	r0, r3, #1
 8010da2:	4684      	mov	ip, r0
 8010da4:	fbb5 f7f2 	udiv	r7, r5, r2
 8010da8:	fb02 5617 	mls	r6, r2, r7, r5
 8010dac:	3628      	adds	r6, #40	; 0x28
 8010dae:	446e      	add	r6, sp
 8010db0:	460c      	mov	r4, r1
 8010db2:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8010db6:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8010dba:	462e      	mov	r6, r5
 8010dbc:	42b2      	cmp	r2, r6
 8010dbe:	f101 0101 	add.w	r1, r1, #1
 8010dc2:	463d      	mov	r5, r7
 8010dc4:	d9ee      	bls.n	8010da4 <__utoa+0x40>
 8010dc6:	2200      	movs	r2, #0
 8010dc8:	545a      	strb	r2, [r3, r1]
 8010dca:	1919      	adds	r1, r3, r4
 8010dcc:	1aa5      	subs	r5, r4, r2
 8010dce:	42aa      	cmp	r2, r5
 8010dd0:	dae3      	bge.n	8010d9a <__utoa+0x36>
 8010dd2:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8010dd6:	780e      	ldrb	r6, [r1, #0]
 8010dd8:	7006      	strb	r6, [r0, #0]
 8010dda:	3201      	adds	r2, #1
 8010ddc:	f801 5901 	strb.w	r5, [r1], #-1
 8010de0:	e7f4      	b.n	8010dcc <__utoa+0x68>
 8010de2:	bf00      	nop
 8010de4:	08014904 	.word	0x08014904

08010de8 <ceil>:
 8010de8:	ec51 0b10 	vmov	r0, r1, d0
 8010dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010df0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8010df4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8010df8:	2e13      	cmp	r6, #19
 8010dfa:	ee10 5a10 	vmov	r5, s0
 8010dfe:	ee10 8a10 	vmov	r8, s0
 8010e02:	460c      	mov	r4, r1
 8010e04:	dc30      	bgt.n	8010e68 <ceil+0x80>
 8010e06:	2e00      	cmp	r6, #0
 8010e08:	da12      	bge.n	8010e30 <ceil+0x48>
 8010e0a:	a335      	add	r3, pc, #212	; (adr r3, 8010ee0 <ceil+0xf8>)
 8010e0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010e10:	f7ef f9e8 	bl	80001e4 <__adddf3>
 8010e14:	2200      	movs	r2, #0
 8010e16:	2300      	movs	r3, #0
 8010e18:	f7ef fc18 	bl	800064c <__aeabi_dcmpgt>
 8010e1c:	b128      	cbz	r0, 8010e2a <ceil+0x42>
 8010e1e:	2c00      	cmp	r4, #0
 8010e20:	db55      	blt.n	8010ece <ceil+0xe6>
 8010e22:	432c      	orrs	r4, r5
 8010e24:	d057      	beq.n	8010ed6 <ceil+0xee>
 8010e26:	4c30      	ldr	r4, [pc, #192]	; (8010ee8 <ceil+0x100>)
 8010e28:	2500      	movs	r5, #0
 8010e2a:	4621      	mov	r1, r4
 8010e2c:	4628      	mov	r0, r5
 8010e2e:	e025      	b.n	8010e7c <ceil+0x94>
 8010e30:	4f2e      	ldr	r7, [pc, #184]	; (8010eec <ceil+0x104>)
 8010e32:	4137      	asrs	r7, r6
 8010e34:	ea01 0307 	and.w	r3, r1, r7
 8010e38:	4303      	orrs	r3, r0
 8010e3a:	d01f      	beq.n	8010e7c <ceil+0x94>
 8010e3c:	a328      	add	r3, pc, #160	; (adr r3, 8010ee0 <ceil+0xf8>)
 8010e3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010e42:	f7ef f9cf 	bl	80001e4 <__adddf3>
 8010e46:	2200      	movs	r2, #0
 8010e48:	2300      	movs	r3, #0
 8010e4a:	f7ef fbff 	bl	800064c <__aeabi_dcmpgt>
 8010e4e:	2800      	cmp	r0, #0
 8010e50:	d0eb      	beq.n	8010e2a <ceil+0x42>
 8010e52:	2c00      	cmp	r4, #0
 8010e54:	bfc2      	ittt	gt
 8010e56:	f44f 1380 	movgt.w	r3, #1048576	; 0x100000
 8010e5a:	fa43 f606 	asrgt.w	r6, r3, r6
 8010e5e:	19a4      	addgt	r4, r4, r6
 8010e60:	ea24 0407 	bic.w	r4, r4, r7
 8010e64:	2500      	movs	r5, #0
 8010e66:	e7e0      	b.n	8010e2a <ceil+0x42>
 8010e68:	2e33      	cmp	r6, #51	; 0x33
 8010e6a:	dd0b      	ble.n	8010e84 <ceil+0x9c>
 8010e6c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8010e70:	d104      	bne.n	8010e7c <ceil+0x94>
 8010e72:	ee10 2a10 	vmov	r2, s0
 8010e76:	460b      	mov	r3, r1
 8010e78:	f7ef f9b4 	bl	80001e4 <__adddf3>
 8010e7c:	ec41 0b10 	vmov	d0, r0, r1
 8010e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e84:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8010e88:	f04f 33ff 	mov.w	r3, #4294967295
 8010e8c:	fa23 f707 	lsr.w	r7, r3, r7
 8010e90:	4207      	tst	r7, r0
 8010e92:	d0f3      	beq.n	8010e7c <ceil+0x94>
 8010e94:	a312      	add	r3, pc, #72	; (adr r3, 8010ee0 <ceil+0xf8>)
 8010e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010e9a:	f7ef f9a3 	bl	80001e4 <__adddf3>
 8010e9e:	2200      	movs	r2, #0
 8010ea0:	2300      	movs	r3, #0
 8010ea2:	f7ef fbd3 	bl	800064c <__aeabi_dcmpgt>
 8010ea6:	2800      	cmp	r0, #0
 8010ea8:	d0bf      	beq.n	8010e2a <ceil+0x42>
 8010eaa:	2c00      	cmp	r4, #0
 8010eac:	dd02      	ble.n	8010eb4 <ceil+0xcc>
 8010eae:	2e14      	cmp	r6, #20
 8010eb0:	d103      	bne.n	8010eba <ceil+0xd2>
 8010eb2:	3401      	adds	r4, #1
 8010eb4:	ea25 0507 	bic.w	r5, r5, r7
 8010eb8:	e7b7      	b.n	8010e2a <ceil+0x42>
 8010eba:	2301      	movs	r3, #1
 8010ebc:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8010ec0:	fa03 f606 	lsl.w	r6, r3, r6
 8010ec4:	4435      	add	r5, r6
 8010ec6:	4545      	cmp	r5, r8
 8010ec8:	bf38      	it	cc
 8010eca:	18e4      	addcc	r4, r4, r3
 8010ecc:	e7f2      	b.n	8010eb4 <ceil+0xcc>
 8010ece:	2500      	movs	r5, #0
 8010ed0:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8010ed4:	e7a9      	b.n	8010e2a <ceil+0x42>
 8010ed6:	4625      	mov	r5, r4
 8010ed8:	e7a7      	b.n	8010e2a <ceil+0x42>
 8010eda:	bf00      	nop
 8010edc:	f3af 8000 	nop.w
 8010ee0:	8800759c 	.word	0x8800759c
 8010ee4:	7e37e43c 	.word	0x7e37e43c
 8010ee8:	3ff00000 	.word	0x3ff00000
 8010eec:	000fffff 	.word	0x000fffff

08010ef0 <floor>:
 8010ef0:	ec51 0b10 	vmov	r0, r1, d0
 8010ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ef8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8010efc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8010f00:	2e13      	cmp	r6, #19
 8010f02:	ee10 5a10 	vmov	r5, s0
 8010f06:	ee10 8a10 	vmov	r8, s0
 8010f0a:	460c      	mov	r4, r1
 8010f0c:	dc32      	bgt.n	8010f74 <floor+0x84>
 8010f0e:	2e00      	cmp	r6, #0
 8010f10:	da14      	bge.n	8010f3c <floor+0x4c>
 8010f12:	a333      	add	r3, pc, #204	; (adr r3, 8010fe0 <floor+0xf0>)
 8010f14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f18:	f7ef f964 	bl	80001e4 <__adddf3>
 8010f1c:	2200      	movs	r2, #0
 8010f1e:	2300      	movs	r3, #0
 8010f20:	f7ef fb94 	bl	800064c <__aeabi_dcmpgt>
 8010f24:	b138      	cbz	r0, 8010f36 <floor+0x46>
 8010f26:	2c00      	cmp	r4, #0
 8010f28:	da57      	bge.n	8010fda <floor+0xea>
 8010f2a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8010f2e:	431d      	orrs	r5, r3
 8010f30:	d001      	beq.n	8010f36 <floor+0x46>
 8010f32:	4c2d      	ldr	r4, [pc, #180]	; (8010fe8 <floor+0xf8>)
 8010f34:	2500      	movs	r5, #0
 8010f36:	4621      	mov	r1, r4
 8010f38:	4628      	mov	r0, r5
 8010f3a:	e025      	b.n	8010f88 <floor+0x98>
 8010f3c:	4f2b      	ldr	r7, [pc, #172]	; (8010fec <floor+0xfc>)
 8010f3e:	4137      	asrs	r7, r6
 8010f40:	ea01 0307 	and.w	r3, r1, r7
 8010f44:	4303      	orrs	r3, r0
 8010f46:	d01f      	beq.n	8010f88 <floor+0x98>
 8010f48:	a325      	add	r3, pc, #148	; (adr r3, 8010fe0 <floor+0xf0>)
 8010f4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f4e:	f7ef f949 	bl	80001e4 <__adddf3>
 8010f52:	2200      	movs	r2, #0
 8010f54:	2300      	movs	r3, #0
 8010f56:	f7ef fb79 	bl	800064c <__aeabi_dcmpgt>
 8010f5a:	2800      	cmp	r0, #0
 8010f5c:	d0eb      	beq.n	8010f36 <floor+0x46>
 8010f5e:	2c00      	cmp	r4, #0
 8010f60:	bfbe      	ittt	lt
 8010f62:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8010f66:	fa43 f606 	asrlt.w	r6, r3, r6
 8010f6a:	19a4      	addlt	r4, r4, r6
 8010f6c:	ea24 0407 	bic.w	r4, r4, r7
 8010f70:	2500      	movs	r5, #0
 8010f72:	e7e0      	b.n	8010f36 <floor+0x46>
 8010f74:	2e33      	cmp	r6, #51	; 0x33
 8010f76:	dd0b      	ble.n	8010f90 <floor+0xa0>
 8010f78:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8010f7c:	d104      	bne.n	8010f88 <floor+0x98>
 8010f7e:	ee10 2a10 	vmov	r2, s0
 8010f82:	460b      	mov	r3, r1
 8010f84:	f7ef f92e 	bl	80001e4 <__adddf3>
 8010f88:	ec41 0b10 	vmov	d0, r0, r1
 8010f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f90:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8010f94:	f04f 33ff 	mov.w	r3, #4294967295
 8010f98:	fa23 f707 	lsr.w	r7, r3, r7
 8010f9c:	4207      	tst	r7, r0
 8010f9e:	d0f3      	beq.n	8010f88 <floor+0x98>
 8010fa0:	a30f      	add	r3, pc, #60	; (adr r3, 8010fe0 <floor+0xf0>)
 8010fa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fa6:	f7ef f91d 	bl	80001e4 <__adddf3>
 8010faa:	2200      	movs	r2, #0
 8010fac:	2300      	movs	r3, #0
 8010fae:	f7ef fb4d 	bl	800064c <__aeabi_dcmpgt>
 8010fb2:	2800      	cmp	r0, #0
 8010fb4:	d0bf      	beq.n	8010f36 <floor+0x46>
 8010fb6:	2c00      	cmp	r4, #0
 8010fb8:	da02      	bge.n	8010fc0 <floor+0xd0>
 8010fba:	2e14      	cmp	r6, #20
 8010fbc:	d103      	bne.n	8010fc6 <floor+0xd6>
 8010fbe:	3401      	adds	r4, #1
 8010fc0:	ea25 0507 	bic.w	r5, r5, r7
 8010fc4:	e7b7      	b.n	8010f36 <floor+0x46>
 8010fc6:	2301      	movs	r3, #1
 8010fc8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8010fcc:	fa03 f606 	lsl.w	r6, r3, r6
 8010fd0:	4435      	add	r5, r6
 8010fd2:	4545      	cmp	r5, r8
 8010fd4:	bf38      	it	cc
 8010fd6:	18e4      	addcc	r4, r4, r3
 8010fd8:	e7f2      	b.n	8010fc0 <floor+0xd0>
 8010fda:	2500      	movs	r5, #0
 8010fdc:	462c      	mov	r4, r5
 8010fde:	e7aa      	b.n	8010f36 <floor+0x46>
 8010fe0:	8800759c 	.word	0x8800759c
 8010fe4:	7e37e43c 	.word	0x7e37e43c
 8010fe8:	bff00000 	.word	0xbff00000
 8010fec:	000fffff 	.word	0x000fffff

08010ff0 <_init>:
 8010ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010ff2:	bf00      	nop
 8010ff4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010ff6:	bc08      	pop	{r3}
 8010ff8:	469e      	mov	lr, r3
 8010ffa:	4770      	bx	lr

08010ffc <_fini>:
 8010ffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010ffe:	bf00      	nop
 8011000:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011002:	bc08      	pop	{r3}
 8011004:	469e      	mov	lr, r3
 8011006:	4770      	bx	lr
